# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-11 06:05+0000\n"
"PO-Revision-Date: 2024-08-02 14:51+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language: zh_CN\n"
"Language-Team: Chinese (Simplified) "
"<https://translate.nitrokey.com/projects/nitrokey-documentation"
"/documentation-string/zh_Hans/>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../fido2/2fa-nextcloud.rst:2
msgid ""
"These are the basic steps for registering the Nitrokey FIDO2 as a second "
"factor or setting up passwordless login of a Nextcloud account."
msgstr "这些是将Nitrokey FIDO2注册为第二要素或设置Nextcloud账户无密码登录的基本步骤。"

#: ../fido2/faq.rst:2
msgid "Nitrokey FIDO2 FAQ"
msgstr "Nitrokey FIDO2常见问题"

#: ../fido2/faq.rst:6 ../nitrokey3/faq.rst:5 ../shared-faqs/nitrokeys.rst.inc:2
msgid "**Q:** Which Operating Systems are supported?"
msgstr "**问：**支持哪些操作系统？"

#: ../fido2/faq.rst:5
msgid "Windows, Linux, and Mac OS X. Also some support (FIDO2) for Android."
msgstr "Windows、Linux和Mac OS X。还有一些对安卓的支持（FIDO2）。"

#: ../fido2/faq.rst:9 ../nitrokey3/faq.rst:8 ../shared-faqs/nitrokeys.rst.inc:7
msgid "**Q:** What can I use the Nitrokey for?"
msgstr "**问：**我可以用硝基钥匙做什么？"

#: ../fido2/faq.rst:9 ../shared-faqs/nitrokeys.rst.inc:5
msgid ""
"See the `overview <https://www.nitrokey.com/products/nitrokeys>`_ of "
"supported use cases."
msgstr "请参阅`概述<https://www.nitrokey.com/products/nitrokeys>`_ 支持的用例。"

#: ../fido2/faq.rst:17
msgid "**Q:** What happens if I lose my FIDO device?"
msgstr "**问：**如果我丢失了我的FIDO设备会怎样？"

#: ../fido2/faq.rst:12
msgid ""
"When securing accounts using FIDO (two-factor authentication and "
"passwordless login), you should configure another factor in your account "
"as a backup. Depending on the service this backup factor can be a phone "
"number, an app or even a second Nitrokey FIDO2. If you lose a Nitrokey "
"FIDO2, you can still log in with the second Nitrokey FIDO2 (or with "
"another second factor)."
msgstr ""
"在使用FIDO（双因素认证和无密码登录）保护账户安全时，你应该在账户中配置另一个因素作为备份。根据不同的服务，这个备份因素可以是一个电话号码、一个应用程序或甚至第二个Nitrokey"
" FIDO2。如果你丢失了一个Nitrokey FIDO2，你仍然可以用第二个Nitrokey FIDO2（或另一个第二因素）来登录。"

#: ../fido2/faq.rst:21 ../nitrokey3/faq.rst:31 ../pro/faq.rst:69
#: ../start/faq.rst:38 ../storage/faq.rst:21
msgid "**Q:** How large is the storage capacity?"
msgstr "**问：**存储容量有多大？"

#: ../fido2/faq.rst:20
msgid ""
"The Nitrokey FIDO2 doesn't contain storage capability for ordinary data "
"(it can only store cryptographic keys and certificates)."
msgstr "Nitrokey FIDO2不包含普通数据的存储能力（它只能存储加密密钥和证书）。"

#: ../fido2/faq.rst:25
msgid "**Q:** How to use Nitrokey FIDO2 with Azure Entra ID (Active Directory)?"
msgstr "**问：** 如何将 Nitrokey FIDO2 与 Azure Entra ID（活动目录）一起使用？"

#: ../fido2/faq.rst:24
msgid ""
"After `disabling Enforce Attestation`_ Nitrokey FIDO2 is supported by "
"Azure Entra ID out of the box."
msgstr "`禁用 \"强制认证 \"后，Azure Entra ID 即可支持 Nitrokey FIDO2。"

#: ../fido2/index.rst:8 ../hsm/index.rst:8 ../nitrokey3/index.rst:20
#: ../nitropad/index.rst:8 ../nitropc/index.rst:9 ../nitrophone/index.rst:19
#: ../pro/index.rst:9 ../start/index.rst:8 ../storage/index.rst:8
msgid "Frequently Asked Questions"
msgstr "常见问题"

#: ../fido2/index.rst:16 ../hsm/index.rst:16 ../nextbox/clients/index.rst:8
#: ../nitrokey3/index.rst:29 ../pro/index.rst:17
#: ../software/nitropy/all-platforms/installation.rst:117
#: ../software/nitropy/index.rst:6 ../start/index.rst:16
#: ../storage/index.rst:16 ../u2f/index.rst:8
msgid "Windows"
msgstr "窗户"

#: ../fido2/index.rst:16 ../hsm/index.rst:16 ../nitrokey3/index.rst:29
#: ../pro/index.rst:17 ../start/index.rst:16 ../storage/index.rst:16
#: ../u2f/index.rst:8
msgid "macOS"
msgstr "macOS"

#: ../fido2/index.rst:16 ../hsm/index.rst:16 ../nextbox/clients/index.rst:8
#: ../nitrokey3/index.rst:29 ../pro/index.rst:17
#: ../software/nitropy/all-platforms/installation.rst:124
#: ../software/nitropy/index.rst:6 ../start/index.rst:16
#: ../storage/index.rst:16 ../u2f/index.rst:8
msgid "Linux"
msgstr "基础设施"

#: ../fido2/index.rst:2
msgid "Nitrokey FIDO2"
msgstr "Nitrokey FIDO2"

#: ../fido2/index.rst:6 ../hsm/index.rst:6 ../nitrokey3/index.rst:18
#: ../nitropad/index.rst:6 ../nitropc/index.rst:7 ../pro/index.rst:7
#: ../start/index.rst:6 ../storage/index.rst:6
msgid "First check the:"
msgstr "首先检查一下。"

#: ../fido2/index.rst:14 ../hsm/index.rst:14 ../nitropad/index.rst:14
#: ../nitropc/index.rst:15 ../pro/index.rst:15 ../start/index.rst:14
#: ../storage/index.rst:14
msgid "or choose your operating system:"
msgstr "或选择你的操作系统。"

#: ../fido2/linux/2fa-nextcloud.rst:2 ../fido2/mac/2fa-nextcloud.rst:2
#: ../fido2/windows/2fa-nextcloud.rst:2 ../u2f/linux/2fa-nextcloud.rst:2
#: ../u2f/mac/2fa-nextcloud.rst:2 ../u2f/windows/2fa-nextcloud.rst:2
msgid "Two-Factor Authentication And Passwordless Login For Nextcloud Accounts"
msgstr "Nextcloud账户的双因素认证和无密码登录"

#: ../fido2/2fa-odoo.rst.inc:2 ../pro/2fa-odoo.rst.inc:2
msgid "Two-Factor Authentication For ERP Software Odoo"
msgstr "ERP软件Odoo的双因素认证"

#: ../fido2/2fa-odoo.rst.inc:8 ../pro/2fa-odoo.rst.inc:8
msgid ""
"`Odoo <https://www.odoo.com/>`__ is a powerful ERP (Enterprise Resource "
"Planning) software for companies of all sizes. Odoo is available as open "
"source and contains modules for CRM, website, e-commerce, accounting, "
"financial accounting, production, warehouse management, project "
"management, document management, among others."
msgstr ""
"`Odoo "
"<https://www.odoo.com/>`__是一个功能强大的ERP（企业资源计划）软件，适用于各种规模的公司。Odoo可作为开源软件使用，包含CRM、网站、电子商务、会计、财务会计、生产、仓库管理、项目管理、文档管理等模块。"

#: ../fido2/2fa-odoo.rst.inc:10 ../pro/2fa-odoo.rst.inc:10
msgid ""
"The secure access to such a central software is especially important and "
"can now be realized with the Nitrokey. For this purpose access is "
"protected by two-factor authentication (2FA) and critical users are given"
" a Nitrokey. From now on during login the Nitrokey will be checked in "
"addition to the user's password. Phishing attacks are thus foiled and "
"your critical company data is protected."
msgstr "对这样一个中央软件的安全访问特别重要，现在可以通过Nitrokey来实现。为此，访问受到双因素认证（2FA）的保护，关键用户会得到一个Nitrokey。从现在起，在登录过程中，除了用户的密码外，还将检查Nitrokey。这样，网络钓鱼攻击就被挫败了，你的重要公司数据也得到了保护。"

#: ../fido2/2fa-odoo.rst.inc:12 ../pro/2fa-odoo.rst.inc:12
msgid ""
"The two-factor authentication can be carried out using one-time passwords"
" (TOTP, RFC 6238) and FIDO U2F, thus enabling Nitrokey Pro, Nitrokey "
"Storage and Nitrokey FIDO U2F to be used. It is also possible to "
"configure authentication centrally and to activate it only for selected "
"users."
msgstr ""
"双因素认证可以使用一次性密码（TOTP，RFC 6238）和FIDO U2F进行，因此可以使用Nitrokey Pro、Nitrokey "
"Storage和Nitrokey FIDO U2F。也可以集中配置认证，只对选定的用户激活。"

#: ../fido2/2fa-odoo.rst.inc:14 ../pro/2fa-odoo.rst.inc:14
msgid ""
"The FIDO solution was developed together with our partner `initOS "
"<https://www.initos.com/>`__, who are specialized in the development and "
"customization of Odoo. If you are interested, `contact us "
"<https://www.nitrokey.com/contact>`__."
msgstr ""
"FIDO解决方案是与我们的合作伙伴`initOS "
"<https://www.initos.com/>`__共同开发的，他们专门从事Odoo的开发和定制。如果你有兴趣，`联系我们<https://www.nitrokey.com/contact>`__。"

#: ../fido2/2fa-odoo.rst.inc:21
msgid "Video: Two-Factor Authentication With The Nitrokey FIDO U2F in Odoo"
msgstr "视频。在Odoo中使用Nitrokey FIDO U2F进行双因素认证"

#: ../fido2/linux/desktop-login.rst:2
msgid "Desktop Login And Linux User Authentication"
msgstr "桌面登录和Linux用户认证"

#: ../fido2/linux/desktop-login.rst:7 ../start/setting-kdf-do.rst.inc:7
msgid "Introduction"
msgstr "简介"

#: ../fido2/linux/desktop-login.rst:9
msgid ""
"This guide will walk you through the configuration of Linux to use FIDO "
"Universal 2nd Factor, i.e. FIDO U2F with ``libpam-u2f`` and Nitrokey "
"FIDO2."
msgstr ""
"本指南将指导您配置 Linux 以使用 FIDO 通用第二因数，即``libpam-u2f`` 和 Nitrokey FIDO2 的 FIDO "
"U2F。"

#: ../fido2/linux/desktop-login.rst:11
msgid ""
"If you want to login to you computer using `Nitrokey Pro 2, "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__ "
"`Nitrokey Storage 2 <https://shop.nitrokey.com/shop/product/nitrokey-"
"storage-2-56>`__ and `Nitrokey Start "
"<https://shop.nitrokey.com/shop/product/nk-sta-nitrokey-start-6>`__ you "
"can visit the instructions available `here <../../pro/linux/login-with-"
"pam.html>`_."
msgstr ""
"如果你想用`Nitrokey Pro 2登录到你的电脑。<https://shop.nitrokey.com/shop/product/nk-"
"pro-2-nitrokey-pro-2-3>`__ `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`__ 和 "
"`Nitrokey开始 <https://shop.nitrokey.com/shop/product/nk-sta-nitrokey-"
"start-6>`__ 你可以访问这里提供的说明 ` <../../pro/linux/login-with-pam.html>`_。"

#: ../fido2/linux/desktop-login.rst:16 ../nextbox/external-storage.rst:12
#: ../pro/linux/automatic-screen-lock.rst:11
#: ../pro/linux/disk-encryption-luks.rst:24
msgid "Requirements"
msgstr "要求"

#: ../fido2/linux/desktop-login.rst:18
msgid "Ubuntu 20.04 with Gnome Display Manager."
msgstr "Ubuntu 20.04带Gnome显示管理器。"

#: ../fido2/linux/desktop-login.rst:20
msgid ""
"Nitrokey FIDO2 configured following `these instructions "
"<https://docs.nitrokey.com/fido2/linux>`__."
msgstr "Nitrokey FIDO2的配置如下：`这些说明<https://docs.nitrokey.com/fido2/linux>`__。"

#: ../fido2/linux/desktop-login.rst:24 ../pro/linux/disk-encryption-luks.rst:47
msgid "Instructions"
msgstr "说明"

#: ../fido2/linux/desktop-login.rst:27
msgid "GUI Method"
msgstr "GUI方法"

#: ../fido2/linux/desktop-login.rst:29
msgid ""
"**In the lower left corner click on** ``Show Applications`` **and type "
"settings in the search bar as following:**"
msgstr "**在左下角点击** ``Show Applications`` **并在搜索栏输入设置如下：**"

#: ../fido2/linux/desktop-login.rst ../fido2/windows/passwordless-microsoft.rst
#: ../hsm/smime.rst.inc:-1 ../nextbox/gettingstarted.rst
#: ../nextbox/technical/factory-reset.rst:-1
#: ../nextbox/technical/soft-reset.rst:-1
#: ../nitropad/content/shared-index-content1.rst:-1
#: ../nitropad/default-boot.rst.inc:-1 ../nitropad/factory-reset.rst.inc:-1
#: ../nitropad/firmware-update.rst.inc:-1
#: ../nitropad/qubes/network-settings.rst ../nitropad/qubes/nitrokey-app.rst
#: ../nitropad/system-update.rst.inc:-1 ../nitropad/troubleshooting.rst.inc
#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst
#: ../pro/2fa-nextcloud.rst.inc:-1 ../pro/change-pins.rst.inc:-1
#: ../pro/eidauthenticate.rst.inc:-1 ../pro/gpa.rst
#: ../pro/linux/disk-encryption-luks.rst:-1
#: ../pro/openpgp-keygen-gpa.rst.inc:-1 ../pro/openpgp-outlook.rst.inc:-1
#: ../pro/openpgp-thunderbird.rst.inc:-1 ../pro/otp.rst.inc:-1
#: ../pro/putty.rst.inc:-1 ../pro/smart-policy.rst.inc:-1
#: ../pro/smime-outlook.rst.inc:-1 ../pro/smime-thunderbird.rst.inc:-1
#: ../pro/smime.rst.inc:-1 ../pro/windows/2fa-microsoft.rst:-1
#: ../pro/windows/openpgp-csp.rst:-1 ../pro/windows/openvpn-viscosity.rst
#: ../storage/firmware-update-manually.rst:-1 ../storage/windows/index.rst
msgid "img1"
msgstr "img1"

#: ../fido2/linux/desktop-login.rst:34
msgid "**Scroll down in the right bar to** ``Users``"
msgstr "**在右栏向下滚动到** ``Users``。"

#: ../fido2/linux/desktop-login.rst ../fido2/windows/passwordless-microsoft.rst
#: ../nextbox/gettingstarted.rst
#: ../nitropad/content/shared-index-content1.rst:-1
#: ../nitropad/default-boot.rst.inc:-1 ../nitropad/factory-reset.rst.inc:-1
#: ../nitropad/firmware-update.rst.inc:-1
#: ../nitropad/qubes/network-settings.rst ../nitropad/qubes/nitrokey-app.rst
#: ../nitropad/system-update.rst.inc:-1 ../nitropad/troubleshooting.rst.inc
#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst
#: ../pro/2fa-nextcloud.rst.inc:-1 ../pro/change-pins.rst.inc:-1
#: ../pro/eidauthenticate.rst.inc:-1 ../pro/gpa.rst
#: ../pro/linux/disk-encryption-luks.rst:-1
#: ../pro/openpgp-keygen-gpa.rst.inc:-1 ../pro/openpgp-outlook.rst.inc:-1
#: ../pro/openpgp-thunderbird.rst.inc:-1 ../pro/otp.rst.inc:-1
#: ../pro/putty.rst.inc:-1 ../pro/smart-policy.rst.inc:-1
#: ../pro/smime-outlook.rst.inc:-1 ../pro/smime-thunderbird.rst.inc:-1
#: ../pro/windows/2fa-microsoft.rst:-1 ../pro/windows/openpgp-csp.rst:-1
#: ../pro/windows/openvpn-viscosity.rst
#: ../storage/firmware-update-manually.rst:-1
msgid "img2"
msgstr "img2"

#: ../fido2/linux/desktop-login.rst:39
msgid ""
"**In the left corner click on** ``Unlock`` **and that would prompt for "
"your password**"
msgstr "**在左角点击** ``Unlock`` **这将提示您的密码**。"

#: ../fido2/linux/desktop-login.rst ../fido2/windows/passwordless-microsoft.rst
#: ../nitropad/default-boot.rst.inc:-1 ../nitropad/factory-reset.rst.inc:-1
#: ../nitropad/firmware-update.rst.inc:-1 ../nitropad/qubes/index.rst
#: ../nitropad/qubes/network-settings.rst ../nitropad/qubes/nitrokey-app.rst
#: ../nitropad/system-update.rst.inc:-1
#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst
#: ../nitropad/ubuntu/index.rst ../pro/2fa-nextcloud.rst.inc:-1
#: ../pro/change-pins.rst.inc:-1 ../pro/eidauthenticate.rst.inc:-1
#: ../pro/gpa.rst ../pro/linux/disk-encryption-luks.rst:-1
#: ../pro/openpgp-keygen-gpa.rst.inc:-1 ../pro/openpgp-outlook.rst.inc:-1
#: ../pro/openpgp-thunderbird.rst.inc:-1 ../pro/otp.rst.inc:-1
#: ../pro/putty.rst.inc:-1 ../pro/smart-policy.rst.inc:-1
#: ../pro/smime-outlook.rst.inc:-1 ../pro/smime-thunderbird.rst.inc:-1
#: ../pro/windows/2fa-microsoft.rst:-1 ../pro/windows/openpgp-csp.rst:-1
#: ../pro/windows/openvpn-viscosity.rst
#: ../storage/firmware-update-manually.rst:-1
msgid "img3"
msgstr "img3"

#: ../fido2/linux/desktop-login.rst:45
msgid ""
"**Select** ``Administrator`` **and enter the user name and password of "
"your choice**"
msgstr "**选择** ``Administrator`` **并输入你选择的用户名和密码**。"

#: ../fido2/linux/desktop-login.rst ../fido2/windows/passwordless-microsoft.rst
#: ../nitropad/content/shared-index-content2.rst:-1
#: ../nitropad/default-boot.rst.inc:-1 ../nitropad/factory-reset.rst.inc:-1
#: ../nitropad/firmware-update.rst.inc:-1 ../nitropad/system-update.rst.inc:-1
#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst
#: ../pro/2fa-nextcloud.rst.inc:-1 ../pro/change-pins.rst.inc:-1
#: ../pro/eidauthenticate.rst.inc:-1 ../pro/gpa.rst
#: ../pro/openpgp-keygen-gpa.rst.inc:-1 ../pro/openpgp-outlook.rst.inc:-1
#: ../pro/openpgp-thunderbird.rst.inc:-1 ../pro/otp.rst.inc:-1
#: ../pro/putty.rst.inc:-1 ../pro/smart-policy.rst.inc:-1
#: ../pro/smime-thunderbird.rst.inc:-1 ../pro/windows/2fa-microsoft.rst:-1
#: ../pro/windows/openpgp-csp.rst:-1 ../pro/windows/openvpn-viscosity.rst
#: ../storage/firmware-update-manually.rst:-1
msgid "img4"
msgstr "img4"

#: ../fido2/linux/desktop-login.rst:51
msgid "**Once you finish Step 4 you should be done**"
msgstr "**一旦你完成了第4步，你应该就完成了**。"

#: ../fido2/linux/desktop-login.rst ../fido2/windows/passwordless-microsoft.rst
#: ../nitropad/default-boot.rst.inc:-1 ../nitropad/factory-reset.rst.inc:-1
#: ../nitropad/firmware-update.rst.inc:-1 ../nitropad/qubes/nitrokey-app.rst
#: ../nitropad/system-update.rst.inc:-1 ../pro/2fa-nextcloud.rst.inc:-1
#: ../pro/eidauthenticate.rst.inc:-1 ../pro/gpa.rst
#: ../pro/linux/disk-encryption-luks.rst:-1
#: ../pro/openpgp-keygen-gpa.rst.inc:-1 ../pro/openpgp-thunderbird.rst.inc:-1
#: ../pro/otp.rst.inc:-1 ../pro/putty.rst.inc:-1 ../pro/smart-policy.rst.inc:-1
#: ../pro/windows/2fa-microsoft.rst:-1 ../pro/windows/openpgp-csp.rst:-1
#: ../storage/firmware-update-manually.rst:-1
msgid "img5"
msgstr "img5"

#: ../fido2/linux/desktop-login.rst:57
msgid "CLI Method"
msgstr "CLI方法"

#: ../fido2/linux/desktop-login.rst:59
msgid "**Create a backup user and give it root privileges**"
msgstr "**创建一个备份用户并赋予其root权限**。"

#: ../fido2/linux/desktop-login.rst:61
msgid "You can do so by using these commands:"
msgstr "你可以通过使用这些命令来做到这一点。"

#: ../fido2/linux/desktop-login.rst:69
msgid ""
"In case you prefer to setup U2F for a single user, and are locked out of "
"your user session, you would still be able to login with the "
"``<backup_user>``, and proceed with the maintenance."
msgstr "如果你喜欢为单个用户设置U2F，并且被锁定在用户会话之外，你仍然能够用``<backup_user>``登录，并继续进行维护。"

#: ../fido2/linux/desktop-login.rst:75
msgid ""
"The following guide can potentially lock you out of your computer. You "
"should be aware of these risks, as it is recommended to first use the "
"instructions below on a secondary computer, or after a full backup."
msgstr "下面的指南有可能将你的电脑锁定。你应该意识到这些风险，因为建议首先在第二台电脑上使用下面的说明，或者在完整备份之后使用。"

#: ../fido2/linux/desktop-login.rst:80
msgid ""
"You might lose access to your data after configuring `PAM modules "
"<https://www.man7.org/linux/man-pages/man8/pam.8.html>`__."
msgstr ""
"在配置了`PAM模块<https://www.man7.org/linux/man-"
"pages/man8/pam.8.html>`__后，你可能失去对数据的访问。"

#: ../fido2/linux/desktop-login.rst:84
msgid "**Set up the** ``rules`` **to recognize the Nitrokey FIDO2**"
msgstr "**设置** ``rules`` **以识别Nitrokey FIDO2**。"

#: ../fido2/linux/desktop-login.rst:86
msgid "Under ``/etc/udev/rules.d`` download ``41-nitrokey.rules``"
msgstr "在``/etc/udev/rules.d`下载``41-nitrokey.rules```"

#: ../fido2/linux/desktop-login.rst:93
msgid "And restart ``udev`` service"
msgstr "并重新启动``udev``服务"

#: ../fido2/linux/desktop-login.rst:99
msgid "**Install** ``libpam-u2f``"
msgstr "**安装** ``libpam-u2f``。"

#: ../fido2/linux/desktop-login.rst:101
msgid ""
"On Ubuntu 20.04 it is possible to download directly ``libpam-u2f`` from "
"the official repos"
msgstr "在Ubuntu 20.04上，可以直接下载``libpam-u2f``从官方仓库下载"

#: ../fido2/linux/desktop-login.rst:109
msgid "Click for more options"
msgstr "点击查看更多选项"

#: ../fido2/linux/desktop-login.rst:111
msgid ""
"Alternatively you can build ``libpam-u2f`` from `Git "
"<https://github.com/phoeagon/pam-u2f>`__."
msgstr "另外，你可以从`Git <https://github.com/phoeagon/pam-u2f>`__构建``libpam-u2f``。"

#: ../fido2/linux/desktop-login.rst:114
msgid ""
"To verify that the library is properly installed enter the following "
"command:"
msgstr "为了验证该库是否正确安装，请输入以下命令。"

#: ../fido2/linux/desktop-login.rst:121
msgid "The Output should be something like the following:"
msgstr "输出应该是如下内容。"

#: ../fido2/linux/desktop-login.rst:128
msgid "**Prepare the Directory**"
msgstr "**准备好目录**"

#: ../fido2/linux/desktop-login.rst:130
msgid "Create ``.config/Nitrokey/`` under your home directory"
msgstr "在你的主目录下创建``.config/Nitrokey/``。"

#: ../fido2/linux/desktop-login.rst:136
msgid "And plug your Nitrokey FIDO2."
msgstr "并插入你的Nitrokey FIDO2。"

#: ../fido2/linux/desktop-login.rst:138
msgid ""
"Once done with the preparation, we can start to configure the computer to"
" use the Nitrokey FIDO2 for 2nd factor authentication at login and "
"``sudo``."
msgstr "一旦完成准备工作，我们就可以开始配置计算机，以便在登录和``sudo``时使用Nitrokey FIDO2进行第二因素认证。"

#: ../fido2/linux/desktop-login.rst:140
msgid "**Generate the U2F config file**"
msgstr "**生成U2F配置文件**。"

#: ../fido2/linux/desktop-login.rst:142
msgid ""
"To generate the configuration file we will use the ``pamu2fcfg`` utility "
"that comes with the ``libpam-u2f``. For convenience, we will directly "
"write the output of the utility to the ``u2f_keys`` file under "
"``.config/Nitrokey``. First plug your Nitrokey FIDO2 (if you did not "
"already), and enter the following command:"
msgstr ""
"为了生成配置文件，我们将使用``pamu2fcfg``工具，该工具随``libpam-"
"u2f``附带。为方便起见，我们将直接把该工具的输出写入``u2f_keys```文件中，在``.config/Nitrokey```下。首先插入你的Nitrokey"
" FIDO2（如果你还没有），并输入以下命令。"

#: ../fido2/linux/desktop-login.rst:148
msgid ""
"Once you run the command above, you will need to touch the key while it "
"flashes. Once done, ``pamu2fcfg`` will append its output the ``u2f_keys``"
" in the following format:"
msgstr "一旦你运行上面的命令，你需要在它闪烁的时候触摸按键。一旦完成，``pamu2fcfg``将在其输出中附加``u2f_keys``格式如下。"

#: ../fido2/linux/desktop-login.rst:154
msgid ""
"Note, the output will be much longer, but sensitive parts have been "
"removed here. For better security, and once the config file generated, we"
" will move the ``.config/Nitrokey`` directory under the ``etc/`` "
"directory with this command:"
msgstr "注意，输出结果将更长，但敏感部分在这里已经被删除。为了更好的安全，一旦配置文件生成，我们将用这个命令把``.config/Nitrokey``目录移到``etc/``目录下。"

#: ../fido2/linux/desktop-login.rst:163
msgid "The file under ``.config/Nitrokey`` must be named ``u2f_keys``"
msgstr "``.config/Nitrokey``下的文件必须命名为``u2f_keys``。"

#: ../fido2/linux/desktop-login.rst:165
msgid ""
"It is recommended to first test the instructions with a single user. For "
"this purpose the previous command takes the ``-u`` option, to specify a "
"user, like in the example below:"
msgstr "建议首先用一个用户来测试指令。为此，前面的指令采取``-u``选项，来指定一个用户，就像下面的例子。"

#: ../fido2/linux/desktop-login.rst:174
msgid ""
"For individual user configuration you should point to the home directory "
"in the next step, or not include the ``authfile`` option in the PAM "
"configuration."
msgstr "对于单个用户的配置，你应该在下一步指向主目录，或者在PAM配置中不包括``authfile``选项。"

#: ../fido2/linux/desktop-login.rst:178
msgid "**Backup**"
msgstr "**备份**"

#: ../fido2/linux/desktop-login.rst:180
msgid ""
"This step is optional, however it is advised to have a backup Nitrokey in"
" the case of loss, theft or destruction of your Nitrokey FIDO."
msgstr "这一步是可选的，但建议在您的Nitrokey FIDO丢失、被盗或毁坏的情况下拥有一个备份的Nitrokey。"

#: ../fido2/linux/desktop-login.rst:182
msgid ""
"To set up a backup key, repeat the procedure above, and use ``pamu2fcfg "
"-n``. This will omit the ``<username>`` field, and the output can be "
"appended to the line with your ``<username>`` like this:"
msgstr ""
"要设置一个备份钥匙，重复上述程序，并使用``pamu2fcfg "
"-n``。这将省略``<username>``字段，输出可以附加到你的``<username>``这一行。"

#: ../fido2/linux/desktop-login.rst:188
msgid "**Modify the Pluggable Authentication Module** ``PAM``"
msgstr "**修改可插拔的认证模块** ``PAM``。"

#: ../fido2/linux/desktop-login.rst:190
msgid ""
"The final step is configure the PAM module files under ``/etc/pam.d/``. "
"In this guide we will modify the ``common-auth`` file as it handles the "
"authentication settings which are common to all services, but other "
"options are possible. You can modify the file with the following command:"
msgstr ""
"最后一步是配置``/etc/pam.d/``下的PAM模块文件。在本指南中，我们将修改``common-"
"auth``文件，因为它处理所有服务共有的认证设置，但其他选项也是可能的。你可以用以下命令修改该文件。"

#: ../fido2/linux/desktop-login.rst:197
msgid "And add the following lines at the top of the file:"
msgstr "并在文件顶部添加以下几行："

#: ../fido2/linux/desktop-login.rst:206
msgid ""
"Since we are using Central Authentication Mapping, we need to tell "
"``pam_u2f`` the location of the file to use with the ``authfile`` option."
msgstr "由于我们使用中央认证映射，我们需要告诉``pam_u2f``使用``authfile``选项的文件位置。"

#: ../fido2/linux/desktop-login.rst:210
msgid ""
"If you often forget to insert the key, ``prompt`` option make ``pam_u2f``"
" print ``Insert your U2F device, then press ENTER.`` and give you a "
"chance to insert the Nitrokey."
msgstr ""
"如果你经常忘记插入钥匙。``prompt``选项使``pam_u2f``打印``Insert your U2F device, then "
"press ENTER.``并且给你机会插入硝基钥匙。"

#: ../fido2/linux/desktop-login.rst:214
msgid ""
"If you would like to be prompted to touch the Nitrokey, ``cue`` option "
"will make ``pam_u2f`` print ``Please touch the device.`` message."
msgstr "如果你想被提示触摸硝基钥匙。``cue``选项将使``pam_u2f``打印``Please touch the device.``信息。"

#: ../fido2/linux/desktop-login.rst:218
msgid ""
"`nouserok` will ensure that you can still login using the username and "
"password, you might want to remove this at some point once the setup is "
"working and you don't want regular username & password based logins."
msgstr "`nouserok`将确保你仍然可以使用用户名和密码登录，你可能想在某个时候删除这个，一旦设置工作，你不想要常规的基于用户名和密码的登录。"

#: ../fido2/linux/desktop-login.rst:222
msgid "Once we modified the ``common-auth``, we can save and exit the file."
msgstr "一旦我们修改了``common-auth``，我们可以保存并退出文件。"

#: ../fido2/linux/desktop-login.rst:224
msgid ""
"You can test the configuration by typing ``sudo ls`` in the terminal. You"
" should be prompted the message ``Please touch the device.`` and have a "
"similar output on the terminal:"
msgstr "你可以在终端输入``sudo ls``来测试该配置。你应该得到提示信息``Please touch the device.``并在终端有类似的输出。"

#: ../fido2/linux/desktop-login.rst:231
msgid ""
"You can also test your configuration by logging out of the user session "
"and logging back. A similar screen should be displayed once you you "
"unplug/replug yout Nitrokey FIDO2 and type your password:"
msgstr "你也可以通过注销用户会话并重新登录来测试你的配置。一旦你拔掉/重新拔掉你的Nitrokey FIDO2并输入密码，应该会显示类似的屏幕。"

#: ../fido2/linux/desktop-login.rst ../fido2/windows/passwordless-microsoft.rst
#: ../nitropad/default-boot.rst.inc:-1 ../nitropad/factory-reset.rst.inc:-1
#: ../nitropad/firmware-update.rst.inc:-1 ../nitropad/qubes/nitrokey-app.rst
#: ../nitropad/system-update.rst.inc:-1 ../pro/2fa-nextcloud.rst.inc:-1
#: ../pro/eidauthenticate.rst.inc:-1 ../pro/gpa.rst
#: ../pro/linux/disk-encryption-luks.rst:-1
#: ../pro/openpgp-keygen-gpa.rst.inc:-1 ../pro/openpgp-thunderbird.rst.inc:-1
#: ../pro/otp.rst.inc:-1 ../pro/putty.rst.inc:-1 ../pro/smart-policy.rst.inc:-1
#: ../pro/windows/2fa-microsoft.rst:-1 ../pro/windows/openpgp-csp.rst:-1
msgid "img6"
msgstr "img6"

#: ../fido2/linux/desktop-login.rst:237 ../hsm/smime.rst.inc:32
#: ../hsm/smime.rst.inc:52 ../pro/linux/automatic-screen-lock.rst:81
#: ../pro/linux/disk-encryption-luks.rst:137
#: ../pro/linux/hard-disk-encryption.rst:114 ../pro/openpgp-outlook.rst.inc:24
#: ../pro/smime-outlook.rst.inc:34 ../pro/smime-thunderbird.rst.inc:43
#: ../pro/smime.rst.inc:32 ../pro/smime.rst.inc:52
#: ../pro/windows/openvpn-viscosity.rst:37 ../shared/openpgp.rst.inc:42
#: ../software/nk-app2/passwords.rst:16 ../start/multiple-identities.rst.inc:13
msgid "Usage"
msgstr "使用方法"

#: ../fido2/linux/desktop-login.rst:239
msgid ""
"After the PAM module modification, you will be able to test your "
"configuration right away, but it is recommended to reboot your computer, "
"and unplug/replug the Nitrokey FIDO2."
msgstr "修改PAM模块后，你就可以马上测试你的配置，但建议重新启动你的电脑，并拔掉/重新插入Nitrokey FIDO2的插头。"

#: ../fido2/linux/desktop-login.rst:241
msgid ""
"Once you have properly tested the instructions in this guide (and set up "
"a backup), it is recommended to use either the ``required`` or the "
"``requisite`` control flag instead of ``sufficient``."
msgstr "一旦你正确地测试了本指南中的说明（并建立了一个备份）。建议使用``required`或``requisite``控制标志，而不是``sufficient`。"

#: ../fido2/linux/desktop-login.rst:243
msgid ""
"The flags ``required`` and ``requisite`` provide a tighter access "
"control, and will make the Nitrokey FIDO2 necessary to login, and/or use "
"the configured service."
msgstr ""
"标志``required``和``requisite``提供更严格的访问控制，并将使Nitrokey "
"FIDO2成为登录和/或使用配置的服务的必要条件。"

#: ../fido2/linux/desktop-login.rst:245
msgid ""
"If you need more information about Control Flags in the ``PAM`` "
"configuration line, you may see the last section of this guide to "
"understand the difference, and the implications of using each of them."
msgstr "如果你需要更多关于``PAM``配置行中的控制标志的信息，你可以看看本指南的最后一节，了解它们的区别，以及使用它们各自的意义。"

#: ../fido2/linux/desktop-login.rst:249
msgid "PAM Modules"
msgstr "PAM模块"

#: ../fido2/linux/desktop-login.rst:251
msgid ""
"There are several PAM modules files that can be modified according to "
"your needs:"
msgstr "有几个PAM模块文件，可以根据你的需要进行修改。"

#: ../fido2/linux/desktop-login.rst:253
msgid ""
"By modifying ``/etc/pam.d/common-auth`` file, you will be able to use you"
" Nitrokey FIDO for 2nd factor authentication for graphic login and "
"``sudo``. Note: ``common-auth`` should be modified by adding the "
"additional configuration line at the end of the file."
msgstr ""
"通过修改``/etc/pam.d/common-auth``文件，你将能够使用你的Nitrokey "
"FIDO进行图形登录的第二因素认证和``sudo``。注意：``common-auth``应通过在文件末尾添加额外的配置行进行修改。"

#: ../fido2/linux/desktop-login.rst:258
msgid ""
"If you wish to use FIDO U2F authentication solely for Gnome’s graphic "
"login, you might prefer to modify the\\ ``/etc/pam.d/gdm-password``"
msgstr "如果你希望只在Gnome的图形登录中使用FIDO U2F认证，你可能更喜欢修改：``/etc/pam.d/gdm-password``。"

#: ../fido2/linux/desktop-login.rst:261
msgid ""
"Alternatively you can just modify the ``/etc/pam.d/sudo`` file if you "
"wish to use FIDO U2F when using the ``sudo`` command."
msgstr "另外，如果你想在使用``/etc/pam.d/sudo``文件时使用FIDO U2F，你可以直接修改``sudo``命令。"

#: ../fido2/linux/desktop-login.rst:265
msgid "Control Flags"
msgstr "控制标志"

#: ../fido2/linux/desktop-login.rst:267
msgid ""
"In step 7 we have used the ``sufficient`` control flag to determine the "
"behavior of the PAM module when the Nitrokey is plugged or not. However "
"it is possible to change this behavior by using the following control "
"flags:"
msgstr "在第7步中，我们使用了``sufficient``控制标志来确定PAM模块在Nitrokey插入或不插入时的行为。然而，可以通过使用以下控制标志来改变这种行为。"

#: ../fido2/linux/desktop-login.rst:269
msgid ""
"``required``: This is the most critical flag. The module result must be "
"successful for authentication to continue. This flag can lock you out of "
"your computer if you do not have access to the Nitrokey."
msgstr "``required``。这是最关键的标志。模块结果必须是成功的，认证才能继续。如果你没有访问Nitrokey的权限，这个标志会把你的电脑锁住。"

#: ../fido2/linux/desktop-login.rst:273
msgid ""
"``requisite``: Similar to ``required`` however, in the case where a "
"specific module returns a failure, control is directly returned to the "
"application, or to the superior PAM stack. This flag can also lock you "
"out of your computer if you do not have access to the Nitrokey."
msgstr "``requisite``。与``required``类似，但在特定模块返回失败的情况下，控制权将直接返回给应用程序，或返回给上级PAM栈。如果你没有访问Nitrokey的权限，这个标志也可以将你的电脑锁定。"

#: ../fido2/linux/desktop-login.rst:279
msgid ""
"``sufficient``: The module result is ignored if it fails. The "
"``sufficient`` flag considered to be safe for testing purposes."
msgstr "``sufficient``。如果失败，模块结果将被忽略。``sufficient``标志被认为是安全的测试目的。"

#: ../fido2/linux/desktop-login.rst:282
msgid ""
"``optional``: The success or failure of this module is only important if "
"it is the only module in the stack associated with this service+type. The"
" ``optional`` flag is considered to be safe to use for testing purposes."
msgstr "``optional``。该模块的成功或失败只有在它是堆栈中与该服务+类型相关的唯一模块时才重要。``optional``标志被认为是安全的，可用于测试目的。"

#: ../fido2/linux/desktop-login.rst:289
msgid ""
"If ``required`` or ``requisite`` is set, the failure of U2F "
"authentication will cause a failure of the overall authentication. "
"Failure will occur when the configured Nitrokey FIDO is not plugged, lost"
" or destroyed."
msgstr ""
"如果``required`或``requisite``被设置，U2F认证的失败将导致整体认证的失败。当配置的Nitrokey "
"FIDO没有被插上、丢失或毁坏时，就会发生失败。"

#: ../fido2/linux/desktop-login.rst:294
msgid ""
"You will lose access to your computer if you mis-configured the PAM "
"module *and* used the ``required`` or ``requisite`` flags."
msgstr "如果你错误地配置了PAM模块，并且*使用了``required`或``标记，你将失去对你的计算机的访问。"

#: ../fido2/linux/desktop-login.rst:297
msgid ""
"You will also lose the ability to use ``sudo`` if you set up Central "
"Authentication Mapping *and* used the ``required`` or ``requisite`` "
"flags."
msgstr "如果你设置了中央认证映射，你也将失去使用``sudo``的能力。*并*使用``required``或``requisite``标志。"

#: ../fido2/shared/firmware-update.rst.inc:2
#: ../nitrokey3/firmware-update.rst.inc:2 ../nitropad/firmware-update.rst.inc:2
#: ../nitrowall/nw750/firmware-update.rst:2 ../pro/firmware-update.rst.inc:2
#: ../start/linux/firmware-update.rst:2 ../storage/linux/firmware-update.rst:2
#: ../storage/windows/firmware-update.rst:2
msgid "Firmware Update"
msgstr "固件更新"

#: ../fido2/shared/firmware-update.rst.inc:4
msgid "This guide describes how to update the firmware on the Nitrokey FIDO2."
msgstr "本指南介绍了如何更新Nitrokey 3的固件。"

#: ../fido2/shared/firmware-update.rst.inc:7
msgid ""
"User Data is retained during firmware update. Anyways, be sure to "
"**always** have another device (or login method) registered with your "
"service, if for some reason your data is not retained."
msgstr "用户数据在固件更新时被保留。总之，要确保***总是有另一个设备（或登录方式）在你的服务中注册，如果由于某种原因你的数据没有被保留。"

#: ../fido2/shared/firmware-update.rst.inc:10
#: ../nitrokey3/firmware-update.rst.inc:20
#: ../nitrokey3/linux/firmware-update-qubes.rst:25
#: ../pro/firmware-update.rst.inc:15
msgid "How to Update"
msgstr "如何更新"

#: ../fido2/shared/firmware-update.rst.inc:13
msgid ""
"Never disconnect the Nitrokey FIDO2 or abort the process while updating, "
"this will likely render your device useless!"
msgstr "在更新过程中，千万不要断开Nitrokey 3的连接或中止进程，这很可能会使你的设备失去作用。"

#: ../fido2/shared/firmware-update.rst.inc:17
msgid "Webupdate"
msgstr "网络更新"

#: ../fido2/shared/firmware-update.rst.inc:19
msgid ""
"The easiest way to update a Nitrokey FIDO2 is to open "
"`update.nitrokey.com <https://update.nitrokey.com>`_ in your browser and "
"follow the instructions on the web page."
msgstr ""
"更新Nitrokey FIDO2的最简单方法是在浏览器中打开`update.nitrokey.com "
"<https://update.nitrokey.com>`_，并按照网页上的指示操作。"

#: ../fido2/shared/firmware-update.rst.inc:22
msgid "Using the command line"
msgstr "使用命令行"

#: ../fido2/shared/firmware-update.rst.inc:24
msgid ""
"If the webupdate doesn't work for you, you can also use our command line "
"tool."
msgstr "如果webupdate对你不起作用，你也可以使用我们的命令行工具。"

#: ../fido2/shared/firmware-update.rst.inc:26
#: ../nitrokey3/firmware-update.rst.inc:26
#: ../software/nitropy/all-platforms/test.rst:7
msgid ""
"Make sure you have the latest `pynitrokey` version installed, please "
"check the `installation instructions`_ for your OS."
msgstr "确保你已经安装了最新的`pynitrokey`版本，请查看你的操作系统的`安装说明`_。"

#: ../fido2/shared/firmware-update.rst.inc:27
msgid "Run ``nitropy fido2 update``."
msgstr "运行``nitropy fido2 update``。"

#: ../fido2/shared/firmware-update.rst.inc:28
#: ../nitrokey3/firmware-update.rst.inc:28
msgid "Once instructed by ``nitropy`` touch the device to activate bootloader."
msgstr "一旦得到``的指示，nitropy``触摸设备以激活引导程序。"

#: ../fido2/shared/firmware-update.rst.inc:29
#: ../nitrokey3/firmware-update.rst.inc:29
msgid "*macOS only:* If instructed by ``nitropy`` run update command again."
msgstr "*仅适用于macOS：*如果按照``的指示，nitropy``再次运行更新命令。"

#: ../fido2/shared/firmware-update.rst.inc:30
msgid ""
"Please wait until the process finished. (This may vary depending on your "
"operating system"
msgstr "请等待，直到该过程结束。(这可能因你的操作系统而异"

#: ../fido2/shared/firmware-update.rst.inc:32
#: ../nitrokey3/firmware-update.rst.inc:33
#: ../nitrokey3/linux/firmware-update-qubes.rst:38
#: ../software/nitropy/all-platforms/test.rst:29
msgid ""
"In case of any errors please take the logs from ``/tmp`` directory "
"(``/tmp/nitropy.log.*``)."
msgstr "如果出现任何错误，请从``/tmp``目录中获取日志（``/tmp/nitropy.log.*``）。"

#: ../fido2/linux/index.rst:2
msgid "FIDO2 With Linux"
msgstr "使用Linux的FIDO2"

#: ../fido2/shared/index-content1.rst.inc:1
msgid ""
"The Nitrokey FIDO2 supports two-factor authentication (2FA) and "
"passwordless authentication:"
msgstr "Nitrokey FIDO2支持双因素认证（2FA）和无密码认证。"

#: ../fido2/shared/index-content1.rst.inc:4
msgid ""
"With **passwordless authentication**, entering a password is replaced by "
"logging in with the Nitrokey FIDO2 and a PIN."
msgstr "使用**无密码认证**，输入密码被用Nitrokey FIDO2和PIN码登录所取代。"

#: ../fido2/shared/index-content1.rst.inc:7
msgid ""
"With **two-factor authentication** (2FA), the Nitrokey FIDO2 is checked "
"in addition to the password."
msgstr "使用**双因素认证**（2FA），除了密码外，还检查Nitrokey FIDO2。"

#: ../fido2/shared/index-content1.rst.inc:10
msgid "The Nitrokey FIDO2 can be used with any current browser."
msgstr "Nitrokey FIDO2可与当前任何浏览器一起使用。"

#: ../fido2/shared/index-content1.rst.inc:14
msgid "The Nitrokey App can not be used for the Nitrokey FIDO2."
msgstr "Nitrokey应用程序不能用于Nitrokey FIDO2。"

#: ../fido2/shared/index-content1.rst.inc:18
msgid ""
"`Check online <https://update.nitrokey.com/>`__ if your Nitrokey FIDO2 "
"has the latest firmware installed."
msgstr "`在线检查<https://update.nitrokey.com/>`__你的Nitrokey FIDO2是否安装了最新固件。"

#: ../fido2/shared/index-content1.rst.inc:22 ../nitrokey3/shared/main.rst:13
msgid "Passwordless Authentication"
msgstr "无密码认证"

#: ../fido2/shared/index-content1.rst.inc:24
msgid ""
"Open a web page that supports FIDO2 (for example `Google "
"<https://myaccount.google.com/>`__)."
msgstr "打开支持 FIDO2 的网页（例如`Google<https://myaccount.google.com/>`__ ）。"

#: ../fido2/shared/index-content1.rst.inc:26
msgid ""
"Log in to the website and go to “Passkeys and security keys” in the "
"security settings of your account."
msgstr "登录网站，进入账户安全设置中的 \"密码和安全密钥\"。"

#: ../fido2/shared/index-content1.rst.inc:28
msgid "Click on Create passkey."
msgstr "点击创建密码。"

#: ../fido2/shared/index-content1.rst.inc:29
msgid "Click on Use a different device."
msgstr "单击使用不同设备。"

#: ../fido2/shared/index-content1.rst.inc:30
msgid "Follow the prompts to set a PIN for your Nitrokey FIDO2."
msgstr "按照提示为 Nitrokey FIDO2 设置 PIN 码。"

#: ../fido2/shared/index-content1.rst.inc:31
msgid "Touch the button of your Nitrokey FIDO2 when prompted."
msgstr "根据提示，触摸你的Nitrokey FIDO2的按钮。"

#: ../fido2/shared/index-content1.rst.inc:32
msgid ""
"Once you have successfully configured the device, you will need to "
"activate your Nitrokey FIDO2 this way each time you log in, after "
"entering your PIN."
msgstr "一旦你成功配置了设备，你就需要在每次登录时，在输入密码后，用这种方式激活你的Nitrokey FIDO2。"

#: ../fido2/shared/index-content1.rst.inc:37 ../nitrokey3/shared/main.rst:25
#: ../u2f/shared/index-content1.rst:8
msgid "Two-Factor Authentication (2FA)"
msgstr "双因素认证(2FA)"

#: ../fido2/shared/index-content1.rst.inc:39 ../nitrokey3/shared/main.rst:27
#: ../u2f/shared/index-content1.rst:10
msgid ""
"Open one of the `websites that support FIDO U2F "
"<https://www.dongleauth.com/>`__."
msgstr "打开支持FIDO U2F的`网站之一<https://www.dongleauth.com/>`__。"

#: ../fido2/shared/index-content1.rst.inc:41
msgid ""
"Log in to the website and enable two-factor authentication in your "
"account settings. (In most cases you will find a link to the "
"documentation of the supported web service at `dongleauth.com "
"<https://www.dongleauth.com/>`__)"
msgstr ""
"登录网站，在你的账户设置中启用双因素认证。(在大多数情况下，你可以在`dongleauth.com "
"<https://www.dongleauth.com/>`__找到支持的网络服务文档的链接)"

#: ../fido2/shared/index-content1.rst.inc:45
msgid ""
"Register your Nitrokey FIDO2 in the account settings by touching the "
"button to activate the Nitrokey FIDO2. After you have successfully "
"configured the device, you must activate the Nitrokey FIDO2 this way each"
" time you log in."
msgstr ""
"在账户设置中触摸激活Nitrokey FIDO2的按钮，注册您的Nitrokey "
"FIDO2。在您成功配置该设备后，您必须在每次登录时以这种方式激活Nitrokey FIDO2。"

#: ../fido2/shared/index-content1.rst.inc:50 ../nitrokey3/shared/main.rst:38
#: ../u2f/shared/index-content1.rst:21
msgid "You are now ready to go."
msgstr "你现在已经准备好了。"

#: ../fido2/shared/index-content1.rst.inc:53
msgid "Touch Button And LED Behavior"
msgstr "触摸按钮和LED行为"

#: ../fido2/shared/index-content1.rst.inc:55
msgid ""
"The first FIDO operation is automatically accepted within two seconds "
"after connecting Nitrokey FIDO2. In this case touching the touch button "
"is not required."
msgstr "在连接Nitrokey FIDO2后的两秒内会自动接受第一次FIDO操作。在这种情况下，不需要触碰触摸按钮。"

#: ../fido2/shared/index-content1.rst.inc:59
msgid ""
"Multiple operations can be accepted by a single touch. For this, keep the"
" touch button touched for up to 10 seconds."
msgstr "可以通过一次触摸接受多项操作。为此，请保持触摸按钮的触摸时间不超过10秒。"

#: ../fido2/shared/index-content1.rst.inc:62
#: ../fido2/shared/index-content2.rst.inc:8
msgid ""
"To avoid accidental and malicious reset of the Nitrokey, the required "
"touch confirmation time for the FIDO2 reset operation is longer and with "
"a distinct LED behavior (red LED light) than normal operations. To reset "
"the Nitrokey FIDO2, confirm by touching the touch button for at least 5 "
"seconds until the green or blue LED lights up."
msgstr ""
"为避免意外和恶意重置Nitrokey，FIDO2重置操作所需的触摸确认时间比正常操作要长，并且有明显的LED行为（红色LED灯）。要重置Nitrokey"
" FIDO2，请通过触摸按钮确认至少5秒钟，直到绿色或蓝色LED灯亮起。"

#: ../fido2/shared/index-content1.rst.inc:69
msgid "LED Color"
msgstr "LED颜色"

#: ../fido2/shared/index-content1.rst.inc:69
msgid "Event"
msgstr "活动"

#: ../fido2/shared/index-content1.rst.inc:69
msgid "Time Period"
msgstr "时间段"

#: ../fido2/shared/index-content1.rst.inc:69
msgid "Comments"
msgstr "评论"

#: ../fido2/shared/index-content1.rst.inc:71
msgid "Any (blinking)"
msgstr "任何（闪烁）。"

#: ../fido2/shared/index-content1.rst.inc:71
msgid "Awaiting for touch"
msgstr "等待触摸"

#: ../fido2/shared/index-content1.rst.inc:71
#: ../fido2/shared/index-content1.rst.inc:75
msgid "Until touch is confirmed or timed out"
msgstr "直到触摸被确认或超时结束"

#: ../fido2/shared/index-content1.rst.inc:75
msgid "Any (blinking faster)"
msgstr "任何（闪烁更快）。"

#: ../fido2/shared/index-content1.rst.inc:75
msgid "Touch detected, counting seconds"
msgstr "触摸检测，计秒"

#: ../fido2/shared/index-content1.rst.inc:79
msgid "White (blinks)"
msgstr "白色（闪烁）。"

#: ../fido2/shared/index-content1.rst.inc:79
msgid "Touch request for FIDO registration or authentication operation"
msgstr "对FIDO注册或认证操作的触摸请求"

#: ../fido2/shared/index-content1.rst.inc:79
msgid "Requires 1 second touch to complete; timeout is usually about 30 seconds"
msgstr "需要1秒钟的触摸才能完成；超时时间通常为30秒左右"

#: ../fido2/shared/index-content1.rst.inc:86
msgid "Yellow (blinks)"
msgstr "黄色（闪烁）。"

#: ../fido2/shared/index-content1.rst.inc:86
msgid "Touch request for configuration operation"
msgstr "配置操作的触摸请求"

#: ../fido2/shared/index-content1.rst.inc:86
msgid ""
"Requires 5 seconds touch to complete; e.g. used for activating firmware "
"update mode"
msgstr "需要5秒钟的触摸才能完成；例如，用于激活固件更新模式。"

#: ../fido2/shared/index-content1.rst.inc:94
msgid "Red (blinks)"
msgstr "红色（闪烁）。"

#: ../fido2/shared/index-content1.rst.inc:94
msgid "Touch request for reset operation"
msgstr "复位操作的触摸请求"

#: ../fido2/shared/index-content1.rst.inc:94
msgid "Available only during the very first 10 seconds after Nitrokey is powered"
msgstr "仅在Nitrokey通电后的前10秒内可用。"

#: ../fido2/shared/index-content1.rst.inc:94
msgid "Requires 5 seconds touch to complete; e.g. used for FIDO2 reset operation"
msgstr "需要5秒钟的触摸才能完成；例如用于FIDO2复位操作"

#: ../fido2/shared/index-content1.rst.inc:101
msgid "Green (constant)"
msgstr "绿色（常数）"

#: ../fido2/shared/index-content1.rst.inc:101
msgid "Touch accepted, Nitrokey is active and accepting further FIDO2 operations"
msgstr "触摸接受，Nitrokey处于激活状态，接受进一步的FIDO2操作。"

#: ../fido2/shared/index-content1.rst.inc:101
msgid "After touch was registered, 10 seconds timeout"
msgstr "触摸被登记后，10秒超时"

#: ../fido2/shared/index-content1.rst.inc:101
msgid ""
"For the FIDO registration or authentication operations after a "
"confirmation Nitrokey enters into “activation” mode, auto-accepting any "
"following mentioned operations until touch button is released, but not "
"longer than 10 seconds"
msgstr "对于FIDO注册或认证操作，在确认之后，Nitrokey进入 \"激活 \"模式，自动接受以下提到的任何操作，直到释放触摸按钮，但不超过10秒。"

#: ../fido2/shared/index-content1.rst.inc:121
msgid "Blue (constant)"
msgstr "蓝色（常数）"

#: ../fido2/shared/index-content1.rst.inc:121
msgid "Touch consumed - accepted and used up by the operation"
msgstr "消耗的触摸--被操作所接受和用掉"

#: ../fido2/shared/index-content1.rst.inc:121
msgid "Until touch is released"
msgstr "直到触摸被释放"

#: ../fido2/shared/index-content1.rst.inc:121
msgid ""
"Touch consumption here means, that without releasing the touch button, "
"and touching again the Nitrokey will not confirm any new operations"
msgstr "这里的触摸消耗是指，如果不放开触摸按钮，再次触摸时，硝基键将不会确认任何新的操作。"

#: ../fido2/shared/index-content1.rst.inc:133
msgid "White (single blink)"
msgstr "白色（单次闪烁）。"

#: ../fido2/shared/index-content1.rst.inc:133
msgid "Nitrokey ready to work"
msgstr "硝基钥匙准备工作"

#: ../fido2/shared/index-content1.rst.inc:133
msgid "0.5 seconds after powering up"
msgstr "开机后0.5秒"

#: ../fido2/shared/index-content1.rst.inc:137
#: ../fido2/shared/index-content1.rst.inc:141
msgid "(no LED signal)"
msgstr "(无LED信号)"

#: ../fido2/shared/index-content1.rst.inc:137
msgid "Nitrokey is idle"
msgstr "硝基键是闲置的"

#: ../fido2/shared/index-content1.rst.inc:141
msgid "Auto-accept single FIDO registration or authentication operation"
msgstr "自动接受单个FIDO注册或认证操作"

#: ../fido2/shared/index-content1.rst.inc:141
msgid "Within first 2 seconds after powering up"
msgstr "开机后的前2秒内"

#: ../fido2/shared/index-content1.rst.inc:141
msgid ""
"Nitrokey is automatically accepting any single FIDO registration or "
"authentication operation upon insertion event - the latter is treated as "
"an equivalent of the touch button registration signal (user presence); "
"the conf iguration/reset operations are not accepted"
msgstr "Nitrokey在插入事件中自动接受任何单一的FIDO注册或认证操作--后者被视为等同于触摸按钮的注册信号（用户在场）；不接受配置/重置操作。"

#: ../fido2/shared/index-content1.rst.inc:162
msgid "All colors"
msgstr "所有颜色"

#: ../fido2/shared/index-content1.rst.inc:162
msgid "Nitrokey is in Firmware Update mode"
msgstr "Nitrokey处于固件更新模式"

#: ../fido2/shared/index-content1.rst.inc:162
msgid "Active until firmware update operation is successful, or until reinsertion"
msgstr "激活，直到固件更新操作成功，或直到重新插入。"

#: ../fido2/shared/index-content1.rst.inc:162
msgid ""
"If the firmware update fails, the Nitrokey will stay in the this mode "
"until the firmware is written correctly"
msgstr "如果固件更新失败，Nitrokey将一直处于这种模式，直到固件被正确写入。"

#: ../fido2/shared/index-content1.rst.inc:174
msgid ""
"Note: white LED blinking is used as well to signalize the selected device"
" (the so called WINK command)."
msgstr "注意：白色LED灯的闪烁也是用来表示所选设备的信号（所谓的WINK命令）。"

#: ../fido2/linux/index.rst:16
#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:30
#: ../nitrokey3/shared/nitropy.rst:71 ../nitrokey3/troubleshooting.rst.inc:2
#: ../nitropad/troubleshooting.rst.inc:2 ../pro/firmware-update.rst.inc:65
#: ../pro/login-with-pam.rst.inc:44 ../pro/openpgp-thunderbird.rst.inc:12
#: ../pro/ssh.rst:42 ../software/nitropy/all-platforms/installation.rst:85
#: ../start/linux/index.rst:60 ../u2f/linux/index.rst:16
msgid "Troubleshooting"
msgstr "故障排除"

#: ../fido2/linux/index.rst:18
msgid "If the Nitrokey is not detected, proceed the following:"
msgstr "如果没有检测到硝基钥匙，请进行以下操作。"

#: ../fido2/linux/index.rst:20
msgid ""
"Copy this file `41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__ to "
"``/etc/udev/rules.d/``. In very rare cases, the system will need the "
"`older version "
"<https://raw.githubusercontent.com/Nitrokey/libnitrokey/master/data/41-nitrokey_old.rules>`__"
" of this file."
msgstr ""
"把这个文件`41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__复制到``/etc/udev/rules.d/``。在非常罕见的情况下，系统将需要这个文件的`较旧的版本<https://raw.githubusercontent.com/Nitrokey/libnitrokey/master/data/41-nitrokey_old.rules>`__。"

#: ../fido2/linux/index.rst:26 ../nitrokey3/troubleshooting.rst.inc:15
msgid ""
"Restart udev via ``sudo service udev restart`` or ``udevadm control "
"--reload-rules && udevadm trigger`` if you are using Fedora."
msgstr ""
"通过``sudo service udev restart`` 或``udevadm control --reload-rules && "
"udevadm trigger``（如果使用的是 Fedora）重启 udev。"

#: ../fido2/shared/index-content2.rst.inc:2 ../fido2/windows/reset.rst:2
msgid "Nitrokey Reset"
msgstr "硝基键复位"

#: ../fido2/shared/index-content2.rst.inc:6
msgid ""
"Factory Reset operation regenerates the secret material stored on the "
"Nitrokey FIDO U2F / Nitrokey FIDO2, which makes it a completely new key "
"logic-side. New owner cannot use it to login to account of the previous "
"one. In case of the FIDO2 Resident Keys the material is erased."
msgstr ""
"出厂重置操作会重新生成存储在Nitrokey FIDO U2F/Nitrokey "
"FIDO2上的秘密材料，这使得它成为一个全新的钥匙逻辑侧。新的主人不能用它来登录前一个主人的账户。如果是FIDO2常驻钥匙，其材料会被删除。"

#: ../fido2/shared/index-content2.rst.inc:14
msgid "Nitrokey FIDO2 could be reset by:"
msgstr "Nitrokey FIDO2可以通过以下方式重置。"

#: ../fido2/shared/index-content2.rst.inc:16 ../fido2/windows/reset.rst:40
msgid ""
"pynitrokey tool: ``nitropy fido2 reset`` (requires Administrator rights "
"to execute)"
msgstr "pynitrokey工具。``nitropy fido2 reset``（需要管理员权限才能执行）。"

#: ../fido2/shared/index-content2.rst.inc:17
#: ../nitrokey3/shared/reset.rst.inc:14
msgid ""
"Google Chrome: `Manage security keys` via the direct link: "
"`chrome://settings/securityKeys`"
msgstr "谷歌浏览器：通过直接链接 \"管理安全密钥\"。`chrome://settings/securityKeys`。"

#: ../fido2/mac/index.rst:2
msgid "FIDO2 With macOS"
msgstr "使用MacOS的FIDO2"

#: ../fido2/windows/index.rst:2
msgid "Nitrokey FIDO2 With Windows"
msgstr "使用Windows的Nitrokey FIDO2"

#: ../fido2/windows/passwordless-microsoft.rst:2
msgid "Passwordless Authentication With Microsoft"
msgstr "使用微软的无密码认证"

#: ../fido2/windows/passwordless-microsoft.rst:6
msgid ""
"The Nitrokey FIDO2 supports password-less authentication, where entering "
"a password is replaced by logging in with the Nitrokey FIDO2 and a PIN."
msgstr "Nitrokey FIDO2支持无密码认证，即用Nitrokey FIDO2和PIN码登录来代替输入密码。"

#: ../fido2/windows/passwordless-microsoft.rst:9
msgid "Sample Login to Microsoft With The Nitrokey FIDO2"
msgstr "使用Nitrokey FIDO2登录微软的样本"

#: ../fido2/windows/passwordless-microsoft.rst:11
msgid "Click on “Sign in with security key”."
msgstr "点击 \"用安全密钥登录\"。"

#: ../fido2/windows/passwordless-microsoft.rst
msgid "img0"
msgstr "img0"

#: ../fido2/windows/passwordless-microsoft.rst:18
msgid "Enter your PIN for the Nitrokey FIDO2."
msgstr "输入Nitrokey FIDO2的密码。"

#: ../fido2/windows/passwordless-microsoft.rst:25
msgid "Touch your Nitrokey FIDO2 at the indicated spot."
msgstr "在指定地点触摸你的Nitrokey FIDO2。"

#: ../fido2/windows/passwordless-microsoft.rst:32
msgid "Now you are logged in!"
msgstr "现在你已经登录了!"

#: ../fido2/windows/passwordless-microsoft.rst:35
msgid "Setting up Passwordless Authentication"
msgstr "设置无密码认证"

#: ../fido2/windows/passwordless-microsoft.rst:37
msgid ""
"Here we offer you a guide on how to set up passwordless authentication "
"for your Microsoft account with the Nitrokey FIDO2."
msgstr "在此，我们为您提供一份指南，介绍如何用Nitrokey FIDO2为您的微软账户设置无密码认证。"

#: ../fido2/windows/passwordless-microsoft.rst:39
msgid ""
"You need Windows 10 (update October 2018 or later) and the Microsoft Edge"
" or Google Chrome browser."
msgstr "你需要Windows 10（2018年10月或之后的更新）和Microsoft Edge或Google Chrome浏览器。"

#: ../fido2/windows/passwordless-microsoft.rst:42
msgid "Log in to your Microsoft account and go to your “Account” page."
msgstr "登录你的微软账户，进入你的 \"账户 \"页面。"

#: ../fido2/windows/passwordless-microsoft.rst:44
msgid "Select “Security”."
msgstr "选择 \"安全\"。"

#: ../fido2/windows/passwordless-microsoft.rst:51
msgid "Select “More security options”"
msgstr "选择 \"更多安全选项\""

#: ../fido2/windows/passwordless-microsoft.rst:58
msgid "Select “Set up a security key”."
msgstr "选择 \"设置一个安全密钥\"。"

#: ../fido2/windows/passwordless-microsoft.rst:65
msgid "Confirm with “Next” under “USB device”."
msgstr "在 \"USB设备 \"下用 \"下一步 \"确认。"

#: ../fido2/windows/passwordless-microsoft.rst:72
msgid ""
"Enter a PIN that you want to use for your Nitrokey FIDO2 and then select "
"“Next”."
msgstr "输入你想用于Nitrokey FIDO2的密码，然后选择 \"下一步\"。"

#: ../fido2/windows/passwordless-microsoft.rst
#: ../nitropad/factory-reset.rst.inc:-1 ../nitropad/firmware-update.rst.inc:-1
#: ../nitropad/qubes/nitrokey-app.rst ../pro/2fa-nextcloud.rst.inc:-1
#: ../pro/eidauthenticate.rst.inc:-1 ../pro/gpa.rst
#: ../pro/openpgp-keygen-gpa.rst.inc:-1 ../pro/openpgp-thunderbird.rst.inc:-1
#: ../pro/otp.rst.inc:-1 ../pro/putty.rst.inc:-1
#: ../pro/windows/2fa-microsoft.rst:-1 ../pro/windows/openpgp-csp.rst:-1
#: ../storage/firmware-update-manually.rst:-1
msgid "img7"
msgstr "img7"

#: ../fido2/windows/passwordless-microsoft.rst:80
msgid "Now tap on the marked position of the Nitrokey FIDO2."
msgstr "现在点击Nitrokey FIDO2的标记位置。"

#: ../fido2/windows/passwordless-microsoft.rst
#: ../nitropad/factory-reset.rst.inc:-1 ../nitropad/firmware-update.rst.inc:-1
#: ../pro/2fa-nextcloud.rst.inc:-1 ../pro/eidauthenticate.rst.inc:-1
#: ../pro/gpa.rst ../pro/openpgp-thunderbird.rst.inc:-1 ../pro/otp.rst.inc:-1
#: ../pro/windows/2fa-microsoft.rst:-1 ../pro/windows/openpgp-csp.rst:-1
#: ../storage/firmware-update-manually.rst:-1
msgid "img8"
msgstr "img8"

#: ../fido2/windows/passwordless-microsoft.rst:87
msgid "Confirm with “Allow”."
msgstr "用 \"允许 \"确认。"

#: ../fido2/windows/passwordless-microsoft.rst
#: ../nitropad/factory-reset.rst.inc:-1 ../nitropad/firmware-update.rst.inc:-1
#: ../pro/2fa-nextcloud.rst.inc:-1 ../pro/eidauthenticate.rst.inc:-1
#: ../pro/gpa.rst ../pro/openpgp-thunderbird.rst.inc:-1
#: ../pro/windows/2fa-microsoft.rst:-1 ../pro/windows/openpgp-csp.rst:-1
#: ../storage/firmware-update-manually.rst:-1
msgid "img9"
msgstr "img9"

#: ../fido2/windows/passwordless-microsoft.rst:94
msgid "Name your Nitrokey FIDO2 and then select “Next”."
msgstr "为你的Nitrokey命名为FIDO2，然后选择 \"下一步\"。"

#: ../fido2/windows/passwordless-microsoft.rst
#: ../nitropad/factory-reset.rst.inc:-1 ../pro/openpgp-thunderbird.rst.inc:-1
#: ../pro/windows/2fa-microsoft.rst:-1 ../pro/windows/openpgp-csp.rst:-1
#: ../storage/firmware-update-manually.rst:-1
msgid "img10"
msgstr "img10"

#: ../fido2/windows/passwordless-microsoft.rst:101
msgid ""
"Now you have successfully set up password-free authentication for your "
"Microsoft account! Confirm with “Got it”."
msgstr "现在你已经成功地为你的微软账户设置了免密码认证!用 \"知道了 \"来确认。"

#: ../fido2/windows/passwordless-microsoft.rst
#: ../nitropad/factory-reset.rst.inc:-1 ../pro/openpgp-thunderbird.rst.inc:-1
#: ../pro/windows/2fa-microsoft.rst:-1 ../pro/windows/openpgp-csp.rst:-1
#: ../storage/firmware-update-manually.rst:-1
msgid "img11"
msgstr "img11"

#: ../fido2/windows/reset.rst:6
msgid ""
"The Factory Reset operation deletes the FIDO secret keys stored on the "
"Nitrokey and generates new ones. Afterwards the Nitrokey behaves like a "
"new device."
msgstr "出厂重置操作会删除存储在Nitrokey上的FIDO密匙并生成新的密匙。此后，Nitrokey就像一个新设备一样。"

#: ../fido2/windows/reset.rst:8
msgid ""
"To avoid accidental and malicious reset of the Nitrokey, the required "
"touch confirmation time for the FIDO2 reset operation is longer and with "
"a distinct LED behavior (red LED light) than normal operations. To reset "
"the Nitrokey, confirm by touching the touch button for at least 5 seconds"
" until the green or blue LED lights up."
msgstr "为避免意外和恶意重置硝基钥匙，FIDO2重置操作所需的触摸确认时间比正常操作要长，并且有明显的LED行为（红色LED灯）。要重置硝基钥匙，请通过触摸按钮确认至少5秒钟，直到绿色或蓝色LED灯亮起。"

#: ../fido2/windows/reset.rst:15
msgid "Windows 10"
msgstr "Windows 10"

#: ../fido2/windows/reset.rst:17
msgid ""
"Make sure you use at least version 2004. Please follow Windows’ reset "
"wizard."
msgstr "请确保你至少使用2004版。请按照Windows的重置向导操作。"

#: ../fido2/windows/reset.rst:20
msgid ""
"If the total taken time for execution will be more than 10 seconds, the "
"Windows OS’ user interface will report failure. Reset operation is "
"executed on the Nitrokey even after the latter is reported failing, as "
"long as the user’s touch will be registered before the Nitrokey’s "
"internal operation timeout (touch confirmation is shown with the blue "
"color)."
msgstr "如果执行的总时间超过10秒，Windows操作系统的用户界面将报告失败。即使在报告失败后，只要用户的触摸在硝基钥匙的内部操作超时前被登记，重置操作也会在硝基钥匙上执行（触摸确认显示为蓝色）。"

#: ../fido2/windows/reset.rst:28
msgid "Windows 10 on a Virtual Machine"
msgstr "虚拟机上的Windows 10"

#: ../fido2/windows/reset.rst:30
msgid ""
"Please keep in mind Nitrokey has internal timeout for accepting the FIDO "
"reset operation of 10 seconds since powering up. If the Nitrokey will "
"connect to a virtual machine later than that, it will return error and "
"the operation will be aborted."
msgstr "请记住，Nitrokey在接受FIDO重置操作时有内部超时，即开机后10秒。如果Nitrokey连接到虚拟机的时间超过这个时间，它将会返回错误，并且操作会被中止。"

#: ../fido2/windows/reset.rst:36
msgid "Other Ways to Reset"
msgstr "重置的其他方法"

#: ../fido2/windows/reset.rst:38
msgid "Nitrokey can also be reset by:"
msgstr "Nitrokey也可以通过以下方式重置。"

#: ../hsm/faq.rst:2
msgid "Nitrokey HSM FAQ"
msgstr "硝基钥匙HSM常见问题"

#: ../shared-faqs/nitrokeys.rst.inc:2
msgid "Windows, Linux and macOS."
msgstr "Windows、Linux和macOS。"

#: ../hsm/faq.rst:17 ../shared-faqs/pins.rst.inc:11
msgid "**Q:** What is the maximum length of the PIN?"
msgstr "**问：**密码的最大长度是多少？"

#: ../hsm/faq.rst:9 ../shared-faqs/pins.rst.inc:3
msgid ""
"Nitrokey uses PINs instead of passwords. The main difference is that the "
"hardware limits the amount of tries to three while a limit doesn't exist "
"for passwords. Because of this, a short PIN is still secure and there is "
"not need to choose a long and complex PIN."
msgstr "Nitrokey使用PIN码而不是密码。主要区别在于，硬件将尝试的次数限制为三次，而密码则不存在限制。正因为如此，一个简短的PIN码仍然是安全的，没有必要选择一个长而复杂的PIN码。"

#: ../hsm/faq.rst:14
msgid ""
"Nitrokey PINs can be up to 16 digits long and can consist of numbers, "
"characters and special characters. Note: When using GnuPG or OpenSC, 32 "
"character long PINs can be used but aren't supported by Nitrokey App."
msgstr "Nitrokey的PIN码最多可以有16位，可以由数字、字符和特殊字符组成。注意：当使用GnuPG或OpenSC时，可以使用32个字符的PIN码，但不被Nitrokey应用程序支持。"

#: ../hsm/faq.rst:27 ../shared-faqs/pins.rst.inc:22
msgid "**Q:** What is the User PIN for?"
msgstr "**问：**用户密码是什么？"

#: ../hsm/faq.rst:20
msgid ""
"The PIN is at least 6-digits long and is used to get access to the "
"content of the Nitrokey. This is the PIN you will use a lot in every day "
"use."
msgstr "密码至少有6位数，用于访问Nitrokey的内容。这是你在日常使用中会经常用到的密码。"

#: ../hsm/faq.rst:24
msgid ""
"The PIN can have up to 16 digits and other characters (e.g. alphabetic "
"and special characters). But as the PIN is blocked as soon three wrong "
"PIN attempts were done, it is sufficiently secure to only have a 6 digits"
" PIN."
msgstr "密码最多可以有16位数字和其他字符（如字母和特殊字符）。但是，只要有三次错误的PIN尝试，PIN就会被阻止，所以只有6位数的PIN就足够安全了。"

#: ../hsm/faq.rst:34
msgid "**Q:** What is the SO PIN for?"
msgstr "**问：**SO PIN是什么意思？"

#: ../hsm/faq.rst:30
msgid ""
"The SO PIN is used in the Nitrokey HSM only and is something like a "
"\"master\" PIN with special properties. Please read this instructions "
"carefully to understand the SO PIN of the Nitrokey HSM."
msgstr "SO PIN仅在Nitrokey HSM中使用，它类似于具有特殊属性的主密码。请仔细阅读本说明以了解Nitrokey HSM的SO PIN。"

#: ../hsm/faq.rst:34
msgid "The SO PIN has to be exactly 16 digits long."
msgstr "SO PIN的长度必须正好是16位数。"

#: ../hsm/faq.rst:42
msgid "**Q:** How many data objects (DF, EF) can be stored?"
msgstr "**问：**可以存储多少个数据对象（DF、EF）？"

#: ../hsm/faq.rst:37
msgid "76 KB EEPROM total, that can be used for"
msgstr "总共76KB的EEPROM，可用于"

#: ../hsm/faq.rst:39
msgid "max. 150 x ECC-521 keys or"
msgstr "最多。150个ECC-521钥匙或"

#: ../hsm/faq.rst:40
msgid "max. 300 x ECC/AES-256 keys or"
msgstr "最大。300个ECC/AES-256密钥或"

#: ../hsm/faq.rst:41
msgid "max. 19 x RSA-4096 keys or"
msgstr "最大。19个RSA-4096密钥或"

#: ../hsm/faq.rst:42
msgid "max. 38 x RSA-2048 keys"
msgstr "最大。38 x RSA-2048 密钥"

#: ../hsm/faq.rst:45 ../storage/faq.rst:50
msgid "**Q:** How many keys can I store?"
msgstr "**问：**我可以存储多少个钥匙？"

#: ../hsm/faq.rst:45
msgid "Nitrokey HSM can store 20 RSA-2048 and 31 ECC-256 key pairs."
msgstr "Nitrokey HSM可以存储20个RSA-2048和31个ECC-256的密钥对。"

#: ../hsm/faq.rst:53 ../pro/faq.rst:42 ../storage/faq.rst:58
msgid "**Q:** How fast is encryption and signing?"
msgstr "**问：**加密和签名的速度如何？"

#: ../hsm/faq.rst:48
msgid "Key generation on-card: RSA 2048: 2 per minute"
msgstr "卡片上的密钥生成。RSA 2048：每分钟2个"

#: ../hsm/faq.rst:49
msgid "Key generation on-card: ECC 256: 10 per minute."
msgstr "卡片上的密钥生成。ECC 256：每分钟10个。"

#: ../hsm/faq.rst:50
msgid "Signature creation with off-card hash: RSA 2048; 100 per minute"
msgstr "用卡外哈希创建签名。RSA 2048；每分钟100个"

#: ../hsm/faq.rst:51
msgid "Signature creation with off-card hash: ECDSA 256: 360 per minute"
msgstr "用卡外哈希创建签名。ECDSA 256：每分钟360个"

#: ../hsm/faq.rst:52
msgid ""
"Signature creation with on-card SHA-256 and 1 kb data: RSA 2048; 68 per "
"minute"
msgstr "用卡上的SHA-256和1kb数据创建签名。RSA 2048；每分钟68个"

#: ../hsm/faq.rst:53
msgid ""
"Signature creation with on-card SHA-256 and 1 kb data: ECDSA 256: 125 per"
" minute"
msgstr "用卡上的SHA-256和1kb数据创建签名。ECDSA 256：每分钟125个"

#: ../hsm/faq.rst:57
msgid "**Q:** How can I distinguish a Nitrokey HSM 1 from an Nitrokey HSM 2?"
msgstr "**问：**如何区分Nitrokey HSM 1和Nitrokey HSM 2？"

#: ../hsm/faq.rst:56
msgid ""
"Use ``opensc-tool --list-algorithms`` and compare with the table below. "
"Please also see `this thread`_ for the factsheets and more details."
msgstr "使用``opensc-tool --list-algorithms``并与下表进行比较。也请看`这个主题`_，以了解情况表和更多细节。"

#: ../shared-faqs/algos.rst.inc:3
msgid "**Q:** Which algorithms and maximum key length are supported?"
msgstr "**问：**支持哪些算法和最大密钥长度？"

#: ../shared-faqs/algos.rst.inc:3
msgid "See the following table:"
msgstr "见下表。"

#: ../pro/openpgp-keygen-on-device.rst.inc:191 ../shared-faqs/algos.rst.inc:6
msgid "Start"
msgstr "开始"

#: ../pro/openpgp-keygen-on-device.rst.inc:191 ../shared-faqs/algos.rst.inc:6
msgid "Pro + Storage"
msgstr "专业+存储"

#: ../pro/openpgp-keygen-on-device.rst.inc:191 ../shared-faqs/algos.rst.inc:6
msgid "Pro 2 + Storage 2"
msgstr "专业2+存储2"

#: ../nitrokey3/index.rst:2 ../shared-faqs/algos.rst.inc:6
msgid "Nitrokey 3"
msgstr "Nitrokey 3"

#: ../shared-faqs/algos.rst.inc:6
msgid "HSM"
msgstr "HSM"

#: ../shared-faqs/algos.rst.inc:6
msgid "HSM 2"
msgstr "HSM 2"

#: ../pro/openpgp-keygen-on-device.rst.inc:193 ../shared-faqs/algos.rst.inc:8
msgid "rsa1024"
msgstr "rsa1024"

#: ../pro/openpgp-keygen-on-device.rst.inc:193
#: ../pro/openpgp-keygen-on-device.rst.inc:194
#: ../pro/openpgp-keygen-on-device.rst.inc:195
#: ../pro/openpgp-keygen-on-device.rst.inc:196
#: ../pro/openpgp-keygen-on-device.rst.inc:197
#: ../pro/openpgp-keygen-on-device.rst.inc:198
#: ../pro/openpgp-keygen-on-device.rst.inc:199
#: ../pro/openpgp-keygen-on-device.rst.inc:200 ../shared-faqs/algos.rst.inc:8
#: ../shared-faqs/algos.rst.inc:10 ../shared-faqs/algos.rst.inc:12
#: ../shared-faqs/algos.rst.inc:14 ../shared-faqs/algos.rst.inc:16
#: ../shared-faqs/algos.rst.inc:18 ../shared-faqs/algos.rst.inc:20
#: ../shared-faqs/algos.rst.inc:22 ../shared-faqs/algos.rst.inc:24
#: ../shared-faqs/algos.rst.inc:26 ../shared-faqs/algos.rst.inc:28
#: ../shared-faqs/algos.rst.inc:30 ../shared-faqs/algos.rst.inc:32
#: ../shared-faqs/algos.rst.inc:34
msgid "✓"
msgstr "✓"

#: ../pro/openpgp-keygen-on-device.rst.inc:194 ../shared-faqs/algos.rst.inc:10
msgid "rsa2048"
msgstr "rsa2048"

#: ../pro/openpgp-keygen-on-device.rst.inc:195 ../shared-faqs/algos.rst.inc:12
msgid "rsa3072"
msgstr "rsa3072"

#: ../pro/openpgp-keygen-on-device.rst.inc:196 ../shared-faqs/algos.rst.inc:14
msgid "rsa4096"
msgstr "rsa4096"

#: ../shared-faqs/algos.rst.inc:16
msgid "curve25519"
msgstr "曲线25519"

#: ../shared-faqs/algos.rst.inc:18
msgid "NIST-P 192"
msgstr "NIST-P 192"

#: ../shared-faqs/algos.rst.inc:20
msgid "NIST-P 256"
msgstr "NIST-P 256"

#: ../shared-faqs/algos.rst.inc:22
msgid "NIST-P 384-521"
msgstr "NIST-P 384-521"

#: ../shared-faqs/algos.rst.inc:24
msgid "Brainpool 192"
msgstr "脑池192"

#: ../shared-faqs/algos.rst.inc:26
msgid "Brainpool 256-320"
msgstr "脑库 256-320"

#: ../shared-faqs/algos.rst.inc:28
msgid "Brainpool 384-521"
msgstr "脑库 384-521"

#: ../shared-faqs/algos.rst.inc:30
msgid "secp192"
msgstr "secp192"

#: ../shared-faqs/algos.rst.inc:32
msgid "secp256"
msgstr "secp256"

#: ../shared-faqs/algos.rst.inc:34
msgid "secp521"
msgstr "secp521"

#: ../hsm/faq.rst:64
msgid ""
"**Q:** How can I use the True Random Number Generator (TRNG) of the "
"Nitrokey HSM for my applications?"
msgstr "**问：**我怎样才能在我的应用中使用Nitrokey HSM的真随机数发生器（TRNG）？"

#: ../hsm/faq.rst:62
msgid ""
"Nitrokey HSM can be used with `Botan`_ and `TokenTools`_ by using OpenSC "
"as a PKCS#11 driver."
msgstr "通过使用OpenSC作为PKCS#11驱动，Nitrokey HSM可以与`Botan`_和`TokenTools`_一起使用。"

#: ../hsm/faq.rst:64
msgid ""
"OpenSSL can't use Nitrokey HSM's RNG directly because engine-pkcs11 "
"doesn't contain a mapping for OpenSSL to C_GenerateRandom."
msgstr ""
"OpenSSL不能直接使用Nitrokey HSM的RNG，因为engine-"
"pkcs11不包含OpenSSL对C_GenerateRandom的映射。"

#: ../hsm/faq.rst:68 ../pro/faq.rst:65 ../storage/faq.rst:81
msgid "**Q:** How good is the Random Number Generator?"
msgstr "**问：**随机数字发生器有多好？"

#: ../hsm/faq.rst:67
msgid ""
"Nitrokey HSM uses the True Random Number Generator of JCOP 2.4.1r3 which "
"has a quality of DRNG.2 (according to `AIS 31`_ of the German Federal "
"Office for Information Security, BSI)."
msgstr "Nitrokey HSM使用JCOP 2.4.1r3的真随机数发生器，其质量为DRNG.2（根据德国联邦信息安全局BSI的`AIS 31`_）。"

#: ../hsm/faq.rst:84
msgid "**Q:** Which API can I use?"
msgstr "**问：**我可以使用哪个API？"

#: ../hsm/faq.rst:71
msgid ""
"OpenSC: Comprehensive instructions exist for OpenSC framework. There is "
"nitrotool as a more comfortable frontend to OpenSC."
msgstr "OpenSC：OpenSC框架有全面的说明。还有nitrotool作为OpenSC的一个更舒适的前端。"

#: ../hsm/faq.rst:74
msgid ""
"Embedded Systems: For systems with minimal memory footprint a read/only "
"PKCS#11 module is provided by the sc-hsm-embedded project.  This PKCS#11 "
"module is useful for deployments where key generation at the user's "
"workplace is not required. The PKCS#11 module also supports major "
"electronic signature cards available in the German market."
msgstr ""
"嵌入式系统。对于内存占用最小的系统，sc-hsm-embedded项目提供了一个只读不写的PKCS#11模块。  "
"这个PKCS#11模块对于不需要在用户工作场所生成密钥的部署非常有用。PKCS#11模块还支持德国市场上的主要电子签名卡。"

#: ../hsm/faq.rst:80
msgid ""
"OpenSCDP: The SmartCard-HSM is fully integrated with OpenSCDP, the open "
"smart card development platform. See the public support scripts for "
"details. To import existing keys you can use its SCSH or NitroKeyWrapper."
msgstr ""
"OpenSCDP。SmartCard-"
"HSM与开放式智能卡开发平台OpenSCDP完全集成。详情见公共支持脚本。要导入现有的密钥，你可以使用其SCSH或NitroKeyWrapper。"

#: ../hsm/faq.rst:88
msgid "**Q:** Is the Nitrokey HSM 2 Common Criteria or FIPS certified?"
msgstr "**问：**Nitrokey HSM 2是否经过通用标准或FIPS认证？"

#: ../hsm/faq.rst:87
#, python-format
msgid ""
"The security controller (NXP JCOP 3 P60) is Common Criteria EAL 5+ "
"certified up to the OS level (`Certificate "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"certificate%2021-98209.pdf>`__, `Certification Report "
"<https://commoncriteriaportal.org/files/epfiles/Certification%20Report"
"%20NSCIB-CC-98209-CR5%20-%20version%203.0%20(2022-10-14).pdf>`__, "
"`Security Target <https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-98209_5-STLite.pdf>`__, `Java Card System Protection Profile Open "
"Configuration, Version 3.0 "
"<https://commoncriteriaportal.org/files/ppfiles/ANSSI-CC-"
"profil_PP-2010-03en.pdf>`__)."
msgstr ""
"安全控制器（恩智浦 JCOP 3 P60）已通过通用标准 EAL 5+ "
"认证，达到操作系统级别（`Certificate<https://commoncriteriaportal.org/files/epfiles"
"/NSCIB-certificate%2021-98209.pdf>`__,`Certification "
"Report<https://commoncriteriaportal.org/files/epfiles/Certification%20Report"
"%20NSCIB-CC-98209-CR5%20-%20version%203.0%20(2022-10-14).pdf>%20NSCIB-"
"CC-98209-CR5%20-%20version%203.0%20(2022-10-14).pdf>`__,`Security "
"Target<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-98209_5-STLite.pdf>`__,`Java Card System Protection Profile Open "
"Configuration, Version 3.0<https://commoncriteriaportal.org/files/ppfiles"
"/ANSSI-CC-profil_PP-2010-03en.pdf>`__ ）。"

#: ../hsm/faq.rst:91
msgid "**Q:** How to import an existing key into the Nitrokey HSM?"
msgstr "**问：**如何将现有密钥导入Nitrokey HSM？"

#: ../hsm/faq.rst:91
msgid ""
"First, `set up`_ your Nitrokey HSM to use key backup and restore. Then "
"use Smart Card Shell for importing. If your key is stored in a Java key "
"store you can use `NitroKeyWrapper`_  instead."
msgstr ""
"首先，`设置`_你的Nitrokey "
"HSM以使用钥匙备份和恢复。然后使用智能卡外壳进行导入。如果你的钥匙存储在Java钥匙库中，你可以使用`NitroKeyWrapper`_代替。"

#: ../hsm/faq.rst:94
msgid ""
"**Q:** How do I secure my Cloud Infrastructure/Kubernetes with Nitrokey "
"HSM?"
msgstr "**问：**我如何用Nitrokey HSM来保护我的云基础设施/Kubernetes？"

#: ../hsm/faq.rst:94
msgid ""
"An approach to secure keys for Hashicorp Vault/Bank-Vault on a Nitrokey "
"HSM can be found at `banzaicloud.com`_."
msgstr "在Nitrokey HSM上为Hashicorp Vault/Bank-Vault提供安全钥匙的方法可以在`banzaicloud.com`_找到。"

#: ../hsm/faq.rst:99
msgid "**Q:** Can I use Nitrokey HSM with cryptocurrencies?"
msgstr "**问：**我可以用加密货币使用Nitrokey HSM吗？"

#: ../hsm/faq.rst:97
msgid ""
"J.v.d.Bosch wrote a simple, free python `program`_ to secure the private "
"key of a Bitcoin wallet in a HSM. `Tezos`_ has been `reported`_ to work "
"with Nitrokey HSM."
msgstr ""
"J.v.d.Bosch写了一个简单的、免费的python "
"`程序`_来保护HSM中比特币钱包的私钥。`Tezos`_已被`报道`_与Nitrokey HSM一起工作。"

#: ../hsm/index.rst:2
msgid "Nitrokey HSM 2"
msgstr "Nitrokey HSM 2"

#: ../hsm/apache2-tls.rst.inc:2
msgid "TLS Setup With Apache2"
msgstr "用Apache2设置TLS"

#: ../hsm/apache2-tls.rst.inc:8
msgid ""
"The very same concept as descriped here can be used for many applications"
" using openssl as crypto-backend. The concept mostly boils down to: "
"replace (secret) key-file with PKCS#11 URL referencing a key on a "
"security token (Nitrokey)"
msgstr ""
"这里描述的相同概念可以用于许多使用openssl作为加密后端的应用。这个概念主要归结为：用PKCS#11 "
"URL替代（秘密）密钥文件，引用安全令牌（Nitrokey）上的一个密钥。"

#: ../hsm/apache2-tls.rst.inc:15 ../hsm/import-keys-certs.rst.inc:24
#: ../hsm/pkcs11-url.rst.inc:12 ../nitropad/firmware-update.rst.inc:16
#: ../software/nitropy/all-platforms/installation.rst:38
msgid "Preparation"
msgstr "准备工作"

#: ../hsm/apache2-tls.rst.inc:17
msgid ""
"ensure that the `apache2` version is at least 2.4.42 for proper "
"``mod_ssl`` support"
msgstr "确保`apache2`的版本至少是2.4.42，以获得正确的``mod_ssl``支持。"

#: ../hsm/apache2-tls.rst.inc:19
msgid "activate ``mod_ssl`` using ``a2enmod ssl``, if not already done"
msgstr "激活``mod_ssl``使用``a2enmod ssl``，如果尚未完成。"

#: ../hsm/apache2-tls.rst.inc:21
msgid ""
"additionally ``openssl`` is needed and ``libengine-pkcs11-openssl`` see "
":doc:`PKCS#11 URL<pkcs11-url>`"
msgstr ""
"另外还需要``openssl``和``libengine-pkcs11-openssl``见：doc:`PKCS#11 "
"URL<pkcs11-url>`"

#: ../hsm/apache2-tls.rst.inc:27
msgid "Configure Apache2 to Use a Security Key"
msgstr "配置Apache2以使用安全密钥"

#: ../hsm/apache2-tls.rst.inc:29
msgid ""
"Basically the only thing to do is replace ``SSLCertificateFile`` with the"
" proper PKCS#11 URL and delete any other references to keys or "
"certificates. E.g., ``SSLCertificateKeyFile`` is not needed anymore."
msgstr ""
"基本上唯一要做的是用适当的PKCS#11 "
"URL替换``SSLCertificateFile`，并删除任何其他对钥匙或证书的引用。例如，``SSLCertificateKeyFile``就不再需要了。"

#: ../hsm/apache2-tls.rst.inc:33
msgid "An example directive might look like this:"
msgstr "一个指令的例子可能是这样的。"

#: ../hsm/apache2-tls.rst.inc:39
msgid ""
"The proper PKCS#11 URL can be extracted as documented in :doc:`PKCS#11 "
"URL Generation<pkcs11-url>`"
msgstr "适当的PKCS#11 URL可以按照:doc:`PKCS#11 URL生成<pkcs11-url>`中的记载提取。"

#: ../hsm/apache2-tls.rst.inc:41
msgid "Be sure to place the directive inside a `VirtualHost` configuration."
msgstr "请确保将该指令放在 \"虚拟主机 \"的配置中。"

#: ../hsm/apache2-tls.rst.inc:44
msgid "Provide PIN During Apache2 Startup"
msgstr "在Apache2启动时提供PIN码"

#: ../hsm/apache2-tls.rst.inc:46
msgid ""
"Using the previously described method Apache2 will ask on every startup "
"for the User-PIN, thus basically declining batch startup. Apache2 "
"provides another directive to provide the PIN during startup."
msgstr "使用前面描述的方法，Apache2会在每次启动时询问用户PIN，因此基本上拒绝了批量启动。Apache2提供了另一个指令，在启动时提供PIN。"

#: ../hsm/apache2-tls.rst.inc:54
msgid ""
"Apache2 expects an executable after ``|``, which will be executed during "
"startup and it's output (trailing newline is expected) will be used as "
"PIN. Obviously arbitrary complex PIN retrieval methods can be implemented"
" using this approach. Although here a trivial example has been chosen to "
"just ``echo`` the PIN during startup."
msgstr "Apache2期望在``|``之后有一个可执行文件，该文件将在启动时被执行，它的输出（尾部换行被期望）将被用作PIN。显然，任意复杂的PIN检索方法都可以用这种方法来实现。虽然这里选择了一个微不足道的例子，只是在启动过程中``echo``的PIN。"

#: ../hsm/apache2-tls.rst.inc:59
msgid ""
"Further ``SSLPassPhraseDialog`` is a global directive, thus has to be "
"placed in the global configuration scope in Apache2."
msgstr "此外``SSLPassPhraseDialog``是一个全局指令，因此必须放在Apache2的全局配置范围中。"

#: ../hsm/apache2-tls.rst.inc:64
msgid ""
"This shown example is not a secure mechanism to pass your PIN, as it will"
" be written in plain-text inside your configuration"
msgstr "这个例子不是传递PIN码的安全机制，因为它将以纯文本形式写入你的配置中。"

#: ../hsm/apache2-tls.rst.inc:67
msgid "See the `Apache2 mod_ssl documentation`_ for more details on this feature."
msgstr "关于这个功能的更多细节，请看`Apache2 mod_ssl 文档`_。"

#: ../hsm/apache2-tls.rst.inc:70
msgid "Complete Apache2 Config Example"
msgstr "完整的Apache2配置实例"

#: ../hsm/apache2-tls.rst.inc:71
msgid "A complete Apache2 (``VirtualHost``) config snippet might look like this:"
msgstr "一个完整的Apache2（``VirtualHost``）配置片段可能看起来像这样。"

#: ../pro/linux/automatic-screen-lock.rst:2
msgid "Automatic Screen Lock at Removal"
msgstr "移除时的自动屏幕锁"

#: ../pro/linux/automatic-screen-lock.rst:6
msgid ""
"This guide will walk you through the configuration of your computer, to "
"automatically lock your session when you remove the Nitrokey."
msgstr "本指南将指导你完成电脑的配置，以便在你移除Nitrokey时自动锁定你的会话。"

#: ../pro/linux/automatic-screen-lock.rst:8
msgid ""
"The configuration requires the creation of two files under two different "
"directories."
msgstr "该配置要求在两个不同的目录下创建两个文件。"

#: ../pro/linux/automatic-screen-lock.rst:13
msgid ""
"Ubuntu 20.04 or Debian 10 (Buster), both with `Gnome Display Manager "
"<https://wiki.gnome.org/Projects/GDM>`__ installed."
msgstr ""
"Ubuntu 20.04或Debian "
"10（Buster），都安装了`Gnome显示管理器<https://wiki.gnome.org/Projects/GDM>`__。"

#: ../pro/linux/automatic-screen-lock.rst:16
msgid "Nitrokey Pro 2, Nitrokey Storage 2, or Nitrokey HSM 2"
msgstr "Nitrokey Pro 2，Nitrokey Storage 2，或Nitrokey HSM 2"

#: ../nethsm/pkcs11-setup.rst:25 ../nextbox/external-storage.rst:18
#: ../nitrokey3/shared/openpgp-uif.rst.inc:15
#: ../pro/linux/automatic-screen-lock.rst:19
msgid "Configuration"
msgstr "配置"

#: ../pro/linux/automatic-screen-lock.rst:22
msgid "Create the ``.rules`` file"
msgstr "创建``.rules``文件。"

#: ../pro/linux/automatic-screen-lock.rst:24
msgid "With your favorite text editor create a file called ``85-nitrokey.rules``"
msgstr "用你最喜欢的文本编辑器创建一个名为``的文件，85-nitrokey.rules``。"

#: ../pro/linux/automatic-screen-lock.rst:30
msgid "Add the following line to the file"
msgstr "在文件中添加以下一行"

#: ../pro/linux/automatic-screen-lock.rst:36
msgid "Save the file and quit the editor."
msgstr "保存文件并退出编辑器。"

#: ../pro/linux/automatic-screen-lock.rst:38
msgid ""
"This file sets up a new hardware rule that executes the ``gnome-"
"screensaver-lock`` at removal of the Nitrokey device."
msgstr "这个文件设置了一个新的硬件规则，在移除Nitrokey设备时执行``gnome-screensaver-lock``。"

#: ../pro/linux/automatic-screen-lock.rst:40
msgid ""
"You should change the configuration according to the device you are using"
" as following:"
msgstr "你应该根据你所使用的设备改变配置，如下所示。"

#: ../pro/linux/automatic-screen-lock.rst:42
msgid "Nitrokey Pro: ``ENV{PRODUCT}==\"20a0/4108/101\"``"
msgstr "Nitrokey Pro。``ENV{PRODUCT}==\"20a0/4108/101\"``<"

#: ../pro/linux/automatic-screen-lock.rst:43
msgid "Nitrokey HSM: ``ENV{PRODUCT}==\"20a0/4230/101\"``"
msgstr "Nitrokey HSM: ``ENV{PRODUCT}==\"20a0/4230/101\"``。"

#: ../pro/linux/automatic-screen-lock.rst:44
msgid "Nitrokey Storage: ``ENV{PRODUCT}==\"20a0/4109/101\"``"
msgstr "硝基键存储。``ENV{PRODUCT}==\"20a0/4109/101\"``"

#: ../pro/linux/automatic-screen-lock.rst:46
msgid ""
"If you have a different device and need to find out the ``ENV{PRODUCT}`` "
"string you can use the following command to find out the infos when "
"plugging in:"
msgstr "如果您有不同的设备，并需要找出``ENV{PRODUCT}`` 字符串，可以使用以下命令找出插入时的信息："

#: ../pro/linux/automatic-screen-lock.rst:53
msgid "Create the ``gnome-screensaver-lock`` script"
msgstr "创建``gnome-screensaver-lock``脚本。"

#: ../pro/linux/automatic-screen-lock.rst:55
msgid ""
"With your favorite text editor create a file called ``gnome-screensaver-"
"lock``"
msgstr "用你最喜欢的文本编辑器创建一个名为``的文件，gnome-screensaver-lock``。"

#: ../pro/linux/automatic-screen-lock.rst:61
msgid "Add the following text"
msgstr "添加以下文字"

#: ../pro/linux/automatic-screen-lock.rst:71
msgid ""
"In the first step, this script looks for the user-name of the gnome "
"session, i.e. ``user``."
msgstr "在第一步，这个脚本寻找gnome会话的用户名，即``user``。"

#: ../pro/linux/automatic-screen-lock.rst:73
msgid ""
"When it is called at Nitrokey removal, the script queries ``user``, "
"switches to its session, and locks the screen by prompting the screen-"
"saver screen."
msgstr "当它在移除Nitrokey时被调用，脚本查询``user``，切换到它的会话，并通过提示屏保画面锁定屏幕。"

#: ../pro/linux/automatic-screen-lock.rst:76
msgid "Execute the script"
msgstr "执行脚本"

#: ../pro/linux/automatic-screen-lock.rst:78
msgid ""
"Once all set up, execute the script once, and it will lock the screen. It"
" does not matter if the Nitrokey is plugged or not for this first "
"execution."
msgstr "一旦全部设置完毕，执行一次脚本，它就会锁定屏幕。在第一次执行时，硝基钥匙是否被插上并不重要。"

#: ../pro/linux/automatic-screen-lock.rst:83
msgid ""
"By now you can log back to your session by entering your password, and "
"(re)plug you Nitrokey if you did not do it before."
msgstr "现在，你可以通过输入密码登录到你的会话中，如果你以前没有这样做，可以（重新）插入你的Nitrokey。"

#: ../pro/linux/automatic-screen-lock.rst:85
msgid ""
"The next time(s) you unplug your Nitrokey from the computer, it will "
"automatically lock the screen."
msgstr "下次你从电脑上拔下Nitrokey时，它将自动锁定屏幕。"

#: ../hsm/certificate-authority.rst.inc:2
msgid "Creating a Certificate Authority"
msgstr "创建一个证书颁发机构"

#: ../hsm/certificate-authority.rst.inc:6
msgid ""
"This article shows you how to setup your own private certificate "
"authority backed by a Nitrokey HSM. This certificate authority has no "
"automation and does not really scale. Other open source projects can be "
"referenced for automation and scalability."
msgstr ""
"本文向你展示了如何设置由Nitrokey "
"HSM支持的自己的私人证书授权。这个证书授权机构没有自动化，也没有真正的扩展。在自动化和可扩展性方面可以参考其他开源项目。"

#: ../hsm/certificate-authority.rst.inc:9
msgid "Choose Cryptographic Algorithms"
msgstr "选择密码学算法"

#: ../hsm/certificate-authority.rst.inc:11
msgid ""
"I’m going to assume that you’re as paranoid as I am, so I will be using "
"the following command for generating private keys:"
msgstr "我将假设你和我一样偏执，所以我将使用以下命令来生成私钥。"

#: ../hsm/certificate-authority.rst.inc:17
msgid ""
"But, if you’re less paranoid that I am, you can safely choose the "
"following options:"
msgstr "但是，如果你不像我这么偏执，你可以安全地选择以下选项。"

#: ../hsm/certificate-authority.rst.inc:24
msgid ""
"Likewise, I will be using the sha512 algorithm throughout this article, "
"but sha256 can safely be used."
msgstr "同样，我将在本文中使用sha512算法，但也可以安全地使用sha256算法。"

#: ../hsm/certificate-authority.rst.inc:27
msgid "Preparing to Start"
msgstr "准备开始"

#: ../hsm/certificate-authority.rst.inc:29
msgid "To start with, you need to pick a directory to store your CA."
msgstr "首先，你需要选择一个目录来存储你的CA。"

#: ../hsm/certificate-authority.rst.inc:40
msgid "Install the necessary tools:"
msgstr "安装必要的工具。"

#: ../hsm/certificate-authority.rst.inc:50
msgid ""
"For Windows download the official `OpenSC releases "
"<https://github.com/OpenSC/OpenSC/releases>`__ and make sure you install "
"`p11tool as described <https://github.com/thales-e-security/p11tool>`__. "
"Using the PowerShell most commands should be identical as long as both "
"tools and their binaries are within your ``PATH``."
msgstr "对于Windows，下载官方的`OpenSC发布的<https://github.com/OpenSC/OpenSC/releases>`__，并确保你安装`p11tool，如描述的<https://github.com/thales-e-security/p11tool>`__。只要两个工具和它们的二进制文件都在你的``PATH``内，使用PowerShell的大多数命令应该是相同的。"

#: ../hsm/certificate-authority.rst.inc:56
msgid "Creating The Root Certificate Authority"
msgstr "创建根证书颁发机构"

#: ../hsm/certificate-authority.rst.inc:58
msgid ""
"We start by generating the private key for the certificate authority "
"directly on the Nitrokey HSM. This allows us to use the private key in "
"the future, but not access it."
msgstr "我们首先在Nitrokey HSM上直接为证书机构生成私钥。这允许我们在将来使用私钥，但不能访问它。"

#: ../hsm/certificate-authority.rst.inc:81
msgid ""
"Note the ID number (e0161cc8b6f5d66ac6835ecdecb623fc0506a675), we’ll need"
" it later."
msgstr "注意ID号（e0161cc8b6f5d66ac6835ecdecb623fc0506a675），我们以后会需要它。"

#: ../hsm/certificate-authority.rst.inc:83
#: ../hsm/certificate-authority.rst.inc:238
msgid ""
"If you need the ID in the future, you can list the keys on the Nitrokey "
"HSM:"
msgstr "如果你将来需要这个ID，你可以在Nitrokey HSM上列出这些钥匙。"

#: ../hsm/certificate-authority.rst.inc:89
#: ../hsm/certificate-authority.rst.inc:244
msgid ""
"We need to create a config file to generate a self-signed public "
"certificate."
msgstr "我们需要创建一个配置文件来生成一个自签名的公共证书。"

#: ../hsm/certificate-authority.rst.inc:95
#: ../hsm/certificate-authority.rst.inc:250
msgid ""
"Fill out the request information in <angle brackets> with information for"
" your CA."
msgstr "在<角括号>中填写请求信息，并附上你的CA的信息。"

#: ../hsm/certificate-authority.rst.inc:155
msgid ""
"Generate the self-signed public certificate from the private key. Use the"
" private key id value from earlier."
msgstr "从私钥生成自签名的公共证书。使用先前的私钥ID值。"

#: ../hsm/certificate-authority.rst.inc:163
msgid ""
"Verify that the root certificate was generated correctly. Verify that "
"Signature-Algorithm matches above and below. Verify that Issuer and "
"Subject match, all root certificates are self signed. Verify that Key "
"Usage matches what was in the v3_ca information in our config file."
msgstr "验证根证书是否正确生成。验证签名-算法是否与上面和下面相匹配。验证签发人和主题是否匹配，所有根证书都是自签的。验证密钥使用与我们配置文件中v3_ca信息中的内容相匹配。"

#: ../hsm/certificate-authority.rst.inc:211
msgid "Creating The Intermediate Certificate Authority"
msgstr "创建中级证书颁发机构"

#: ../hsm/certificate-authority.rst.inc:213
msgid ""
"We continue by generating the private key for the intermediate "
"certificate authority directly on the Nitrokey HSM. This allows us to use"
" the private key in the future, but not access it."
msgstr "我们继续在Nitrokey HSM上直接生成中间证书颁发机构的私钥。这使我们能够在未来使用私钥，但不能访问它。"

#: ../hsm/certificate-authority.rst.inc:236
msgid ""
"Note the ID number (bcb48fe9b566ae61891aabbfde6a23d4ff3ab639), we’ll need"
" it later."
msgstr "注意ID号（bcb48fe9b566ae61891aabbfde6a23d4ff3ab639），我们以后会需要它。"

#: ../hsm/certificate-authority.rst.inc:277
msgid ""
"Generate the certificate signing request for the intermediate CA from the"
" intermediate CA’s private key. Use the private key ID value from "
"earlier."
msgstr "从中间CA的私钥中生成中间CA的证书签署请求。使用先前的私钥ID值。"

#: ../hsm/certificate-authority.rst.inc:285
msgid ""
"Verify that the CSR was created correctly. Verify that your Subject is "
"correct. Verify that your Public Key and Signature Algorithm are correct."
msgstr "验证CSR的创建是否正确。验证你的主题是否正确。验证你的公钥和签名算法是否正确。"

#: ../hsm/certificate-authority.rst.inc:318
#: ../hsm/certificate-authority.rst.inc:523
msgid "We need to find out the fully qualified PKCS#11 URI for your private key:"
msgstr "我们需要找出你的私钥的完全合格的PKCS#11 URI。"

#: ../hsm/certificate-authority.rst.inc:356
#: ../hsm/certificate-authority.rst.inc:561
msgid "In this instance, the fully qualified PKCS#11 URI is:"
msgstr "在这个例子中，完全合格的PKCS#11 URI是。"

#: ../hsm/certificate-authority.rst.inc:362
msgid ""
"Now, we need to create a config file to use the private key of the root "
"certificate to sign the csr of the intermediate certificate."
msgstr "现在，我们需要创建一个配置文件，使用根证书的私钥来签署中间证书的CSR。"

#: ../hsm/certificate-authority.rst.inc:414
msgid "Then sign the intermediate certificate with the root certificate."
msgstr "然后用根证书签署中间证书。"

#: ../hsm/certificate-authority.rst.inc:454
msgid ""
"Verify that the root certificate was generated correctly. Verify that the"
" Issuer and Subject are different, and correct. Verify that the Key Usage"
" matches the config file. Verify that the signature algorithm are correct"
" above and below."
msgstr "验证根证书的生成是否正确。验证签发人和主题是否不同，并且正确。验证密钥的使用与配置文件相匹配。验证签名算法上下都正确。"

#: ../hsm/certificate-authority.rst.inc:501
msgid ""
"Verify that the intermediate certificate verifies against the root "
"certificate."
msgstr "验证中间证书是否能与根证书进行验证。"

#: ../hsm/certificate-authority.rst.inc:508
msgid "Create a certificate chain file:"
msgstr "创建一个证书链文件。"

#: ../hsm/certificate-authority.rst.inc:514
msgid "You now have a certificate authority backed by an HSM."
msgstr "你现在有一个由HSM支持的证书授权。"

#: ../hsm/certificate-authority.rst.inc:517
msgid "Sign a Server Certificate"
msgstr "签署服务器证书"

#: ../hsm/certificate-authority.rst.inc:519
msgid ""
"Now that you have a certificate authority, you’d probably like to know "
"how to use it."
msgstr "现在你有了一个证书授权，你可能想知道如何使用它。"

#: ../hsm/certificate-authority.rst.inc:521
msgid ""
"Create a CSR in the normal method for your application. Proper creation "
"of your certificate, including SAN, for your particular application is "
"outside the scope of this document."
msgstr "以正常的方法为你的应用程序创建CSR。为你的特定应用正确创建你的证书，包括SAN，不在本文件的范围之内。"

#: ../hsm/certificate-authority.rst.inc:567
msgid ""
"Create a config file to use the private key of the intermediate "
"certificate to sign the CSRs of your servers."
msgstr "创建一个配置文件，使用中间证书的私钥来签署你服务器的CSR。"

#: ../hsm/certificate-authority.rst.inc:622
msgid "Then run openssl to sign the server’s CSR."
msgstr "然后运行openssl来签署服务器的CSR。"

#: ../hsm/certificate-authority.rst.inc:671
#: ../pro/windows/openvpn-viscosity.rst:94
msgid "References"
msgstr "参考文献"

#: ../hsm/certificate-authority.rst.inc:673
msgid "I used the following resources to help in compiling this document."
msgstr "我使用了以下资源来帮助编纂本文件。"

#: ../hsm/certificate-authority.rst.inc:675
msgid ""
"`How to initialize your Nitrokey HSM "
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#initialize-the-"
"device>`__"
msgstr ""
"`如何初始化你的Nitrokey HSM <https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM"
"#initialize-the-device>`__。"

#: ../hsm/certificate-authority.rst.inc:676
msgid ""
"`How to create a root and intermediate CA <https://jamielinux.com/docs"
"/openssl-certificate-authority/create-the-root-pair.html>`__"
msgstr ""
"`如何创建根和中级CA <https://jamielinux.com/docs/openssl-certificate-authority"
"/create-the-root-pair.html>`__。"

#: ../hsm/certificate-authority.rst.inc:677
msgid ""
"`How to ensure the serial numbers of your intermediate CA and server "
"certs are up to spec <https://www.phildev.net/ssl/creating_ca.html>`__"
msgstr ""
"`如何确保你的中间CA和服务器证书的序列号符合规范 "
"<https://www.phildev.net/ssl/creating_ca.html>`__。"

#: ../hsm/certificate-authority.rst.inc:678
msgid ""
"`How to generate ECC private keys <https://dev.to/benjaminblack"
"/obtaining-an-elliptic-curve-dsa-certificate-with-lets-encrypt-51bc>`__"
msgstr ""
"`如何生成ECC私钥 <https://dev.to/benjaminblack/obtaining-an-elliptic-curve-dsa-"
"certificate-with-lets-encrypt-51bc>`__"

#: ../hsm/certificate-authority.rst.inc:679
msgid ""
"`How to find the PCKS11 URI from your HSM "
"<https://www.infradead.org/openconnect/pkcs11.html>`__"
msgstr ""
"`如何从你的HSM中找到PCKS11 URI "
"<https://www.infradead.org/openconnect/pkcs11.html>`__。"

#: ../hsm/certificate-authority.rst.inc:680
msgid ""
"`Troubleshooting (forum) <https://support.nitrokey.com/t/pki-ca-nitrokey-"
"hsm-does-not-support-signing/2598/14>`__"
msgstr ""
"`故障排除（论坛） <https://support.nitrokey.com/t/pki-ca-nitrokey-hsm-does-not-"
"support-signing/2598/14>`__。"

#: ../hsm/certificate-authority.rst.inc:683
msgid ""
"This document was originally `written by lyntux "
"<https://gist.github.com/lyntux/f02c6c3414ce48bc8ea8ab6dcdba1623>`__"
msgstr ""
"本文件最初由 lyntux ` 撰写 "
"<https://gist.github.com/lyntux/f02c6c3414ce48bc8ea8ab6dcdba1623>`__。"

#: ../hsm/linux/dnssec.rst:2
msgid "DNSSEC"
msgstr "DNSSEC"

#: ../hsm/linux/dnssec.rst:7
msgid ""
"Protect your domain name resolution using DNSSEC and a Nitrokey HSM as "
"secure key store. It's based on Smartcard-HSM which is why the following "
"resources apply:"
msgstr "使用DNSSEC和Nitrokey HSM作为安全密钥存储，保护你的域名解析。它是基于智能卡-HSM的，这就是为什么以下资源适用。"

#: ../hsm/linux/dnssec.rst:9
msgid ""
"Luis D Espinoza Sanchez & Eberhard W Lisse held a `session on using the "
"SmartCard-HSM for DNSSEC <https://singapore52.icann.org/en/schedule/mon-"
"tech/presentation-dnssec-card-signing-09feb15-en.pdf>`__ at the 2015 "
"ICAAN Meeting in Singapore."
msgstr ""
"Luis D Espinoza Sanchez & Eberhard W "
"Lisse在新加坡举行的2015年ICAAN会议上举行了关于使用SmartCard-"
"HSM进行DNSSEC的`会议<https://singapore52.icann.org/en/schedule/mon-tech"
"/presentation-dnssec-card-signing-09feb15-en.pdf>_。"

#: ../hsm/linux/dnssec.rst:10
msgid ""
"Jan-Piet Mens wrote a nice article about `integrating the SmartCard-HSM "
"with PowerDNS <https://jpmens.net/2015/03/30/powerdns-with-a-smartcard-"
"hsm-for-dnssec/>`__."
msgstr ""
"Jan-Piet Mens写了一篇关于`将SmartCard-"
"HSM与PowerDNS整合的好文章<https://jpmens.net/2015/03/30/powerdns-with-a"
"-smartcard-hsm-for-dnssec/>`__。"

#: ../hsm/linux/dnssec.rst:11
msgid ""
"Integration with `OpenDNSSEC <https://www.opendnssec.org/>`__ has been "
"successfully tested."
msgstr "与`OpenDNSSEC <https://www.opendnssec.org/>`__的集成已经成功测试。"

#: ../pro/gpa.rst:2
msgid "Setup With Gnu Privacy Assistant (GPA)"
msgstr "使用Gnu隐私助理（GPA）进行设置"

#: ../pro/gpa.rst:4
msgid ""
"This document describes how to use Gnu Privacy Assistant (GPA) to set up "
"the Nitrokey for its first usage."
msgstr "本文介绍了如何使用Gnu隐私助手（GPA）来设置Nitrokey的首次使用。"

#: ../pro/gpa.rst:6
msgid ""
"First you need to install Gnu Privacy Assistant (GPA). For Windows you "
"should download and install the `GPG4Win <https://www.gpg4win.org/>`__ "
"package which contains GPA. For Linux you should install the GPA package "
"of your distribution (e.g. on Ubuntu: sudo apt-get install gpa )."
msgstr ""
"首先，你需要安装Gnu隐私助理（GPA）。对于Windows，你应该下载并安装`GPG4Win "
"<https://www.gpg4win.org/>`__软件包，其中包含GPA。对于Linux，你应该安装你的发行版的GPA包（例如，在Ubuntu：sudo"
" apt-get install gpa ）。"

#: ../pro/gpa.rst:8
msgid ""
"Start GPA and select the Card Manager; either by pressing the icon at the"
" top or by choosing Card Manager in the Windows menu."
msgstr "启动GPA并选择卡片管理器；可以按顶部的图标或在Windows菜单中选择卡片管理器。"

#: ../pro/gpa.rst:13
msgid ""
"The window of the Card Manager will appear. Enter your salutation, name "
"and optional other information. While doing so you might be asked to "
"enter the admin PIN."
msgstr "将出现卡片管理器的窗口。输入你的问候语、姓名和可选的其他信息。在这样做的时候，你可能会被要求输入管理密码。"

#: ../pro/gpa.rst:18
msgid "Confirm this window and enter the admin PIN in the next window."
msgstr "确认这个窗口，并在下一个窗口输入管理密码。"

#: ../pro/gpa.rst:23
msgid ""
"In the Card Manager window you might need to scroll down until you see "
"the buttons to change the PINs. The term PIN is used interchangeable with"
" \"password\". Press the first button \"Change PIN\" in order to change "
"the user password. Read and confirm the following information window."
msgstr "在卡片管理器窗口中，你可能需要向下滚动，直到你看到改变PIN的按钮。术语PIN与\"密码\"可以互换使用。按第一个按钮\"改变PIN\"，以改变用户密码。阅读并确认以下信息窗口。"

#: ../pro/gpa.rst:28
msgid ""
"Choose and enter your own PIN with a minimum length of six characters. "
"This PIN is required for the daily usage of the Nitrokey."
msgstr "选择并输入你自己的PIN码，长度至少为六个字符。在日常使用Nitrokey时，需要输入这个密码。"

#: ../pro/gpa.rst:33
msgid ""
"Go back to the Card Manager window in step three. This time you choose "
"the third button Change PIN in order to change the admin PIN. The admin "
"PIN is required to change the information on the Nitrokey and to change "
"the cryptographic keys. Proceed as described in steps four and five."
msgstr ""
"回到第三步的卡片管理器窗口。这一次，你选择第三个按钮 "
"\"改变PIN\"，以改变管理PIN。要改变硝基钥匙上的信息和改变加密钥匙，就需要管理密码。按第四和第五步所述进行。"

#: ../pro/gpa.rst:35
msgid ""
"After changing both the user and the admin PIN, you are back in the Card "
"Manager window. Select \"Generate key\" in the \"Card\" menu."
msgstr "在改变了用户和管理员的PIN后，你又回到了卡片管理器窗口。在\"卡片\"菜单中选择\"生成密钥\"。"

#: ../pro/gpa.rst:40
msgid ""
"Enter your name and e-mail address. You should keep \"backup\" enabled in"
" order to create a backup file of your cryptographic keys. Optionally you"
" might select an expiration date for your cryptographic keys."
msgstr "输入你的姓名和电子邮件地址。你应该保持启用\"备份\"，以便为你的加密钥匙创建一个备份文件。您可以选择为您的密码钥匙选择一个到期日。"

#: ../pro/gpa.rst:45
msgid "Wait until the keys are generated successfully."
msgstr "等待，直到钥匙成功生成。"

#: ../pro/gpa.rst:50
msgid ""
"Enter a strong passphrase for your backup keys. We strongly recommend to "
"store the backup file on a separate storage(e.g. CD-ROM) and on a safe "
"location."
msgstr "为你的备份钥匙输入一个强密码。我们强烈建议将备份文件存储在一个单独的存储器（如CD-ROM）上，并放在一个安全的地方。"

#: ../pro/gpa.rst:55
msgid ""
"Congratulations, your Nitrokey is now ready to use. Please see the "
"`applications <https://www.nitrokey.com/documentation/applications>`__ "
"section for further information of its usage."
msgstr "恭喜你，你的Nitrokey现在已经可以使用了。请参阅`应用<https://www.nitrokey.com/documentation/applications>`__部分，了解更多使用信息。"

#: ../hsm/mac/hard-disk-encryption.rst:2
#: ../hsm/windows/hard-disk-encryption.rst:2
#: ../pro/linux/hard-disk-encryption.rst:2
#: ../pro/mac/hard-disk-encryption.rst:2
#: ../pro/windows/hard-disk-encryption.rst:2
#: ../storage/mac/hard-disk-encryption.rst:2
#: ../storage/windows/hard-disk-encryption.rst:2
msgid "Hard Disk Encryption"
msgstr "硬盘加密"

#: ../pro/hard-disk-encryption.rst.inc:6
#: ../pro/linux/hard-disk-encryption.rst:7
msgid "VeraCrypt (formerly TrueCrypt)"
msgstr "VeraCrypt (以前的TrueCrypt)"

#: ../pro/hard-disk-encryption.rst.inc:8
#: ../pro/linux/hard-disk-encryption.rst:9
msgid ""
"`VeraCrypt <https://www.veracrypt.fr/en/Home.html>`__ is a free and Open "
"Source disk encryption software for Windows, macOS, and GNU+Linux. It is "
"the successor of TrueCrypt and thus recommended, although the following "
"instructions should apply to TrueCrypt as well."
msgstr ""
"`VeraCrypt "
"<https://www.veracrypt.fr/en/Home.html>`__是一款适用于Windows、macOS和GNU+Linux的免费开源磁盘加密软件。它是TrueCrypt的继承者，因此被推荐使用，尽管以下说明也应适用于TrueCrypt。"

#: ../pro/linux/hard-disk-encryption.rst:11
msgid ""
"Follow these steps to use the program with `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`__ or "
"`Nitrokey Pro 2 <https://shop.nitrokey.com/shop/product/nk-pro-2"
"-nitrokey-pro-2-3>`__:"
msgstr ""
"按照这些步骤来使用`Nitrokey Storage 2 <https://shop.nitrokey.com/shop/product"
"/nitrokey-storage-2-56>`__或`Nitrokey Pro 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__。"

#: ../pro/hard-disk-encryption.rst.inc:12
#: ../pro/linux/hard-disk-encryption.rst:15
msgid ""
"Install the latest release of `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__, or download the `PKCS#11 "
"library <https://smartcard-auth.de/download-en.html>`__."
msgstr ""
"安装最新版本的`OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__，或者下载`PKCS#11库 "
"<https://smartcard-auth.de/download-en.html>`__。"

#: ../pro/hard-disk-encryption.rst.inc:15
#: ../pro/linux/hard-disk-encryption.rst:18
msgid ""
"Choose the library in VeraCrypt under Settings>Preferences>Security Token"
" (location depends on system, e.g. ``/usr/lib/opensc``)."
msgstr ""
"在VeraCrypt的Settings>Preferences>Security "
"Token（位置取决于系统，例如：``/usr/lib/opensc``）中选择库。"

#: ../pro/hard-disk-encryption.rst.inc:17
#: ../pro/linux/hard-disk-encryption.rst:20
msgid "Generate a 64 Byte key file via Tools>Keyfile Generator."
msgstr "通过Tools>Keyfile Generator生成一个64字节的密钥文件。"

#: ../pro/hard-disk-encryption.rst.inc:18
#: ../pro/linux/hard-disk-encryption.rst:21
msgid ""
"Now you should be able to import the generated key file via Tools>Manage "
"Security Token Keyfiles. You should choose the first Slot (``[0] User "
"PIN``). The keyfile is then stored on the Nitrokey as ‘Private Data "
"Object 1’ (``PrivDO1``)."
msgstr ""
"现在你应该能够通过Tools>Manage Security Token Keyfiles导入生成的密钥文件。你应该选择第一个插槽（``[0] "
"User PIN``）。然后，该密钥文件将作为 \"私人数据对象1\"（``PrivDO1``）存储在Nitrokey上。"

#: ../pro/hard-disk-encryption.rst.inc:22
#: ../pro/linux/hard-disk-encryption.rst:25
msgid "After this you should wipe the original keyfile on your Computer securely!"
msgstr "在这之后，你应该安全地擦除你电脑上的原始密钥文件!"

#: ../pro/hard-disk-encryption.rst.inc:24
#: ../pro/linux/hard-disk-encryption.rst:27
msgid ""
"Now you can use VeraCrypt with the Nitrokey: Create a container, choose "
"the keyfile on the device as an alternative to a password."
msgstr "现在你可以用Nitrokey使用VeraCrypt：创建一个容器，选择设备上的密钥文件作为密码的替代。"

#: ../pro/hard-disk-encryption.rst.inc:29
#: ../pro/linux/hard-disk-encryption.rst:32
msgid "Security Consideration"
msgstr "安全方面的考虑"

#: ../pro/hard-disk-encryption.rst.inc:31
#: ../pro/linux/hard-disk-encryption.rst:34
msgid ""
"Please note that VeraCrypt doesn’t make use of the full security which "
"Nitrokey (and smart cards in general) offer. Instead it stores a keyfile "
"on the Nitrokey which theoretically could be stolen by a computer virus "
"after the user enters the PIN."
msgstr "请注意，VeraCrypt并没有利用Nitrokey（以及一般的智能卡）提供的全部安全性。相反，它在Nitrokey上存储了一个密钥文件，理论上，在用户输入PIN后，该文件可能被计算机病毒窃取。"

#: ../pro/hard-disk-encryption.rst.inc:36
#: ../pro/linux/hard-disk-encryption.rst:39
msgid ""
"Note: `Aloaha Crypt <https://www.aloaha.com/aloaha-crypt-disk/>`__ is "
"based on TrueCrypt/VeraCrypt but without the described security "
"limitation."
msgstr ""
"注意：`Aloaha Crypt <https://www.aloaha.com/aloaha-crypt-"
"disk/>`__是基于TrueCrypt/VeraCrypt但没有描述的安全限制。"

#: ../pro/linux/hard-disk-encryption.rst:42
msgid "Hard Disk Encryption on GNU+Linux with LUKS/dm-crypt"
msgstr "在GNU+Linux上用LUKS/dm-crypt进行硬盘加密"

#: ../pro/linux/hard-disk-encryption.rst:44
msgid ""
"Here are `excellent instructions <https://blog.kumina.nl/2010/07/two-"
"factor-luks-using-ubuntu/>`__ how to use Nitrokey to encrypt your hard "
"disk under GNU+Linux with LUKS/dm-crypt. `Other instructions "
"<https://wiki.ubuntu.com/SmartCardLUKSDiskEncryption>`__."
msgstr ""
"这里有`出色的说明<https://blog.kumina.nl/2010/07/two-factor-luks-using-"
"ubuntu/>`__如何在GNU+Linux下使用Nitrokey用LUKS/dm-crypt来加密你的硬盘。`其他说明 "
"<https://wiki.ubuntu.com/SmartCardLUKSDiskEncryption>`__。"

#: ../pro/linux/hard-disk-encryption.rst:46
msgid ""
"Purism has created a `simple script "
"<https://docs.puri.sm/PureBoot/LibremKeyLUKS.html>`__ to add the "
"Nitrokey/LibremKey as a way to unlock LUKS partitions (not tested by "
"Nitrokey yet)."
msgstr "Purism创建了一个`简单的脚本<https://docs.puri.sm/PureBoot/LibremKeyLUKS.html>`__来添加Nitrokey/LibremKey作为解锁LUKS分区的方法（还没有经过Nitrokey测试）。"

#: ../pro/linux/hard-disk-encryption.rst:48
msgid ""
"`This project <https://github.com/artosan/nitroluks/>`__ aims to ease the"
" use of LUKS with the Nitrokey Pro or Storage based on the Password Safe "
"(not tested by Nitrokey yet). A description on how to use it on Gentoo "
"can be found `here <https://amedeos.github.io/gentoo/nitrokey/2019/01/21"
"/gentoo-nitrokey-luks.html>`__."
msgstr ""
"`这个项目<https://github.com/artosan/nitroluks/>`__旨在通过Nitrokey "
"Pro或基于Password "
"Safe的Storage（尚未被Nitrokey测试）来简化LUKS的使用。关于如何在Gentoo上使用它的描述可以在`这里<https://amedeos.github.io/gentoo/nitrokey/2019/01/21"
"/gentoo-nitrokey-luks.html>`__找到。"

#: ../pro/linux/hard-disk-encryption.rst:50
msgid ""
"For Arch Linux, see `initramfs-scencrypt <https://github.com/fuhry"
"/initramfs-scencrypt>`__."
msgstr ""
"对于Arch Linux，见`initramfs-scencrypt <https://github.com/fuhry/initramfs-"
"scencrypt>`__。"

#: ../pro/linux/hard-disk-encryption.rst:53
msgid "Storage Encryption on GNU+Linux with EncFS"
msgstr "在GNU+Linux上用EncFS进行存储加密"

#: ../pro/linux/hard-disk-encryption.rst:57
msgid "Prerequisite"
msgstr "先决条件"

#: ../pro/linux/hard-disk-encryption.rst:59
msgid ""
"Please ensure that you `installed the device driver, changed the default "
"PINs and generated or imported keys with GnuPG "
"<https://www.nitrokey.com/start>`__."
msgstr ""
"请确保你`安装了设备驱动程序，改变了默认的PIN码，并使用GnuPG "
"<https://www.nitrokey.com/start>`__生成或导入密钥。"

#: ../pro/linux/hard-disk-encryption.rst:63
msgid ""
"`EncFS <https://github.com/vgough/encfs>`__ is an easy to utlity for "
"encrypted file systems and it is based on `FUSE "
"<https://de.wikipedia.org/wiki/Filesystem_in_Userspace>`__. You may "
"follow these steps to use it with very long passwords and Nitrokey Pro 2:"
msgstr ""
"`EncFS <https://github.com/vgough/encfs>`__是一个易于使用的加密文件系统，它是基于`FUSE "
"<https://de.wikipedia.org/wiki/Filesystem_in_Userspace>`__。你可以按照这些步骤，用很长的密码和Nitrokey"
" Pro 2来使用它。"

#: ../pro/linux/hard-disk-encryption.rst:67
msgid "Initialization"
msgstr "初始化"

#: ../pro/linux/hard-disk-encryption.rst:69
msgid "Create a key file with random data:"
msgstr "创建一个具有随机数据的密钥文件。"

#: ../pro/linux/hard-disk-encryption.rst:76
msgid "Encrypt the key file and use the User-ID of your Nitrokey"
msgstr "加密密钥文件，并使用你的Nitrokey的用户ID。"

#: ../pro/linux/hard-disk-encryption.rst:83
msgid "Remove the key file in clear text:"
msgstr "移除明文的密钥文件。"

#: ../pro/linux/hard-disk-encryption.rst:90
msgid "Create mount point:"
msgstr "创建挂载点。"

#: ../pro/linux/hard-disk-encryption.rst:97
msgid "Create the actual encryption folder"
msgstr "创建实际的加密文件夹"

#: ../pro/linux/hard-disk-encryption.rst:106
msgid "Unmount the new file system:"
msgstr "解除对新文件系统的挂载。"

#: ../pro/linux/hard-disk-encryption.rst:116
msgid "Mount encrypted file system and enter PIN of Nitrokey:"
msgstr "挂载加密的文件系统，并输入Nitrokey的PIN码。"

#: ../pro/linux/hard-disk-encryption.rst:123
msgid "After usage, unmount the file system:"
msgstr "使用完毕后，解除对文件系统的挂载。"

#: ../pro/linux/hard-disk-encryption.rst:131
msgid "Storage Encryption on GNU+Linux with ECryptFS"
msgstr "在GNU+Linux上使用ECryptFS进行存储加密"

#: ../pro/linux/hard-disk-encryption.rst:133
msgid ""
"`eCryptfs <https://www.ecryptfs.org/>`__ is a file based transparent "
"encryption file system for GNU+Linux which can be used with Nitrokey "
"through a PKCS#11 driver."
msgstr ""
"`eCryptfs "
"<https://www.ecryptfs.org/>`__是GNU+Linux的一个基于文件的透明加密文件系统，可以通过一个PKCS#11驱动与Nitrokey一起使用。"

#: ../pro/linux/hard-disk-encryption.rst:135
msgid "See `these <http://tkxuyen.com/blog/?p=293>`__ instructions:"
msgstr "见`这些<http://tkxuyen.com/blog/?p=293>`__说明。"

#: ../pro/linux/hard-disk-encryption.rst:137
msgid "Import the certificate and key to the Nitrokey"
msgstr "将证书和密钥导入到Nitrokey。"

#: ../pro/linux/hard-disk-encryption.rst:145
msgid "Create the file ~/.ecryptfsrc.pkcs11:"
msgstr "创建文件~/.ecryptfsrc.pkcs11。"

#: ../pro/linux/hard-disk-encryption.rst:152
msgid "Enter this content:"
msgstr "输入这个内容。"

#: ../pro/linux/hard-disk-encryption.rst:164
msgid "Copy the serialized id for later usage:"
msgstr "复制序列化的ID，供以后使用。"

#: ../pro/linux/hard-disk-encryption.rst:174
msgid ""
"Alternatively, try `ESOSI <https://sourceforge.net/projects/esosi/>`__ or"
" follow these steps using OpenSC and OpenVPN."
msgstr ""
"或者，尝试`ESOSI "
"<https://sourceforge.net/projects/esosi/>`__或使用OpenSC和OpenVPN遵循这些步骤。"

#: ../pro/linux/hard-disk-encryption.rst:176
msgid ""
"Source of the guide: "
"https://www.nitrokey.com/documentation/applications#a:hard-disk-"
"encryption"
msgstr ""
"指南的来源：https://www.nitrokey.com/documentation/applications#a:hard-disk-"
"encryption"

#: ../hsm/import-keys-certs.rst.inc:2
msgid "Importing Keys And Certificates"
msgstr "导入钥匙和证书"

#: ../hsm/import-keys-certs.rst.inc:6
msgid ""
"Generally the concept to import key-pairs and/or certificates is the "
"following:"
msgstr "一般来说，导入密钥对和/或证书的概念如下。"

#: ../hsm/import-keys-certs.rst.inc:9
msgid "Create a DKEK (Device Key Encryption Key) share"
msgstr "创建一个DKEK（设备密钥加密密钥）共享"

#: ../hsm/import-keys-certs.rst.inc:10
msgid "Initialize device and enable DKEK as \"Device Encryption Scheme\""
msgstr "初始化设备并启用DKEK作为\"设备加密方案\"。"

#: ../hsm/import-keys-certs.rst.inc:11
msgid "Import DKEK share into device"
msgstr "将DKEK共享导入设备中"

#: ../hsm/import-keys-certs.rst.inc:12
msgid "Import PKCS#12 container(s) into DKEK"
msgstr "向DKEK导入PKCS#12容器"

#: ../hsm/import-keys-certs.rst.inc:14
msgid ""
"This documentation covers only one specific use-case and should serve as "
"an example for the overall workflow. For further information please read "
"`this thread`_ and `this blog post`_."
msgstr "本文档只涵盖了一个特定的用例，并应作为整个工作流程的一个例子。更多信息请阅读`这个主题`_和`这个博文`_。"

#: ../hsm/import-keys-certs.rst.inc:20
msgid ""
"This procedure will reset your Nitrokey HSM 2 device and all data on it "
"will be deleted!"
msgstr "这个过程将重置你的Nitrokey HSM 2设备，上面的所有数据都将被删除!"

#: ../hsm/import-keys-certs.rst.inc:26
msgid ""
"make sure all the keys you would like to import are available as PKCS#12 "
"containers (`.p12`) and you know the password, if needed"
msgstr "确保你想导入的所有钥匙都是以PKCS#12容器（`.p12'）的形式存在的，如果需要，你知道密码。"

#: ../hsm/import-keys-certs.rst.inc:29
msgid ""
"be sure that nothing on the used Nitrokey HSM 2 is needed, it will be "
"deleted during this procedure"
msgstr "确保使用过的Nitrokey HSM 2上没有任何东西是需要的，它将在这个过程中被删除。"

#: ../hsm/import-keys-certs.rst.inc:32
msgid ""
"download the latest `Smart Card Shell`_ and unpack it into your work-"
"directory"
msgstr "下载最新的`Smart Card Shell`_，并将其解压到你的工作目录中。"

#: ../hsm/import-keys-certs.rst.inc:35
msgid "Importing Via The SCSH3 GUI"
msgstr "通过SCSH3图形用户界面导入"

#: ../hsm/import-keys-certs.rst.inc:37
msgid ""
"Inside the unpacked directory you will find ``scsh3gui``, which can be "
"started using ``bash scsh3gui`` (for windows double-click on: "
"``scsh3gui.cmd``)."
msgstr ""
"在解压后的目录中，你会发现``scsh3gui``，可以用``bash "
"scsh3gui``启动（对于Windows，双击。``scsh3gui.cmd``）。"

#: ../hsm/import-keys-certs.rst.inc:40
msgid ""
"Once the SCSH3 Tool is open, you should see your Nitrokey HSM 2 inside "
"the tree view. Please follow these steps to import:"
msgstr "一旦SCSH3工具被打开，你应该在树状视图中看到你的Nitrokey HSM 2。请按照以下步骤进行导入。"

#: ../hsm/import-keys-certs.rst.inc:43
msgid "Start key-manager (File -> Keymanager)"
msgstr "启动钥匙管理器 (File -> Keymanager)"

#: ../hsm/import-keys-certs.rst.inc:45
msgid "Right-click \"Smartcard-HSM\" -> create DKEK share"
msgstr "右键单击\"智能卡-HSM\"-> 创建DKEK共享"

#: ../hsm/import-keys-certs.rst.inc:47
msgid "Choose file location"
msgstr "选择文件位置"

#: ../hsm/import-keys-certs.rst.inc:49
msgid "Choose DKEK share password"
msgstr "选择DKEK共享密码"

#: ../hsm/import-keys-certs.rst.inc:51
msgid "Right-click \"Smartcard-HSM\" -> Initialize device"
msgstr "右键点击\"智能卡-HSM\"->初始化设备"

#: ../hsm/import-keys-certs.rst.inc:53
msgid "Enter SO-PIN"
msgstr "输入SO-PIN"

#: ../hsm/import-keys-certs.rst.inc:55
msgid "(optional) Enter label and enter URL/Host"
msgstr "(可选)输入标签并输入URL/主机"

#: ../hsm/import-keys-certs.rst.inc:57
msgid "Select authentication method: \"User PIN\""
msgstr "选择认证方法：\"用户密码\"。"

#: ../hsm/import-keys-certs.rst.inc:59
msgid ""
"Allow RESET RETRY COUNTER: \"Resetting and unblocking PIN with SO-PIN not"
" allowed\""
msgstr "允许RESET RETRY COUNTER：\"不允许用SO-PIN重置和解除封锁PIN\"。"

#: ../hsm/import-keys-certs.rst.inc:61
msgid "Enter and confirm User PIN"
msgstr "输入并确认用户密码"

#: ../hsm/import-keys-certs.rst.inc:63
msgid "\"Select Device Key Encryption scheme\" -> \"DKEK shares\""
msgstr "\"选择设备密钥加密方案\"->\"DKEK份额\"。"

#: ../hsm/import-keys-certs.rst.inc:65
msgid "Enter number of DKEK shares: 1"
msgstr "输入DKEK股票的数量。1"

#: ../hsm/import-keys-certs.rst.inc:67
msgid "Right-click DKEK set-up in progress -> \"Import DKEK share\""
msgstr "右键单击正在进行的DKEK设置->\"导入DKEK共享\"。"

#: ../hsm/import-keys-certs.rst.inc:69
msgid "Choose DKEK share file location"
msgstr "选择DKEK共享文件的位置"

#: ../hsm/import-keys-certs.rst.inc:71
msgid "Password for DKEK share"
msgstr "DKEK共享的密码"

#: ../hsm/import-keys-certs.rst.inc:73
msgid "Right-click \"SmartCard-HSM\" -> \"Import from PKCS#12\""
msgstr "右键点击\"SmartCard-HSM\" -> \"从PKCS#12导入\"。"

#: ../hsm/import-keys-certs.rst.inc:75
msgid "Enter number of shares -> 1"
msgstr "输入股票数量 -> 1"

#: ../hsm/import-keys-certs.rst.inc:77
msgid "Enter file location of DKEK share"
msgstr "输入DKEK共享的文件位置"

#: ../hsm/import-keys-certs.rst.inc:79
msgid "Enter Password for DKEK share"
msgstr "输入DKEK共享的密码"

#: ../hsm/import-keys-certs.rst.inc:81
msgid "Select PKCS#12 container for import (Enter password, if set)"
msgstr "选择用于导入的PKCS#12容器（输入密码，如果设置了密码）。"

#: ../hsm/import-keys-certs.rst.inc:83
msgid "Select Key"
msgstr "选择键"

#: ../hsm/import-keys-certs.rst.inc:85
msgid "Select Name to be used (This is the Label used for the key on the device)"
msgstr "选择要使用的名称（这是在设备上用于钥匙的标签）。"

#: ../hsm/import-keys-certs.rst.inc:87
msgid "Import more keys, if needed"
msgstr "如果需要，导入更多的钥匙"

#: ../hsm/import-keys-certs.rst.inc:89
msgid ""
"Once this is done, you can check that the keys have been successfully "
"imported using:"
msgstr "一旦完成，你就可以通过以下方式检查钥匙是否已经成功导入。"

#: ../hsm/import-keys-certs.rst.inc:96
msgid ""
"In the resulting output you will find the imported keys labeled by the "
"name you chose previously."
msgstr "在结果输出中，你会发现导入的钥匙被你之前选择的名称所标记。"

#: ../hsm/linux/index.rst:2
msgid "Nitrokey HSM with GNU/Linux"
msgstr "使用GNU/Linux的Nitrokey HSM"

#: ../hsm/linux/index.rst:13
msgid ""
"Install `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__. You need at "
"least version 0.19. You can find recent builds for debian-based systems "
"like Ubuntu `here <https://github.com/Nitrokey/opensc-build>`__ if your "
"system does not have the newest version of OpenSC. Alternatively, install"
" `this <https://www.cardcontact.de/download/sc-hsm-starterkit.zip>`__ "
"driver (`source <https://github.com/CardContact/sc-hsm-embedded>`__)."
msgstr ""
"安装`OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__。你至少需要0.19版本。你可以在`这里找到基于debian的系统的最新构建，如Ubuntu"
" <https://github.com/Nitrokey/opensc-"
"build>`__，如果你的系统没有OpenSC的最新版本。或者，安装`这个<https://www.cardcontact.de/download"
"/sc-hsm-starterkit.zip>`__驱动程序（`source <https://github.com/CardContact"
"/sc-hsm-embedded>`__）。"

#: ../hsm/linux/index.rst:20 ../hsm/mac/index.rst:17
#: ../hsm/windows/index.rst:17
msgid ""
"Define SO-PIN and PIN of your own choices. See `these instructions "
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#initialize-the-"
"device>`__. Afterwards you can begin to `generate new keys "
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#generate-key-"
"pair>`__."
msgstr ""
"定义你自己选择的SO-"
"PIN和PIN。见`这些说明<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM"
"#initialize-the-"
"device>`__。之后你可以开始`生成新的钥匙<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM"
"#generate-key-pair>`__。"

#: ../hsm/linux/index.rst:25 ../hsm/mac/index.rst:22
#: ../hsm/windows/index.rst:22 ../pro/linux/index.rst:33
#: ../pro/mac/index.rst:26 ../pro/windows/index.rst:29
#: ../start/linux/index.rst:41 ../start/mac/index.rst:42
#: ../start/windows/index.rst:41 ../storage/linux/index.rst:29
#: ../storage/mac/index.rst:27 ../storage/windows/index.rst:31
msgid "Your Nitrokey is now ready to use."
msgstr "你的Nitrokey现在可以使用了。"

#: ../hsm/linux/index.rst:27 ../hsm/mac/index.rst:24
#: ../hsm/windows/index.rst:24
msgid ""
"There is `nitrotool <https://github.com/johndoe31415/nitrotool>`__ as a "
"more comfortable frontend to OpenSC. (hsmwiz)"
msgstr ""
"有`nitrotool "
"<https://github.com/johndoe31415/nitrotool>`__作为OpenSC的一个更舒适的前端。(hsmwiz)"

#: ../hsm/linux/index.rst:28 ../hsm/mac/index.rst:25
#: ../hsm/windows/index.rst:25
msgid ""
"Embedded Systems: For systems with minimal memory footprint a read/only "
"PKCS#11 module is provided by the `sc-hsm-embedded "
"<https://github.com/CardContact/sc-hsm-embedded>`__ project."
msgstr ""
"嵌入式系统。对于内存占用最小的系统，`sc-hsm-embedded <https://github.com/CardContact/sc-"
"hsm-embedded>`__项目提供了一个读/只读PKCS#11模块。"

#: ../hsm/linux/index.rst:29 ../hsm/mac/index.rst:26
#: ../hsm/windows/index.rst:26
msgid ""
"`This PKCS#11 module <https://github.com/CardContact/sc-hsm-"
"embedded/wiki/PKCS11>`__ is useful for deployments where key generation "
"at the user's workplace is not required. The PKCS#11 module also supports"
" major electronic signature cards available in the German market."
msgstr ""
"`这个PKCS#11模块<https://github.com/CardContact/sc-hsm-"
"embedded/wiki/PKCS11>`__适用于不需要在用户工作场所生成密钥的部署。PKCS#11模块还支持德国市场上的主要电子签名卡。"

#: ../hsm/linux/index.rst:30 ../hsm/mac/index.rst:27
#: ../hsm/windows/index.rst:27
msgid ""
"OpenSCDP: The SmartCard-HSM is fully integrated with `OpenSCDP "
"<https://www.openscdp.org/>`__, the open smart card development platform."
" See the `public support scripts <https://www.openscdp.org/scripts/sc-"
"hsm/jsdoc/index.html>`__ for details."
msgstr ""
"OpenSCDP。SmartCard-HSM与`OpenSCDP "
"<https://www.openscdp.org/>`__完全集成，这是一个开放的智能卡开发平台。请参阅`公共支持脚本<https://www.openscdp.org/scripts"
"/sc-hsm/jsdoc/index.html>`__了解详情。"

#: ../hsm/linux/ipsec.rst:2 ../pro/linux/ipsec.rst:2 ../start/linux/ipsec.rst:2
#: ../storage/linux/ipsec.rst:2
msgid "IPsec"
msgstr "IPsec"

#: ../hsm/ipsec.rst.inc:3
msgid ""
"`Strong Swan <https://www.strongswan.org/>`__ works using the `PKCS#11 "
"driver <https://www.nitrokey.com/documentation/applications#pkcs11>`__. "
"Basically follow these steps:"
msgstr ""
"`Strong Swan "
"<https://www.strongswan.org/>`__使用`PKCS#11驱动<https://www.nitrokey.com/documentation/applications#pkcs11>`__工作。基本上遵循这些步骤。"

#: ../hsm/ipsec.rst.inc:5
msgid ""
"Generate a key on Nitrokey via pkcs11-tool. In this example it's a 4096 "
"bit RSA key."
msgstr "通过pkcs11工具在Nitrokey上生成一个密钥。在这个例子中，它是一个4096位的RSA密钥。"

#: ../hsm/ipsec.rst.inc:11
msgid "Generate a certificate signing request via openssl + pkcs11 module"
msgstr "通过openssl + pkcs11模块生成一个证书签名请求"

#: ../hsm/ipsec.rst.inc:19
msgid "Sign the certificate with your certificate authority"
msgstr "用你的证书颁发机构签署证书"

#: ../hsm/ipsec.rst.inc:21
msgid "Convert the certificate to DER"
msgstr "将证书转换为DER"

#: ../hsm/ipsec.rst.inc:27
msgid "Import  the certificate into the Nitrokey via pkcs11-tool"
msgstr "通过pkcs11工具将证书导入到Nitrokey。"

#: ../hsm/ipsec.rst.inc:33
msgid ""
"Configure Strongswan to load opensc-pkcs11 module then to load the "
"certificate on Nitrokey. Edit /etc/strongswan.d/charon/pkcs11.conf and "
"add the following module:"
msgstr ""
"配置Strongswan以加载opensc-"
"pkcs11模块，然后在Nitrokey上加载证书。编辑/etc/strongswan.d/charon/pkcs11.conf并添加以下模块。"

#: ../hsm/ipsec.rst.inc:44
msgid ""
"Initiate the VPN connection via IPSec/Strongswan, then prompt for "
"Nitrokey PIN"
msgstr "通过IPSec/Strongswan启动VPN连接，然后提示输入Nitrokey PIN。"

#: ../hsm/ipsec.rst.inc:46
msgid "VPN is now connected"
msgstr "VPN现在已连接"

#: ../hsm/linux/n-of-m-schemes.rst:2
msgid "N-of-m Schemes"
msgstr "N-of-m计划"

#: ../hsm/n-of-m-schemes.rst:1
msgid ""
"The Nitrokey HSM 2 supports two different n-of-m schemes - one for secure"
" sharing of key material/passwords and one for public key authentication "
"to control the access to the device. Please see `this blog post "
"<https://www.smartcard-"
"hsm.com/2015/10/10/Shared_Control_over_Key_Usage.html>`__ for more "
"detailed information."
msgstr ""
"Nitrokey HSM 2支持两种不同的n-of-m方案--"
"一种用于安全共享密钥材料/密码，另一种用于公共密钥认证，以控制对设备的访问。请参阅`这篇博文<https://www.smartcard-"
"hsm.com/2015/10/10/Shared_Control_over_Key_Usage.html>`__了解更详细的信息。"

#: ../hsm/n-of-m-schemes.rst:4
msgid "N-of-m for DKEK Shares"
msgstr "DKEK股票的N-of-m"

#: ../hsm/n-of-m-schemes.rst:6
msgid ""
"This feature can be used with OpenSC as described `here "
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#using-key-backup-and-"
"restore>`__. The general approach is seen in the videos below (external "
"links)."
msgstr ""
"这个功能可以与OpenSC一起使用，正如这里所描述的 ` "
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#using-key-backup-and-"
"restore>`__。一般的方法可以在下面的视频中看到（外部链接）。"

#: ../hsm/n-of-m-schemes.rst:8
msgid "Nitrokey HSM's Secure Key Backup and Restore:"
msgstr "Nitrokey HSM'的安全密钥备份和恢复。"

#: ../hsm/n-of-m-schemes.rst:17
msgid ""
"<script id=\"asciicast-152957\" src=\"https://asciinema.org/a/152957.js\""
" async></script>"
msgstr ""
"<script id=\"asciicast-152957\" src=\"https://asciinema.org/a/152957.js\""
" async> </script>"

#: ../hsm/n-of-m-schemes.rst:20
msgid ""
"<iframe width=\"560\" height=\"315\" "
"src=\"https://asciinema.org/a/152957\" frameborder=\"0\" "
"allowfullscreen></iframe>"
msgstr ""
"<iframe width=\"560\" height=\"315\" "
"src=\"https://asciinema.org/a/152957\" frameborder=\"0\" allowfullscreen>"
" </iframe>"

#: ../hsm/n-of-m-schemes.rst:22
msgid "Nitrokey HSM's M-of-N Threshold Scheme:"
msgstr "Nitrokey HSM'的M-of-N阈值方案。"

#: ../hsm/n-of-m-schemes.rst:30
msgid ""
"<iframe width=\"560\" height=\"315\" "
"src=\"https://asciinema.org/a/153021\" frameborder=\"0\" "
"allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>"
msgstr ""
"<iframe width=\"560\" height=\"315\" "
"src=\"https://asciinema.org/a/153021\" frameborder=\"0\" "
"allow=\"autoplay; encrypted-media\" allowfullscreen> </iframe>"

#: ../hsm/n-of-m-schemes.rst:33
msgid "N-of-m for public key authentication"
msgstr "公钥认证的N-of-m"

#: ../hsm/n-of-m-schemes.rst:35
msgid ""
"So far n-of-m authentication is only supported in OpenSCDP. `The blog "
"post <https://www.smartcard-"
"hsm.com/2015/10/10/Shared_Control_over_Key_Usage.html>`__ gives an "
"overview and a how-to `here "
"<https://devnet.cardcontact.de/documents/7>`__ (CDN access required) is "
"shown the process step by step in the Smart Card Shell."
msgstr ""
"到目前为止，只有 OpenSCDP 支持 n-of-m 身份验证。`博文<https://www.smartcard-"
"hsm.com/2015/10/10/Shared_Control_over_Key_Usage.html>`___提供了概述和操作方法`这里<https://devnet.cardcontact.de/documents/7>`___（需要"
" CDN 访问）显示了在智能卡外壳中一步步进行的过程。"

#: ../hsm/n-of-m-schemes.rst:37
msgid ""
"N-of-m authentication is also supported in the `PKI-as-a-Service Portal "
"<https://www.smartcard-hsm.com/2018/02/13/pki-as-a-service.html>`__ for "
"locally and remote connected HSMs. The PKI-as-a-Service Portal is based "
"on OpenSCDP."
msgstr ""
"`PKI-as-a-Service Portal <https://www.smartcard-hsm.com/2018/02/13/pki-"
"as-a-service.html>`__也支持N-of-m认证，用于本地和远程连接的HSM。PKI-"
"as-a-Service门户网站是基于OpenSCDP的。"

#: ../hsm/pkcs11-url.rst.inc:2
msgid "PKCS#11 URL Generation"
msgstr "PKCS#11 URL的生成"

#: ../hsm/pkcs11-url.rst.inc:7
msgid ""
"Various applications use openssl to handle e.g., TLS certificates. This "
"concept mostly allows simply replacing a file-path (for the secret) with "
"a so-called **PKCS#11 URL** to use a secret from a e.g., Nitrokey."
msgstr ""
"各种应用程序使用openssl来处理例如TLS证书。这个概念主要允许简单地用所谓的**PKCS#11 "
"URL**替换文件路径（用于秘密），以使用来自例如Nitrokey的秘密。"

#: ../hsm/pkcs11-url.rst.inc:14
msgid "ensure ``openssl`` is installed"
msgstr "确保``openssl``被安装。"

#: ../hsm/pkcs11-url.rst.inc:16
msgid ""
"ensure ``openssl`` can use the PKCS#11 engine by installing ``libengine-"
"pkcs11-openssl``"
msgstr "确保``openssl``通过安装``libengine-pkcs11-openssl``可以使用 PKCS#11 引擎。"

#: ../hsm/pkcs11-url.rst.inc:25
msgid "install ``opensc`` and ``gnutls-bin`` for necessary tools"
msgstr "安装``opensc`和``gnutls-bin``以获得必要的工具"

#: ../hsm/pkcs11-url.rst.inc:27
msgid ""
"verify that your needed keys and/or certificates are available on your "
"Nitrokey using ``pkcs15-tool -D``"
msgstr "使用``pkcs15-tool -D``验证您需要的密钥和/或证书在您的Nitrokey上可用。"

#: ../hsm/pkcs11-url.rst.inc:29
msgid ""
"if you want to use ECC keys/mechanisms through ``libengine-"
"pkcs11-openssl``, you'll have to ensure its version is at least 0.4.10"
msgstr "如果你想通过``libengine-pkcs11-openssl``使用ECC密钥/机制，你必须确保其版本至少为0.4.10"

#: ../hsm/pkcs11-url.rst.inc:33
msgid "List and Generate PKCS#11 URLs"
msgstr "列表和生成PKCS#11 URLs"

#: ../hsm/pkcs11-url.rst.inc:35
msgid "Use the following command to get a list of available tokens (Nitrokeys):"
msgstr "使用下面的命令来获得可用令牌的列表（Nitrokeys）。"

#: ../hsm/pkcs11-url.rst.inc:42
msgid ""
"Choose the token (Nitrokey) URL you want to generate URL tokens for and "
"use it like this:"
msgstr "选择你想生成URL令牌（Nitrokey）的URL，并像这样使用它。"

#: ../hsm/pkcs11-url.rst.inc:51
msgid ""
"If you inspect the tail of the URL you'll recognize: ``label``, ``id`` "
"and more, these can be partly removed as long as the necessary objects "
"can be uniquely identified using the resulting URL, see :doc:`TLS Apache2"
" Configuration<apache2-tls>` for an example using ``id`` only."
msgstr ""
"如果你检查URL的尾部，你会发现。``label``, "
"``id``等等，这些可以部分删除，只要必要的对象可以通过生成的URL唯一地识别，见:doc:`TLS Apache2 "
"Configuration<apache2-tls>` 对于一个只使用``id`` 的例子。"

#: ../hsm/smime.rst.inc:2 ../pro/smime.rst.inc:2
msgid "S/MIME Email Encryption"
msgstr "S/MIME电子邮件加密"

#: ../hsm/smime.rst.inc:7 ../nextbox/technical/replace-drive.rst:12
#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:15
#: ../pro/linux/openvpn-easyrsa.rst:22 ../pro/openpgp-outlook.rst.inc:12
#: ../pro/smime-outlook.rst.inc:7 ../pro/smime-thunderbird.rst.inc:7
#: ../pro/smime.rst.inc:7 ../pro/windows/openpgp-csp.rst:9
#: ../pro/windows/openvpn-easyrsa.rst:22
#: ../pro/windows/openvpn-viscosity.rst:15
#: ../storage/linux/openvpn-easyrsa.rst:22
msgid "Prerequisites"
msgstr "先决条件"

#: ../hsm/smime.rst.inc:9 ../pro/smime.rst.inc:9 ../shared/openpgp.rst.inc:1
msgid "There are two widely used standards for email encryption."
msgstr "目前有两种广泛使用的电子邮件加密标准。"

#: ../hsm/smime.rst.inc:11 ../pro/smime.rst.inc:11 ../shared/openpgp.rst.inc:3
msgid "OpenPGP/GnuPG is popular among individuals,"
msgstr "OpenPGP/GnuPG在个人中很受欢迎。"

#: ../hsm/smime.rst.inc:13 ../pro/smime.rst.inc:13 ../shared/openpgp.rst.inc:5
msgid "S/MIME/X.509 is mostly used by enterprises."
msgstr "S/MIME/X.509大多被企业使用。"

#: ../hsm/smime.rst.inc:15
msgid ""
"The Nitrokey HSM 2 currently supports the S/MIME/X.509 standard. This "
"page describes the usage of S/MIME email encryption."
msgstr "Nitrokey HSM 2目前支持S/MIME/X.509标准。本页介绍了S/MIME电子邮件加密的用法。"

#: ../hsm/smime.rst.inc:17 ../pro/smime.rst.inc:17
msgid ""
"You need to purchase a S/MIME certificate (e.g. at `CERTUM "
"<https://www.certum.eu/en/cert_offer_cert_id/>`__) or may already got one"
" by your company. Furthermore, you need to install `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__ on your System. While "
"GNU/Linux users usually can install OpenSC over the package manager (e.g."
" ``sudo apt install opensc`` on Ubuntu), macOS and Windows users can "
"download the installation files from the `OpenSC "
"<https://github.com/OpenSC/OpenSC/releases>`__ page."
msgstr ""
"你需要购买一个S/MIME证书（例如在`CERTUM<https://www.certum.eu/en/cert_offer_cert_id/>`__）或可能已经由你的公司得到了一个。此外，你需要在你的系统上安装`OpenSC<https://github.com/OpenSC/OpenSC/wiki>`__。GNU/Linux用户通常可以通过软件包管理器安装OpenSC（例如Ubuntu上的``sudo"
" apt install "
"opensc``），macOS和Windows用户可以从`OpenSC<https://github.com/OpenSC/OpenSC/releases>`__页面下载安装文件。"

#: ../hsm/smime.rst.inc:20 ../pro/smime.rst.inc:20
msgid "Import Existing Key and Certificate"
msgstr "导入现有的密钥和证书"

#: ../hsm/smime.rst.inc:2 ../hsm/smime.rst.inc:22 ../pro/smime.rst.inc:2
#: ../pro/smime.rst.inc:22
msgid ""
"The following instructions are based on the `wiki of OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki/OpenPGP-card>`__. We will assume, "
"that you already got a key-certificate pair as a .p12 file. Please have a"
" look at the wiki page, if you got a separate key and certificate file."
msgstr ""
"下面的说明是基于OpenSC的`wiki <https://github.com/OpenSC/OpenSC/wiki/OpenPGP-"
"card>`__。我们将假设你已经得到了一个作为.p12文件的密钥-证书对。如果你有一个单独的密钥和证书文件，请看一下wiki页面。"

#: ../hsm/smime.rst.inc:4 ../hsm/smime.rst.inc:24
#: ../pro/openpgp-keygen-on-device.rst.inc:23 ../pro/smime.rst.inc:4
#: ../pro/smime.rst.inc:24
msgid ""
"To open the Windows command line please push the Windows-key and R-key. "
"Now type ‘cmd.exe’ in the text field and hit enter. To open a Terminal on"
" macOS or GNU/Linux please use the application search (e.g. spotlight on "
"macOS)."
msgstr ""
"要打开Windows命令行，请按下Windows键和R键。现在在文本字段中输入 \"cmd.exe "
"\"并点击回车。要在macOS或GNU/Linux上打开终端，请使用应用程序搜索（例如macOS的spotlight）。"

#: ../hsm/smime.rst.inc:6 ../hsm/smime.rst.inc:26 ../pro/smime.rst.inc:6
#: ../pro/smime.rst.inc:26
msgid ""
"To make these commands as simple as possible, the .p12 file needs to be "
"in your home folder. On Windows this is usually "
"``C:\\Users\\yourusername`` and on macOS and GNU/Linux system it will be "
"``/home/yourusername``. If you do not store the .p12 file there, you have"
" to adapt the path in the commands below. Please plug in the Nitrokey "
"before submitting the commands."
msgstr "为了使这些命令尽可能简单，.p12文件需要放在你的主文件夹中。在Windows系统中，这通常是``C:\\Users\\yourusername``，在macOS和GNU/Linux系统中，它将是``/home/yourusername``。如果你没有把.p12文件存放在那里，你必须调整下面的命令中的路径。在提交命令之前，请插入Nitrokey。"

#: ../hsm/smime.rst.inc:8 ../hsm/smime.rst.inc:28 ../pro/smime.rst.inc:8
#: ../pro/smime.rst.inc:28
msgid ""
"Assuming that your key-certificate file reads ‘myprivate.p12’ the "
"commands for Windows looks like this:"
msgstr "假设你的密钥证书文件是 \"myprivate.p12\"，Windows的命令看起来像这样。"

#: ../hsm/smime.rst.inc:15 ../hsm/smime.rst.inc:35 ../pro/smime.rst.inc:15
#: ../pro/smime.rst.inc:35
msgid "and on macOS and GNU/Linux it will be"
msgstr "而在macOS和GNU/Linux上，它将是"

#: ../hsm/smime.rst.inc:22 ../hsm/smime.rst.inc:42 ../pro/smime.rst.inc:22
#: ../pro/smime.rst.inc:42
msgid ""
"The two commands copy the key-certificate pair to the slot 2 (needed for "
"decrypting emails) and slot 3 (needed for signing). The output looks on "
"both systems something like this:"
msgstr "这两条命令将密钥-证书对复制到槽2（解密邮件需要）和槽3（签名需要）。在两个系统上的输出看起来都是这样的。"

#: ../hsm/smime.rst.inc:29 ../hsm/smime.rst.inc:49 ../pro/smime.rst.inc:29
#: ../pro/smime.rst.inc:49
msgid ""
"Please note that there will be error messages that can be safely ignored "
"(see output example above). You now have the key-certificate pair loaded "
"on the Nitrokey."
msgstr "请注意，会有一些可以安全忽略的错误信息（见上面的输出例子）。现在你已经在Nitrokey上加载了钥匙-证书对。"

#: ../hsm/smime.rst.inc:34 ../hsm/smime.rst.inc:54 ../pro/smime.rst.inc:34
#: ../pro/smime.rst.inc:54 ../shared/openpgp.rst.inc:44
msgid "You can find further information about the usage on these pages:"
msgstr "你可以在这些网页上找到有关使用的进一步信息。"

#: ../hsm/smime.rst.inc:36 ../hsm/smime.rst.inc:56 ../pro/smime.rst.inc:36
#: ../pro/smime.rst.inc:56
msgid "for using `S/MIME encryption on Thunderbird <smime-thunderbird.html>`_"
msgstr "用于在Thunderbird上使用`S/MIME加密<smime-thunderbird.html>`_。"

#: ../hsm/smime.rst.inc:39 ../hsm/smime.rst.inc:59 ../pro/smime.rst.inc:39
#: ../pro/smime.rst.inc:59
msgid "for using `S/MIME encryption on Outlook <smime-outlook.html>`_"
msgstr "用于在Outlook上使用`S/MIME加密<smime-outlook.html>`_。"

#: ../hsm/smime.rst.inc:42 ../hsm/smime.rst.inc:62 ../pro/smime.rst.inc:42
#: ../pro/smime.rst.inc:62
msgid ""
"for using `Evolution <https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`__, an email client for the Gnome Desktop on Linux "
"systems"
msgstr ""
"为使用`Evolution <https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`__，Linux系统上Gnome桌面的电子邮件客户端。"

#: ../pro/smime-outlook.rst.inc:2
msgid "S/MIME Email Encryption with Outlook"
msgstr "使用Outlook的S/MIME电子邮件加密"

#: ../pro/smime-outlook.rst.inc:9
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your "
"Nitrokey yet, please look at `this page <smime.html>`_ first."
msgstr "如果你的Nitrokey上还没有安装S/MIME密钥-证书对，请先看`这个页面<smime.html>`_。"

#: ../pro/smime-outlook.rst.inc:11
msgid ""
"You need to have OpenSC installed on your System. Please have a look at "
"the `wiki page of the OpenSC project "
"<https://github.com/OpenSC/OpenSC/wiki>`__."
msgstr "你需要在你的系统上安装OpenSC。请看看OpenSC项目的`wiki页面<https://github.com/OpenSC/OpenSC/wiki>`__。"

#: ../hsm/windows/smime.rst:5 ../nitrokey3/windows/smime.rst:5
#: ../pro/smime-outlook.rst.inc:15 ../pro/smime-thunderbird.rst.inc:15
#: ../pro/windows/smime.rst:5 ../storage/windows/smime.rst:5
msgid ""
"Windows users with 64-bit system (standard) need to install both, the "
"32-bit and the 64-bit version of OpenSC!"
msgstr "使用64位系统（标准）的Windows用户需要同时安装32位和64位版本的OpenSC!"

#: ../pro/smime-outlook.rst.inc:19
msgid "Settings in Outlook"
msgstr "Outlook中的设置"

#: ../pro/smime-outlook.rst.inc:21
msgid ""
"Before you can use the Nitrokey in Outlook you have to activate S/MIME "
"encryption. You can achieve this by clicking on to ‘Start’ -> ‘Options’ "
"and clicking on ‘Trust Center’ in the options window. In section ‘Email "
"Security’ you can choose your S/MIME identity. Your certificate should "
"already be recognized by Outlook."
msgstr "在Outlook中使用Nitrokey之前，你必须先激活S/MIME加密功能。你可以通过点击'开始'->'选项'并在选项窗口中点击'信任中心'来实现这一目标。在'电子邮件安全'部分，你可以选择你的S/MIME身份。你的证书应该已经被Outlook所识别。"

#: ../pro/smime-outlook.rst.inc:36
msgid ""
"When composing a mail you can now choose to encrypt and sign the message "
"in the ‘Options’ ribbon of the compose window."
msgstr "在撰写邮件时，你现在可以在撰写窗口的 \"选项 \"功能区选择对邮件进行加密和签名。"

#: ../pro/smime-outlook.rst.inc:43
msgid ""
"Outlook will only encrypt message to mail addresses which are saved in "
"your address book. So make sure, that the persons you want to write an "
"encrypted mail to have an entry in Outlook’s contacts. You can ask the "
"person to write you a signed mail, so that you can import the certificate"
" information."
msgstr "Outlook只对保存在通讯录中的邮件地址进行加密。因此，请确保你想写加密邮件的人在Outlook的联系人中拥有一个条目。你可以要求对方给你写一封签名邮件，这样你就可以导入证书信息。"

#: ../pro/smime-outlook.rst.inc:45
msgid ""
"Depending on your certificate or the certificate of your partners you may"
" have to import a so-called root certificate. This is the certificate of "
"the party which issued the certificate you or your partner uses. You "
"should usually got informed if this is necessary."
msgstr "根据你的证书或你的合作伙伴的证书，你可能必须导入一个所谓的根证书。这是签发你或你的伙伴使用的证书的一方的证书。如果有必要，你通常应该得到通知。"

#: ../pro/smime-thunderbird.rst.inc:2
msgid "S/MIME Email Encryption with Thunderbird"
msgstr "使用雷鸟的S/MIME电子邮件加密"

#: ../pro/smime-thunderbird.rst.inc:9
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your "
"Nitrokey yet or if you did not installed OpenSC, please look at `this "
"page <smime.html>`_ first."
msgstr "如果你的Nitrokey上还没有安装S/MIME密钥-证书对，或者你没有安装OpenSC，请先看`这个页面<smime.html>`_。"

#: ../pro/smime-thunderbird.rst.inc:11
msgid ""
"You need to have `OpenSC installed "
"<https://github.com/OpenSC/OpenSC/wiki>`__ on your System. While "
"GNU/Linux users usually can install OpenSC over the package manager (e.g."
" ``sudo apt update && sudo apt install opensc`` on Ubuntu), macOS and "
"Windows users can download the installation files from OpenSC directly."
msgstr ""
"你需要在你的系统上安装`OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__。虽然GNU/Linux用户通常可以通过软件包管理器来安装OpenSC（例如：``sudo"
" apt update && sudo apt install "
"opensc``在Ubuntu上），但MacOS和Windows用户可以直接从OpenSC下载安装文件。"

#: ../pro/smime-thunderbird.rst.inc:19
msgid "Settings in Thunderbird"
msgstr "雷鸟中的设置"

#: ../pro/smime-thunderbird.rst.inc:21
msgid ""
"Before you can use the Nitrokey in Thunderbird you have to activate "
"S/MIME encryption in the account settings. You can achieve this by "
"clicking on the menu and go to ‘Preferences’ -> ‘Account Settings’ and "
"clicking on ‘Security’ in the account settings window."
msgstr ""
"在雷鸟中使用Nitrokey之前，您必须在账户设置中激活S/MIME加密。你可以通过点击菜单，进入 \"偏好\"-> "
"\"账户设置\"，并在账户设置窗口中点击 \"安全 \"来实现。"

#: ../pro/smime-thunderbird.rst.inc:28
msgid ""
"Click on “Security Devices” to import the right PCKS11 module. Click on "
"“Load” on the right-hand side. Now give the Module a name (like “OpenSC "
"Module”) and click on “Browse” to choose the location of the Module (see "
"below)."
msgstr ""
"点击 \"安全设备\"，导入正确的PCKS11模块。点击右侧的 \"加载\"。现在给模块起个名字（比如 \"OpenSC模块\"），并点击 "
"\"浏览 \"选择模块的位置（见下文）。"

#: ../pro/smime-thunderbird.rst.inc:35
msgid ""
"On Windows the right file lays under “C:\\Windows\\System32\\opensc-"
"pkcs11.dll”. On macOS and GNU/Linux the file should be in “/lib/pkcs11"
"/opensc-pkcs11.so” or “/usr/lib/pkcs11/opensc-pkcs11.so” or alike. Press "
"“OK” twice and you are back in security section of the account settings. "
"Now you can actually choose a certificate on the upper part of the "
"window. You should get asked for a PIN to unlock your Nitrokey. Please "
"type in your User PIN."
msgstr ""
"在 Windows 上，正确的文件位于 \"C:\\Windows\\System32\\opensc-pkcs11.dll "
"\"下。在MacOS和GNU/Linux上，该文件应该在\"/lib/pkcs11/opensc-pkcs11.so "
"\"或\"/usr/lib/pkcs11/opensc-pkcs11.so \"或类似的地方。按两次 "
"\"确定\"，你就回到了账户设置的安全部分。现在你可以在窗口的上部选择一个证书。你应该被要求输入密码以解锁你的Nitrokey。请键入你的用户密码。"

#: ../pro/smime-thunderbird.rst.inc:45
msgid ""
"When composing an email you can now choose to encrypt and sign the "
"message."
msgstr "在撰写电子邮件时，你现在可以选择对邮件进行加密和签名。"

#: ../hsm/linux/stunnel.rst:2 ../pro/linux/stunnel.rst:2
#: ../start/linux/stunnel.rst:2 ../storage/linux/stunnel.rst:2
msgid "Stunnel"
msgstr "惊涛骇浪"

#: ../hsm/stunnel.rst.inc:3
msgid ""
"`Stunnel <https://www.stunnel.org/>`__ works as an SSL encryption wrapper"
" between remote client and local (inetd-startable) or remote server. It "
"can be used to add SSL functionality to commonly used inetd daemons like "
"POP2, POP3, and IMAP servers without any changes in the programs' code."
msgstr ""
"`Stunnel <https://www.stunnel.org/>`__在远程客户端和本地（inetd-"
"startable）或远程服务器之间作为一个SSL加密包装器工作。它可以用来将SSL功能添加到常用的inetd守护程序中，如POP2、POP3和IMAP服务器，而无需对程序'代码进行任何修改。"

#: ../hsm/stunnel.rst.inc:5
msgid "Stunnel is able to load OpenSC PKCS#11 engine using this configuration:"
msgstr "Stunnel能够使用这种配置加载OpenSC PKCS#11引擎。"

#: ../pro/hard-disk-encryption.rst.inc:10
msgid ""
"Follow these steps to use the program with `Nitrokey "
"<https://shop.nitrokey.com/>`__:"
msgstr "按照这些步骤使用程序，`Nitrokey<https://shop.nitrokey.com/>`__。"

#: ../hsm/mac/index.rst:2
msgid "Nitrokey HSM with macOS"
msgstr "带有MacOS的Nitrokey HSM"

#: ../hsm/mac/index.rst:13 ../hsm/windows/index.rst:13
msgid ""
"Install `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__. "
"Alternatively, install `this <https://www.cardcontact.de/download/sc-hsm-"
"starterkit.zip>`__ driver (`source <https://github.com/CardContact/sc-"
"hsm-embedded>`__)."
msgstr ""
"安装`OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__。或者，安装`这个<https://www.cardcontact.de/download"
"/sc-hsm-starterkit.zip>`__驱动程序（`source <https://github.com/CardContact"
"/sc-hsm-embedded>`__）。"

#: ../hsm/windows/index.rst:2
msgid "Nitrokey HSM With Windows"
msgstr "使用Windows的Nitrokey HSM"

#: ../pro/smart-policy.rst.inc:2
msgid "Login to Windows Domain Computers With MS Active Directory"
msgstr "用MS Active Directory登录Windows域计算机"

#: ../pro/smart-policy.rst.inc:6
msgid ""
"Download and install the latest `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__."
msgstr "下载并安装最新的`OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__。"

#: ../pro/smart-policy.rst.inc:8
msgid ""
"Use a text editor to add the following settings to ``C:\\Program "
"Files:\\OpenSC Project\\OpenSC\\opensc.conf``."
msgstr ""
"使用文本编辑器将以下设置添加到``C:\\Program Files:\\OpenSC "
"Project\\OpenSC\\opensc.conf``。"

#: ../pro/smart-policy.rst.inc:47
msgid ""
"Open a command terminal and enter “regedit”. Use regedit to import `this "
"file <https://www.nitrokey.com/sites/default/files/nk-hsm.reg>`__."
msgstr ""
"打开一个命令终端，输入 "
"\"regedit\"。使用regedit导入`这个文件<https://www.nitrokey.com/sites/default/files"
"/nk-hsm.reg>`__。"

#: ../pro/smart-policy.rst.inc:50
msgid ""
"Now you can enroll Nitrokeys for your users managed in Microsoft Active "
"Directory. You may either use Microsoft PKI, `gpgsm "
"<https://www.gnupg.org/documentation/manuals/gnupg/Howto-Create-a-Server-"
"Cert.html>`__, or `Smart Policy <https://www.mysmartlogon.com/products"
"/smart-policy.html>`__. The following steps describe the usage of Smart "
"Policy."
msgstr ""
"现在你可以为你在微软活动目录中管理的用户注册Nitrokeys。你可以使用微软的PKI，`gpgsm "
"<https://www.gnupg.org/documentation/manuals/gnupg/Howto-Create-a-Server-"
"Cert.html>`__，或者`Smart Policy <https://www.mysmartlogon.com/products"
"/smart-policy.html>`__。下面的步骤描述了智能策略的用法。"

#: ../pro/smart-policy.rst.inc:56
msgid ""
"`Download "
"<https://download.mysmartlogon.com/SmartPolicyv2/SmartPolicy%20-%20Stage%203.exe>`__"
" and install Smart Policy."
msgstr ""
"`下载<https://download.mysmartlogon.com/SmartPolicyv2/SmartPolicy%20-%20Stage%203.exe>`__并安装Smart"
" Policy。"

#: ../pro/smart-policy.rst.inc:58
msgid "Select “Read a smart card”"
msgstr "选择 \"读取智能卡\""

#: ../pro/smart-policy.rst.inc:65
msgid "Select the certificate, mapping, and user."
msgstr "选择证书、映射和用户。"

#: ../pro/smart-policy.rst.inc:72
msgid "Verify the device status via CRL."
msgstr "通过CRL验证设备状态。"

#: ../pro/smart-policy.rst.inc:79
msgid "Choose a Group Policy Object (GPO)."
msgstr "选择一个组策略对象（GPO）。"

#: ../pro/smart-policy.rst.inc:86
msgid "Confirm applying the mapping."
msgstr "确认应用该映射。"

#: ../pro/eidauthenticate.rst.inc:75 ../pro/smart-policy.rst.inc:93
msgid ""
"From now on, when logging on to your Windows computer you need to connect"
" the Nitrokey and enter your PIN."
msgstr "从现在起，在登录Windows电脑时，你需要连接Nitrokey并输入密码。"

#: ../index.rst:2
msgid "Nitrokey Documentation"
msgstr "Nitrokey文件"

#: ../nethsm/administration.rst:2
msgid "Administration"
msgstr "行政部门"

#: ../nethsm/administration.rst:4
msgid ""
"This chapter describes administrative tasks for users with the "
"*Administrator* role. Please refer to chapter `Roles "
"<administration#roles>`__ to learn more about the role."
msgstr ""
"本章介绍*Administrator* 角色用户的管理任务。请参阅`角色<administration#roles>`__ "
"章，了解有关该角色的更多信息。"

#: ../nethsm/administration.rst:8 ../nethsm/operation.rst:8
msgid ""
"Please make sure you read the information in the beginning of `this "
"document <index.html>`__ before starting to work."
msgstr "请确保你在开始工作前阅读`本文件<index.html>`__开头的信息。"

#: ../nethsm/administration.rst:11
msgid "System Management"
msgstr "系统管理"

#: ../nethsm/administration.rst:14
msgid "Device Information"
msgstr "设备信息"

#: ../nethsm/administration.rst:16
msgid ""
"The vendor and product information for a NetHSM can be retrieved as "
"follows."
msgstr "可以按以下方式检索NetHSM的供应商和产品信息。"

#: ../nethsm/administration.rst:19 ../nethsm/administration.rst:60
#: ../nethsm/administration.rst:77 ../nethsm/administration.rst:131
#: ../nethsm/administration.rst:150 ../nethsm/administration.rst:166
#: ../nethsm/administration.rst:192 ../nethsm/administration.rst:238
#: ../nethsm/administration.rst:270 ../nethsm/administration.rst:296
#: ../nethsm/administration.rst:338 ../nethsm/administration.rst:375
#: ../nethsm/administration.rst:409 ../nethsm/administration.rst:443
#: ../nethsm/administration.rst:471 ../nethsm/administration.rst:506
#: ../nethsm/administration.rst:574 ../nethsm/administration.rst:601
#: ../nethsm/administration.rst:668 ../nethsm/administration.rst:707
#: ../nethsm/administration.rst:742 ../nethsm/administration.rst:795
#: ../nethsm/administration.rst:829 ../nethsm/administration.rst:845
#: ../nethsm/administration.rst:864 ../nethsm/administration.rst:889
#: ../nethsm/administration.rst:907 ../nethsm/administration.rst:930
#: ../nethsm/administration.rst:995 ../nethsm/administration.rst:1049
#: ../nethsm/administration.rst:1078 ../nethsm/administration.rst:1120
#: ../nethsm/administration.rst:1175 ../nethsm/administration.rst:1206
#: ../nethsm/administration.rst:1239 ../nethsm/administration.rst:1270
#: ../nethsm/administration.rst:1296 ../nethsm/getting-started.rst:126
#: ../nethsm/operation.rst:58 ../nethsm/operation.rst:144
#: ../nethsm/operation.rst:209 ../nethsm/operation.rst:242
#: ../nethsm/operation.rst:280 ../nethsm/operation.rst:305
#: ../nethsm/operation.rst:333 ../nethsm/operation.rst:394
#: ../nethsm/operation.rst:424 ../nethsm/operation.rst:465
#: ../nethsm/operation.rst:510 ../nethsm/operation.rst:556
#: ../nethsm/operation.rst:619 ../nethsm/operation.rst:683
#: ../nethsm/operation.rst:745 ../nethsm/operation.rst:786
#: ../software/nitropy/index.rst:2
msgid "nitropy"
msgstr "硝酸盐"

#: ../nethsm/administration.rst:20 ../nethsm/administration.rst:61
#: ../nethsm/administration.rst:87 ../nethsm/administration.rst:132
#: ../nethsm/administration.rst:151 ../nethsm/administration.rst:167
#: ../nethsm/administration.rst:206 ../nethsm/administration.rst:247
#: ../nethsm/administration.rst:281 ../nethsm/administration.rst:319
#: ../nethsm/administration.rst:355 ../nethsm/administration.rst:384
#: ../nethsm/administration.rst:422 ../nethsm/administration.rst:452
#: ../nethsm/administration.rst:480 ../nethsm/administration.rst:507
#: ../nethsm/administration.rst:583 ../nethsm/administration.rst:614
#: ../nethsm/administration.rst:683 ../nethsm/administration.rst:716
#: ../nethsm/administration.rst:765 ../nethsm/administration.rst:804
#: ../nethsm/administration.rst:830 ../nethsm/administration.rst:846
#: ../nethsm/administration.rst:865 ../nethsm/administration.rst:890
#: ../nethsm/administration.rst:908 ../nethsm/administration.rst:931
#: ../nethsm/administration.rst:1018 ../nethsm/administration.rst:1058
#: ../nethsm/administration.rst:1087 ../nethsm/administration.rst:1131
#: ../nethsm/administration.rst:1176 ../nethsm/administration.rst:1215
#: ../nethsm/administration.rst:1248 ../nethsm/administration.rst:1281
#: ../nethsm/administration.rst:1307 ../nethsm/getting-started.rst:138
#: ../nethsm/operation.rst:87 ../nethsm/operation.rst:183
#: ../nethsm/operation.rst:222 ../nethsm/operation.rst:255
#: ../nethsm/operation.rst:285 ../nethsm/operation.rst:310
#: ../nethsm/operation.rst:338 ../nethsm/operation.rst:409
#: ../nethsm/operation.rst:439 ../nethsm/operation.rst:495
#: ../nethsm/operation.rst:523 ../nethsm/operation.rst:583
#: ../nethsm/operation.rst:638 ../nethsm/operation.rst:700
#: ../nethsm/operation.rst:762 ../nethsm/operation.rst:799
msgid "**Example**"
msgstr "**例子**"

#: ../nethsm/administration.rst:32 ../nethsm/administration.rst:71
#: ../nethsm/administration.rst:96 ../nethsm/administration.rst:141
#: ../nethsm/administration.rst:160 ../nethsm/administration.rst:176
#: ../nethsm/administration.rst:220 ../nethsm/administration.rst:264
#: ../nethsm/administration.rst:290 ../nethsm/administration.rst:332
#: ../nethsm/administration.rst:360 ../nethsm/administration.rst:397
#: ../nethsm/administration.rst:431 ../nethsm/administration.rst:462
#: ../nethsm/administration.rst:489 ../nethsm/administration.rst:560
#: ../nethsm/administration.rst:595 ../nethsm/administration.rst:623
#: ../nethsm/administration.rst:697 ../nethsm/administration.rst:725
#: ../nethsm/administration.rst:775 ../nethsm/administration.rst:813
#: ../nethsm/administration.rst:839 ../nethsm/administration.rst:855
#: ../nethsm/administration.rst:878 ../nethsm/administration.rst:901
#: ../nethsm/administration.rst:919 ../nethsm/administration.rst:943
#: ../nethsm/administration.rst:1029 ../nethsm/administration.rst:1067
#: ../nethsm/administration.rst:1101 ../nethsm/administration.rst:1142
#: ../nethsm/administration.rst:1187 ../nethsm/administration.rst:1224
#: ../nethsm/administration.rst:1257 ../nethsm/administration.rst:1290
#: ../nethsm/administration.rst:1316 ../nethsm/getting-started.rst:153
#: ../nethsm/operation.rst:96 ../nethsm/operation.rst:199
#: ../nethsm/operation.rst:231 ../nethsm/operation.rst:268
#: ../nethsm/operation.rst:299 ../nethsm/operation.rst:327
#: ../nethsm/operation.rst:377 ../nethsm/operation.rst:418
#: ../nethsm/operation.rst:448 ../nethsm/operation.rst:504
#: ../nethsm/operation.rst:547 ../nethsm/operation.rst:599
#: ../nethsm/operation.rst:649 ../nethsm/operation.rst:709
#: ../nethsm/operation.rst:767 ../nethsm/operation.rst:808
msgid "REST API"
msgstr "REST API"

#: ../nethsm/administration.rst:33
msgid ""
"Information about the `/info` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_info>`__."
msgstr "关于`/info`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_info>`__中找到。"

#: ../nethsm/administration.rst:36 ../nethsm/administration.rst:41
msgid "Boot Mode"
msgstr "启动模式"

#: ../nethsm/administration.rst:38
msgid "NetHSM can be used in *Attended Boot* mode and *Unattended Boot* mode."
msgstr "NetHSM可以在*Attended Boot*模式和*Unattended Boot*模式下使用。"

#: ../nethsm/administration.rst:41 ../nethsm/administration.rst:81
#: ../nethsm/administration.rst:105 ../nethsm/administration.rst:196
#: ../nethsm/administration.rst:242 ../nethsm/administration.rst:274
#: ../nethsm/administration.rst:300 ../nethsm/administration.rst:342
#: ../nethsm/administration.rst:350 ../nethsm/administration.rst:379
#: ../nethsm/administration.rst:413 ../nethsm/administration.rst:447
#: ../nethsm/administration.rst:475 ../nethsm/administration.rst:578
#: ../nethsm/administration.rst:605 ../nethsm/administration.rst:672
#: ../nethsm/administration.rst:711 ../nethsm/administration.rst:746
#: ../nethsm/administration.rst:760 ../nethsm/administration.rst:799
#: ../nethsm/administration.rst:956 ../nethsm/administration.rst:999
#: ../nethsm/administration.rst:1013 ../nethsm/administration.rst:1053
#: ../nethsm/administration.rst:1082 ../nethsm/administration.rst:1124
#: ../nethsm/administration.rst:1210 ../nethsm/administration.rst:1243
#: ../nethsm/administration.rst:1274 ../nethsm/administration.rst:1300
#: ../nethsm/getting-started.rst:130 ../nethsm/metrics.rst:7
#: ../nethsm/operation.rst:66 ../nethsm/operation.rst:82
#: ../nethsm/operation.rst:152 ../nethsm/operation.rst:176
#: ../nethsm/operation.rst:217 ../nethsm/operation.rst:250
#: ../nethsm/operation.rst:402 ../nethsm/operation.rst:432
#: ../nethsm/operation.rst:473 ../nethsm/operation.rst:481
#: ../nethsm/operation.rst:490 ../nethsm/operation.rst:518
#: ../nethsm/operation.rst:564 ../nethsm/operation.rst:627
#: ../nethsm/operation.rst:691 ../nethsm/operation.rst:753
#: ../nethsm/operation.rst:794 ../nextbox/technical/led-colors.rst:5
#: ../nitrokey3/windows/piv/key_management.rst:11
msgid "Description"
msgstr "描述"

#: ../nethsm/administration.rst:43
msgid "*Attended Boot*"
msgstr "*参加的培训*"

#: ../nethsm/administration.rst:43
msgid ""
"The NetHSM boots up into a _Locked_ state. The *Unlock Passphrase* needs "
"to be entered during each start, which is used to decrypt the *User "
"Data*. For security reasons, this mode is recommended and it's the "
"default mode for a freshly provisioned system."
msgstr ""
"NetHSM启动后进入_锁定_状态。*解锁密码* ，在每次启动时都需要输入密码，用来解密*用户数据* "
"。出于安全考虑，推荐使用这种模式，它是新配置的系统的默认模式。"

#: ../nethsm/administration.rst:48
msgid "*Unattended Boot*"
msgstr "*无人值守的启动*"

#: ../nethsm/administration.rst:48
msgid ""
"The system starts unattended without the need to enter the *Unlock* "
"*Passphrase* into an _Operational_ state. Use this mode if your "
"availability requirements can not be fulfilled with *Attended Boot* mode."
msgstr "系统在无人值守的情况下启动，不需要输入*解锁* *密码* 进入_运行_状态。如果你的可用性要求不能用*亲自启动* 模式来满足，就使用这种模式。"

#: ../nethsm/administration.rst:55
msgid ""
"Regardless of the boot mode, the *Unlock Passphrase* retains its validity"
" and is required for restoring backups on other hardware. Keep the "
"*Unlock Passphrase* safe at any time."
msgstr "无论启动模式如何，*解锁密码* ，都会保留其有效性，并且在其他硬件上恢复备份时需要。在任何时候都要保证*解锁密码* 的安全。"

#: ../nethsm/administration.rst:57
msgid "The current boot mode can be retrieved as follows."
msgstr "当前的启动模式可以按以下方式检索。"

#: ../nethsm/administration.rst:72
msgid ""
"Information about the `/config/unattended-boot` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"unattended-boot>`__."
msgstr ""
"关于`/config/unattended-boot`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"unattended-boot>`__中找到。"

#: ../nethsm/administration.rst:74
msgid ""
"The boot mode can be changed as follows. At next boot, the NetHSM will "
"behave accordingly."
msgstr "启动模式可以按以下方式改变。在下次启动时，NetHSM会有相应的表现。"

#: ../nethsm/administration.rst:78 ../nethsm/administration.rst:347
#: ../nethsm/administration.rst:472 ../nethsm/administration.rst:708
#: ../nethsm/administration.rst:757 ../nethsm/administration.rst:796
#: ../nethsm/administration.rst:1050 ../nethsm/administration.rst:1207
#: ../nethsm/administration.rst:1240 ../nethsm/administration.rst:1271
#: ../nethsm/administration.rst:1297 ../nethsm/operation.rst:214
#: ../nethsm/operation.rst:399 ../nethsm/operation.rst:429
#: ../nethsm/operation.rst:487 ../nethsm/operation.rst:791
msgid "**Arguments**"
msgstr "**论点**"

#: ../nethsm/administration.rst:81 ../nethsm/administration.rst:350
#: ../nethsm/administration.rst:475 ../nethsm/administration.rst:711
#: ../nethsm/administration.rst:760 ../nethsm/administration.rst:799
#: ../nethsm/administration.rst:1053 ../nethsm/administration.rst:1210
#: ../nethsm/administration.rst:1243 ../nethsm/administration.rst:1274
#: ../nethsm/administration.rst:1300 ../nethsm/operation.rst:217
#: ../nethsm/operation.rst:402 ../nethsm/operation.rst:432
#: ../nethsm/operation.rst:490 ../nethsm/operation.rst:794
msgid "Argument"
msgstr "争论"

#: ../nethsm/administration.rst:83
msgid "Status"
msgstr "状况"

#: ../nethsm/administration.rst:83
msgid "Enable or disable *Unattended Boot*. Can have value ``on`` or ``off``."
msgstr "启用或禁用*无人值守启动*。可以有``on`或``off``的值。"

#: ../nethsm/administration.rst:97
msgid ""
"Information about the `/config/unattended-boot` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"unattended-boot>`__."
msgstr ""
"关于`/config/unattended-boot`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"unattended-boot>`__中找到。"

#: ../nethsm/administration.rst:100 ../nethsm/administration.rst:105
msgid "State"
msgstr "国家"

#: ../nethsm/administration.rst:102
msgid ""
"The NetHSM software has four states: *Unprovisioned*, *Provisioned*, "
"*Locked*, and *Operational*."
msgstr "NetHSM软件有四种状态。*未配置*，*配置*，*锁定*和*运行*。"

#: ../nethsm/administration.rst:107
msgid "*Unprovisioned*"
msgstr "*未分配*"

#: ../nethsm/administration.rst:107
msgid "NetHSM without configuration (factory default)"
msgstr "无配置的NetHSM（出厂默认）。"

#: ../nethsm/administration.rst:109
msgid "*Provisioned*"
msgstr "*规定的*。"

#: ../nethsm/administration.rst:109
msgid ""
"NetHSM with configuration. The *Provisioned* state implies either "
"*Operational* or *Locked* state."
msgstr "有配置的NetHSM。*配置*的状态意味着*运行*或*锁定*的状态。"

#: ../nethsm/administration.rst:112
msgid "*Operational*"
msgstr "*操作性*"

#: ../nethsm/administration.rst:112
msgid ""
"NetHSM with configuration and ready to execute commands. The "
"*Operational* state implies the *Provisioned* state."
msgstr "NetHSM具有配置并准备执行命令。运行*的状态意味着*配置*的状态。"

#: ../nethsm/administration.rst:115
msgid "*Locked*"
msgstr "*被锁住*"

#: ../nethsm/administration.rst:115
msgid ""
"NetHSM with configuration but encrypted and inaccessible data stores. "
"Typically, the next step is to unlock the system. The *Locked* state "
"implies the *Provisioned* state."
msgstr "有配置的NetHSM，但数据存储被加密且无法访问。通常情况下，下一步是解锁系统。*锁定的* 状态意味着*配置的* 状态。"

#: ../nethsm/administration.rst:-1 ../nethsm/administration.rst:124
msgid "States and transitions of the NetHSM"
msgstr "网络健康管理的状态和过渡"

#: ../nethsm/administration.rst:128
msgid "The current state of the NetHSM can be retrieved as follows."
msgstr "NetHSM的当前状态可以按以下方式检索。"

#: ../nethsm/administration.rst:142
msgid ""
"Information about the `/health/state` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_health-"
"state>`__."
msgstr ""
"关于`/health/state`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/GET_health-state>`__找到。"

#: ../nethsm/administration.rst:144
msgid ""
"A new NetHSM has an *Unprovisioned* state and after provisioning enters "
"the *Operational* state. The provisioning of a NetHSM is described in the"
" chapter `Provisioning <getting-started#provisioning>`__."
msgstr ""
"新的 NetHSM 处于*未配置* 状态，配置后进入*运行* 状态。`Provisioning<getting-"
"started#provisioning>`__ 章节介绍了 NetHSM 的配置。"

#: ../nethsm/administration.rst:147
msgid ""
"A NetHSM in *Operational* state can be locked again to protect it as "
"follows."
msgstr "一个处于*运行*状态的NetHSM可以再次被锁定，以保护它，方法如下。"

#: ../nethsm/administration.rst:161
msgid ""
"Information about the `/lock` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_lock>`__."
msgstr ""
"关于`/lock`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_lock>`__中找到。"

#: ../nethsm/administration.rst:163
msgid ""
"A NetHSM in *Locked* state can be unlocked as follows. While the NetHSM "
"is in the _Locked_ state no other operations are possible. Afterwards the"
" NetHSM is in an _Operational_ state."
msgstr ""
"处于*锁定* "
"状态的NetHSM可以按以下方式解锁。当NetHSM处于_Locked_状态时，不可能有其他操作。之后，NetHSM处于_Operational_状态。"

#: ../nethsm/administration.rst:177
msgid ""
"Information about the `/unlock` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_unlock>`__."
msgstr ""
"关于`/unlock`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_unlock>`__中找到。"

#: ../nethsm/administration.rst:180
msgid "Unlock Passphrase"
msgstr "解锁密码"

#: ../nethsm/administration.rst:182
msgid ""
"The *Unlock Passphrase* is used to derive an *Unlock Key* if the NetHSM "
"is in *Locked* state. The passphrase is initially set during provisioning"
" of the NetHSM."
msgstr ""
"如果NetHSM处于*Locked*状态，*Unlock Passphrase*将用于获得*Unlock "
"Key*。密码口令最初是在NetHSM的供应期间设置的。"

#: ../nethsm/administration.rst:186 ../nethsm/getting-started.rst:120
msgid ""
"The unlock passphrase cannot be reset without knowing the current value. "
"If the unlock passphrase is lost, neither can it be reset to a new value "
"nor can the NetHSM be unlocked."
msgstr "在不知道当前值的情况下，无法重置解锁密码。如果解锁密码丢失，既无法重置为新值，也无法解锁 NetHSM。"

#: ../nethsm/administration.rst:189
msgid "The *Unlock Passphrase* can be set as follows."
msgstr "解锁密码*可按以下方式设置。"

#: ../nethsm/administration.rst:193 ../nethsm/administration.rst:669
#: ../nethsm/administration.rst:1010 ../nethsm/administration.rst:1079
#: ../nethsm/getting-started.rst:127 ../nethsm/operation.rst:79
#: ../nethsm/operation.rst:173 ../nethsm/operation.rst:247
#: ../nethsm/operation.rst:478
msgid "**Optional Options**"
msgstr "**可选择的选项**"

#: ../nethsm/administration.rst:196 ../nethsm/administration.rst:242
#: ../nethsm/administration.rst:274 ../nethsm/administration.rst:300
#: ../nethsm/administration.rst:342 ../nethsm/administration.rst:379
#: ../nethsm/administration.rst:413 ../nethsm/administration.rst:447
#: ../nethsm/administration.rst:578 ../nethsm/administration.rst:605
#: ../nethsm/administration.rst:672 ../nethsm/administration.rst:746
#: ../nethsm/administration.rst:999 ../nethsm/administration.rst:1013
#: ../nethsm/administration.rst:1082 ../nethsm/administration.rst:1124
#: ../nethsm/getting-started.rst:130 ../nethsm/operation.rst:66
#: ../nethsm/operation.rst:82 ../nethsm/operation.rst:152
#: ../nethsm/operation.rst:176 ../nethsm/operation.rst:250
#: ../nethsm/operation.rst:473 ../nethsm/operation.rst:481
#: ../nethsm/operation.rst:518 ../nethsm/operation.rst:564
#: ../nethsm/operation.rst:627 ../nethsm/operation.rst:691
#: ../nethsm/operation.rst:753
msgid "Option"
msgstr "选项"

#: ../nethsm/administration.rst:198 ../nethsm/administration.rst:674
msgid "``-n``, ``--new-passphrase`` ``TEXT``"
msgstr "`-n``, ` ` ` ``--new-passphrase` `TEXT`"

#: ../nethsm/administration.rst:198
msgid "The new unlock passphrase"
msgstr "新的解锁口令"

#: ../nethsm/administration.rst:200 ../nethsm/administration.rst:676
msgid "``-p``, ``--current-passphrase`` ``TEXT``"
msgstr "`-p``, ` ` ` ``--current-passphrase` `TEXT`"

#: ../nethsm/administration.rst:200
msgid "The current unlock passphrase"
msgstr "当前的解锁密码"

#: ../nethsm/administration.rst:202 ../nethsm/administration.rst:679
msgid "``-f``, ``--force``"
msgstr "``-f``,``--force``"

#: ../nethsm/administration.rst:202 ../nethsm/administration.rst:679
msgid "Do not ask for confirmation before changing the passphrase"
msgstr "更改密码前不要要求确认"

#: ../nethsm/administration.rst:221
msgid ""
"Information about the `/config/unlock-passphrase` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"unlock-passphrase>`__."
msgstr ""
"关于`/config/unlock-"
"passphrase`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/PUT_config-unlock-passphrase>`__找到。"

#: ../nethsm/administration.rst:224
msgid "TLS Certificate"
msgstr "TLS证书"

#: ../nethsm/administration.rst:226
msgid ""
"The TLS certificate is used for the HTTPS based REST API, and thus also "
"used by *nitropy*. During provisioning a self-signed certificate is "
"created. The certificate can be replaced, for example with a signed "
"certificate from a certificate authority (CA). In this case a Certificate"
" Signing Request (CSR) must be generated. After signing the certificate "
"must be imported to the NetHSM."
msgstr ""
"TLS证书用于基于HTTPS的REST "
"API，因此也被*nitropy*使用。在配置过程中，会创建一个自签名的证书。该证书可以被替换，例如，用一个来自证书机构（CA）的签名证书。在这种情况下，必须生成一个证书签名请求（CSR）。签署后的证书必须导入到NetHSM中。"

#: ../nethsm/administration.rst:232
msgid ""
"A change is only necessary when the certificate is to be replace. Such "
"change may be to replace it with a signed certificate from a certificate "
"authority (CA)."
msgstr "只有在更换证书时才有必要进行更改。这种改变可能是用一个来自证书颁发机构（CA）的签名证书来取代它。"

#: ../nethsm/administration.rst:235
msgid "The TLS certificate can be retrieved as follows."
msgstr "TLS证书可以按以下方式检索。"

#: ../nethsm/administration.rst:239 ../nethsm/administration.rst:271
#: ../nethsm/administration.rst:297 ../nethsm/administration.rst:339
#: ../nethsm/administration.rst:376 ../nethsm/administration.rst:410
#: ../nethsm/administration.rst:444 ../nethsm/administration.rst:575
#: ../nethsm/administration.rst:602 ../nethsm/administration.rst:996
#: ../nethsm/administration.rst:1121 ../nethsm/operation.rst:63
#: ../nethsm/operation.rst:149 ../nethsm/operation.rst:470
#: ../nethsm/operation.rst:515 ../nethsm/operation.rst:561
#: ../nethsm/operation.rst:624 ../nethsm/operation.rst:688
#: ../nethsm/operation.rst:750
msgid "**Required Options**"
msgstr "**必要的选项**"

#: ../nethsm/administration.rst:244 ../nethsm/administration.rst:302
#: ../nethsm/administration.rst:344
msgid "``-a``, ``--api``"
msgstr "``-a`, ``--api``."

#: ../nethsm/administration.rst:244 ../nethsm/administration.rst:344
msgid "Set the certificate for the NetHSM TLS interface"
msgstr "为NetHSM TLS接口设置证书"

#: ../nethsm/administration.rst:265
msgid ""
"Information about the `/config/tls/cert.pem` endpoint can be found in the"
" `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"tls-cert-pem>`__."
msgstr ""
"关于`/config/tls/cert.pem`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/GET_config-tls-cert-pem>`__找到。"

#: ../nethsm/administration.rst:267
msgid "The TLS certificate can be generated as follows."
msgstr "TLS证书可以按以下方式生成。"

#: ../nethsm/administration.rst:276
msgid "``-t``, ``--type`` ``[RSA|Curve25519|EC_P224|EC_P256|EC_P384|EC_P521]``"
msgstr "``-t`, ``--type``` ``[RSA|Curve25519|EC_P224|EC_P256|EC_P384|EC_P521]```。"

#: ../nethsm/administration.rst:276
msgid "The type for the generated key"
msgstr "生成密钥的类型"

#: ../nethsm/administration.rst:278 ../nethsm/operation.rst:76
msgid "``-l``, ``--length`` ``INTEGER``"
msgstr "``-l`, ``--length``` ``INTEGER```。"

#: ../nethsm/administration.rst:278 ../nethsm/operation.rst:76
msgid "The length of the generated key"
msgstr "生成的密钥的长度"

#: ../nethsm/administration.rst:291
msgid ""
"Information about the `/config/tls/generate` endpoint can be found in the"
" `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_config-tls-generate>`__."
msgstr ""
"关于`/config/tls/generate`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_config-tls-generate>`__找到。"

#: ../nethsm/administration.rst:293
msgid ""
"The Certificate Signing Request (CSR) for the certificate can be "
"generated as follows."
msgstr "证书的证书签名请求（CSR）可按以下方式生成。"

#: ../nethsm/administration.rst:302
msgid "Generate a CSR for the NetHSM TLS certificate"
msgstr "为NetHSM TLS证书生成一个CSR"

#: ../nethsm/administration.rst:304 ../nethsm/operation.rst:568
msgid "``--country`` ``TEXT``"
msgstr "``--country`````TEXT```"

#: ../nethsm/administration.rst:304 ../nethsm/operation.rst:568
msgid "The country name"
msgstr "国家名称"

#: ../nethsm/administration.rst:306 ../nethsm/operation.rst:570
msgid "``--state-or-province`` ``TEXT``"
msgstr "``--state-or-province`````TEXT```"

#: ../nethsm/administration.rst:306 ../nethsm/operation.rst:570
msgid "The state or province name"
msgstr "州或省的名称"

#: ../nethsm/administration.rst:308 ../nethsm/operation.rst:572
msgid "``--locality`` ``TEXT``"
msgstr "``--locality`````TEXT```"

#: ../nethsm/administration.rst:308 ../nethsm/operation.rst:572
msgid "The locality name"
msgstr "地点名称"

#: ../nethsm/administration.rst:310 ../nethsm/operation.rst:574
msgid "``--organization`` ``TEXT``"
msgstr "``--organization`````TEXT```"

#: ../nethsm/administration.rst:310 ../nethsm/operation.rst:574
msgid "The organization name"
msgstr "组织名称"

#: ../nethsm/administration.rst:312 ../nethsm/operation.rst:576
msgid "``--organizational-unit`` ``TEXT``"
msgstr "``--organizational-unit`````TEXT```"

#: ../nethsm/administration.rst:312 ../nethsm/operation.rst:576
msgid "The organization unit name"
msgstr "组织单位名称"

#: ../nethsm/administration.rst:314 ../nethsm/operation.rst:578
msgid "``--common-name`` ``TEXT``"
msgstr "``--common-name`````TEXT````"

#: ../nethsm/administration.rst:314 ../nethsm/operation.rst:578
msgid "The common name"
msgstr "俗称"

#: ../nethsm/administration.rst:316 ../nethsm/operation.rst:580
msgid "``--email-address`` ``TEXT``"
msgstr "``--email-address`````TEXT```"

#: ../nethsm/administration.rst:316 ../nethsm/operation.rst:580
msgid "The email address"
msgstr "电子邮件地址"

#: ../nethsm/administration.rst:333
msgid ""
"Information about the `/config/tls/csr.pem` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_config-tls-csr-pem>`__."
msgstr ""
"关于`/config/tls/csr.pem`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_config-tls-csr-pem>`__找到。"

#: ../nethsm/administration.rst:335
msgid "The certificate can be replaced as follows."
msgstr "该证书可以按以下方式更换。"

#: ../nethsm/administration.rst:352 ../nethsm/administration.rst:713
#: ../nethsm/administration.rst:801 ../nethsm/operation.rst:492
msgid "``FILENAME``"
msgstr "``FILENAME``"

#: ../nethsm/administration.rst:352 ../nethsm/operation.rst:492
msgid "Certificate file"
msgstr "证书文件"

#: ../nethsm/administration.rst:361
msgid ""
"Information about the `/config/tls/csr.pem` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"tls-cert-pem>`__."
msgstr ""
"关于`/config/tls/csr.pem`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_config-tls-csr-pem>`__找到。"

#: ../nethsm/administration.rst:364
msgid "Network"
msgstr "网络"

#: ../nethsm/administration.rst:366
msgid ""
"The network configuration defines the settings used for the *Network "
"Port*."
msgstr "网络配置定义了用于*网络端口*的设置。"

#: ../nethsm/administration.rst:369
msgid "This settings do not configure the *BMC Network Port*."
msgstr "此设置不配置*BMC网络端口*。"

#: ../nethsm/administration.rst:372
msgid "The network configuration can be retrieved as follows."
msgstr "网络配置可以按以下方式检索。"

#: ../nethsm/administration.rst:381
msgid "``--network``"
msgstr "``--network``"

#: ../nethsm/administration.rst:381
msgid "Query the network configuration"
msgstr "查询网络配置"

#: ../nethsm/administration.rst:398
msgid ""
"Information about the `/config/network` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"network>`__."
msgstr ""
"关于`/config/network`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"network>`__中找到。"

#: ../nethsm/administration.rst:400
msgid "Set the network configuration as follows."
msgstr "设置网络配置如下。"

#: ../nethsm/administration.rst:403
msgid "The NetHSM does not support DHCP (Dynamic Host Configuration Protocol)."
msgstr "NetHSM不支持DHCP（动态主机配置协议）。"

#: ../nethsm/administration.rst:406
msgid "The NetHSM does not support IPv6 (Internet Protocol version 6)."
msgstr "NetHSM不支持IPv6（互联网协议版本6）。"

#: ../nethsm/administration.rst:415
msgid "``-a``, ``--ip-address``"
msgstr "``-a`, ``--ip-address``."

#: ../nethsm/administration.rst:415
msgid "The new IP address"
msgstr "新的IP地址"

#: ../nethsm/administration.rst:417
msgid "``-n``, ``--netmask``"
msgstr "``-n``, ``--netmask``."

#: ../nethsm/administration.rst:417
msgid "The new netmask"
msgstr "新的网络掩码"

#: ../nethsm/administration.rst:419
msgid "``-g``, ``--gateway``"
msgstr "``-n``, ``--netmask``."

#: ../nethsm/administration.rst:419
msgid "The new gateway"
msgstr "新的网关"

#: ../nethsm/administration.rst:432
msgid ""
"Information about the `/config/network` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"network>`__."
msgstr ""
"关于`/config/network`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"network>`__中找到。"

#: ../nethsm/administration.rst:435
msgid "Time"
msgstr "时间"

#: ../nethsm/administration.rst:437
msgid ""
"The time configuration sets the system time of the NetHSM software. It is"
" usually not required to set the system time, as it is set during "
"provisioning."
msgstr "时间配置设置NetHSM软件的系统时间。通常不需要设置系统时间，因为它是在配置期间设置的。"

#: ../nethsm/administration.rst:440
msgid "The time configuration can be retrieved as follows."
msgstr "时间配置可以按以下方式检索。"

#: ../nethsm/administration.rst:449
msgid "``--time``"
msgstr "``--time``"

#: ../nethsm/administration.rst:449
msgid "Query the system time"
msgstr "查询系统时间"

#: ../nethsm/administration.rst:463
msgid ""
"Information about the `/config/time` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"time>`__."
msgstr ""
"关于`/config/time`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/GET_config-time>`__中找到。"

#: ../nethsm/administration.rst:465
msgid "Set the time of the NetHSM."
msgstr "设置NetHSM的时间。"

#: ../nethsm/administration.rst:468
msgid "Make sure to pass the time in UTC timezone."
msgstr "请确保以UTC时区传递时间。"

#: ../nethsm/administration.rst:477
msgid "``time``"
msgstr "``time``"

#: ../nethsm/administration.rst:477
msgid "The system time to set (Format: YYYY-MM-DDTHH:MM:SSZ)"
msgstr "要设置的系统时间（格式：YYY-MM-DDTHH:MM:SSZ）。"

#: ../nethsm/administration.rst:490
msgid ""
"Information about the `/config/time` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"time>`__."
msgstr ""
"关于`/config/time`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/GET_config-time>`__中找到。"

#: ../nethsm/administration.rst:493 ../nethsm/metrics.rst:4
msgid "Metrics"
msgstr "度量衡"

#: ../nethsm/administration.rst:495
msgid "The NetHSM logs metrics of system parameters."
msgstr "NetHSM记录了系统参数的度量。"

#: ../nethsm/administration.rst:498
msgid ""
"This command requires the authentication of a user with the *Metrics* "
"role. Please refer to chapter `Roles <administration#roles>`__ to learn "
"more about the role."
msgstr ""
"该命令需要对*Metrics* 角色的用户进行身份验证。请参阅`角色<administration#roles>`__ "
"章节，了解有关该角色的更多信息。"

#: ../nethsm/administration.rst:501
msgid "Please refer to `Metrics <metrics>`__ to learn more about each metric."
msgstr "请参阅`Metrics<metrics>`__，了解每个指标的更多信息。"

#: ../nethsm/administration.rst:503
msgid "The metrics can be retrieved as follows."
msgstr "这些指标可以按以下方式检索。"

#: ../nethsm/administration.rst:561
msgid ""
"Information about the `/metrics` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_metrics>`__."
msgstr "关于`/metrics`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_metrics>`__找到。"

#: ../nethsm/administration.rst:564
msgid "Logging"
msgstr "伐木"

#: ../nethsm/administration.rst:566
msgid ""
"The NetHSM can log system events to the serial port or to a syslog server"
" on the network."
msgstr "NetHSM可以将系统事件记录到串行端口或网络上的syslog服务器上。"

#: ../nethsm/administration.rst:569
msgid ""
"For any production deployment, the NetHSM log should be monitored "
"continuously to provide immediate notification of any potential security "
"issues."
msgstr "对于任何生产部署，应持续监测NetHSM日志，以提供任何潜在安全问题的即时通知。"

#: ../nethsm/administration.rst:571
msgid "The syslog server configuration can be retrieved as follows."
msgstr "系统日志服务器的配置可以按以下方式检索。"

#: ../nethsm/administration.rst:580
msgid "``--logging``"
msgstr "``--network``"

#: ../nethsm/administration.rst:580
msgid "Query the logging configuration"
msgstr "查询日志配置"

#: ../nethsm/administration.rst:596
msgid ""
"Information about the `/config/logging` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"logging>`__."
msgstr ""
"关于`/config/logging`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/GET_config-logging>`__中找到。"

#: ../nethsm/administration.rst:598
msgid "The syslog server configuration can be set as follows."
msgstr "系统日志服务器的配置可按以下方式设置。"

#: ../nethsm/administration.rst:607
msgid "``-a``, ``--ip-address`` ``TEXT``"
msgstr "``-p`, ``--passphrase``` ``TEXT```。"

#: ../nethsm/administration.rst:607
msgid "The IP address of the new logging destination"
msgstr "新记录目的地的IP地址"

#: ../nethsm/administration.rst:609
msgid "``-p``, ``--port`` ``INTEGER``"
msgstr "``-p`, ``--port``` ``INTEGER```。"

#: ../nethsm/administration.rst:609
msgid "The port of the new logging destination"
msgstr "新记录目的地的端口"

#: ../nethsm/administration.rst:611
msgid "``-l``, ``--log-level`` ``[debug|info|warning|error]``"
msgstr "``-l`, ``--log-level``` ``[debug|info|warning|error]```。"

#: ../nethsm/administration.rst:611
msgid "The new log level"
msgstr "新的日志级别"

#: ../nethsm/administration.rst:624
msgid ""
"Information about the `/config/logging` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"logging>`__."
msgstr ""
"关于`/config/logging`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/GET_config-logging>`__中找到。"

#: ../nethsm/administration.rst:626
msgid ""
"The serial console works right from the start of the NetHSM hardware. It "
"includes events from the NetHSM firmware and the NetHSM software."
msgstr "串行控制台从NetHSM的硬件开始工作。它包括来自NetHSM固件和NetHSM软件的事件。"

#: ../nethsm/administration.rst:628
msgid "The serial console connection settings are as follows."
msgstr "串行控制台连接设置如下。"

#: ../nethsm/administration.rst:631
msgid "Setting"
msgstr "设置"

#: ../nethsm/administration.rst:631
msgid "Value"
msgstr "价值"

#: ../nethsm/administration.rst:633
msgid "Baud rate"
msgstr "波特率"

#: ../nethsm/administration.rst:633
msgid "115200"
msgstr "115200"

#: ../nethsm/administration.rst:635
msgid "Data bits"
msgstr "数据位"

#: ../nethsm/administration.rst:635
msgid "8"
msgstr "8"

#: ../nethsm/administration.rst:637
msgid "Stop bits"
msgstr "停止位"

#: ../nethsm/administration.rst:637
msgid "1"
msgstr "1"

#: ../nethsm/administration.rst:639
msgid "Parity"
msgstr "偶数"

#: ../nethsm/administration.rst:639 ../nethsm/administration.rst:641
#: ../nextbox/technical/led-colors.rst:7 ../nextbox/technical/led-colors.rst:8
#: ../nextbox/technical/led-colors.rst:10
#: ../nextbox/technical/led-colors.rst:12
#: ../nextbox/technical/led-colors.rst:15
msgid "None"
msgstr "无"

#: ../nethsm/administration.rst:641
msgid "Flow Control"
msgstr "流量控制"

#: ../nethsm/administration.rst:645 ../nextbox/backup-restore.rst:25
msgid "Backup"
msgstr "备份"

#: ../nethsm/administration.rst:647
msgid ""
"The NetHSM *User Data* can be saved to a backup file. This backup file "
"contains all *User Data*, namely *Configuration Store*, *Authentication "
"Store*, *Domain Key Store* and *Key Store*."
msgstr "NetHSM的*用户数据*可以被保存到一个备份文件中。这个备份文件包含所有的*用户数据*，即*配置存储*，*认证存储*，*域名密钥存储*和*密钥存储*。"

#: ../nethsm/administration.rst:652
msgid ""
"A NetHSM system software in *Unattended Boot* mode will require the "
"*Unlock Passphrase* if restored on a different NetHSM hardware. Please "
"refer to chapter `Unlock Passphrase <administration#unlock-passphrase>`__"
" to learn more."
msgstr ""
"如果在不同的 NetHSM 硬件上还原*Unattended Boot* 模式下的 NetHSM 系统软件，则需要*Unlock "
"Passphrase* 。请参阅`解锁密码<administration#unlock-passphrase>`__一章了解更多信息。"

#: ../nethsm/administration.rst:656
msgid ""
"A NetHSM in *Unattended Boot* mode will be in the same mode after a "
"restore."
msgstr "处于*无人值守启动*模式的NetHSM在恢复后将处于同一模式。"

#: ../nethsm/administration.rst:658
msgid ""
"Before a backup can be initiated the *Backup Passphrase* must be set. The"
" *Backup Passphrase* is used to encrypt the data in the backup file."
msgstr "在开始备份之前，必须设置*备份密码*。备份密码*是用来对备份文件中的数据进行加密的。"

#: ../nethsm/administration.rst:662
msgid ""
"The backup passphrase cannot be reset without knowing the current value. "
"If the backup passphrase is lost, neither can it be reset to a new value "
"nor can the created backups be restored."
msgstr "在不知道当前值的情况下，无法重置备份口令。如果备份口令丢失，既不能重置为新值，也不能恢复已创建的备份。"

#: ../nethsm/administration.rst:665
msgid "The backup passphrase can be set as follows."
msgstr "备份口令可按以下方式设置。"

#: ../nethsm/administration.rst:674
msgid "The new backup passphrase"
msgstr "新的备份口令"

#: ../nethsm/administration.rst:676
msgid "The current backup passphrase (or an empty string if not set)"
msgstr "当前备份口令（如果未设置，则为空字符串）"

#: ../nethsm/administration.rst:698
msgid ""
"Information about the `/config/backup-passphrase` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"backup-passphrase>`__."
msgstr ""
"关于`/config/backup-"
"passphrase`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/PUT_config-backup-passphrase>`__找到。"

#: ../nethsm/administration.rst:701
msgid ""
"This command requires the authentication of a user with the *Backup* "
"role. Please refer to chapter `Roles <administratio#roles>`__ to learn "
"more."
msgstr "该命令需要具有*Backup* 角色的用户进行身份验证。请参阅`角色<administratio#roles>`__ 章节了解更多信息。"

#: ../nethsm/administration.rst:704
msgid "The backup can be executed as follows."
msgstr "备份可以按以下方式执行。"

#: ../nethsm/administration.rst:713
msgid "Backup file"
msgstr "备份文件"

#: ../nethsm/administration.rst:726
msgid ""
"Information about the `/system/backup` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-backup>`__."
msgstr ""
"关于`/system/backup`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-backup>`__中找到。"

#: ../nethsm/administration.rst:729
msgid "This backup file can be restored on an unprovisioned NetHSM instance only."
msgstr "这个备份文件只能在一个未配置的NetHSM实例上恢复。"

#: ../nethsm/administration.rst:732 ../nextbox/backup-restore.rst:43
msgid "Restore"
msgstr "恢复"

#: ../nethsm/administration.rst:734
msgid "The NetHSM can be restored from a backup file."
msgstr "NetHSM可以从一个备份文件中恢复。"

#: ../nethsm/administration.rst:736
msgid ""
"If the NetHSM is *Unprovisioned* it will restore all *User Data* "
"including system configuration and reboot. Therefore the system may get "
"different network settings, TLS certificate and *Unlock Passphrase* "
"afterwards."
msgstr ""
"如果NetHSM是*Unprovisioned* ，它将恢复所有*用户数据* "
"，包括系统配置和重新启动。因此，之后系统可能会得到不同的网络设置、TLS证书和*解锁密码* 。"

#: ../nethsm/administration.rst:737
msgid ""
"If the NetHSM is *Provisioned* it will restore users and user keys but "
"not system configuration. In this case all previously existing users and "
"user keys will be deleted. The NetHSM ends in an *Operational* state."
msgstr ""
"如果NetHSM是*Provisioned* "
"，它将恢复用户和用户钥匙，但不恢复系统配置。在这种情况下，所有以前存在的用户和用户钥匙将被删除。NetHSM结束时处于*Operational* "
"状态。"

#: ../nethsm/administration.rst:739
msgid "The restore can be applied as follows."
msgstr "可以按以下方式进行恢复。"

#: ../nethsm/administration.rst:743
msgid "**Optional options**"
msgstr "**可选择的选项**"

#: ../nethsm/administration.rst:748
msgid "``-p``, ``--backup-passphrase`` ``passphrase``"
msgstr "``-p`, ``--backup-passphrase``` ``passphrase```。"

#: ../nethsm/administration.rst:748
msgid "The *Backup Passphrase*"
msgstr "备份口令*"

#: ../nethsm/administration.rst:750 ../nethsm/getting-started.rst:132
msgid "``-t``, ``--system-time``"
msgstr "``-t`, ``--system-time``."

#: ../nethsm/administration.rst:750 ../nethsm/getting-started.rst:132
msgid "The system time to set (Format: ``YYYY-MM-DDTHH:MM:SSZ``)"
msgstr "要设置的系统时间（格式：``YYYY-MM-DDTHH:MM:SSZ``)"

#: ../nethsm/administration.rst:754
msgid ""
"Make sure the time of your local computer is correctly set. To set a "
"different time, please provide it manually."
msgstr "请确保你的本地电脑的时间设置正确。要设置不同的时间，请手动提供。"

#: ../nethsm/administration.rst:762
msgid "``FILENAME`` | Restore file"
msgstr "``FILENAME`` | 恢复文件"

#: ../nethsm/administration.rst:776
msgid ""
"Information about the `/system/restore` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-restore>`__."
msgstr ""
"关于`/system/restore`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-restore>`__中找到。"

#: ../nethsm/administration.rst:779
msgid "Clustering"
msgstr "聚类"

#: ../nethsm/administration.rst:781
msgid ""
"NetHSM is stateless, so that several NetHSM devices can be used to "
"process extremely high throughput and provide high availability. The "
"PKCS#11 module supports round-robin schedule for a cluster of NetHSM "
"instances. Multiple instances of NetHSM can be synchronized via encrypted"
" backups. For this a separate system downloads and uploads backup files "
"between the instances. This separate system doesn’t have access to the "
"backup data in clear text because the backup files are encrypted. The "
"synchronization can be easily scripted by using `pynitrokey "
"<https://docs.nitrokey.com/software/nitropy/>`__ as shown in `this "
"example <https://github.com/Nitrokey/nitrokey-"
"snippets/tree/main/nethsm/sync>`__."
msgstr ""
"NetHSM 是无状态的，因此可以使用多个 NetHSM 设备来处理极高的吞吐量，并提供高可用性。PKCS#11 模块支持 NetHSM "
"实例集群的轮循计划。多个 NetHSM "
"实例可通过加密备份实现同步。为此，需要一个单独的系统在实例之间下载和上传备份文件。由于备份文件已加密，因此该独立系统无法访问明文备份数据。使用`pynitrokey<https://docs.nitrokey.com/software/nitropy/>`__"
" 可以轻松编写同步脚本，如`本示例<https://github.com/Nitrokey/nitrokey-"
"snippets/tree/main/nethsm/sync>`__ 所示。"

#: ../nethsm/administration.rst:784
msgid "Software Update"
msgstr "软件更新"

#: ../nethsm/administration.rst:786
msgid ""
"Software updates can be installed in a two-step process. First the update"
" image needs to be uploaded to a *Provisioned* NetHSM. The NetHSM "
"verifies image authenticity, integrity, and version number. Optionally, "
"the NetHSM displays release notes, if any."
msgstr ""
"软件更新可分两步安装。首先，需要将更新镜像上传到*Provisioned* NetHSM。NetHSM "
"会验证镜像的真实性、完整性和版本号。如果有发行说明，NetHSM 还会显示。"

#: ../nethsm/administration.rst:790
msgid ""
"Data loss may occur due to the installation of a beta update! Stable "
"versions should not cause data loss. However, it's recommended to create "
"a backup before updating."
msgstr "由于安装了一个测试版的更新，可能会发生数据丢失!稳定的版本应该不会导致数据丢失。然而，建议在更新前创建一个备份。"

#: ../nethsm/administration.rst:792
msgid "The update file can be uploaded as follows."
msgstr "更新文件可以按以下方式上传。"

#: ../nethsm/administration.rst:801
msgid "Update file"
msgstr "更新文件"

#: ../nethsm/administration.rst:814
msgid ""
"Information about the `/system/update` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-update>`__."
msgstr ""
"关于`/system/update`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-update>`__中找到。"

#: ../nethsm/administration.rst:816
msgid ""
"Afterwards the update can be applied or aborted. Please refer to the "
"desired option below. If the NetHSM is powered down before the \"commit\""
" operation, the update file has to be uploaded again."
msgstr "之后，可以应用或中止更新。请参考下面所需的选项。如果NetHSM在 \"提交 \"操作前断电，更新文件必须重新上传。"

#: ../nethsm/administration.rst:820
msgid ""
"If the upload of the update image fails with ``Error: NetHSM request "
"failed: Bad request -- malformed image``, please follow the steps below."
msgstr ""

#: ../nethsm/administration.rst:822
msgid ""
"Make sure you have a valid update file by checking with the provided "
"signature."
msgstr ""

#: ../nethsm/administration.rst:823
msgid ""
"Make sure you don't have a high log level, such as ``DEBUG`` enabled. "
"Please refer to chapter `Logging "
"<https://docs.nitrokey.com/nethsm/administration#logging>`__ to learn "
"more about the log level configuration."
msgstr ""

#: ../nethsm/administration.rst:824
msgid "Reboot the appliance to free up used memory."
msgstr ""

#: ../nethsm/administration.rst:826
msgid ""
"The update can be applied (committed) as follows. Any data migration is "
"only performed *after* the NetHSM has successfully booted the new system "
"software version."
msgstr "更新可按以下方式应用（提交）。只有在* NetHSM 成功启动新的系统软件版本后，才会执行任何数据迁移*。"

#: ../nethsm/administration.rst:840
msgid ""
"Information about the `/system/commit-update` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-commit-update>`__."
msgstr ""
"关于`/system/commit-update`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-commit-update>`__中找到。"

#: ../nethsm/administration.rst:842
msgid "The update can be cancelled as follows."
msgstr "可以按以下方式取消更新。"

#: ../nethsm/administration.rst:856
msgid ""
"Information about the `/system/cancel-update` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-cancel-update>`__."
msgstr ""
"关于`/system/cancel-update`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-cancel-update>`__中找到。"

#: ../nethsm/administration.rst:859
msgid "System Information"
msgstr "系统信息"

#: ../nethsm/administration.rst:861
msgid ""
"System information such as firmware version, software version, and "
"hardware version can be retrieved as follows."
msgstr "固件版本、软件版本和硬件版本等系统信息可按如下方式检索。"

#: ../nethsm/administration.rst:879
msgid ""
"Information about the `/system/info` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_system_info>`__."
msgstr ""
"有关`/system/info` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_system_info>`__。"

#: ../nethsm/administration.rst:882
msgid "Reboot and Shutdown"
msgstr "重新启动和关机"

#: ../nethsm/administration.rst:884
msgid ""
"The NetHSM can be rebooted and shutdown, either remotely, or with the "
"restart and poweroff button on the front of the NetHSM hardware."
msgstr "NetHSM可以远程重启和关机，也可以通过NetHSM硬件前面的重启和关机按钮来实现。"

#: ../nethsm/administration.rst:886
msgid "The remote reboot can be initiated as follows."
msgstr "远程重启可以按以下方式启动。"

#: ../nethsm/administration.rst:902
msgid ""
"Information about the `/system/reboot` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-reboot>`__."
msgstr ""
"关于`/system/reboot`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-reboot>`__中找到。"

#: ../nethsm/administration.rst:904
msgid "The remote shutdown can be initiated as follows."
msgstr "可以通过以下方式启动远程关机。"

#: ../nethsm/administration.rst:920
msgid ""
"Information about the `/system/shutdown` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-shutdown>`__."
msgstr ""
"关于`/system/shutdown`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-shutdown>`__中找到。"

#: ../nethsm/administration.rst:923
msgid "Reset to Factory Defaults"
msgstr "重置为出厂默认值"

#: ../nethsm/administration.rst:925
msgid ""
"A *Provisioned* NetHSM can be reset to factory defaults. In this case all"
" user data is securely deleted and the NetHSM boots into an "
"*Unprovisioned* state. Afterwards, you may want to `provision <getting-"
"started#provisioning>`__ the NetHSM."
msgstr ""
"*供给的* NetHSM可以被重置为出厂默认值。在这种情况下，所有的用户数据都被安全删除，NetHSM启动后进入*未配置的* "
"状态。之后，你可能想`，为NetHSM提供<getting-started#provisioning>`__。"

#: ../nethsm/administration.rst:927
#: ../nitrokey3/windows/piv/factory_reset.rst:10
msgid "The reset to factory defaults can be performed as follows."
msgstr "重置为出厂默认值可以按以下方式进行。"

#: ../nethsm/administration.rst:944
msgid ""
"Information about the `/system/factory-reset` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-factory-reset>`__."
msgstr ""
"关于`/system/factory-"
"reset`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-factory-reset>`__中找到。"

#: ../nethsm/administration.rst:947
msgid "User Management"
msgstr "用户管理"

#: ../nethsm/administration.rst:950
msgid "Roles"
msgstr "角色"

#: ../nethsm/administration.rst:952
msgid ""
"The NetHSM allows the separation of duties by using different roles. Each"
" user account configured on the NetHSM has one of the following *Roles* "
"assigned to it."
msgstr "NetHSM允许通过使用不同的角色来分担职责。在NetHSM上配置的每个用户账户都有以下一个*角色*分配给它。"

#: ../nethsm/administration.rst:956
msgid "Role"
msgstr "角色"

#: ../nethsm/administration.rst:958
msgid "*Administrator*"
msgstr "*管理人*"

#: ../nethsm/administration.rst:958
msgid ""
"A user account with this Role has access to all operations provided by "
"the NetHSM, except for key usage operations, i.e. message signing and "
"decryption."
msgstr "拥有此角色的用户账户可以访问NetHSM提供的所有操作，但密钥使用操作除外，即消息签名和解密。"

#: ../nethsm/administration.rst:962
msgid "*Operator*"
msgstr "*操作者*"

#: ../nethsm/administration.rst:962
msgid ""
"A user account with this Role has access to all key usage operations, a "
"read-only subset of key management operations and user management "
"operations allowing changes to their own account only."
msgstr "拥有此角色的用户账户可以访问所有的钥匙使用操作，只读的钥匙管理操作子集和用户管理操作，只允许对他们自己的账户进行更改。"

#: ../nethsm/administration.rst:967
msgid "*Metrics*"
msgstr "*指标*"

#: ../nethsm/administration.rst:967
msgid ""
"A user account with this Role has access to read-only metrics operations "
"only."
msgstr "拥有此角色的用户账户只能访问只读的度量衡操作。"

#: ../nethsm/administration.rst:970
msgid "*Backup*"
msgstr "*备份*"

#: ../nethsm/administration.rst:970
msgid ""
"A user account with this Role has access to the operations required to "
"initiate a system backup only."
msgstr "拥有该角色的用户账户只能访问启动系统备份所需的操作。"

#: ../nethsm/administration.rst:974
msgid ""
"See `Namespaces <administration#namespaces>`__ and `Tags <administration"
"#tags-for-users>`__ for more fine-grained access restricions."
msgstr ""
"有关更精细的访问限制，请参阅`命名空间<administration#namespaces>`__ 和`标记<administration"
"#tags-for-users>`__ 。"

#: ../nethsm/administration.rst:977
msgid "In a future release, additional *Roles* may be introduced."
msgstr "在未来的版本中，可能会引入额外的*角色*。"

#: ../nethsm/administration.rst:980
msgid "Add User"
msgstr "添加用户"

#: ../nethsm/administration.rst:982
msgid ""
"Add a user account to the NetHSM. Each user account has a *Role*, which "
"needs to be specified. Please refer to chapter `Roles "
"<administration#roles>`__ to learn more about *Roles*."
msgstr ""
"向 NetHSM 添加用户账户。每个用户账户都有一个*角色* ，需要指定该角色。请参阅`角色<administration#roles>`__ "
"一章，了解有关*角色* 的更多信息。"

#: ../nethsm/administration.rst:986
msgid ""
"Optionally, a user can be assigned to a `*Namespace* "
"<administration#namespaces>`__."
msgstr "可选择将用户分配到`*命名空间*<administration#namespaces>`__。"

#: ../nethsm/administration.rst:989
msgid ""
"The user ID must be alphanumeric. The NetHSM assigns a random user ID if "
"none is specified."
msgstr "用户 ID 必须是字母数字。如果没有指定用户 ID，NetHSM 将随机分配一个用户 ID。"

#: ../nethsm/administration.rst:992
msgid "A user account can be added as follows."
msgstr "可以按以下方式添加一个用户账户。"

#: ../nethsm/administration.rst:1001
msgid "``-n``, ``--real-name`` ``TEXT``"
msgstr "``-n`, ``--real-name``` ``TEXT```。"

#: ../nethsm/administration.rst:1001
msgid "The real name of the new user"
msgstr "新用户的真实姓名"

#: ../nethsm/administration.rst:1003
msgid "``-N``, ``--namespace`` ``TEXT``"
msgstr "`-N``, ` ` ` ``--namespace` `TEXT`"

#: ../nethsm/administration.rst:1003
msgid "The Namespace of the new user"
msgstr "新用户的命名空间"

#: ../nethsm/administration.rst:1005
msgid "``-r``, ``--role`` ``[Administrator|Operator|Metrics|Backup]``"
msgstr "``-r`, ``--role``` ``[Administrator|Operator|Metrics|Backup]```。"

#: ../nethsm/administration.rst:1005
msgid "The *Role* of the new user"
msgstr "新用户的*角色"

#: ../nethsm/administration.rst:1007 ../nethsm/administration.rst:1128
msgid "``-p``, ``--passphrase`` ``TEXT``"
msgstr "``-p`, ``--passphrase``` ``TEXT```。"

#: ../nethsm/administration.rst:1007
msgid "The passphrase of the new user"
msgstr "新用户的口令"

#: ../nethsm/administration.rst:1015 ../nethsm/administration.rst:1126
msgid "``-u``, ``--user-id`` ``TEXT``"
msgstr "``-u`, ``--user-id``` ``TEXT```。"

#: ../nethsm/administration.rst:1015
msgid "The user ID of the new user"
msgstr "新用户的用户ID"

#: ../nethsm/administration.rst:1030
msgid ""
"Information about the `/users` endpoint, to create a user without "
"specifying the user ID, can be found in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_users>`__."
msgstr "关于`/users`端点的信息，可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_users>`__中找到，创建一个用户而不指定用户ID。"

#: ../nethsm/administration.rst:1032
msgid ""
"Information about the `/users/{UserID}` endpoint, to create a user with "
"specifying the user ID, can be found in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_users-"
"UserID>`__."
msgstr ""
"关于`/users/{UserID}`端点的信息，可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/PUT_users-UserID>`__中找到，该端点用于创建一个指定用户ID的用户。"

#: ../nethsm/administration.rst:1034
msgid ""
"By default, the Namespace is inherited from the user that adds the new "
"user. Only users without a Namespace can choose a different Namespace for"
" new users. The Namespace is used as a prefix for the user name, for "
"example `namespace~user`. Therefore, the same user name can be used in "
"several Namespaces."
msgstr ""
"默认情况下，命名空间由添加新用户的用户继承。只有没有名称空间的用户才能为新用户选择不同的名称空间。命名空间用作用户名的前缀，例如 "
"`namespace~user`。因此，同一个用户名可以在多个命名空间中使用。"

#: ../nethsm/administration.rst:1039
msgid "Delete User"
msgstr "删除用户"

#: ../nethsm/administration.rst:1041
msgid "Delete a user account from the NetHSM."
msgstr "从NetHSM中删除一个用户账户。"

#: ../nethsm/administration.rst:1044
msgid "Deletion is permanent and can not be reverted."
msgstr "删除是永久性的，不能被恢复。"

#: ../nethsm/administration.rst:1046
msgid "A user account can be deleted as follows."
msgstr "可以按以下方式删除一个用户账户。"

#: ../nethsm/administration.rst:1055 ../nethsm/administration.rst:1276
#: ../nethsm/administration.rst:1302
msgid "``USER_ID``"
msgstr "``USER_ID``"

#: ../nethsm/administration.rst:1055
msgid "The user Id of the user."
msgstr "用户身份。"

#: ../nethsm/administration.rst:1068
msgid ""
"Information about the `/users/{UserID}` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_users-UserID>`__."
msgstr ""
"关于`/users/{UserID}`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_users-UserID>`__中找到。"

#: ../nethsm/administration.rst:1071
msgid "List Users"
msgstr "列表中的用户"

#: ../nethsm/administration.rst:1073
msgid "List the users on the NetHSM."
msgstr "列出NetHSM上的用户。"

#: ../nethsm/administration.rst:1075 ../nethsm/administration.rst:1172
#: ../nethsm/operation.rst:239
msgid "The list can be retrieved as follows."
msgstr "该清单可以按以下方式检索。"

#: ../nethsm/administration.rst:1084
msgid "``--details``, ``--no-details``"
msgstr "``--details``, ``--no-details``."

#: ../nethsm/administration.rst:1084
msgid "Query the real name and role of the user"
msgstr "查询用户的真实姓名和角色"

#: ../nethsm/administration.rst:1102
msgid ""
"Information about the `/users` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_users>`__."
msgstr "关于`/users`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_users>`__找到。"

#: ../nethsm/administration.rst:1104
msgid ""
"Information about the `/users/{UserID}` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_users-"
"UserID>`__."
msgstr ""
"关于`/users/{UserID}`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_users-"
"UserID>`__中找到。"

#: ../nethsm/administration.rst:1106
msgid "Users within a Namespace can only see users in the same Namespace."
msgstr "名称空间内的用户只能看到同一名称空间内的用户。"

#: ../nethsm/administration.rst:1109
msgid "User Passphrase"
msgstr "用户密码"

#: ../nethsm/administration.rst:1111
msgid ""
"The passphrase of a user account can be reset. A passphrase is initial "
"set during adding of a user account."
msgstr "用户账户的口令可以被重置。密码锁是在添加用户账户时初始设置的。"

#: ../nethsm/administration.rst:1115
msgid "Passphrases must have >= 10 and <= 200 characters."
msgstr "密码锁必须有>=10和<=200个字符。"

#: ../nethsm/administration.rst:1117
msgid "The user passphrase can be set as follows."
msgstr "用户口令可按以下方式设置。"

#: ../nethsm/administration.rst:1126
msgid "The user ID of the user"
msgstr "用户的用户ID"

#: ../nethsm/administration.rst:1128
msgid "The new passphrase of the user"
msgstr "用户的新密码"

#: ../nethsm/administration.rst:1143
msgid ""
"Information about the `/users/{UserID}/passphrase` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_users-"
"UserID-passphrase>`__."
msgstr ""
"关于`/users/{UserID}/passphrase`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_users-UserID-passphrase>`__找到。"

#: ../nethsm/administration.rst:1146
msgid "Namespaces"
msgstr "命名空间"

#: ../nethsm/administration.rst:1148
msgid ""
"*Namespaces* were introduced in software version 2.0. When migrating from"
" an earlier version of the software, all existing users and keys will be "
"without a Namespace."
msgstr "*命名空间* 是在软件 2.0 版本中引入的。从软件的早期版本迁移时，所有现有用户和密钥都将没有命名空间。"

#: ../nethsm/administration.rst:1150
msgid ""
"Similarly to the concept of partitions, NetHSM supports the more flexible"
" *Namespaces* which group keys, administrators, and users on a NetHSM "
"into separate subsets. Users can only see and use keys in the same "
"Namespace and can only see users in the same Namespace. It is not "
"possible to see users and to see and use keys of other Namespaces. When a"
" new user is created, it inherits the Namespace of the user that created "
"it. The available storage capacity is shared between all Namespaces."
msgstr ""
"与分区的概念类似，NetHSM 支持更灵活的*Namespaces* ，可将 NetHSM "
"上的密钥、管理员和用户分成不同的子集。用户只能查看和使用同一命名空间中的密钥，也只能查看同一命名空间中的用户。无法查看其他命名空间的用户，也无法查看和使用其他命名空间的密钥。创建新用户时，新用户将继承创建用户的名称空间。所有命名空间共享可用存储容量。"

#: ../nethsm/administration.rst:1156
msgid ""
"Users with the *Administrator* `Role <administration#roles>`__ are also "
"referred to as *R-Administrator* if they are not in a Namespace, or "
"*N-Administrator* if they are in a Namespace."
msgstr ""
"具有*管理员* `角色<administration#roles>`__ 的用户，如果不在名称空间中，也称为*R-Administrator* "
"；如果在名称空间中，则称为*N-Administrator* 。"

#: ../nethsm/administration.rst:1158
msgid ""
"Special rules apply to *R-Administrator* users: They can set the "
"Namespace for new users, list all users and query the Namespace of a "
"user. Also, the NetHSM configuration can only be accessed by "
"*R-Administrator* users.  R-Administrators can not see keys in a "
"Namespace."
msgstr ""
"特殊规则适用于*R-Administrator* 用户：他们可以为新用户设置命名空间、列出所有用户和查询某个用户的命名空间。此外，NetHSM "
"配置只能由*R-Administrator* 用户访问。  R 管理员不能查看名称空间中的键。"

#: ../nethsm/administration.rst:1162
msgid ""
"To be able to generate keys and users in a Namespace, the Namespace needs"
" to be created by an *R-Administrator* user. Once the Namespace has been "
"created, *R-Administrator* users can no longer create, delete or modify "
"users in that Namespace.  This allows to protect Namespaces' keys being "
"accessed by R-Administrator (also indirectly by adding a new user on "
"behalf or resetting existing user's or administrator's credentials). "
"Therefore, it is necessary to create an *N-Administrator* user for the "
"Namespace before creating the Namespace. *R-Administrator* users can also"
" delete a Namespace with all contained keys."
msgstr ""
"要在名称空间中生成密钥和用户，必须由*R-Administrator* 用户创建名称空间。一旦创建了命名空间，*R-Administrator* "
"用户就不能再创建、删除或修改该命名空间中的用户。  这样可以保护 R-Administrator "
"访问名称空间的密钥（也可以通过代表添加新用户或重置现有用户或管理员的凭据来间接保护）。因此，在创建命名空间之前，有必要为命名空间创建*N-Administrator*"
" 用户。*R-Administrator* 用户也可以删除名称空间和其中包含的所有密钥。"

#: ../nethsm/administration.rst:1168
msgid "List Namespaces"
msgstr "列出命名空间"

#: ../nethsm/administration.rst:1170
msgid "List the Namespaces on the NetHSM."
msgstr "列出 NetHSM 上的命名空间。"

#: ../nethsm/administration.rst:1188
msgid ""
"Information about the `/namespaces` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_namespaces>`__."
msgstr ""
"有关`/namespaces` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_namespaces>`__。"

#: ../nethsm/administration.rst:1191
msgid "Add Namespace"
msgstr "添加命名空间"

#: ../nethsm/administration.rst:1193
msgid "Add a Namespace to the NetHSM."
msgstr "向 NetHSM 添加命名空间。"

#: ../nethsm/administration.rst:1195
msgid ""
"*R-Administrator* users can already create new accounts in the Namespace "
"before it is created. After the creation, only *N-Administrator* users "
"can manage the users in the Namespace. The creation and usage of keys in "
"the Namespace is only possible after it has been added."
msgstr ""
"*R-Administrator* 用户可以在命名空间创建新账户。创建后，只有*N-Administrator* "
"用户可以管理名称空间中的用户。只有在添加名称空间后，才能在名称空间中创建和使用密钥。"

#: ../nethsm/administration.rst:1200
msgid ""
"The Namespace ID must be alphanumeric. The NetHSM assigns a random user "
"ID if none is specified."
msgstr "命名空间 ID 必须是字母数字。如果没有指定用户 ID，NetHSM 会随机分配一个。"

#: ../nethsm/administration.rst:1203
msgid "A Namespace can be added as follows."
msgstr "命名空间的添加方法如下。"

#: ../nethsm/administration.rst:1212
msgid "``NAMESPACE`` | The new Namespace."
msgstr "``NAMESPACE`` | 新命名空间。"

#: ../nethsm/administration.rst:1225
msgid ""
"Information about the `/namespaces/{NamespaceID}` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/PUT_namespaces-NamespaceID>`__."
msgstr ""
"有关`/namespaces/{NamespaceID}` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/PUT_namespaces-NamespaceID>`__。"

#: ../nethsm/administration.rst:1229
msgid "Delete Namespace"
msgstr "删除命名空间"

#: ../nethsm/administration.rst:1231
msgid "Delete a Namespace from the NetHSM."
msgstr "从 NetHSM 中删除命名空间。"

#: ../nethsm/administration.rst:1233
msgid ""
"Deleting a Namespace also deletes all keys of that Namespace. Remaining "
"users in the Namespace cannot add keys until the Namespace has been added"
" again."
msgstr "删除名称空间也会删除该名称空间的所有键。名称空间中的其他用户在再次添加名称空间之前无法添加键值。"

#: ../nethsm/administration.rst:1236
msgid "A Namespace can be deleted as follows."
msgstr "删除命名空间的方法如下。"

#: ../nethsm/administration.rst:1245
msgid "``NAMESPACE``"
msgstr "``NAMESPACE``"

#: ../nethsm/administration.rst:1245
msgid "The Namespace to delete."
msgstr "要删除的命名空间。"

#: ../nethsm/administration.rst:1258
msgid ""
"Information about the `/namespaces/{NamespaceID}` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_namespaces-NamespaceID>`__."
msgstr ""
"有关`/namespaces/{NamespaceID}` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_namespaces-NamespaceID>`__。"

#: ../nethsm/administration.rst:1261
msgid "Tags for Users"
msgstr "用户的标签"

#: ../nethsm/administration.rst:1263
msgid ""
"*Tags* can be used to set fine-grained access restrictions on keys, and "
"are an optional feature. One or more *Tags* can be assigned to user "
"accounts with the *Operator* role only. The *Operators* can see all keys,"
" but only use those with at least one corresponding *Tag*. A key can not "
"be modified by an *Operator* user."
msgstr ""
"*标签* ，可用于对钥匙设置细粒度的访问限制，是一项可选功能。一个或多个*标签* 只能分配给具有*操作员* 角色的用户账户。*操作员* "
"可以看到所有的键，但只能使用那些至少有一个相应的*标签* 。一个键不能被一个*操作员* 用户修改。"

#: ../nethsm/administration.rst:1265
msgid ""
"To learn about how to use *Tags* on keys, please refer to `Tags for Keys "
"<operation#tags-for-keys>`__."
msgstr "要了解如何在钥匙上使用*标签* ，请参阅`钥匙标签<operation#tags-for-keys>`__。"

#: ../nethsm/administration.rst:1267
msgid "A *Tag* can be added as follows."
msgstr "*标签* ，可按以下方式添加。"

#: ../nethsm/administration.rst:1276 ../nethsm/administration.rst:1302
msgid "The user ID to set the tag on."
msgstr "要设置标签的用户ID。"

#: ../nethsm/administration.rst:1278 ../nethsm/administration.rst:1304
#: ../nethsm/operation.rst:406 ../nethsm/operation.rst:436
msgid "``TAG``"
msgstr "``TAG``"

#: ../nethsm/administration.rst:1278 ../nethsm/administration.rst:1304
msgid "The tag to set on the user ID."
msgstr "要在用户ID上设置的标签。"

#: ../nethsm/administration.rst:1291
msgid ""
"Information about the `/users/{UserID}/tags/{Tag}` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_users-"
"UserID-tags-Tag>`__."
msgstr ""
"关于`/users/{UserID}/tags/{Tag}`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/PUT_users-UserID-tags-Tag>`__找到。"

#: ../nethsm/administration.rst:1293 ../nethsm/operation.rst:421
msgid "The *Tag* can be deleted as follows."
msgstr "可以按以下方式删除*标签。"

#: ../nethsm/administration.rst:1317
msgid ""
"Information about the `/users/{UserID}/tags/{Tag}` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_users-UserID-tags-Tag>`__."
msgstr ""
"关于`/users/{UserID}/tags/{Tag}`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_users-UserID-tags-Tag>`__找到。"

#: ../nethsm/apache.rst:2
msgid "Apache"
msgstr "阿帕奇"

#: ../nethsm/apache.rst:4
msgid ""
"You can configure `Apache httpd <https://httpd.apache.org/>`__ to use "
"NetHSM via the OpenSSL engine which then uses NetHSM's PKCS#11 module."
msgstr ""
"您可以配置`Apache httpd<https://httpd.apache.org/>`__，通过 OpenSSL 引擎使用 "
"NetHSM，然后使用 NetHSM 的 PKCS#11 模块。"

#: ../nethsm/apache.rst:6 ../nethsm/nginx.rst:6
msgid ""
"The certificate file has to be on the disk but the private key can be "
"used from the NetHSM."
msgstr "证书文件必须在磁盘上，但私钥可通过 NetHSM 使用。"

#: ../nethsm/apache.rst:8 ../nethsm/nginx.rst:8
msgid "A full example is available `below <#example>`__."
msgstr "完整的示例见`以下<#example>`__。"

#: ../nethsm/apache.rst:11 ../nethsm/nginx.rst:11
msgid "OpenSSL Configuration"
msgstr "OpenSSL 配置"

#: ../nethsm/apache.rst:13
msgid ""
"Set up the OpenSSL engine by following the `OpenSSL Engine  setup guide "
"<openssl.html#engine>`__. (OpenSSL Providers aren't supported yet by "
"Apache httpd.)"
msgstr ""
"按照`OpenSSL 引擎设置指南<openssl.html#engine>`__ 设置 OpenSSL 引擎（Apache httpd 尚不支持"
" OpenSSL Providers）。"

#: ../nethsm/apache.rst:16
msgid "Httpd Configuration"
msgstr "Httpd 配置"

#: ../nethsm/apache.rst:18
msgid "Add the following lines to your ``httpd.conf`` :"
msgstr "在``httpd.conf`` 中添加以下行："

#: ../nethsm/apache.rst:37
msgid "The ``SSLCertificateFile`` must point to a certificate file on the disk."
msgstr "``SSLCertificateFile`` 必须指向磁盘上的证书文件。"

#: ../nethsm/apache.rst:39
msgid ""
"The ``SSLCertificateKeyFile`` should be a PKCS#11 `URI <https://www.rfc-"
"editor.org/rfc/rfc7512>`__ pointing to the private key in the NetHSM."
msgstr ""
"``SSLCertificateKeyFile`` 应该是一个 PKCS#11`URI<https://www.rfc-"
"editor.org/rfc/rfc7512>`__ 指向 NetHSM 中的私人密钥。"

#: ../nethsm/apache.rst:42
msgid ""
"You must generate the certificate separately and then upload it to the "
"NetHSM. If the certificate on disk and the key in the NetHSM don't match "
"httpd won't start."
msgstr "你必须单独生成证书，然后上传到 NetHSM。如果磁盘上的证书与 NetHSM 中的密钥不匹配，httpd 将无法启动。"

#: ../nethsm/apache.rst:45 ../nethsm/nginx.rst:70
msgid "libnethsm_pkcs11 Configuration"
msgstr "libnethsm_pkcs11 配置"

#: ../nethsm/apache.rst:57
msgid ""
"To secure the password you can provide it via an environment variable "
"(see `Passwords <pkcs11-setup.html#passwords>`__) or provide it in the "
"httpd configuration:"
msgstr ""
"要确保密码的安全，可以通过环境变量（参见`Passwords<pkcs11-setup.html#passwords>`__ ）或在 httpd "
"配置中提供："

#: ../nethsm/apache.rst:65 ../nethsm/nginx.rst:90
#: ../nitrokey3/firmware-update.rst.inc:67
msgid "Example"
msgstr "例子"

#: ../nethsm/apache.rst:67
msgid ""
"If you want to experiment with the `given example "
"<https://github.com/Nitrokey/nethsm-pkcs11/tree/main/container/apache>`__"
" use git to clone the `nethsm-pkcs11 repository "
"<https://github.com/Nitrokey/nethsm-pkcs11>`__ and run the following "
"commands:"
msgstr ""
"如果您想使用`示例<https://github.com/Nitrokey/nethsm-"
"pkcs11/tree/main/container/apache>`__进行实验，请使用 git 克隆`nethsm-pkcs11 "
"仓库<https://github.com/Nitrokey/nethsm-pkcs11>`__，并运行以下命令："

#: ../nethsm/apache.rst:71 ../nethsm/nginx.rst:96
msgid "Running the generate script deletes the ``webserver`` key and replaces it."
msgstr "运行生成脚本会删除``webserver`` 密钥并将其替换。"

#: ../nethsm/apache.rst:73 ../nethsm/nginx.rst:98
msgid ""
"Configure a NetHSM, either a real one or a container. See the `getting-"
"started guide <getting-started.html>`__ for more information. Besides an "
"administrator, you are going to need an operator account."
msgstr ""
"配置 NetHSM，可以是一个真正的 NetHSM，也可以是一个容器。更多信息，请参阅`入门指南<getting-"
"started.html>`__。除了管理员，你还需要一个操作员账户。"

#: ../nethsm/apache.rst:74 ../nethsm/nginx.rst:99
msgid ""
"Download and install the latest version of the nethsm-pkcs11 driver "
"`available from here <https://github.com/Nitrokey/nethsm-"
"pkcs11/releases>`__."
msgstr ""
"下载并安装最新版本的 nethsm-pkcs11 驱动程序`，可从此处获取<https://github.com/Nitrokey/nethsm-"
"pkcs11/releases>`__。"

#: ../nethsm/apache.rst:75 ../nethsm/nginx.rst:100
msgid ""
"Install the OpenSSL PKCS11 engine as described in the `OpenSSL Manual "
"<openssl.html>`__. You do not need to create a configuration file."
msgstr "按照`OpenSSL Manual<openssl.html>`__ 中的说明安装 OpenSSL PKCS11 引擎。无需创建配置文件。"

#: ../nethsm/apache.rst:76
msgid ""
"Adjust the variables ``HOST``, ``ADMIN_ACCOUNT`` and "
"``ADMIN_ACCOUNT_PWD`` in ``container/apache/generate.sh`` such that "
"``HOST`` contains your NetHSMs URL and port, ``ADMIN_ACCOUNT`` contains "
"an administrator accounts username and ``ADMIN_ACCOUNT_PWD`` the "
"corresponding password. Further configure the absolute path of the "
"OpenSSL PKCS11 engine in ``OPENSSL_PKCS11_ENGINE_PATH`` and the absolute "
"path of the NetHSM PKCS11 library in ``NETHSM_PKCS11_LIBRARY_PATH``."
msgstr ""
"调整``container/apache/generate.sh`` 中的变量``HOST``、``ADMIN_ACCOUNT`` "
"和``ADMIN_ACCOUNT_PWD``，使``HOST`` 中包含 NetHSM 的 URL 和端口，``ADMIN_ACCOUNT`` "
"中包含管理员账户的用户名，``ADMIN_ACCOUNT_PWD`` "
"中包含相应的密码。进一步在``OPENSSL_PKCS11_ENGINE_PATH`` 中配置 OpenSSL PKCS11 "
"引擎的绝对路径，在``NETHSM_PKCS11_LIBRARY_PATH`` 中配置 NetHSM PKCS11 库的绝对路径。"

#: ../nethsm/apache.rst:77 ../nethsm/nginx.rst:102
msgid ""
"Create a NetHSM PKCS11 configuration file in one of the `known locations "
"<pkcs11-setup.html#configuration>`__, e.g., "
"``/etc/nitrokey/p11nethsm.conf``. It must have configured an operator "
"account and use the same NetHSM instance specified in the generate script"
" before."
msgstr ""
"在`的一个已知位置<pkcs11-setup.html#configuration>`__ 中创建 NetHSM PKCS11 "
"配置文件，例如``/etc/nitrokey/p11nethsm.conf``。它必须已配置操作员账户，并使用之前生成脚本中指定的相同 "
"NetHSM 实例。"

#: ../nethsm/apache.rst:78
msgid ""
"Update the PKCS11 configuration in ``container/apache/p11nethsm.conf`` "
"with your NetHSMs URL and valid operator credentials."
msgstr "在``container/apache/p11nethsm.conf`` 中用 NetHSMs URL 和有效的操作员凭证更新 PKCS11 配置。"

#: ../nethsm/apache.rst:79 ../nethsm/nginx.rst:104
msgid "Generate the certificate and key."
msgstr "生成证书和密钥"

#: ../nethsm/apache.rst:85 ../nethsm/ejbca.rst:32 ../nethsm/nginx.rst:110
msgid "Build the container."
msgstr "建造集装箱"

#: ../nethsm/apache.rst:91 ../nethsm/ejbca.rst:38 ../nethsm/nginx.rst:116
msgid "Run the container."
msgstr "运行容器。"

#: ../nethsm/apache.rst:97
msgid ""
"The Apache test page will be available at `https://localhost:9443/ "
"<https://localhost:9443/>`__. Note that your browser, hopefully, will "
"warn you that the websites certificate is self-signed."
msgstr ""
"Apache "
"测试页面可在`https://localhost:9443/<https://localhost:9443/>`___中找到。请注意，希望您的浏览器会警告您网站证书是自签名的。"

#: ../nethsm/ejbca.rst:2
msgid "EJBCA"
msgstr "EJBCA"

#: ../nethsm/ejbca.rst:4
msgid ""
"`EJBCA <https://www.ejbca.org/>`__ is a PKI Certificate Authority "
"software available as open source."
msgstr "`EJBCA<https://www.ejbca.org/>`__ 是一个 PKI 证书管理机构软件，可作为开放源代码使用。"

#: ../nethsm/ejbca.rst:6
msgid ""
"To be able to use NetHSM with EJBCA you need to `setup "
"<pkcs11-setup.html>`__ the NetHSM PKCS#11 module first."
msgstr "要在 EJBCA 中使用 NetHSM，首先需要`设置<pkcs11-setup.html>`__ NetHSM PKCS#11 模块。"

#: ../nethsm/ejbca.rst:8
msgid ""
"Then configure EJBCA to use the NetHSM PKCS#11 module by adding an entry "
"in the ``/etc/ejbca/conf/web.properties`` file:"
msgstr ""
"然后在``/etc/ejbca/conf/web.properties`` 文件中添加一个条目，配置 EJBCA 以使用 NetHSM "
"PKCS#11 模块："

#: ../nethsm/ejbca.rst:16
msgid ""
"The ``418`` in the name is an index that must be unique for each PKCS#11 "
"module in the configuration file."
msgstr "名称中的``418`` 是一个索引，对于配置文件中的每个 PKCS#11 模块都必须是唯一的。"

#: ../nethsm/ejbca.rst:18
msgid ""
"To be able to generate keys from the interface you need to set the "
"``enable_set_attribute_value`` option to true in the ``p11nethsm.conf`` "
"file."
msgstr ""
"要从接口生成密钥，需要在``p11nethsm.conf`` 文件中将``enable_set_attribute_value`` 选项设为 "
"true。"

#: ../nethsm/ejbca.rst:20
msgid ""
"Because of some integration problems with the Sun PKCS11 provider, keys "
"generated from EJBCA will have a random name instead of the name given in"
" the interface."
msgstr "由于与 Sun PKCS11 提供程序的集成问题，从 EJBCA 生成的密钥将使用随机名称，而不是接口中给出的名称。"

#: ../nethsm/ejbca.rst:22
msgid ""
"After restarting EJBCA you can add a new Crypto Token in the EJBCA Admin "
"GUI "
"``https://mycahostname/ejbca/adminweb/cryptotoken/cryptotokens.xhtml``. "
"The Crypto Token type is ``PKCS#11 Crypto Token`` and the Crypto Token "
"name is ``NetHSM``."
msgstr ""
"重新启动 EJBCA 后，你可以在 EJBCA 管理 "
"GUI``https://mycahostname/ejbca/adminweb/cryptotoken/cryptotokens.xhtml``"
" 添加一个新的加密令牌。加密令牌类型是``PKCS#11 Crypto Token``，加密令牌名称是``NetHSM``。"

#: ../nethsm/ejbca.rst:26
msgid "Executing The Example"
msgstr "执行示例"

#: ../nethsm/ejbca.rst:28
msgid ""
"If you want to experiment with the given example you can use git to clone"
" the `nethsm-pkcs11 repository <https://github.com/Nitrokey/nethsm-"
"pkcs11>`__ and run the following commands:"
msgstr ""
"如果您想用给出的示例进行实验，可以使用 git 克隆`nethsm-pkcs11 仓库<https://github.com/Nitrokey"
"/nethsm-pkcs11>`__ 并运行以下命令："

#: ../nethsm/ejbca.rst:30
msgid ""
"Configure a NetHSM, either a real one or a container. See the `getting-"
"started guide <getting-started>`__ for more information."
msgstr "配置 NetHSM，可以是一个真正的 NetHSM，也可以是一个容器。更多信息，请参阅`入门指南<getting-started>`__。"

#: ../nethsm/ejbca.rst:31
msgid ""
"Change the libnethsm_pkcs11 configuration to match your NetHSM in "
"``container/ejbca/p11nethsm.conf``."
msgstr "在``container/ejbca/p11nethsm.conf`` 中更改 libnethsm_pkcs11 配置，使其与 NetHSM 匹配。"

#: ../nethsm/ejbca.rst:44
msgid ""
"The container will be available at `https://localhost:9443/ "
"<https://localhost:9443/>`__."
msgstr "集装箱可在`https://localhost:9443/<https://localhost:9443/>`___。"

#: ../nethsm/faq.rst:2
msgid "Frequently Asked Questions (FAQ)"
msgstr "常见问题（FAQ）"

#: ../nethsm/faq.rst:5
msgid "**Q:** Is NetHSM FIPS or Common Criteria certified?"
msgstr "**问：** NetHSM 是否通过了 FIPS 或通用标准认证？"

#: ../nethsm/faq.rst:5
msgid ""
"Not yet but we are aiming for certifications in the future. Please "
"contact us if you are interested in supporting these efforts."
msgstr "目前还没有，但我们的目标是在未来获得认证。如果您有兴趣支持我们的工作，请与我们联系。"

#: ../nethsm/faq.rst:8
msgid "**Q:** Which protections against physical tampering are in place?"
msgstr "**问：** 采取了哪些防止物理篡改的措施？"

#: ../nethsm/faq.rst:8
msgid ""
"NetHSM is sealed which allows to detect physical tampering. It contains a"
" TPM which is protected against physical tampering. The TPM is the root "
"of trust and securely stores cryptographic keys which are used to encrypt"
" and decrypt further data and keys in the NetHSM. This protects against "
"booting malicious firmware and software and decrypting data and keys "
"being stored. The current NetHSM doesn't contain additional sensors to "
"detect tampering."
msgstr ""
"NetHSM 是密封的，可以检测物理篡改。它包含一个 TPM，可防止物理篡改。TPM 是信任根，可安全地存储用于加密和解密 NetHSM "
"中其他数据和密钥的加密密钥。这可以防止启动恶意固件和软件，并对存储的数据和密钥进行解密。当前的 NetHSM 不包含用于检测篡改的额外传感器。"

#: ../nethsm/faq.rst:16
msgid ""
"**Q:** Where can I learn more about NetHMS's security architecture and "
"implementation?"
msgstr "**问：** 在哪里可以了解更多有关 NetHMS 安全架构和实施的信息？"

#: ../nethsm/faq.rst:11
msgid ""
"Start with the chapters Getting Started, Administration and Operations. "
"Proceed with the following resources."
msgstr "从 \"入门\"、\"管理 \"和 \"操作 \"三章开始。继续阅读以下资源。"

#: ../nethsm/faq.rst:13
msgid ""
"`Overall system design <https://github.com/Nitrokey/nethsm/blob/main/docs"
"/system-design.md>`_"
msgstr ""
"`整体系统设计<https://github.com/Nitrokey/nethsm/blob/main/docs/system-"
"design.md>`_"

#: ../nethsm/faq.rst:14
msgid ""
"`Security assessment report "
"<https://www.nitrokey.com/files/doc/Nitrokey_NetHSM_Security_Assessment_v1.0.pdf>`_"
msgstr "`安全评估报告<https://www.nitrokey.com/files/doc/Nitrokey_NetHSM_Security_Assessment_v1.0.pdf>`_"

#: ../nethsm/faq.rst:15
msgid "`Full source code <https://github.com/Nitrokey/nethsm/>`_"
msgstr "`完整源代码<https://github.com/Nitrokey/nethsm/>`_"

#: ../nethsm/faq.rst:16
msgid ""
"Physical random number generator (TRNG) of quality PTG.3 according to "
"AIS-20: `hardware <https://github.com/Nitrokey/nitrokey-trng-"
"rs232-hardware>`_, `firmware <https://github.com/Nitrokey/nitrokey-trng-"
"rs232-firmware>`_"
msgstr ""
"根据 AIS-20 标准，质量为 PTG.3 的物理随机数发生器 (TRNG)：`硬件<https://github.com/Nitrokey"
"/nitrokey-trng-rs232-hardware>`_,`固件<https://github.com/Nitrokey"
"/nitrokey-trng-rs232-firmware>`_"

#: ../nethsm/faq.rst:31
msgid "**Q:** Roadmap: Which features are planned?"
msgstr "**问：** 路线图：计划推出哪些功能？"

#: ../nethsm/faq.rst:19
msgid ""
"We plan the following developments in the loose order. Changes to this "
"prioritization based on customer requests are possible."
msgstr "我们计划按照松散的顺序进行以下开发。我们可能会根据客户的要求对优先顺序进行调整。"

#: ../nethsm/faq.rst:21
msgid "Productive usable software container"
msgstr "生产可用的软件容器"

#: ../nethsm/faq.rst:22
msgid "Additional ECC: ECDH (X25519, NIST), secpXk (Koblitz) , Brainpool"
msgstr "附加 ECC：ECDH (X25519, NIST)、secpXk (Koblitz) , Brainpool"

#: ../nethsm/faq.rst:23
msgid "Quorum: m-of-n access scheme and security domain management"
msgstr "法定人数：m-of-n 访问方案和安全域管理"

#: ../nethsm/faq.rst:24
msgid "Performance improvements"
msgstr "性能改进"

#: ../nethsm/faq.rst:25
msgid "Direct, dynamic cluster capability, possibly support for external database"
msgstr "直接动态集群功能，可能支持外部数据库"

#: ../nethsm/faq.rst:26
msgid "Remote attestation and cloud service"
msgstr "远程认证和云服务"

#: ../nethsm/faq.rst:27
msgid "User authentication via mTLS certificates or FIDO"
msgstr "通过 mTLS 证书或 FIDO 进行用户身份验证"

#: ../nethsm/faq.rst:28
msgid "More user rights management (e.g. additional roles, groups)"
msgstr "更多用户权限管理（如附加角色、组）"

#: ../nethsm/faq.rst:29
msgid "Further separations and hardenings"
msgstr "进一步分离和硬化"

#: ../nethsm/faq.rst:30
msgid "FIPS and/or Common Criteria certifications"
msgstr "FIPS 和/或通用标准认证"

#: ../nethsm/faq.rst:31
msgid "Redundant power supplies"
msgstr "冗余电源"

#: ../nethsm/getting-started.rst:2 ../nextbox/gettingstarted.rst:2
#: ../nitropad/qubes/index.rst:7 ../nitropad/ubuntu/index.rst:29
#: ../nitropc/debian/index.rst:14 ../nitropc/qubes/index.rst:14
#: ../nitropc/ubuntu/index.rst:14 ../nitrophone/index.rst:7
#: ../nitrowall/index.rst:5 ../nitrowall/nw750/index.rst:5
#: ../pro/windows/index.rst:14
msgid "Getting Started"
msgstr "入门"

#: ../nethsm/getting-started.rst:4
msgid ""
"This chapter describes the physical installation and provisioning of the "
"NetHSM."
msgstr "本章介绍NetHSM的物理安装和配置。"

#: ../nethsm/getting-started.rst:7 ../nitropad/sealed-hardware.rst.inc:2
#: ../nitropc/sealed-hardware.rst.inc:2 ../nitrowall/sealed-hardware.rst:2
msgid "Verify Sealed Hardware"
msgstr "核实密封的硬件"

#: ../nethsm/getting-started.rst:9
msgid "Your NetHSM hardware has been delivered in a sealed packaging."
msgstr "您的NetHSM硬件已被密封包装交付。"

#: ../nethsm/getting-started.rst:11
msgid ""
"Please follow the three step process closely to verify that it has "
"arrived safely."
msgstr "请密切关注这三个步骤，以核实它是否已安全抵达。"

#: ../nethsm/getting-started.rst:13
msgid "Check the wrapping paper for any tears, cuts, holes or broken sealing."
msgstr "检查包装纸是否有任何撕裂、切口、洞或破损的封口。"

#: ../nethsm/getting-started.rst ../nethsm/getting-started.rst:19
msgid "Package front side"
msgstr "包装正面"

#: ../nethsm/getting-started.rst ../nethsm/getting-started.rst:27
msgid "Package back side"
msgstr "包装背面"

#: ../nethsm/getting-started.rst ../nethsm/getting-started.rst:35
msgid "Package bottom side"
msgstr "包装底面"

#: ../nethsm/getting-started.rst ../nethsm/getting-started.rst:43
msgid "Package top side"
msgstr "包装顶部"

#: ../nethsm/getting-started.rst ../nethsm/getting-started.rst:51
msgid "Package left side"
msgstr "包装左侧"

#: ../nethsm/getting-started.rst:53
msgid ""
"Check the unique handmade glitter seal on top of the wrapping paper. You "
"will receive a picture of it from us after wrapping via e-mail. Compare "
"the received picture with the seal. If you notice any changes, please "
"contact us to arrange further action."
msgstr "检查包装纸上面独特的手工闪光印章。你会通过电子邮件收到我们在包装后提供的图片。将收到的图片与封条进行比较。如果你发现有任何变化，请联系我们以安排进一步的行动。"

#: ../nethsm/getting-started.rst ../nethsm/getting-started.rst:62
msgid "Package sealing"
msgstr "包装密封"

#: ../nethsm/getting-started.rst:64
msgid ""
"After verifying that the sealing of the wrapping paper is not broken, "
"remove the wrapping paper. Finally, check the four seals on the side of "
"the NetHSM hardware."
msgstr "确认包装纸的密封性没有破损后，取下包装纸。最后，检查NetHSM硬件侧面的四个密封条。"

#: ../nethsm/getting-started.rst ../nethsm/getting-started.rst:71
msgid "Positions of the four seals"
msgstr "四个印章的位置"

#: ../nethsm/getting-started.rst ../nethsm/getting-started.rst:79
msgid "Seal on the side of the chassis"
msgstr "机箱侧面的密封圈"

#: ../nethsm/getting-started.rst:82
msgid "Hardware Installation"
msgstr "硬件安装"

#: ../nethsm/getting-started.rst:84
msgid ""
"The NetHSM hardware chassis is designed to be rack mounted. Please make "
"sure it is installed in a compatible rack. Please follow the two step "
"process closely to install the NetHSM hardware."
msgstr "NetHSM硬件机箱被设计为机架式安装。请确保它被安装在一个兼容的机架上。请严格按照两步流程来安装NetHSM硬件。"

#: ../nethsm/getting-started.rst:89
msgid ""
"Connect the power cable with the *Power Port*, and the network cable with"
" the *Network Port*. Further, press the *Power Switch* to turn on power."
msgstr "用*电源接口*连接电源线，用*网络接口*连接网线。此外，按下*电源开关*，打开电源。"

#: ../nethsm/getting-started.rst ../nethsm/getting-started.rst:96
#: ../nethsm/system_recovery.rst:41
msgid "Back side of the server"
msgstr "服务器的背面"

#: ../nethsm/getting-started.rst:98
msgid ""
"Press the *Power Button* to turn on the NetHSM hardware. The *Reset "
"Button* is only for a forced reboot of the NetHSM hardware. If the NetHSM"
" hardware is running, the *Power Indicator* on the front will light."
msgstr "按下*电源按钮*，打开NetHSM硬件。复位按钮*仅用于强制重启NetHSM硬件。如果NetHSM硬件正在运行，前面的*电源指示灯*会亮起。"

#: ../nethsm/getting-started.rst:104
msgid "Do not use the *BMC Network Port* because it allows wider system access."
msgstr "不要使用*BMC网络端口*，因为它允许更广泛的系统访问。"

#: ../nethsm/getting-started.rst ../nethsm/getting-started.rst:110
msgid "Front side of the server"
msgstr "服务器的正面"

#: ../nethsm/getting-started.rst:112
msgid ""
"In an unprovisioned state the NetHSM hardware factory default IP address "
"is ``192.168.1.1``."
msgstr "在未配置状态下，NetHSM的硬件出厂默认IP地址是``192.168.1.1``。"

#: ../nethsm/getting-started.rst:115
msgid "Provisioning"
msgstr "供应"

#: ../nethsm/getting-started.rst:117
msgid ""
"A new or otherwise *Unprovisioned* NetHSM needs to be provisioned first "
"with passphrases and the current time. The *Admin Passphrase* is for the "
"first user account, which is the superuser of the NetHSM. The *Unlock "
"Passphrase* is used to decrypt NetHSM's *User Data*."
msgstr ""
"一个新的或其他未配置的** NetHSM需要首先配置口令和当前时间。*Admin Passphrase* "
"是为第一个用户帐户准备的，它是NetHSM的超级用户。*解锁密码* ，用于解密NetHSM的*用户数据* 。"

#: ../nethsm/getting-started.rst:123
msgid "The initial provisioning is executed as follows."
msgstr "初始配置的执行方式如下。"

#: ../nethsm/getting-started.rst:136
msgid ""
"If the time is not passed manually, it will be derived from the system "
"*nitropy* is running on. If the time is passed manually, make sure to "
"pass the time in UTC timezone."
msgstr "如果没有手动传递时间，它将从系统*nitropy* 。如果时间是手动传递的，请确保以UTC时区传递时间。"

#: ../nethsm/getting-started.rst:154
msgid ""
"Information about the `/provision` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_provision>`__."
msgstr ""
"关于`/provision`端点的信息可以在`API文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_provision>`__中找到。"

#: ../nethsm/getting-started.rst:157
msgid ""
"The default boot mode is *Attended Boot*. Please refer to chapter `Boot "
"Mode <administration.html#boot-mode>`__ to learn more."
msgstr ""
"默认启动模式为*Attended Boot* 。请参阅`启动模式<administration.html#boot-"
"mode>`__一章了解更多信息。"

#: ../nethsm/index.rst:2
msgid "NetHSM"
msgstr "NetHSM"

#: ../nethsm/index.rst:4
msgid "This documentation describes the NetHSM software and hardware."
msgstr "该文件描述了NetHSM的软件和硬件。"

#: ../nethsm/index.rst:6
msgid ""
"The NetHSM software can be either used on the NetHSM hardware, or as a "
"Docker container. This documentation only covers the Docker container in "
"the `Integration <integration.html>`__ chapter."
msgstr "NetHSM软件既可以在NetHSM硬件上使用，也可以作为一个Docker容器使用。本文档在`集成<integration.html>`__章节中只涉及Docker容器。"

#: ../nethsm/index.rst:9
msgid ""
"The NetHSM software features a REST API to perform installation, "
"administration and operational tasks. The recommended way to use the REST"
" API is through the `nitropy <../software/nitropy/index.html>`_ tool. "
"Alternatively `curl <https://curl.se>`_ can be used to send HTTP requests"
" to the REST API."
msgstr ""
"NetHSM软件有一个REST API来执行安装、管理和操作任务。推荐使用REST API的方法是通过`nitropy "
"<../software/nitropy/index.html>`_工具。另外`curl "
"<https://curl.se>`_也可以用来向REST API发送HTTP请求。"

#: ../nethsm/index.rst:13
msgid ""
"If you obtained a new NetHSM hardware, please refer to the chapter "
"`Getting Started <getting-started.html#getting-started>`__ first. In case"
" you want to restore a backup of a NetHSM, please refer to the chapter "
"`Restore <administration.html#restore>`__."
msgstr ""
"如果你获得了一个新的NetHSM硬件，请先参考`开始<getting-started.html#getting-"
"started>`__章节。如果你想恢复NetHSM的备份，请参考`恢复<administration.html#restore>`__一章。"

#: ../nethsm/index.rst:18
msgid ""
"If you use a NetHSM instance with a self-signed certificate, for example "
"using the Docker container, you will have to instruct *nitropy* or *curl*"
" to ignore the validity of the certificate. For *nitropy* use the option "
"``--no-verify-tls`` and for *curl* use the option ``--insecure/-k`` to "
"skip the certificate check."
msgstr ""
"如果你使用带有自签名证书的NetHSM实例，例如使用Docker容器，你将不得不指示*nitropy*或*curl*忽略证书的有效性。对于*nitropy*，使用选项"
"``--no-verify-tls``，对于*curl*，使用选项``--insecure/-k``来跳过证书检查。"

#: ../nethsm/index.rst:23
msgid ""
"The examples in this documentation use the environment variable "
"``NETHSM_HOST``, which contains the IP address or URL of the NetHSM. On a"
" Unix shell the variable can be set with the following command."
msgstr "本文档中的例子使用环境变量``NETHSM_HOST``，它包含NetHSM的IP地址或URL。在Unix外壳上，可以用以下命令设置该变量。"

#: ../nethsm/integration.rst:2
msgid "Integration"
msgstr "融合"

#: ../nethsm/integration.rst:4
msgid ""
"The chapter describes processes for various tasks and aims at all user "
"groups."
msgstr "该章描述了各种任务的流程，并针对所有用户群体。"

#: ../nethsm/integration.rst:7
msgid "REST-API"
msgstr "REST-API"

#: ../nethsm/integration.rst:9
msgid ""
"NetHSM's primary interface is a modern REST-API that guarantees best "
"performance and functionality. The API specification is available in "
"`OpenAPI format <https://nethsmdemo.nitrokey.com/api_docs/nethsm-"
"api.yaml>`_, and can be inspected and tested in the `API browser "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html>`_."
msgstr ""
"NetHSM 的主要接口是一个现代 RESTAPI，可确保最佳性能和功能。API 规范以`OpenAPI "
"格式提供<https://nethsmdemo.nitrokey.com/api_docs/nethsm-api.yaml>`_ ，可在`API "
"浏览器<https://nethsmdemo.nitrokey.com/api_docs/index.html>`_ 中检查和测试。"

#: ../nethsm/integration.rst:14
msgid "PKCS#11"
msgstr "PKCS#11"

#: ../nethsm/integration.rst:16
msgid ""
"The NetHSM supports the PKCS#11 standard. The required driver is "
"available from the `repository <https://github.com/Nitrokey/nethsm-"
"pkcs11>`__. The repository containes the source code and libraries, for "
"different operating systems. The `PKCS#11 guide <pkcs11-setup.html>`_ "
"describes the usage in detail."
msgstr ""
"NetHSM 支持 PKCS#11 标准。所需驱动程序可从`存储库<https://github.com/Nitrokey/nethsm-"
"pkcs11>`__中获取。该资源库包含适用于不同操作系统的源代码和库。`PKCS#11 指南<pkcs11-setup.html>`_ "
"详细介绍了使用方法。"

#: ../nethsm/integration.rst:22
msgid "Development and Testing"
msgstr "开发和测试"

#: ../nethsm/integration.rst:25
msgid "Demo Instance"
msgstr "演示实例"

#: ../nethsm/integration.rst:27
msgid ""
"A public NetHSM demo instance is available at `nethsmdemo.nitrokey.com "
"<https://nethsmdemo.nitrokey.com/api/v1/info>`_. It will be reset every "
"eight hours (CET 6:00, 14:00, 22:00). User \"admin\", password "
"\"adminadmin\", unlock password \"unlockunlock\"."
msgstr ""
"公共 NetHSM "
"演示实例可在`nethsmdemo.nitrokey.com<https://nethsmdemo.nitrokey.com/api/v1/info>`_"
" 上获得。它将每八小时重置一次（欧洲中部时间 6:00、14:00、22:00）。用户名 \"admin\"，密码 "
"\"adminadmin\"，解锁密码 \"unlockunlock\"。"

#: ../nethsm/integration.rst:31
msgid "Container Image"
msgstr "集装箱图像"

#: ../nethsm/integration.rst:33
msgid ""
"The container image is distributed as an OCI image and can be obtained "
"from `Docker Hub <https://hub.docker.com/r/nitrokey/nethsm>`_. It can be "
"run locally with a compatible executor, e.g. Docker or Podman."
msgstr ""
"容器镜像作为 OCI 镜像发布，可从`Docker Hub<https://hub.docker.com/r/nitrokey/nethsm>`_"
" 获取。可使用兼容的执行器（如 Docker 或 Podman）在本地运行。"

#: ../nethsm/integration.rst:36
msgid ""
"Compared to the NetHSM hardware the following functions are not "
"implemented at software container's REST API:"
msgstr "与 NetHSM 硬件相比，软件容器的 REST API 没有实现以下功能："

#: ../nethsm/integration.rst:38
msgid "network configuration"
msgstr "网络配置"

#: ../nethsm/integration.rst:39
msgid "factory reset"
msgstr "出厂重置"

#: ../nethsm/integration.rst:40 ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "reboot"
msgstr "重新启动"

#: ../nethsm/integration.rst:41
msgid "software update"
msgstr "软件更新"

#: ../nethsm/integration.rst:43 ../nethsm/integration.rst:60
msgid "The container can be executed as follows."
msgstr "容器可以按以下方式执行。"

#: ../nethsm/integration.rst:46 ../nethsm/integration.rst:63
#: ../nethsm/integration.rst:84 ../nethsm/integration.rst:97
msgid "Docker"
msgstr "码头"

#: ../nethsm/integration.rst:51 ../nethsm/integration.rst:89
#: ../nethsm/integration.rst:102
msgid "Podman"
msgstr "波德曼"

#: ../nethsm/integration.rst:56
msgid ""
"This will run NetHSM as a Unix process inside the container and expose "
"the REST API on the port `8443` via the HTTPS protocol."
msgstr "这将在容器内以 Unix 进程的形式运行 NetHSM，并通过 HTTPS 协议在端口 `8443` 上公开 REST API。"

#: ../nethsm/integration.rst:58
msgid ""
"Additionaly to running the NetHSM as a Unix process it can be run as a "
"unikernel supported by KVM."
msgstr "除了作为 Unix 进程运行 NetHSM 外，它还可以作为 KVM 支持的单内核运行。"

#: ../nethsm/integration.rst:68
msgid ""
"This will run NetHSM as a unikernel inside a KVM virtual machine. The "
"container will expose the REST API, via the HTTPS protocol, on the "
"interface `tap200` with the IP address `192.168.1.100` and port `8443`."
msgstr ""
"这将在 KVM 虚拟机中以单内核方式运行 NetHSM。容器将通过 HTTPS 协议，在 IP 地址为 192.168.1.100、端口为 "
"8443 的接口 \"tap200 \"上公开 REST API。"

#: ../nethsm/integration.rst:72
msgid ""
"The container uses a self-signed TLS certificate. Make sure to use the "
"correct connection settings to establish a connection. Please refer to "
"chapter `NetHSM introduction <index.html>`__ to learn more."
msgstr "容器使用一个自签的TLS证书。请确保使用正确的连接设置来建立连接。请参考`NetHSM介绍<index.html>`__一章，了解更多信息。"

#: ../nethsm/integration.rst:77
msgid "Integration Into Custom Application"
msgstr "集成到自定义应用程序中"

#: ../nethsm/integration.rst:79
msgid ""
"To integrate the NetHSM into own custom applications, client libraries "
"are available for almost all programming languages. Here are libraries "
"for `Python <https://github.com/Nitrokey/nethsm-sdk-py>`_ and `Rust "
"<https://github.com/Nitrokey/nethsm-sdk-rs>`_ as well as `this 3rd party "
"Rust crate <https://crates.io/crates/nethsm>`_. For all other programming"
" languages we recommend using `OpenAPI Generator "
"<https://github.com/OpenAPITools/openapi-generator>`_."
msgstr ""
"要将 NetHSM "
"集成到自己的定制应用程序中，几乎所有编程语言都有客户端库。以下是`Python<https://github.com/Nitrokey"
"/nethsm-sdk-py>`_ 和`Rust<https://github.com/Nitrokey/nethsm-sdk-rs>`_ "
"以及`这个第三方 Rust crate<https://crates.io/crates/nethsm>`_ "
"的库。对于所有其他编程语言，我们建议使用`OpenAPI Generator<https://github.com/OpenAPITools"
"/openapi-generator>`_ 。"

#: ../nethsm/integration.rst:81
msgid "The list of all available languages can be retrieved as follows."
msgstr "所有可用语言的列表可按如下方式检索。"

#: ../nethsm/integration.rst:94
msgid ""
"The NetHSM client can be generated for your programming language as "
"follows."
msgstr "可以为你的编程语言生成NetHSM客户端，如下所示。"

#: ../nethsm/integration.rst:107
msgid ""
"The generated client code, in this example JavaScript, will be created in"
" the ``./out/`` directory. This folder also contains the necessary "
"documentation how to use it."
msgstr "生成的客户端代码，在本例中为JavaScript，将在``./out/``目录下创建。这个文件夹也包含了如何使用它的必要文档。"

#: ../nethsm/integration.rst:111
msgid ""
"If Podman is used with enforcing SELinux, a labeling to the volume mount "
"might be required. The mode of SELinux can be requested with ``sestatus "
"|grep \"Current mode\"``. If the mode is set to ``enforcing``, a change "
"to the context is required. In this case the volume mount must be "
"postfixed with ``:z``, resulting in ``-v \"${PWD}/out:/out:z\"``."
msgstr ""
"如果Podman与执行SELinux一起使用，可能需要对卷挂载进行标注。SELinux的模式可以用``sestatus |grep "
"\"Current "
"mode\"``请求。如果模式被设置为``enforcing``，则需要对上下文进行更改。在这种情况下，卷挂载必须用``:z``后缀，结果是``-v"
" \"${PWD}/out:/out:z\"``。"

#: ../nethsm/integration.rst:117
msgid "Command-line interface"
msgstr "命令行界面"

#: ../nethsm/integration.rst:119
msgid ""
"Users may administrate and use a NetHSM using a dedicated command-line "
"interface (CLI). Nitrokey offers ``nitropy``, which is distributed in the"
" Python based `pynitrokey <https://pypi.org/project/pynitrokey/>`_. With "
"``nethsm`` an alternative third-party application exists, which is "
"developed in the Rust crate `nethsm-cli <https://crates.io/crates/nethsm-"
"cli/>`_."
msgstr ""
"用户可使用专用命令行界面 (CLI) 管理和使用 NetHSM。Nitrokey 提供``nitropy``，它发布在基于 Python "
"的`pynitrokey<https://pypi.org/project/pynitrokey/>`_ 中。``nethsm`` "
"还有一个第三方应用程序，它是在 Rust crate`nethsm-cli<https://crates.io/crates/nethsm-"
"cli/>`_ 中开发的。"

#: ../nethsm/knotdns.rst:2
msgid "Knot DNS"
msgstr "结点 DNS"

#: ../nethsm/knotdns.rst:4
msgid ""
"`Knot DNS <https://www.knot-dns.cz/>`__ is an open source authoritative "
"DNS server that can be used for DNSSEC. To use KnotDNS with the NetHSM "
"please install and configure the PKCS#11 module as `described here "
"<./pkcs11-setup.html>`__."
msgstr ""
"`Knot DNS<https://www.knot-dns.cz/>`__是一个开源的权威 DNS 服务器，可用于 DNSSEC。要在 "
"NetHSM 中使用 KnotDNS，请按照`的说明安装和配置 PKCS#11 模块<./pkcs11-setup.html>`__。"

#: ../nethsm/knotdns.rst:7
msgid "Manual Mode"
msgstr "手动模式"

#: ../nethsm/knotdns.rst:9
msgid "In manual mode the keys have to be generated and managed manually."
msgstr "在手动模式下，密钥必须手动生成和管理。"

#: ../nethsm/knotdns.rst:11
msgid ""
"Only the Operator user is needed in the PKCS#11 module configuration "
"file. The password can be specified using the ``pin-value`` in the "
"`PKCS#11 URI <https://www.rfc-editor.org/rfc/rfc7512>`__ in knot.conf."
msgstr ""
"在 PKCS#11 模块配置文件中只需要操作员用户。密码可使用``pin-value`` 中的`PKCS#11 URI<https://www"
".rfc-editor.org/rfc/rfc7512>`___ 在 knot.conf 中指定。"

#: ../nethsm/knotdns.rst:13
msgid ""
"Add the following lines to the KnotDNS configuration file "
"``/etc/knot/knot.conf``:"
msgstr "在 KnotDNS 配置文件``/etc/knot/knot.conf`` 中添加以下几行："

#: ../nethsm/knotdns.rst:34
msgid ""
"The ``token`` value in the PKCS#11 URI is the ``label`` from the "
"``p11nethsm.conf``. Adjust the path to the ``libnethsm_pkcs11.so`` as "
"needed."
msgstr ""
"PKCS#11 URI 中的``token`` 值是来自``p11nethsm.conf`` "
"的``label``。根据需要调整``libnethsm_pkcs11.so`` 的路径。"

#: ../nethsm/knotdns.rst:37
msgid "To generate the keys run the following commands:"
msgstr "要生成密钥，请运行以下命令："

#: ../nethsm/knotdns.rst:60
msgid "Automatic Mode"
msgstr "自动模式"

#: ../nethsm/knotdns.rst:62
msgid ""
"In automatic mode the keys are generated by Knot DNS and stored in the "
"NetHSM."
msgstr "在自动模式下，密钥由 Knot DNS 生成并存储在 NetHSM 中。"

#: ../nethsm/knotdns.rst:64
msgid ""
"An Administrator and an Operator user are needed in the PKCS#11 module "
"configuration."
msgstr "在 PKCS#11 模块配置中需要一个管理员用户和一个操作员用户。"

#: ../nethsm/knotdns.rst:66
msgid ""
"Add the following lines to the Knot DNS configuration file "
"``/etc/knot/knot.conf``:"
msgstr "在 Knot DNS 配置文件``/etc/knot/knot.conf`` 中添加以下几行："

#: ../nethsm/knotdns.rst:92
msgid ""
"Setting ``key-label`` to ``on`` doesn't change anything and the pkcs11 "
"module ignores the given label and always returns the hexadecimal key id "
"as label. The policy uses very short key lifetimes and TTL's for testing "
"purposes."
msgstr ""
"将``key-label`` 设置为``on`` 不会改变任何内容，pkcs11 模块会忽略给定的标签，并始终将十六进制密钥 id "
"作为标签返回。为测试目的，该策略使用非常短的密钥生命期和 TTL。"

#: ../nethsm/metrics.rst:7
msgid "Metric"
msgstr "公制"

#: ../nethsm/metrics.rst:9
msgid "client connections"
msgstr "客户连接"

#: ../nethsm/metrics.rst:11
msgid "established state"
msgstr "建国"

#: ../nethsm/metrics.rst:13
msgid "external.received bytes"
msgstr "外部接收字节"

#: ../nethsm/metrics.rst:15
msgid "external.received packets"
msgstr "外部.收到的数据包"

#: ../nethsm/metrics.rst:17
msgid "external.transmitted bytes"
msgstr "外部传输字节"

#: ../nethsm/metrics.rst:19
msgid "external.transmitted packets"
msgstr "外部传输的数据包"

#: ../nethsm/metrics.rst:21
msgid "free chunk count"
msgstr "空闲块计数"

#: ../nethsm/metrics.rst:23
msgid "gc compactions"
msgstr "gc 压缩"

#: ../nethsm/metrics.rst:25
msgid "gc major bytes"
msgstr "gc 主要字节"

#: ../nethsm/metrics.rst:27
msgid "gc major collections"
msgstr "GC 主要系列"

#: ../nethsm/metrics.rst:29
msgid "gc minor collections"
msgstr "GC 未成年人收藏品"

#: ../nethsm/metrics.rst:31
msgid "http response 200"
msgstr "http 响应 200"

#: ../nethsm/metrics.rst:31
msgid "REST API responses with HTTP code 200, i.e. “OK”."
msgstr "REST API 响应的 HTTP 代码为 200，即 \"OK\"。"

#: ../nethsm/metrics.rst:33
msgid "http response 201"
msgstr "http 响应 201"

#: ../nethsm/metrics.rst:33
msgid "REST API responses with HTTP code 201, i.e. “Created”."
msgstr "REST API 响应的 HTTP 代码为 201，即 \"已创建\"。"

#: ../nethsm/metrics.rst:35
msgid "http response 204"
msgstr "http 响应 204"

#: ../nethsm/metrics.rst:35
msgid "REST API responses with HTTP code 204, i.e. “No Content”."
msgstr "REST API 响应的 HTTP 代码为 204，即 \"无内容\"。"

#: ../nethsm/metrics.rst:37
msgid "http response 403"
msgstr "http 响应 403"

#: ../nethsm/metrics.rst:37
msgid "REST API responses with HTTP code 403, i.e. “Forbidden”."
msgstr "REST API 响应的 HTTP 代码为 403，即 \"禁止\"。"

#: ../nethsm/metrics.rst:39
msgid "http response 404"
msgstr "http 响应 404"

#: ../nethsm/metrics.rst:39
msgid "REST API responses with HTTP code 404, i.e. “Not Found”."
msgstr "REST API 响应的 HTTP 代码为 404，即 \"未找到\"。"

#: ../nethsm/metrics.rst:41
msgid "http response time"
msgstr "http 响应时间"

#: ../nethsm/metrics.rst:41
msgid "Average (mean) response time of the REST API in seconds."
msgstr "REST API 的平均（平均）响应时间（秒）。"

#: ../nethsm/metrics.rst:43
msgid "http response total"
msgstr "http 响应总数"

#: ../nethsm/metrics.rst:43
msgid "Total number of REST API responses."
msgstr "REST API 响应总数。"

#: ../nethsm/metrics.rst:45
msgid "internal.received bytes"
msgstr "内部.接收字节"

#: ../nethsm/metrics.rst:47
msgid "internal.received packets"
msgstr "内部.收到的数据包"

#: ../nethsm/metrics.rst:49
msgid "internal.transmitted bytes"
msgstr "内部传输字节"

#: ../nethsm/metrics.rst:51
msgid "internal.transmitted packets"
msgstr "内部.传输的数据包"

#: ../nethsm/metrics.rst:53
msgid "kv write"
msgstr "kv 写道"

#: ../nethsm/metrics.rst:53
msgid "Total number of writes to the Key-Value-Store."
msgstr "写入键值存储的总次数。"

#: ../nethsm/metrics.rst:55
msgid "log errors"
msgstr "日志错误"

#: ../nethsm/metrics.rst:55
msgid "Total number of logged errors."
msgstr "记录的错误总数。"

#: ../nethsm/metrics.rst:57
msgid "log warnings"
msgstr "日志警告"

#: ../nethsm/metrics.rst:57
msgid "Total number of logged warnings."
msgstr "记录的警告总数。"

#: ../nethsm/metrics.rst:59
msgid "maximum allocated space"
msgstr "最大分配空间"

#: ../nethsm/metrics.rst:61
msgid "maximum releasable bytes"
msgstr "最大可释放字节数"

#: ../nethsm/metrics.rst:63
msgid "mmapped region count"
msgstr "毫米映射区域计数"

#: ../nethsm/metrics.rst:65
msgid "new sleeper size"
msgstr "新卧铺尺寸"

#: ../nethsm/metrics.rst:67
msgid "non-mmapped allocated bytes"
msgstr "非映射分配字节"

#: ../nethsm/metrics.rst:69
msgid "sleep queue size"
msgstr "睡眠队列大小"

#: ../nethsm/metrics.rst:71
msgid "syn-rcvd state"
msgstr "同步传回状态"

#: ../nethsm/metrics.rst:73
msgid "timers"
msgstr "计时器"

#: ../nethsm/metrics.rst:75
msgid "total allocated space"
msgstr "总分配空间"

#: ../nethsm/metrics.rst:77
msgid "total client"
msgstr "客户总数"

#: ../nethsm/metrics.rst:77
msgid "Total number of clients connected with."
msgstr "连接的客户总数。"

#: ../nethsm/metrics.rst:79
msgid "total established"
msgstr "总计"

#: ../nethsm/metrics.rst:81
msgid "total free space"
msgstr "总自由空间"

#: ../nethsm/metrics.rst:83
msgid "total sleeper size"
msgstr "卧铺总尺寸"

#: ../nethsm/metrics.rst:85
msgid "total syn-rcvd"
msgstr "同步返回总数"

#: ../nethsm/metrics.rst:87
msgid "total timers"
msgstr "总计时器"

#: ../nethsm/metrics.rst:89
msgid "uptime"
msgstr "正常运行时间"

#: ../nethsm/metrics.rst:89
msgid "Uptime in seconds."
msgstr "正常运行时间（秒）。"

#: ../nethsm/nginx.rst:2
msgid "Nginx"
msgstr "Nginx"

#: ../nethsm/nginx.rst:4
msgid ""
"You can configure `nginx <https://nginx.org/>`__ to use NetHSM via the "
"OpenSSL engine which then uses NetHSM's PKCS#11 module."
msgstr ""
"您可以配置`nginx<https://nginx.org/>`__，通过 OpenSSL 引擎使用 NetHSM，然后使用 NetHSM 的 "
"PKCS#11 模块。"

#: ../nethsm/nginx.rst:13
msgid ""
"Set up the OpenSSL engine by following the `OpenSSL Engine  setup guide "
"<openssl.html#engine>`__."
msgstr "按照`OpenSSL 引擎设置指南<openssl.html#engine>`__设置 OpenSSL 引擎。"

#: ../nethsm/nginx.rst:15
msgid "Providers aren't supported yet by Nginx."
msgstr "Nginx 尚不支持提供程序。"

#: ../nethsm/nginx.rst:18
msgid ""
"Using the libp11 OpenSSL engine version 0.4.12 or older and a NetHSM with"
" a lot of key will make the initial loading of Nginx slow (more than a "
"minute for 1 thousand keys). It is recommended to use version 0.4.13 or "
"newer or to build the engine from `source "
"<https://github.com/OpenSC/libp11>`__."
msgstr ""
"使用 0.4.12 或更旧版本的 libp11 OpenSSL 引擎和带有大量密钥的 NetHSM 会使 Nginx 的初始加载速度变慢（超过 1"
" 分钟才能加载 1,000 个密钥）。建议使用 0.4.13 "
"或更新版本，或从`源<https://github.com/OpenSC/libp11>`__构建引擎。"

#: ../nethsm/nginx.rst:21
msgid "Nginx Configuration"
msgstr "Nginx 配置"

#: ../nethsm/nginx.rst:60
msgid "The ``ssl_certificate`` must point to a certificate file on the disk."
msgstr "``ssl_certificate`` 必须指向磁盘上的证书文件。"

#: ../nethsm/nginx.rst:62
msgid ""
"The ``ssl_certificate_key`` can be an OpenSSL configuration. Here we use "
"the OpenSSL engine with the PKCS#11 module and select the private key "
"with the label/ID ``webserver`` and the key type ``private``."
msgstr ""
"``ssl_certificate_key`` 可以是 OpenSSL 配置。在此，我们使用带有 PKCS#11 模块的 OpenSSL "
"引擎，并选择带有标签/ID``webserver`` 和密钥类型``private`` 的私钥。"

#: ../nethsm/nginx.rst:64
msgid ""
"``ssl_certificate_key "
"\"engine:pkcs11:pkcs11:object=webserver;type=private\";``"
msgstr ""
"``ssl_certificate_key "
"\"engine:pkcs11:pkcs11:object=webserver;type=private\";``"

#: ../nethsm/nginx.rst:67
msgid ""
"You must generate the certificate separately and then upload it to the "
"NetHSM. If the certificate on disk and the key in the NetHSM don't match "
"nginx won't start."
msgstr "你必须单独生成证书，然后上传到NetHSM。如果磁盘上的证书和NetHSM中的密钥不匹配，nginx将无法启动。"

#: ../nethsm/nginx.rst:82
msgid ""
"To secure the password you can provide it via an `environment variable "
"<pkcs11-setup.html#passwords>`__) or provide it in the nginx "
"configuration:"
msgstr "要确保密码安全，可以通过`环境变量<pkcs11-setup.html#passwords>`__) 或在 nginx 配置中提供："

#: ../nethsm/nginx.rst:92
msgid ""
"If you want to experiment with the `given example "
"<https://github.com/Nitrokey/nethsm-pkcs11/tree/main/container/nginx>`__ "
"use git to clone the `nethsm-pkcs11 repository "
"<https://github.com/Nitrokey/nethsm-pkcs11>`__ and run the following "
"commands:"
msgstr ""
"如果您想使用`示例<https://github.com/Nitrokey/nethsm-"
"pkcs11/tree/main/container/nginx>`__进行实验，请使用 git 克隆`nethsm-pkcs11 "
"仓库<https://github.com/Nitrokey/nethsm-pkcs11>`__，并运行以下命令："

#: ../nethsm/nginx.rst:101
msgid ""
"Adjust the variables ``HOST``, ``ADMIN_ACCOUNT`` and "
"``ADMIN_ACCOUNT_PWD`` in ``container/nginx/generate.sh`` such that "
"``HOST`` contains your NetHSMs URL and port, ``ADMIN_ACCOUNT`` contains "
"an administrator accounts username and ``ADMIN_ACCOUNT_PWD`` the "
"corresponding password. Further configure the absolute path of the "
"OpenSSL PKCS11 engine in ``OPENSSL_PKCS11_ENGINE_PATH`` and the absolute "
"path of the NetHSM PKCS11 library in ``NETHSM_PKCS11_LIBRARY_PATH``."
msgstr ""
"调整``container/nginx/generate.sh`` 中的变量``HOST``、``ADMIN_ACCOUNT`` "
"和``ADMIN_ACCOUNT_PWD``，使``HOST`` 中包含 NetHSM 的 URL 和端口，``ADMIN_ACCOUNT`` "
"中包含管理员账户的用户名，``ADMIN_ACCOUNT_PWD`` "
"中包含相应的密码。进一步在``OPENSSL_PKCS11_ENGINE_PATH`` 中配置 OpenSSL PKCS11 "
"引擎的绝对路径，在``NETHSM_PKCS11_LIBRARY_PATH`` 中配置 NetHSM PKCS11 库的绝对路径。"

#: ../nethsm/nginx.rst:103
msgid ""
"Update the PKCS11 configuration in ``container/nginx/p11nethsm.conf`` "
"with your NetHSMs URL and valid operator credentials."
msgstr "在``container/nginx/p11nethsm.conf`` 中用 NetHSMs URL 和有效的操作员凭证更新 PKCS11 配置。"

#: ../nethsm/nginx.rst:122
msgid ""
"The NGINX test page will be available at `https://localhost:9443/ "
"<https://localhost:9443/>`__. Note that your browser, hopefully, will "
"warn you that the websites certificate is self-signed."
msgstr ""
"NGINX "
"测试页面将在`https://localhost:9443/<https://localhost:9443/>`___。请注意，希望您的浏览器会警告您网站证书是自签名的。"

#: ../nethsm/opendnssec.rst:2
msgid "OpenDNSSEC"
msgstr "OpenDNSSEC"

#: ../nethsm/opendnssec.rst:4
msgid ""
"`OpenDNSSEC <https://www.opendnssec.org/>`__ is a tool suite for managing"
" the security of domain names. It can directly load a PKCS#11 module and "
"manage the keys."
msgstr ""
"`OpenDNSSEC<https://www.opendnssec.org/>`__ 是一套管理域名安全的工具。它可以直接加载 PKCS#11 "
"模块并管理密钥。"

#: ../nethsm/opendnssec.rst:6
msgid ""
"To install and setup OpenDNSSEC, you can follow the `OpenDNSSEC Quick "
"Start Guide "
"<https://wiki.opendnssec.org/display/DOCS20/Quick+start+guide>`__. You "
"don't need to install ``SoftHSM``, the NetHSM PKCS#11 module will be used"
" instead."
msgstr ""
"要安装和设置 OpenDNSSEC，可以按照`OpenDNSSEC "
"快速入门指南<https://wiki.opendnssec.org/display/DOCS20/Quick+start+guide>`__ "
"进行。您无需安装``SoftHSM``，而是使用 NetHSM PKCS#11 模块。"

#: ../nethsm/opendnssec.rst:8
msgid ""
"As OpenDNSSEC needs access to manage the keys and then use them, you will"
" need to configure both administrator and operator account in the PKCS#11"
" module configuration file."
msgstr "由于 OpenDNSSEC 需要访问权限来管理和使用密钥，因此需要在 PKCS#11 模块配置文件中配置管理员和操作员账户。"

#: ../nethsm/opendnssec.rst:10
msgid ""
"You can configure OpenDNSSEC to load the libnethsm_pkcs11.so module by "
"editing the ``/etc/opendnssec/conf.xml`` file. You will need to add the "
"following lines:"
msgstr ""
"您可以通过编辑``/etc/opendnssec/conf.xml`` 文件来配置 OpenDNSSEC 以加载 "
"libnethsm_pkcs11.so 模块。您需要添加以下行："

#: ../nethsm/opendnssec.rst:35
msgid ""
"Replace ``/root/libnethsm_pkcs11.so`` with the path to the "
"libnethsm_pkcs11.so module. You need to match the ``<TokenLabel>`` with "
"the label you set in the ``p11nethsm.conf`` configuration file. The "
"``<PIN>`` is the operator PIN, you can either set it in plain text in the"
" ``conf.xml`` file or use ``ods-hsmutil login``. OpenDNSSEC need to have "
"a pin provided or it will refuse to start."
msgstr ""
"将``/root/libnethsm_pkcs11.so`` 替换为 libnethsm_pkcs11.so "
"模块的路径。您需要将``<TokenLabel>`` 与您在``p11nethsm.conf`` 配置文件中设置的标签相匹配。``<PIN>`` "
"是操作员 PIN 码，可以在``conf.xml`` 文件中以纯文本方式设置，或使用``ods-hsmutil "
"login``。OpenDNSSEC 需要提供密码，否则将拒绝启动。"

#: ../nethsm/opendnssec.rst:39
msgid ""
"You also need to update the ``<Repository>`` fields in "
"``/etc/opendnssec/kasp.xml`` to ``NetHSM`` instead of the default "
"``SoftHSM`` :"
msgstr ""
"您还需要将``/etc/opendnssec/kasp.xml`` 中的``<Repository>`` "
"字段更新为``NetHSM``，而不是默认的``SoftHSM``："

#: ../nethsm/openssl.rst:2
msgid "OpenSSL"
msgstr "OpenSSL"

#: ../nethsm/openssl.rst:6
msgid ""
"Trying to retrieve the private key will crash OpenSSL. This is normal "
"because private keys cannot be extracted from a NetHSM. You may want to "
"retrieve the public key instead (see example below)."
msgstr "尝试检索私钥将导致 OpenSSL 崩溃。这是正常现象，因为私钥无法从 NetHSM 中提取。您可能需要检索公钥（见下面的示例）。"

#: ../nethsm/openssl.rst:9
msgid "Engine"
msgstr "发动机"

#: ../nethsm/openssl.rst:12
msgid ""
"When using an engine (libp11) version of 0.4.12 or older, having an EdDSA"
" key on the NetHSM will cause OpenSSL to not find any key. On version "
"0.4.12 and older, the engine lists all the keys on the NetHSM when a key "
"is requested. When searching a key by label or id, it is recommended to "
"use version 0.4.13 or newer, or build `libp11 "
"<https://github.com/OpenSC/libp11>`__ from source. The engine binary will"
" be in ``src/.libs/pkcs11.so``."
msgstr ""
"在使用 0.4.12 或更旧版本的引擎（libp11）时，NetHSM 上的 EdDSA 密钥会导致 OpenSSL 找不到任何密钥。在 "
"0.4.12 及更高版本中，当请求一个密钥时，引擎会列出 NetHSM 上的所有密钥。通过标签或 ID 搜索密钥时，建议使用 0.4.13 "
"或更新版本，或从源代码构建`libp11<https://github.com/OpenSC/libp11>`__。引擎二进制文件将位于``src/.libs/pkcs11.so``。"

#: ../nethsm/openssl.rst:15
msgid ""
"The OpenSSL engine interface is the old way to implement custom backends "
"for OpenSSL and it is deprecated in OpenSSL 3. This is still the most "
"stable way to use the NetHSM with OpenSSL."
msgstr "OpenSSL 引擎接口是为 OpenSSL 实现自定义后端的旧方法，在 OpenSSL 3 中已被弃用。"

#: ../nethsm/openssl.rst:17 ../nethsm/openssl.rst:98
msgid ""
"You will need to setup the PKCS#11 module, following `these instructions "
"<pkcs11-setup.html>`__."
msgstr "您需要按照`上的说明设置 PKCS#11 模块<pkcs11-setup.html>`__。"

#: ../nethsm/openssl.rst:19
msgid "Install the engine:"
msgstr "安装发动机："

#: ../nethsm/openssl.rst:22
msgid "Debian/Ubuntu"
msgstr "Debian/Ubuntu"

#: ../nethsm/openssl.rst:28
msgid "Fedora"
msgstr "Fedora"

#: ../nethsm/openssl.rst:34
msgid "Arch Linux"
msgstr "Arch Linux"

#: ../nethsm/openssl.rst:40
msgid ""
"Next you need to configure OpenSSL to use the engine. This is done by "
"adding the following lines to your ``openssl.cnf`` file:"
msgstr "接下来需要配置 OpenSSL 以使用该引擎。在``openssl.cnf`` 文件中添加以下几行即可："

#: ../nethsm/openssl.rst:59 ../nethsm/openssl.rst:124
msgid ""
"You can specify to OpenSSL the path of the OpenSSL configuration file "
"using the ``OPENSSL_CONF`` environment variable."
msgstr "您可以使用``OPENSSL_CONF`` 环境变量向 OpenSSL 指定 OpenSSL 配置文件的路径。"

#: ../nethsm/openssl.rst:62
msgid ""
"If the main OpenSSL configuration file is modified to contain only these "
"lines, it could break other programs using OpenSSL. Thus, you may want to"
" create a separate configuration file for the engine."
msgstr "如果修改 OpenSSL 主配置文件，使其仅包含这些行，则可能会破坏使用 OpenSSL 的其他程序。因此，你可能需要为引擎创建一个单独的配置文件。"

#: ../nethsm/openssl.rst:64
msgid ""
"Replace ``/usr/lib/x86_64-linux-gnu/pkcs11/libnethsm_pkcs11.so`` with the"
" path to the PKCS#11 module you installed earlier."
msgstr ""
"将``/usr/lib/x86_64-linux-gnu/pkcs11/libnethsm_pkcs11.so`` 替换为您之前安装的 "
"PKCS#11 模块的路径。"

#: ../nethsm/openssl.rst:66
msgid ""
"Replace ``/usr/lib/x86_64-linux-gnu/engines-3/libpkcs11.so`` with the "
"path to the OpenSSL engine you installed. The path varies depending on "
"your distribution. The number in ``engines-3`` corresponds to your "
"OpenSSL version. On Debian the path for the OpenSSL 3 engine is "
"``/usr/lib/x86_64-linux-gnu/engines-3/libpkcs11.so``; for Fedora it's "
"``/usr/lib64/engines-3/libpkcs11.so``."
msgstr ""
"将``/usr/lib/x86_64-linux-gnu/engines-3/libpkcs11.so`` 替换为您安装的 OpenSSL "
"引擎的路径。路径因发行版而异。``engines-3`` 中的数字与 OpenSSL 版本相对应。在 Debian 上，OpenSSL 3 "
"引擎的路径是``/usr/lib/x86_64-linux-gnu/engines-3/libpkcs11.so``；在 Fedora "
"上，路径是``/usr/lib64/engines-3/libpkcs11.so``。"

#: ../nethsm/openssl.rst:68
msgid ""
"Now you can use keys on the NetHSM by using `PKCS#11 URIs <https://www"
".rfc-editor.org/rfc/rfc7512>`__, example:"
msgstr ""
"现在，您可以使用`PKCS#11 URIs<https://www.rfc-editor.org/rfc/rfc7512>`___，在 "
"NetHSM 上使用密钥："

#: ../nethsm/openssl.rst:74
msgid "This will use the key ``webserver``."
msgstr "这将使用密钥``webserver``。"

#: ../nethsm/openssl.rst:77
msgid ""
"You can use the ``p11tool`` command from `GnuTLS <https://gnutls.org/>` "
"get the full URI of the keys:"
msgstr "你可以使用``p11tool`` 命令从 `GnuTLS <https://gnutls.org/>` 获取密钥的完整 URI："

#: ../nethsm/openssl.rst:84
msgid "Example Command"
msgstr "命令示例"

#: ../nethsm/openssl.rst:86
msgid "Retrieve the public key of an asymmetric key pair on the NetHSM :"
msgstr "读取 NetHSM 上非对称密钥对的公开密钥："

#: ../nethsm/openssl.rst:94
msgid "Provider"
msgstr "提供商"

#: ../nethsm/openssl.rst:96
msgid ""
"The OpenSSL provider interface is the new way to implement custom "
"backends for OpenSSL. The `pkcs11-provider backend "
"<https://github.com/latchset/pkcs11-provider>`__ is still in an early "
"stage of development."
msgstr ""
"OpenSSL 提供者接口是为 OpenSSL 实现自定义后端的新方法。`pkcs11-provider "
"后端<https://github.com/latchset/pkcs11-provider>`__仍处于早期开发阶段。"

#: ../nethsm/openssl.rst:100
msgid ""
"Install the provider. For Fedora a package named ``pkcs11-provider`` "
"exists. For other Linux distributions you will need to `build it from "
"source "
"<https://github.com/latchset/pkcs11-provider/blob/main/BUILD.md>`__."
msgstr ""
"安装提供程序。Fedora 存在一个名为``pkcs11-provider`` 的软件包。对于其他 Linux "
"发行版，您需要`从源代码构建它<https://github.com/latchset/pkcs11-provider/blob/main/BUILD.md>`__。"

#: ../nethsm/openssl.rst:102
msgid ""
"Then you need to configure OpenSSL to use the provider. This is done by "
"adding the following lines to your ``openssl.cnf`` file:"
msgstr "然后，您需要配置 OpenSSL 以使用该提供程序。只需在``openssl.cnf`` 文件中添加以下几行即可："

#: ../nethsm/openssl.rst:119
msgid ""
"Set ``module`` to the path of the provider you installed and ``pkcs11"
"-module-path`` to the path of the PKCS#11 module you installed."
msgstr "将``module`` 设置为已安装的提供程序的路径，将``pkcs11-module-path`` 设置为已安装的 PKCS#11 模块的路径。"

#: ../nethsm/openssl.rst:121
msgid ""
"If you want to set NetHSM as the default provider, you can add ``default "
"= pkcs11`` to the ``provider_sect`` section."
msgstr "如果要将 NetHSM 设置为默认提供程序，可将``default = pkcs11`` 添加到``provider_sect`` 部分。"

#: ../nethsm/openssl.rst:128
msgid ""
"If the main OpenSSL configuration file is modified to contain only these "
"lines, it could break other programs using OpenSSL. Thus, you may want to"
" create a separate configuration file for the provider."
msgstr ""
"如果修改 OpenSSL 主配置文件，使其仅包含这些行，则可能会破坏使用 OpenSSL "
"的其他程序。因此，你可能需要为提供程序创建一个单独的配置文件。"

#: ../nethsm/openssl.rst:130
msgid ""
"Then you can use keys on the NetHSM by using `PKCS#11 URIs <https://www"
".rfc-editor.org/rfc/rfc7512>`__, example:"
msgstr ""
"然后，您可以通过`PKCS#11 URIs<https://www.rfc-editor.org/rfc/rfc7512>`__ 在 NetHSM"
" 上使用密钥，例如"

#: ../nethsm/openssl.rst:136
msgid ""
"If you set NetHSM as the default provider, you can omit the ``-provider "
"pkcs11`` argument."
msgstr "如果将 NetHSM 设置为默认提供程序，则可以省略``-provider pkcs11`` 参数。"

#: ../nethsm/openssl.rst:139
msgid ""
"Currently when manually setting a key type in the URI the provider will "
"not be able to find the key. You can omit the ``;type=private`` or "
"``;type=public`` part of the URI to make it work."
msgstr ""
"目前，在 URI 中手动设置密钥类型时，提供程序将无法找到密钥。您可以省略 URI 中的``;type=private`` "
"或``;type=public`` 部分，使其正常工作。"

#: ../nethsm/operation.rst:2 ../nitrokey3/windows/piv/access_control.rst:7
msgid "Operation"
msgstr "运作"

#: ../nethsm/operation.rst:4
msgid ""
"This chapter describes operational tasks for users with the "
"*Administrator* and *Operator* role. Please refer to chapter `Roles "
"<administration.html#roles>`__ to learn more about the role."
msgstr "本章描述了具有*管理员*和*操作者*角色的用户的操作任务。请参考`角色<administration.html#roles>`__一章，了解更多关于角色的信息。"

#: ../nethsm/operation.rst:11 ../nitrokey3/windows/piv/key_management.rst:2
#: ../nitrokey3/windows/piv/key_management.rst:23
msgid "Key Management"
msgstr "关键管理"

#: ../nethsm/operation.rst:14 ../nitrokey3/windows/piv/key_management.rst:52
msgid "Generate Key"
msgstr "生成密钥"

#: ../nethsm/operation.rst:16
msgid ""
"The NetHSM can generate key pairs. It is recommended to specify the key "
"ID option to give it an expressive name."
msgstr "NetHSM可以生成密钥对。建议指定密钥ID选项，给它一个有表现力的名字。"

#: ../nethsm/operation.rst:18 ../nethsm/operation.rst:104
msgid ""
"The supported key types and their corresponding mechanisms are the "
"following."
msgstr "支持的钥匙类型及其相应机制如下。"

#: ../nethsm/operation.rst:21 ../nethsm/operation.rst:107
msgid "Key Type"
msgstr "钥匙类型"

#: ../nethsm/operation.rst:21 ../nethsm/operation.rst:107
msgid "Mechanisms"
msgstr "机制"

#: ../nethsm/operation.rst:23 ../nethsm/operation.rst:109
msgid "``RSA``"
msgstr "``TAG``"

#: ../nethsm/operation.rst:23 ../nethsm/operation.rst:109
msgid ""
"``RSA_Decryption_RAW`` ``RSA_Decryption_PKCS1`` "
"``RSA_Decryption_OAEP_MD5`` ``RSA_Decryption_OAEP_SHA1`` "
"``RSA_Decryption_OAEP_SHA224`` ``RSA_Decryption_OAEP_SHA256`` "
"``RSA_Decryption_OAEP_SHA384`` ``RSA_Decryption_OAEP_SHA512`` "
"``RSA_Signature_PKCS1`` ``RSA_Signature_PSS_MD5`` "
"``RSA_Signature_PSS_SHA1`` ``RSA_Signature_PSS_SHA224`` "
"``RSA_Signature_PSS_SHA256`` ``RSA_Signature_PSS_SHA384`` "
"``RSA_Signature_PSS_SHA512``"
msgstr ""
"``RSA_Decryption_RAW`````RSA_Decryption_PKCS1 ``RSA_Decryption_OAEP_MD5 `"
" ```RSA_Decryption_OAEP_SHA1`````RSA_Decryption_OAEP_SHA224`` "
"``RSA_Decryption_OAEP_SHA256`` ``RSA_Decryption_OAEP_SHA384 `` "
"``RSA_Decryption_OAEP_SHA512<xid=\"226\"></x>` ``RSA_Signature_PKCS1`` "
"``RSA_Signature_PSS_MD5`` ``RSA_Signature_PSS_SHA1` ``</x>`` "
"<xid=\"308\"></x>`` ``RSA_Signature_PSS_SHA256`` "
"``RSA_Signature_PSS_SHA384`` ```x id=\"395\"></x>``x id=\"419\"></x"

#: ../nethsm/operation.rst:39 ../nethsm/operation.rst:125
msgid "``Curve25519``"
msgstr "``Curve25519``"

#: ../nethsm/operation.rst:39 ../nethsm/operation.rst:125
msgid "``EdDSA_Signature``"
msgstr "``EdDSA_Signature``"

#: ../nethsm/operation.rst:41 ../nethsm/operation.rst:127
msgid "``EC_P224``"
msgstr "``USER_ID``"

#: ../nethsm/operation.rst:41 ../nethsm/operation.rst:43
#: ../nethsm/operation.rst:45 ../nethsm/operation.rst:47
#: ../nethsm/operation.rst:127 ../nethsm/operation.rst:129
#: ../nethsm/operation.rst:131 ../nethsm/operation.rst:133
msgid "``ECDSA_Signature``"
msgstr "``EdDSA_Signature``"

#: ../nethsm/operation.rst:43 ../nethsm/operation.rst:129
msgid "``EC_P256``"
msgstr "``USER_ID``"

#: ../nethsm/operation.rst:45 ../nethsm/operation.rst:131
msgid "``EC_P384``"
msgstr "``USER_ID``"

#: ../nethsm/operation.rst:47 ../nethsm/operation.rst:133
msgid "``EC_P521``"
msgstr "``USER_ID``"

#: ../nethsm/operation.rst:49 ../nethsm/operation.rst:135
msgid "``Generic``"
msgstr "``USER_ID``"

#: ../nethsm/operation.rst:49 ../nethsm/operation.rst:135
msgid "``AES_Encryption_CBC`` ``AES_Decryption_CBC``"
msgstr "``AES_Encryption_CBC`````AES_Decryption_CBC```"

#: ../nethsm/operation.rst:53
msgid ""
"Keys are assigned to the *`Namespace <administration.html#namespaces>`__*"
" of the user that generates the key."
msgstr "密钥分配给生成密钥的用户的*`名称空间 <administration.html#namespaces>`__* 。"

#: ../nethsm/operation.rst:55
msgid "The key can be generated as follows."
msgstr "密钥可以按以下方式生成。"

#: ../nethsm/operation.rst:59 ../nethsm/operation.rst:145
#: ../nethsm/operation.rst:210 ../nethsm/operation.rst:243
#: ../nethsm/operation.rst:281 ../nethsm/operation.rst:306
#: ../nethsm/operation.rst:334 ../nethsm/operation.rst:395
#: ../nethsm/operation.rst:425 ../nethsm/operation.rst:466
#: ../nethsm/operation.rst:511 ../nethsm/operation.rst:557
#: ../nethsm/operation.rst:620 ../nethsm/operation.rst:684
#: ../nethsm/operation.rst:746 ../nethsm/operation.rst:787
msgid "**Required Role**"
msgstr "**需要的角色**"

#: ../nethsm/operation.rst:61 ../nethsm/operation.rst:147
#: ../nethsm/operation.rst:212 ../nethsm/operation.rst:397
#: ../nethsm/operation.rst:427 ../nethsm/operation.rst:468
msgid "This operation requires an authentication with the *Administrator* role."
msgstr "该操作需要以*Administrator*角色进行认证。"

#: ../nethsm/operation.rst:68 ../nethsm/operation.rst:154
msgid "``-t``, ``--type`` ``KEYTYPE``"
msgstr "``-p`, ``--port``` ``INTEGER```。"

#: ../nethsm/operation.rst:68 ../nethsm/operation.rst:154
msgid ""
"The type for the generated key. Possible values for the ``KEYTYPE`` "
"argument can be found in the table above."
msgstr "生成密钥的类型。``KEYTYPE``参数的可能值可以在上面的表中找到。"

#: ../nethsm/operation.rst:72 ../nethsm/operation.rst:158
msgid "``-m``, ``--mechanism`` ``MECHANISM``"
msgstr "``-m`, ``--mechanism``` ``MECHANISM```。"

#: ../nethsm/operation.rst:72 ../nethsm/operation.rst:158
msgid ""
"The mechanisms for the generated key. Possible values for the "
"``MECHANISM`` argument can be found in the table above."
msgstr "生成密钥的机制。``MECHANISM``参数的可能值可以在上表中找到。"

#: ../nethsm/operation.rst:84 ../nethsm/operation.rst:178
#: ../nethsm/operation.rst:475 ../nethsm/operation.rst:520
#: ../nethsm/operation.rst:566 ../nethsm/operation.rst:629
#: ../nethsm/operation.rst:693 ../nethsm/operation.rst:755
msgid "``-k``, ``--key-id`` ``TEXT``"
msgstr "``-k`, ``--key-id``` ``TEXT```。"

#: ../nethsm/operation.rst:84
msgid "The ID of the generated key"
msgstr "生成的钥匙的ID"

#: ../nethsm/operation.rst:97
msgid ""
"Information about the `/keys/generate` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys_generate>`__."
msgstr ""
"有关`/keys/generate` 端点的信息，请参见 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys_generate>`__。"

#: ../nethsm/operation.rst:100
msgid "Import Key"
msgstr "进口钥匙"

#: ../nethsm/operation.rst:102
msgid "The NetHSM can import existing private keys to the *Key Store*."
msgstr "NetHSM可以将现有的私钥导入到*钥匙库。"

#: ../nethsm/operation.rst:139
msgid ""
"Keys are assigned to the `*Namespace* <administration.html#namespaces>`__"
" of the user that imports the key."
msgstr "密钥分配给导入密钥的用户的`*命名空间*<administration.html#namespaces>`__。"

#: ../nethsm/operation.rst:141
msgid "The import can be initiated as follows."
msgstr "可以按以下方式启动进口。"

#: ../nethsm/operation.rst:162
msgid "``-p``, ``--prime-p`` ``TEXT``"
msgstr "``-u`, ``--user-id``` ``TEXT```。"

#: ../nethsm/operation.rst:162
msgid "The prime p for RSA keys, base64-encoded"
msgstr "RSA 密钥的质数 p，base64 编码"

#: ../nethsm/operation.rst:164
msgid "``-q``, ``--prime-q`` ``TEXT``"
msgstr "``-u`, ``--user-id``` ``TEXT```。"

#: ../nethsm/operation.rst:164
msgid "The prime q for RSA keys, base64-encoded"
msgstr "基 64 编码的 RSA 密钥质数 q"

#: ../nethsm/operation.rst:166
msgid "``-e``, ``--public-exponent`` ``TEXT``"
msgstr "``-e`, ``--public-exponent``` ``TEXT` ``."

#: ../nethsm/operation.rst:166
msgid "The public exponent for RSA keys, base64 encoded"
msgstr "RSA 密钥的公共指数，base64 编码"

#: ../nethsm/operation.rst:169 ../nethsm/operation.rst:631
#: ../nethsm/operation.rst:695 ../nethsm/operation.rst:757
msgid "``-d``, ``--data`` ``TEXT``"
msgstr "``-d`, ``--data``` ``TEXT```。"

#: ../nethsm/operation.rst:169
msgid "The key data for ED25519 or ECDSA_* keys, base64-encoded"
msgstr "ED25519 或 ECDSA_* 密钥的基 64 编码密钥数据"

#: ../nethsm/operation.rst:178
msgid "The ID of the new key"
msgstr "新钥匙的ID"

#: ../nethsm/operation.rst:180
msgid "``--tags`` ``TEXT``"
msgstr "``--tags````TEXT``"

#: ../nethsm/operation.rst:180
msgid "The Tag for the new key"
msgstr "新钥匙的标签"

#: ../nethsm/operation.rst:200
msgid ""
"Information about the `/keys` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys>`__."
msgstr ""
"有关`/keys` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys>`__。"

#: ../nethsm/operation.rst:203
msgid "Delete Key"
msgstr "删除键"

#: ../nethsm/operation.rst:205
msgid ""
"The NetHSM can delete keys from the *Key Store*. Users can only delete "
"keys in their `*Namespace* <administration.html#namespaces>`__."
msgstr ""
"NetHSM 可以从*密钥存储* "
"中删除密钥。用户只能删除其`*命名空间*<administration.html#namespaces>`__中的密钥。"

#: ../nethsm/operation.rst:219 ../nethsm/operation.rst:404
#: ../nethsm/operation.rst:434
msgid "``KEY_ID``"
msgstr "``--time``"

#: ../nethsm/operation.rst:219
msgid "The key ID of the key to delete"
msgstr "要删除的钥匙的钥匙ID"

#: ../nethsm/operation.rst:232
msgid ""
"Information about the `/keys/{KeyID}` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/delete_keys__KeyID_>`__."
msgstr ""
"有关`/keys/{KeyID}`端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/delete_keys__KeyID_>`__。"

#: ../nethsm/operation.rst:235 ../nethsm/pkcs11-tool.rst:102
msgid "List Keys"
msgstr "列表键"

#: ../nethsm/operation.rst:237
msgid ""
"The NetHSM can list all keys in the *Key Store* that are in the "
"`*Namespace* <administration.html#namespaces>`__ of the current user."
msgstr ""
"NetHSM 可以列出*Key Store* "
"中属于`*Namespace*<administration.html#namespaces>`___当前用户的所有键。"

#: ../nethsm/operation.rst:245 ../nethsm/operation.rst:283
#: ../nethsm/operation.rst:308 ../nethsm/operation.rst:336
#: ../nethsm/operation.rst:513 ../nethsm/operation.rst:559
msgid ""
"This operation requires an authentication with the *Administrator* or "
"*Operator* role."
msgstr "该操作需要以*管理员*或*操作者*的角色进行认证。"

#: ../nethsm/operation.rst:252
msgid "``-f``, ``--filter`` ``TEXT``"
msgstr "``-f``,``--filter````TEXT``"

#: ../nethsm/operation.rst:252
msgid "The Tag to search for"
msgstr "要搜索的标签"

#: ../nethsm/operation.rst:269
msgid ""
"Information about the `/keys` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys>`__."
msgstr ""
"有关`/keys` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys>`__。"

#: ../nethsm/operation.rst:272
msgid "Show Key Details"
msgstr "显示关键细节"

#: ../nethsm/operation.rst:274
msgid ""
"The NetHSM can output more detailed information about a stored key. Users"
" can only access keys in their `*Namespace* "
"<administration.html#namespaces>`__."
msgstr ""
"NetHSM "
"可以输出有关存储密钥的更详细信息。用户只能访问其`*命名空间*<administration.html#namespaces>`__中的密钥。"

#: ../nethsm/operation.rst:277
msgid "The detailed information can be retrieved as follows."
msgstr "详细信息可按以下方式检索。"

#: ../nethsm/operation.rst:300
msgid ""
"Information about the `/keys/{KeyID}` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys__KeyID_>`__."
msgstr ""
"有关`/keys/{KeyID}`端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys__KeyID_>`__。"

#: ../nethsm/operation.rst:302
msgid ""
"The public key of a key can be retrieved as follows. It's in PKCS#8 "
"format."
msgstr "密钥的公钥可按如下方式获取。它采用 PKCS#8 格式。"

#: ../nethsm/operation.rst:328 ../nethsm/operation.rst:378
msgid ""
"Information about the `/keys/{KeyID}/public.pem` endpoint can be found in"
" the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys__KeyID__public_pem>`__."
msgstr ""
"有关`/keys/{KeyID}/public.pem`端点的信息，请参阅 \"API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys__KeyID__public_pem>`___。"

#: ../nethsm/operation.rst:330
msgid "The public key can be inspected for example with OpenSSL as follows."
msgstr "例如，可以用OpenSSL检查公钥，方法如下。"

#: ../nethsm/operation.rst:381
msgid "Tags for Keys"
msgstr "钥匙的标签"

#: ../nethsm/operation.rst:383
msgid ""
"*Tags* can be used to set fine-grained access restrictions on keys, and "
"are an optional feature. One or more *Tags* can be assigned to a key. The"
" *Operator* users can see all keys, but only use those with at least one "
"corresponding *Tag*. If a key has no *Tag* it can be used by all "
"*Operator* users. A *Tag* can not be modified by an *Operator* user."
msgstr ""
"*标签* 可用于对按键设置细粒度的访问限制，是一项可选功能。一个按键可以分配一个或多个*标签* 。*操作员* "
"用户可以查看所有按键，但只能使用至少有一个相应*标签的按键* 。如果某个密钥没有*Tag* ，则所有*操作员* 用户都可以使用该密钥。*操作员* "
"用户不能修改*Tag* 。"

#: ../nethsm/operation.rst:385
msgid ""
"To learn about how to use *Tags* on *Operator* accounts, please refer to "
"chapter `Tags for Users <administration.html#tags-for-users>`__."
msgstr "要了解如何在*操作者*账户上使用*标记，请参考`用户的标记<administration.html#tags-for-users>`__一章。"

#: ../nethsm/operation.rst:388
msgid ""
"*Tags* are managed without restrictions by users with the *Administrator*"
" role."
msgstr "*标签*由具有*管理员*角色的用户无限制地管理。"

#: ../nethsm/operation.rst:391
msgid "The *Tag* can be added as follows."
msgstr "可以按以下方式添加*标签。"

#: ../nethsm/operation.rst:404
msgid "The key ID to set the tag on"
msgstr "用于设置标签的钥匙ID"

#: ../nethsm/operation.rst:406
msgid "The tag to set on the key"
msgstr "要在钥匙上设置的标签"

#: ../nethsm/operation.rst:419
msgid ""
"Information about the `/keys/{KeyID}/restrictions/tags/{Tag}` endpoint "
"can be found in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/put_keys__KeyID__restrictions_tags__Tag_>`__."
msgstr ""
"有关`/keys/{KeyID}/restrictions/tags/{Tag}` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/put_keys__KeyID__restrictions_tags__Tag_>`__。"

#: ../nethsm/operation.rst:434
msgid "The key ID to set the tag on."
msgstr "要设置标签的钥匙ID。"

#: ../nethsm/operation.rst:436
msgid "The tag to set on the key."
msgstr "要设置在钥匙上的标签。"

#: ../nethsm/operation.rst:449
msgid ""
"Information about the `/keys/{KeyID}/restrictions/tags/{Tag}` endpoint "
"can be found in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/delete_keys__KeyID__restrictions_tags__Tag_>`__."
msgstr ""
"有关`/keys/{KeyID}/restrictions/tags/{Tag}` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/delete_keys__KeyID__restrictions_tags__Tag_>`__。"

#: ../nethsm/operation.rst:452
msgid "Key Certificates"
msgstr "关键证书"

#: ../nethsm/operation.rst:454
msgid ""
"It is possible to set and query certificates for the keys stored on a "
"NetHSM."
msgstr "可以为存储在NetHSM上的钥匙设置和查询证书。"

#: ../nethsm/operation.rst:456
msgid "The supported MIME types are as follows."
msgstr "支持的MIME类型如下。"

#: ../nethsm/operation.rst:458
msgid "``application/x-pem-file``"
msgstr "``application/x-pem-file``"

#: ../nethsm/operation.rst:459
msgid "``application/x-x509-ca-cert``"
msgstr "``application/x-x509-ca-cert``"

#: ../nethsm/operation.rst:460
msgid "``application/pgp-keys``"
msgstr "``application/pgp-keys``"

#: ../nethsm/operation.rst:462
msgid "The certificate can be set as follows."
msgstr "该证书可按以下方式设置。"

#: ../nethsm/operation.rst:475
msgid "The ID of the key to set the certificate for"
msgstr "为其设置证书的钥匙的ID。"

#: ../nethsm/operation.rst:483
msgid "``-m``, ``--mime-type`` ``MIME_TYPE``"
msgstr "``-m`, ``--mechanism``` ``MECHANISM```。"

#: ../nethsm/operation.rst:483
msgid ""
"The MIME type of the certificate. The available MIME types are listed "
"above."
msgstr "证书的MIME类型。可用的MIME类型在上面列出。"

#: ../nethsm/operation.rst:505
msgid ""
"Information about the `/keys/{KeyID}/cert` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/put_keys__KeyID__cert>`__."
msgstr ""
"有关`/keys/{KeyID}/cert` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/put_keys__KeyID__cert>`__。"

#: ../nethsm/operation.rst:507
#: ../nitrokey3/windows/piv/certificate_management.rst:13
msgid "The certificate can be retrieved as follows."
msgstr "该证书可按以下方式检索。"

#: ../nethsm/operation.rst:520
msgid "The ID of the key to get the certificate for"
msgstr "获取证书的钥匙的ID。"

#: ../nethsm/operation.rst:548
msgid ""
"Information about the `/keys/{KeyID}/cert` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys__KeyID__cert>`__."
msgstr ""
"有关`/keys/{KeyID}/cert` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/put_keys__KeyID__cert>`__。"

#: ../nethsm/operation.rst:551
msgid "Key Certificate Signing Requests"
msgstr "密钥证书签名请求"

#: ../nethsm/operation.rst:553
msgid ""
"The NetHSM supports generating CSR (Certificate Signing Requests) for the"
" stored keys."
msgstr "NetHSM支持为存储的密钥生成CSR（证书签名请求）。"

#: ../nethsm/operation.rst:566
msgid "The ID of the key to generate the CSR for"
msgstr "用于生成CSR的钥匙的ID。"

#: ../nethsm/operation.rst:600
msgid ""
"Information about the `/keys/{KeyID}/csr.pem` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__csr_pem>`__."
msgstr ""
"有关`/keys/{KeyID}/csr.pem`端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__csr_pem>`__。"

#: ../nethsm/operation.rst:603
msgid "Key Operations"
msgstr "关键业务"

#: ../nethsm/operation.rst:605
msgid ""
"All operations described in this chapter can only be executed for keys "
"that are in the `*Namespace* <administration.html#namespaces>`__ of the "
"current user."
msgstr "本章所述的所有操作只能对当前用户的`*命名空间*<administration.html#namespaces>`__中的键执行。"

#: ../nethsm/operation.rst:608 ../nethsm/pkcs11-tool.rst:157
msgid "Encrypt"
msgstr "加密"

#: ../nethsm/operation.rst:610
msgid ""
"The NetHSM can encrypt data for symmetric keys, stored in the *Key "
"Store*. In contrast encrypting data with asymmetric keys can not be done "
"on the NetHSM, because of the concept in public-key cryptography to make "
"the public key available to everybody. For asymmetric keys the NetHSM "
"provides the public key, which can be used for encryption with an "
"external tool. Please refer to the `Show Key Details <operation.html"
"#show-key-details>`__ to learn more about how to retrieve the public key "
"of a key in the *Key Store*."
msgstr ""
"NetHSM可以对存储在*Key Store* "
"的对称密钥进行数据加密。相反，用非对称钥匙加密数据不能在NetHSM上进行，因为公钥密码学的概念是让每个人都能得到公钥。对于非对称密钥，NetHSM提供了公共密钥，可以用外部工具进行加密。请参考`显示密钥细节<operation.html"
"#show-key-details>`__，以了解更多关于如何在*密钥存储* 中检索一个密钥的公开密钥。"

#: ../nethsm/operation.rst:616
msgid "Data can be encrypted for a symmetric key as follows."
msgstr "数据可以按以下方式对对称密钥进行加密。"

#: ../nethsm/operation.rst:622 ../nethsm/operation.rst:686
#: ../nethsm/operation.rst:748 ../nethsm/operation.rst:789
msgid "This operation requires an authentication with the *Operator* role."
msgstr "该操作需要用*操作者*角色进行认证。"

#: ../nethsm/operation.rst:629
msgid "The ID of the key to encrypt the data with"
msgstr "用于加密数据的密钥 ID"

#: ../nethsm/operation.rst:631
msgid "The data in Base64 encoding"
msgstr "Base64 编码的数据"

#: ../nethsm/operation.rst:633
msgid "``-m``, ``--mode`` ``[AES_CBC]``"
msgstr "`-m``, ` ` ` ``--mode` `[AES_CBC]`"

#: ../nethsm/operation.rst:633
msgid "The encrypt mode"
msgstr "加密模式"

#: ../nethsm/operation.rst:635
msgid "``-iv``, ``--initialization-vector`` ``TEXT``"
msgstr "`-iv``, ` ` ` ``--initialization-vector` `TEXT`"

#: ../nethsm/operation.rst:635
msgid "The initialization vector in Base64 encoding"
msgstr "Base64 编码的初始化向量"

#: ../nethsm/operation.rst:650
msgid ""
"Information about the `/keys/{KeyID}/encrypt` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__encrypt>`__."
msgstr "关于`/keys/{KeyID}/encrypt`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__encrypt>`__中找到。"

#: ../nethsm/operation.rst:652
msgid ""
"This prints the encrypted and base64 encoded message ``NetHSM "
"rulezzzzzzzzzzzzzzzzzzz!``, and the initialization vector."
msgstr "这将打印经过加密和base64编码的消息``NetHSM rulezzzzzzzzzzzzzzzzzzz!``，以及初始化向量。"

#: ../nethsm/operation.rst:654
msgid "Data can be encrypted for asymmetric keys with OpenSSL as follows."
msgstr "可以用OpenSSL对非对称密钥进行如下加密。"

#: ../nethsm/operation.rst:660
msgid ""
"This writes the encrypted and base64 encoded message ``NetHSM rulez!`` "
"into the file ``data.crypt``, using the public key from ``public.pem``."
msgstr "这将加密和base64编码的信息``NetHSM rulez!`` 写入文件``data.crypt``，使用``public.pem`` 的公钥。"

#: ../nethsm/operation.rst:663 ../nethsm/pkcs11-tool.rst:169
msgid "Decrypt"
msgstr "解密"

#: ../nethsm/operation.rst:665
msgid ""
"The NetHSM can decrypt data for an private key stored in the *Key Store* "
"on the NetHSM. This example uses the encrypted message from the previous "
"chapter `Encrypt <operation.html#encrypt>`__."
msgstr ""
"NetHSM可以为存储在NetHSM上的*Key Store*的私钥解密数据。这个例子使用了上一章的加密信息 `Encrypt "
"<operation.html#encrypt>`__。"

#: ../nethsm/operation.rst:668
msgid "The supported decrypt modes are as follows."
msgstr "支持的解密模式如下。"

#: ../nethsm/operation.rst:670
msgid "``RAW``"
msgstr "``TAG``"

#: ../nethsm/operation.rst:671 ../nethsm/operation.rst:732
msgid "``PKCS1``"
msgstr "``PKCS1``"

#: ../nethsm/operation.rst:672
msgid "``OAEP_MD5``"
msgstr "``FILENAME``"

#: ../nethsm/operation.rst:673
msgid "``OAEP_SHA1``"
msgstr "``--network``"

#: ../nethsm/operation.rst:674
msgid "``OAEP_SHA224``"
msgstr "``OAEP_SHA224``"

#: ../nethsm/operation.rst:675
msgid "``OAEP_SHA256``"
msgstr "``OAEP_SHA224``"

#: ../nethsm/operation.rst:676
msgid "``OAEP_SHA384``"
msgstr "``OAEP_SHA224``"

#: ../nethsm/operation.rst:677
msgid "``OAEP_SHA512``"
msgstr "``OAEP_SHA224``"

#: ../nethsm/operation.rst:678
msgid "``AES_CBC``"
msgstr "``USER_ID``"

#: ../nethsm/operation.rst:680
msgid "The data can be decrypted as follows."
msgstr "数据可以被解密如下。"

#: ../nethsm/operation.rst:693
msgid "The ID of the key to decrypt the data width"
msgstr "用于解密数据宽度的钥匙的ID"

#: ../nethsm/operation.rst:695
msgid "The encrypted data in Base64 encoding"
msgstr "以Base64编码的加密数据"

#: ../nethsm/operation.rst:697 ../nethsm/operation.rst:759
msgid "``-m``, ``--mode`` ``MODE``"
msgstr "``-d`, ``--data``` ``TEXT```。"

#: ../nethsm/operation.rst:697
msgid "The decrypt mode. Available modes are listed above."
msgstr "解密模式。可用的模式在上面列出。"

#: ../nethsm/operation.rst:710
msgid ""
"Information about the `/keys/{KeyID}/decrypt` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__decrypt>`__."
msgstr ""
"有关`/keys/{KeyID}/decrypt` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__decrypt>`__。"

#: ../nethsm/operation.rst:713 ../nethsm/pkcs11-tool.rst:196
msgid "Sign"
msgstr "签名"

#: ../nethsm/operation.rst:715
msgid ""
"The NetHSM can sign data for a private key stored in the *Key Store* on "
"the NetHSM. For signatures with a RSA and ECDSA key, a digest must be "
"calculate first."
msgstr "NetHSM可以为存储在NetHSM的*Key Store*中的私钥签署数据。对于使用RSA和ECDSA密钥的签名，必须先计算出摘要。"

#: ../nethsm/operation.rst:718
msgid ""
"To calculate a digest the data is required first. A message is created as"
" follows."
msgstr "要计算一个摘要，首先需要数据。一个信息的创建方法如下。"

#: ../nethsm/operation.rst:724
msgid "The digest is calculated with OpenSSL as follows."
msgstr "该摘要用OpenSSL计算如下。"

#: ../nethsm/operation.rst:730
msgid "The supported signing modes are as follows."
msgstr "支持的签名模式如下。"

#: ../nethsm/operation.rst:733
msgid "``PSS_MD5``"
msgstr "``USER_ID``"

#: ../nethsm/operation.rst:734
msgid "``PSS_SHA1``"
msgstr "``FILENAME``"

#: ../nethsm/operation.rst:735
msgid "``PSS_SHA224``"
msgstr "``Curve25519``"

#: ../nethsm/operation.rst:736
msgid "``PSS_SHA256``"
msgstr "``Curve25519``"

#: ../nethsm/operation.rst:737
msgid "``PSS_SHA384``"
msgstr "``Curve25519``"

#: ../nethsm/operation.rst:738
msgid "``PSS_SHA512``"
msgstr "``Curve25519``"

#: ../nethsm/operation.rst:739
msgid "``EdDSA``"
msgstr "``PKCS1``"

#: ../nethsm/operation.rst:740
msgid "``ECDSA``"
msgstr "``PKCS1``"

#: ../nethsm/operation.rst:742
msgid "From the digest a signature can be created as follows."
msgstr "从摘要中可以创建一个签名，如下所示。"

#: ../nethsm/operation.rst:755
msgid "The ID of the key to sign the data width"
msgstr "签署数据宽度的钥匙的ID"

#: ../nethsm/operation.rst:757
msgid "The data to sign encoded using Base64"
msgstr "要使用Base64编码的数据"

#: ../nethsm/operation.rst:759
msgid "The sign mode"
msgstr "符号模式"

#: ../nethsm/operation.rst:768
msgid ""
"Information about the `/keys/{KeyID}/sign` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__sign>`__."
msgstr ""
"有关`/keys/{KeyID}/sign` 端点的信息，请参阅 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__sign>`__。"

#: ../nethsm/operation.rst:770
msgid "The created signature can be verified with OpenSSL as follows."
msgstr "创建的签名可以用OpenSSL进行验证，方法如下。"

#: ../nethsm/operation.rst:781
msgid "Random"
msgstr "随机"

#: ../nethsm/operation.rst:783
msgid "The NetHSM can provide random bytes as a Base64 string."
msgstr "NetHSM可以以Base64字符串的形式提供随机字节。"

#: ../nethsm/operation.rst:796
msgid "``LENGTH``"
msgstr "``--time``"

#: ../nethsm/operation.rst:796
msgid "Bytes to retrieve"
msgstr "检索的字节数"

#: ../nethsm/operation.rst:809
msgid ""
"Information about the `/random` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_random>`__."
msgstr ""
"有关`/random` 端点的信息，请参见 `API "
"文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_random>`__。"

#: ../nethsm/pkcs11-setup.rst:2
msgid "PKCS#11 Setup"
msgstr "PKCS#11 设置"

#: ../nethsm/pkcs11-setup.rst:6 ../nitrokey3/shared/nitropy.rst:9
#: ../pro/openpgp-thunderbird.rst.inc:26
#: ../software/nitropy/all-platforms/installation.rst:66
#: ../software/nk-app2/index.rst:6
msgid "Installation"
msgstr "安装"

#: ../nethsm/pkcs11-setup.rst:8
msgid ""
"You can either get the NetHSM PKCS#11 module as a precompiled binary or "
"compile it from source."
msgstr "您可以获取 NetHSM PKCS#11 模块的预编译二进制文件，也可以从源代码中编译它。"

#: ../nethsm/pkcs11-setup.rst:11
msgid "Precompiled Binaries"
msgstr "预编译二进制文件"

#: ../nethsm/pkcs11-setup.rst:13
msgid ""
"Download the module file corresponding to your system from the `releases "
"page <https://github.com/Nitrokey/nethsm-pkcs11/releases>`__ of the "
"repository."
msgstr ""
"从`版本库页面<https://github.com/Nitrokey/nethsm-"
"pkcs11/releases>`__下载与你的系统相对应的模块文件。"

#: ../nethsm/pkcs11-setup.rst:14
msgid ""
"Copy the module file to the directory where your PKCS#11 applications "
"expect to find it."
msgstr "将模块文件复制到 PKCS#11 应用程序希望找到它的目录。"

#: ../nethsm/pkcs11-setup.rst:17
msgid "Compile From Source"
msgstr "从源代码编译"

#: ../nethsm/pkcs11-setup.rst:19
msgid "Install the `Rust toolchain <https://www.rust-lang.org/tools/install>`__."
msgstr "安装`Rust 工具链<https://www.rust-lang.org/tools/install>`__。"

#: ../nethsm/pkcs11-setup.rst:20
msgid ""
"Download and extract the source from the `releases page "
"<https://github.com/Nitrokey/nethsm-pkcs11/releases>`__ or clone the "
"`repository <https://github.com/Nitrokey/nethsm-pkcs11>`__."
msgstr ""
"从`发行版页面<https://github.com/Nitrokey/nethsm-"
"pkcs11/releases>`__下载并提取源代码，或克隆`资源库<https://github.com/Nitrokey/nethsm-"
"pkcs11>`__。"

#: ../nethsm/pkcs11-setup.rst:21
msgid "Run ``cargo build --release`` in the source directory."
msgstr "在源代码目录下运行``cargo build --release``。"

#: ../nethsm/pkcs11-setup.rst:27
msgid "By default the module searches for configuration files in:"
msgstr "默认情况下，模块会在以下位置搜索配置文件："

#: ../nethsm/pkcs11-setup.rst:29
msgid "``/etc/nitrokey/p11nethsm.conf``"
msgstr "``/etc/nitrokey/p11nethsm.conf``"

#: ../nethsm/pkcs11-setup.rst:30
msgid "``/usr/local/etc/nitrokey/p11nethsm.conf``"
msgstr "``/usr/local/etc/nitrokey/p11nethsm.conf``"

#: ../nethsm/pkcs11-setup.rst:31
msgid "``$HOME/.config/nitrokey/p11nethsm.conf``"
msgstr "``$HOME/.config/nitrokey/p11nethsm.conf``"

#: ../nethsm/pkcs11-setup.rst:33
msgid ""
"If multiple files are present the configurations will be merged so that "
"the slots of all the config files will be used by the module."
msgstr "如果存在多个文件，配置将被合并，以便模块使用所有配置文件的插槽。"

#: ../nethsm/pkcs11-setup.rst:35
msgid ""
"You can manually set the config file location (only this one will be "
"read) with the env variable ``P11NETHSM_CONFIG_FILE`` (e.g. "
"``P11NETHSM_CONFIG_FILE=./p11nethsm.conf``)."
msgstr "您可以使用环境变量``P11NETHSM_CONFIG_FILE``（例如``P11NETHSM_CONFIG_FILE=./p11nethsm.conf``）手动设置配置文件的位置（只读取该文件）。"

#: ../nethsm/pkcs11-setup.rst:38
msgid "Configuration File Format"
msgstr "配置文件格式"

#: ../nethsm/pkcs11-setup.rst:40
msgid "The configuration is yaml-formatted:"
msgstr "配置采用 yaml 格式："

#: ../nethsm/pkcs11-setup.rst:43
msgid "All platforms"
msgstr "所有平台"

#: ../nethsm/pkcs11-setup.rst:117
msgid "Instances"
msgstr "实例"

#: ../nethsm/pkcs11-setup.rst:119
msgid ""
"If multiple NetHSM instances are listed in the same slot, these instances"
" must be configured in a cluster. The credentials of the users and the "
"keys must be the same on all instances."
msgstr "如果同一插槽中列出多个 NetHSM 实例，则必须将这些实例配置为一个群集。所有实例上的用户证书和密钥必须相同。"

#: ../nethsm/pkcs11-setup.rst:121
msgid ""
"The module will use the instances in a round-robin fashion, trying "
"another instance if one fails."
msgstr "模块将以循环方式使用实例，如果一个实例失败，就会尝试另一个实例。"

#: ../nethsm/pkcs11-setup.rst:125
msgid "Users"
msgstr "用户"

#: ../nethsm/pkcs11-setup.rst:127
msgid ""
"The operator and administrator users are both optional but the module "
"won't start if no user is configured. This is so you can configure the "
"module with only an administrator user, only an operator user or both at "
"the same time."
msgstr "操作员和管理员用户都是可选的，但如果没有配置用户，模块将无法启动。因此，您可以只配置管理员用户、操作员用户或同时配置这两个用户。"

#: ../nethsm/pkcs11-setup.rst:129
msgid ""
"When the two users are set the module will use the operator by default "
"and only use the administrator user when the action needs it."
msgstr "设置两个用户后，模块将默认使用操作员用户，只有在操作需要时才使用管理员用户。"

#: ../nethsm/pkcs11-setup.rst:131
msgid ""
"The regular PKCS11 user is mapped to the NetHSM operator and the PKCS11 "
"SO is mapped to the NetHSM administrator."
msgstr "常规 PKCS11 用户映射为 NetHSM 操作员，PKCS11 SO 映射为 NetHSM 管理员。"

#: ../nethsm/pkcs11-setup.rst:134 ../nitrokey3/shared/reset.rst.inc:17
#: ../software/nk-app2/passwords.rst:2
msgid "Passwords"
msgstr "密码"

#: ../nethsm/pkcs11-setup.rst:136
msgid "The password can be provided by multiple means:"
msgstr "密码可以通过多种方式提供："

#: ../nethsm/pkcs11-setup.rst:138
msgid "In plain text in the configuration ``password: \"mypassword\"``"
msgstr "在配置``password: \"mypassword\"`` 中以纯文本形式出现。"

#: ../nethsm/pkcs11-setup.rst:139
msgid ""
"In an environment variable read by the module with the ``env:`` prefix: "
"``env:ENV_STORING_THE_PASSWORD``"
msgstr "在模块读取的环境变量中，以``env:`` 为前缀：``env:ENV_STORING_THE_PASSWORD``"

#: ../nethsm/pkcs11-setup.rst:140
msgid ""
"Via the login function of pkcs11, example for pcks11-tool: ``pkcs11-tool "
"--module libnethsm_pkcs11.so -p opPassphrase`` To provide the the admin "
"password you need to use ``--so-pin`` instead: ``pkcs11-tool --module "
"libnethsm_pkcs11.so --login --login-type so --so-pin Administrator``"
msgstr ""
"通过 pkcs11 的登录功能，以 pcks11-tool 为例：``pkcs11-tool --module "
"libnethsm_pkcs11.so -p opPassphrase`` 要提供管理员密码，需要使用``--so-pin`` "
"代替：``pkcs11-tool --module libnethsm_pkcs11.so --login --login-type so "
"--so-pin Administrator``"

#: ../nethsm/pkcs11-setup.rst:143
msgid ""
"If the password of an user is not set in the configuration file a login "
"will be required to provide the password (3rd method)."
msgstr "如果配置文件中未设置用户密码，则需要登录以提供密码（第 3 种方法）。"

#: ../nethsm/pkcs11-setup.rst:145
msgid ""
"A NetHSM that is not operational is considered as a slot with the token "
"not present."
msgstr "未运行的 NetHSM 被视为不存在令牌的插槽。"

#: ../nethsm/pkcs11-tool.rst:2
msgid "pkcs11-tool"
msgstr "pkcs11 工具"

#: ../nethsm/pkcs11-tool.rst:4
msgid ""
"`pkcs11-tool <https://github.com/OpenSC/OpenSC/wiki/Using-pkcs11-tool-"
"and-OpenSSL>`__ is a tool part of the `OpenSC "
"<https://github.com/OpenSC/OpenSC>`__ project that can be used to manage "
"keys on a PKCS#11 device."
msgstr ""
"`pkcs11-tool<https://github.com/OpenSC/OpenSC/wiki/Using-pkcs11-tool-and-"
"OpenSSL>`__ 是`OpenSC<https://github.com/OpenSC/OpenSC>`__ 项目的一个工具，可用于管理 "
"PKCS#11 设备上的密钥。"

#: ../nethsm/pkcs11-tool.rst:6
msgid ""
"You need to pass the location of the PKCS#11 module to use with the "
"``--module`` option:"
msgstr "您需要通过``--module`` 选项传递要使用的 PKCS#11 模块的位置："

#: ../nethsm/pkcs11-tool.rst:12
msgid ""
"Replace ``/usr/lib/nitrokey/libnethsm_pkcs11.so`` with the path where the"
" NetHSM PKCS#11 module is located."
msgstr "将``/usr/lib/nitrokey/libnethsm_pkcs11.so`` 替换为 NetHSM PKCS#11 模块所在的路径。"

#: ../nethsm/pkcs11-tool.rst:14
msgid "You can test if the module is working with the next command:"
msgstr "您可以使用下一条命令测试模块是否正常工作："

#: ../nethsm/pkcs11-tool.rst:20
msgid "You should see something like this:"
msgstr "你应该看到这样的内容："

#: ../nethsm/pkcs11-tool.rst:30
msgid "List Slots"
msgstr "槽位列表"

#: ../nethsm/pkcs11-tool.rst:32
msgid ""
"The information about the available slots. The listed slots depend on the"
" configuration of the slots array in the `p11nethsm.conf` configuration "
"file. To learn more about the configuration of slots, please refer to "
"chapter `Configuration <pkcs11-setup.html#Configuration>`_."
msgstr ""
"有关可用插槽的信息。列出的插槽取决于`p11nethsm.conf`配置文件中插槽阵列的配置。要了解有关插槽配置的更多信息，请参阅 "
"\"配置<pkcs11-setup.html#Configuration>`_\"一章。"

#: ../nethsm/pkcs11-tool.rst:53
msgid ""
"If your configuration supports more than one slot, you may have to add "
"the ``--slot <arg>`` option in pkcs11-tool commands to use the right one."
msgstr "如果配置支持多个插槽，可能需要在 pkcs11-tool 命令中添加``--slot <arg>`` 选项，以使用正确的插槽。"

#: ../nethsm/pkcs11-tool.rst:56
msgid "Key IDs"
msgstr "关键 ID"

#: ../nethsm/pkcs11-tool.rst:58
msgid ""
"pkcs11-tool uses an hexadecimal key ID to identify keys. NetHSM uses "
"alphanumerical strings as key ID. NetHSM's PKCS#11 module uses the raw "
"byte values of the string to form the PKCS#11 ID. You can get the "
"hexadecimal version of a NetHSM key with ``xxd``:"
msgstr ""
"pkcs11-tool 使用十六进制密钥 ID 来识别密钥。NetHSM 使用字母数字字符串作为密钥 ID。NetHSM 的 PKCS#11 "
"模块使用字符串的原始字节值来形成 PKCS#11 ID。你可以通过``xxd`` 获取 NetHSM 密钥的十六进制版本："

#: ../nethsm/pkcs11-tool.rst:69
msgid "You can then pass this hex value to pkcs11-tool with the ``--id`` option."
msgstr "然后，您可以使用``--id`` 选项将此十六进制值传递给 pkcs11-tool。"

#: ../nethsm/pkcs11-tool.rst:72
msgid "Generate a Key"
msgstr "生成密钥"

#: ../nethsm/pkcs11-tool.rst:74
msgid "Generate a key-pair and store it on the NetHSM."
msgstr "产生一个密钥对并将其存储在NetHSM上。"

#: ../nethsm/pkcs11-tool.rst:77
msgid ""
"The slot you want to use needs to have an andministrator user in the "
"configuration file. Otherwise you will get a `CKR_USER_NOT_LOGGED_IN` "
"error."
msgstr "您要使用的插槽必须在配置文件中有一个 andministrator 用户。否则会出现 `CKR_USER_NOT_LOGGED_IN` 错误。"

#: ../nethsm/pkcs11-tool.rst:80 ../nethsm/pkcs11-tool.rst:179
msgid "RSA"
msgstr "RSA"

#: ../nethsm/pkcs11-tool.rst:87
msgid "ECDSA"
msgstr "ECDSA"

#: ../nethsm/pkcs11-tool.rst:95
msgid "AES/Generic"
msgstr "AES/通用"

#: ../nethsm/pkcs11-tool.rst:104
msgid "List the keys stored on the NetHSM."
msgstr "列出存储在 NetHSM 中的密钥。"

#: ../nethsm/pkcs11-tool.rst:125
msgid "Read Keys"
msgstr "阅读键"

#: ../nethsm/pkcs11-tool.rst:127
msgid ""
"Read the public key of a key-pair stored on the NetHSM. It is not "
"possible to read private keys from the NetHSM."
msgstr "读取存储在 NetHSM 上的密钥对的公钥。无法从 NetHSM 中读取私钥。"

#: ../nethsm/pkcs11-tool.rst:134
msgid ""
"The certificate of the key-pair can be read with the same command by "
"changing the ``--type`` option to ``cert``."
msgstr "通过将``--type`` 选项改为``cert``，可以用同一命令读取密钥对的证书。"

#: ../nethsm/pkcs11-tool.rst:138
msgid "The output is in DER format."
msgstr "输出为 DER 格式。"

#: ../nethsm/pkcs11-tool.rst:141
msgid "Write Keys"
msgstr "写键"

#: ../nethsm/pkcs11-tool.rst:143
msgid ""
"Write a private key on the NetHSM. The public key is automatically "
"derived from the private key."
msgstr "在 NetHSM 上写入私钥。公钥由私钥自动生成。"

#: ../nethsm/pkcs11-tool.rst:149
msgid ""
"The certificate of the key-pair can be written with the same command by "
"changing the ``--type`` option to ``cert``."
msgstr "通过将``--type`` 选项改为``cert``，可以用同一命令写入密钥对的证书。"

#: ../nethsm/pkcs11-tool.rst:159
msgid "Encryption of data is only supported for AES keys."
msgstr "数据加密仅支持 AES 密钥。"

#: ../nethsm/pkcs11-tool.rst:166
msgid "You have to manually pad the input data to the block size of the AES key."
msgstr "您必须根据 AES 密钥的块大小手动填充输入数据。"

#: ../nethsm/pkcs11-tool.rst:172
msgid "AES"
msgstr "AES"

#: ../nethsm/pkcs11-tool.rst:181
msgid ""
"You can encrypt data with the public key and decrypt it with the private "
"key."
msgstr "您可以用公钥加密数据，用私钥解密数据。"

#: ../nethsm/pkcs11-tool.rst:202
msgid "To verify the signature with OpenSSL:"
msgstr "使用 OpenSSL 验证签名："

#: ../nethsm/ssh.rst:2
msgid "SSH"
msgstr "SSH"

#: ../nethsm/ssh.rst:4
msgid ""
"You can use NetHSM for SSH authentication. You need to pass the PKCS#11 "
"module path in the command line or the SSH configuration."
msgstr "您可以使用 NetHSM 进行 SSH 验证。您需要在命令行或 SSH 配置中传递 PKCS#11 模块路径。"

#: ../nethsm/ssh.rst:7
msgid "Command line"
msgstr "命令行"

#: ../nethsm/ssh.rst:12
msgid "SSH config"
msgstr "SSH 配置"

#: ../nethsm/ssh.rst:19
msgid ""
"You can also set up SSH to use the NetHSM by default. To do so, add the "
"following lines to your ``~/.ssh/config`` file:"
msgstr "您也可以设置 SSH 默认使用 NetHSM。为此，请在``~/.ssh/config`` 文件中添加以下几行："

#: ../nethsm/ssh.rst:27
msgid "SSH will search for a key on the NetHSM that is accepted by the server."
msgstr "SSH 将在 NetHSM 上搜索服务器接受的密钥。"

#: ../nethsm/ssh.rst:29
msgid ""
"To list the keys of a NetHSM in a SSH ``authorized_keys`` format, use the"
" following command:"
msgstr "要以 SSH``authorized_keys`` 格式列出 NetHSM 的密钥，请使用以下命令："

#: ../nethsm/system_recovery.rst:2
msgid "System Recovery"
msgstr "系统恢复"

#: ../nethsm/system_recovery.rst:4
msgid ""
"The following describes the recovery process for the NetHSM system "
"software. These instructions are only applicable if the API is "
"inoperable, e.g. not responding to API requests. In the case of an "
"operable API perform a `factory reset <administration.html#reset-to-"
"factory-defaults>`__ instead. Follow the instructions precicsely to "
"prevent any accidential deletion of data."
msgstr ""
"下面介绍 NetHSM 系统软件的恢复过程。这些说明仅适用于 API 无法运行的情况，例如不响应 API 请求。如果 API "
"可操作，请执行`工厂重置<administration.html#reset-to-factory-"
"defaults>`__。请严格按照说明操作，以防意外删除数据。"

#: ../nethsm/system_recovery.rst:10
msgid ""
"The system recovery only works if the GUID partition table (GPT) and the "
"partitions itself on the disk are not corrupted. A corruption could be "
"indicated by the following message during boot."
msgstr "只有当磁盘上的 GUID 分区表 (GPT) 和分区本身未损坏时，系统恢复才会起作用。启动过程中出现的以下信息可能表明分区已损坏。"

#: ../nethsm/system_recovery.rst:22
msgid ""
"If they are corrupted this instructions will result in a factory "
"installation of the NetHSM system software."
msgstr "如果它们已损坏，本说明将导致 NetHSM 系统软件的出厂安装。"

#: ../nethsm/system_recovery.rst:24
msgid "The system recovery can be performed as follows."
msgstr "系统恢复的步骤如下。"

#: ../nethsm/system_recovery.rst:26
msgid ""
"Download the installer image from the `releases page "
"<https://github.com/nitrokey/nethsm/releases>`__."
msgstr "从`发布页面下载安装镜像文件<https://github.com/nitrokey/nethsm/releases>`__。"

#: ../nethsm/system_recovery.rst:29
msgid ""
"Download the installer image of the same version which was installed at "
"the time of corruption. A downgrade, or upgrade skipping versions, is not"
" supported."
msgstr "下载损坏时安装的同一版本的安装程序镜像。不支持降级或跳版本升级。"

#: ../nethsm/system_recovery.rst:32
msgid ""
"Make sure the system is turned off, but connected to power, and the power"
" button on the back turned on."
msgstr "确保系统已关闭，但已连接电源，并已打开背面的电源按钮。"

#: ../nethsm/system_recovery.rst:33
msgid "Connect the BMC network port with a network cable."
msgstr "用网线连接 BMC 网络端口。"

#: ../nethsm/system_recovery.rst:35
msgid "See the image below to identify the BMC network port."
msgstr "请参见下图识别 BMC 网络端口。"

#: ../nethsm/system_recovery.rst:43
msgid ""
"Per default the BMC will wait for an address assignment with DHCP. If "
"DHCP is not available the link-local address can be determined with Nmap."
" The command ``nmap <network-in-cidr-notation> -p 80 --open`` will return"
" a list of hosts with open port 80."
msgstr ""
"默认情况下，BMC 将通过 DHCP 等待地址分配。如果 DHCP 不可用，则可使用 Nmap 确定链路本地地址。``nmap <network-"
"in-cidr-notation> -p 80 --open`` 命令将返回开放 80 端口的主机列表。"

#: ../nethsm/system_recovery.rst:46
msgid ""
"Open the BMC website in a web browser, using the determined IP address "
"from the previous step. To login, the default credentials are username "
"``bmc_admin``, and password ``8mCU$3r0nE``."
msgstr "使用上一步确定的 IP 地址，在浏览器中打开 BMC 网站。要登录，默认凭据是用户名``bmc_admin`` 和密码``8mCU$3r0nE``。"

#: ../nethsm/system_recovery.rst:50
msgid ""
"In case you encounter an unauthorized login error on the BMC web "
"interface it can be three of the following issues."
msgstr "如果您在 BMC 网络界面上遇到未经授权的登录错误，可能是以下三种问题。"

#: ../nethsm/system_recovery.rst:52
msgid "Username or password wrong."
msgstr "用户名或密码错误。"

#: ../nethsm/system_recovery.rst:53
msgid ""
"During factory reset the BMC generates a new TLS certificate. Some web "
"browsers fail with connection errors when the certificate changes while "
"the same window stays open. Close the web browser window and open a new "
"one."
msgstr "出厂重置时，BMC 会生成新的 TLS 证书。当证书发生变化而同一窗口仍然打开时，某些网络浏览器会出现连接错误。关闭网络浏览器窗口并打开一个新窗口。"

#: ../nethsm/system_recovery.rst:56
msgid ""
"The BMC software sometimes shows the issue that it doesn't accept an "
"older session cookie which are still in the cache of the web browser. "
"Clear the web browsers cache and try again."
msgstr "BMC 软件有时会出现不接受旧会话 cookie 的问题，这些 cookie 仍在网络浏览器的缓存中。清除浏览器缓存后再试一次。"

#: ../nethsm/system_recovery.rst:59
msgid ""
"Mount the downloaded installer image by clicking in the menu on the left "
"on *FRU: Hermes CFL (with TPM) Nitrokey Config* followed by *Virtual "
"media* in the submenu. In the middle open the tab *usb0*, and click the "
"button *Attach media*."
msgstr ""
"单击左侧菜单中的*FRU: Hermes CFL (with TPM) Nitrokey Config* ，然后单击子菜单中的*Virtual "
"media* ，安装下载的安装程序映像。在中间打开*usb0* 标签，然后单击*Attach media* 按钮。"

#: ../nethsm/system_recovery.rst ../nethsm/system_recovery.rst:65
msgid "BMC menu to attach USB device"
msgstr "连接 USB 设备的 BMC 菜单"

#: ../nethsm/system_recovery.rst:67
msgid ""
"In the opening dialog choose *Stream local file via browser* as the "
"*Transfer method*. Click the button *Browse...* and choose the downloaded"
" installer image. Confirm the operation with the *Submit* button."
msgstr ""
"在打开的对话框中，选择*Stream local file via browser* 作为*Transfer method* "
"。单击*Browse...* 按钮，选择下载的安装程序映像。使用*Submit* 按钮确认操作。"

#: ../nethsm/system_recovery.rst ../nethsm/system_recovery.rst:74
msgid "BMC menu to select USB image"
msgstr "BMC 菜单选择 USB 映像"

#: ../nethsm/system_recovery.rst:76
msgid ""
"In the menu on the left select *FRU: Hermes CFL (with TPM) Nitrokey "
"Config*, and then *Remote KVM*."
msgstr "在左侧菜单中选择*FRU: Hermes CFL (with TPM) Nitrokey Config* ，然后选择*Remote KVM* 。"

#: ../nethsm/system_recovery.rst:77
msgid ""
"In the middle click the *Open a floating Remote KVM window* button, in "
"the top right corner of the VGA output box."
msgstr "点击 VGA 输出框右上角的*打开浮动远程 KVM 窗口* 按钮。"

#: ../nethsm/system_recovery.rst ../nethsm/system_recovery.rst:82
msgid "BMC KVM console view"
msgstr "BMC KVM 控制台视图"

#: ../nethsm/system_recovery.rst:84
msgid ""
"This window will show you the graphical output of the NetHSM installer. "
"Keep this second window open together with the main window from the BMC."
msgstr "该窗口将显示 NetHSM 安装程序的图形输出。请将第二个窗口与 BMC 的主窗口一起打开。"

#: ../nethsm/system_recovery.rst:86
msgid "Change to the view *Overview* from the top of the menu on the left."
msgstr "从左侧菜单顶部切换到*Overview* 视图。"

#: ../nethsm/system_recovery.rst:87
msgid ""
"In the box *Override Boot Device*, select *USB_BMC-virtual_media* from "
"the drop-down next to *Select a Boot Device*."
msgstr ""
"在*Override Boot Device* 框中，从*Select a Boot Device* 旁边的下拉框中选择*USB_BMC-"
"virtual_media* 。"

#: ../nethsm/system_recovery.rst ../nethsm/system_recovery.rst:92
msgid "BMC boot device setting"
msgstr "BMC 启动设备设置"

#: ../nethsm/system_recovery.rst:94
msgid ""
"In the box with the title *FRU: Hermes CFL (with TPM) Nitrokey Config*, "
"select *On* from the drop-down menu next to *Power*. Confirm with the "
"*Apply* button."
msgstr ""
"在标题为*FRU: Hermes CFL (with TPM) Nitrokey Config* 的框中，从*Power* "
"旁边的下拉菜单中选择*On* 。使用*Apply* 按钮确认。"

#: ../nethsm/system_recovery.rst ../nethsm/system_recovery.rst:100
msgid "BMC power up setting"
msgstr "BMC 开机设置"

#: ../nethsm/system_recovery.rst:102
msgid ""
"In the previously opened *Remote KVM* window you can now see the "
"installation wizard."
msgstr "在之前打开的*Remote KVM* 窗口中，现在可以看到安装向导。"

#: ../nethsm/system_recovery.rst:103
msgid ""
"The KVM window now shows the boot dialog. Confirm the selection of "
"``NetHSM automatic boot (USB or primary system)`` with the *Enter* key."
msgstr ""
"KVM 窗口现在显示启动对话框。使用*Enter* 键确认选择``NetHSM automatic boot (USB or primary "
"system)``。"

#: ../nethsm/system_recovery.rst ../nethsm/system_recovery.rst:109
msgid "NetHSM boot selection in the BMC KVM console"
msgstr "BMC KVM 控制台中的 NetHSM 启动选择"

#: ../nethsm/system_recovery.rst:111
msgid ""
"In the following dialog confirm the selection of ``NetHSM Software "
"Installer`` with the *Enter* key."
msgstr "在以下对话框中，用*Enter* 键确认选择``NetHSM Software Installer``。"

#: ../nethsm/system_recovery.rst ../nethsm/system_recovery.rst:116
msgid "NetHSM installer selection in the BMC KVM console"
msgstr "在 BMC KVM 控制台中选择 NetHSM 安装程序"

#: ../nethsm/system_recovery.rst:119
msgid ""
"Do NOT select ``NetHSM Factory Reset - DELETES ALL DATA!`` from the menu."
" This will unrecoverable wipe the data on the disk."
msgstr "请勿从菜单中选择``NetHSM Factory Reset - DELETES ALL DATA!``。这将无法恢复磁盘上的数据。"

#: ../nethsm/system_recovery.rst:121
msgid "The NetHSM Installer will install the system software and shutdown."
msgstr "NetHSM 安装程序将安装系统软件并关闭。"

#: ../nextbox/backup-restore.rst:2
msgid "Backup and Restore"
msgstr "备份和恢复"

#: ../nextbox/backup-restore.rst:7
msgid ""
"The NextBox can be backupped and restored from within the NextBox "
"Nextcloud App. In order to execute a backup or restore operation you need"
" to have a storage device attached to your NextBox."
msgstr ""
"NextBox可以在NextBox "
"Nextcloud应用程序中进行备份和恢复。为了执行备份或恢复操作，您需要在您的NextBox上连接一个存储设备。"

#: ../nextbox/backup-restore.rst:10
msgid ""
"To enable backup and restore onto a storage device please follow these "
"steps:"
msgstr "要启用备份和恢复到存储设备上，请遵循以下步骤。"

#: ../nextbox/backup-restore.rst:12
msgid ""
"Make sure your storage device contains at least one partition formatted "
"with a supported file-system (currently *ext* and *xfs* are supported)."
msgstr "确保你的存储设备至少包含一个用支持的文件系统格式化的分区（目前支持*ext*和*xfs*）。"

#: ../nextbox/backup-restore.rst:15
msgid ""
"Attach the storage device to your NextBox to any of the USB ports and "
"*remember to use an external power supply* `more information "
"<faq/hardware.html#why-must-i-not-connect-external-hard-drives-without-"
"an-external-power-supply-to-my-nextbox>`_"
msgstr ""
"将存储设备连接到 NextBox 的任意 USB 端口，*，切记使用外部电源* `更多信息<faq/hardware.html#why-"
"must-i-not-connect-external-hard-drives-without-an-external-power-supply-"
"to-my-nextbox>`_"

#: ../nextbox/backup-restore.rst:18
msgid ""
"Once attached you will see the storage(s) inside \"Storage Management\" "
"below \"Available Storages\""
msgstr "一旦连接上，你会在 \"可用存储空间 \"下面的 \"存储管理 \"中看到存储。"

#: ../nextbox/backup-restore.rst:20
msgid ""
"Click on the plus-symbol on the right side to *mount* your storage and "
"make it available for backup and restore operations. The added storage is"
" now listed inside \"Mounted Storages\"."
msgstr "点击右侧的加号符号，*挂载*你的存储，使其可用于备份和恢复操作。添加的存储空间现在被列在 \"已安装的存储空间 \"中。"

#: ../nextbox/backup-restore.rst:27
msgid ""
"To backup your NextBox including all Nextcloud settings apps and data "
"please follow these steps:"
msgstr "要备份您的NextBox，包括所有的Nextcloud设置应用程序和数据，请遵循以下步骤。"

#: ../nextbox/backup-restore.rst:29
msgid "Make sure you have a storage mounted as described above"
msgstr "确保你有一个如上所述的存储安装"

#: ../nextbox/backup-restore.rst:31
msgid ""
"Inside \"Backup / Restore\" below \"Full System Backup\" select the "
"storage device for backup from the drop-down menu named: \"Select Backup "
"Device\""
msgstr "在\"备份/恢复\"下面的\"全系统备份\"中，从名为\"选择备份设备\"的下拉菜单中选择用于备份的存储设备。"

#: ../nextbox/backup-restore.rst:34
msgid ""
"Now you have the option to incrementally update an existing backup from "
"the drop-down menu named: \"Select Backup Location\" **or** create a "
"entirely new backup by entering a name into the \"Name of the new "
"backup\" entry field."
msgstr "现在你可以选择从名为\"\"选择备份位置\"的下拉菜单中增量更新一个现有的备份，或者***通过在\"新备份的名称\"条目栏中输入一个名称来创建一个全新的备份。"

#: ../nextbox/backup-restore.rst:38
msgid "Click \"Start Backup now\", the backup process will begin immediately."
msgstr "点击\"Start Backup now\"，备份过程将立即开始。"

#: ../nextbox/backup-restore.rst:40
msgid ""
"The resulting backup is not encrypted so take care who has access to the "
"used storage."
msgstr "由此产生的备份没有加密，所以要注意谁可以访问使用的存储空间。"

#: ../nextbox/backup-restore.rst:46
msgid ""
"The restore operation replaces the Nextcloud internals entirely and "
"depending on the version combination this might lead to undefined "
"behavior of the Nextcloud frontend. If this happens, please be patient "
"and reload the page using ``F5`` or ``ctrl-r`` and check, if the restore "
"operation was successful."
msgstr "恢复操作完全取代了Nextcloud的内部结构，根据版本组合，这可能导致Nextcloud前端的未定义行为。如果发生这种情况，请耐心等待，并使用``F5``或``ctrl-r``重新加载页面，检查恢复操作是否成功。"

#: ../nextbox/backup-restore.rst:51
msgid ""
"Make sure your have a storage mounted as described above and it contains "
"a backup to be restored"
msgstr "确保你有一个如上所述的储存器，并且它包含一个要恢复的备份"

#: ../nextbox/backup-restore.rst:53
msgid ""
"Inside \"Backup / Restore\" below \"Restore System from Backup\" use the "
"\"Select Backup to Restore\" drop-down menu to select a backup to be "
"restored"
msgstr "在\"备份/恢复\"下面的\"从备份恢复系统\"使用\"选择要恢复的备份\"下拉菜单，选择要恢复的备份。"

#: ../nextbox/backup-restore.rst:56
msgid "Click \"Start Restoring now\", the restore process will begin immediately."
msgstr "点击\"Start Restoring now\"，还原过程将立即开始。"

#: ../nextbox/backup-restore.rst:58
msgid ""
"Depending on the backupped Nextcloud version after the restore process "
"you will be asked to run the upgrade process for Nextcloud."
msgstr "在恢复过程之后，您将被要求运行Nextcloud的升级过程，这取决于备份的Nextcloud版本。"

#: ../nextbox/backup-restore.rst:63
msgid ""
"All configurations and settings of the NextBox and the Nextcloud instance"
" will be restored, thus there might be changes on how you access your "
"NextBox, if the restored Remote Access configuration is not identical to "
"the current one."
msgstr "NextBox和Nextcloud实例的所有配置和设置将被恢复，因此，如果恢复的远程访问配置与当前配置不完全相同，您访问NextBox的方式可能会发生变化。"

#: ../nextbox/clients/android.rst:2
msgid "Connect Your Android or iOS Smartphone"
msgstr "连接你的安卓或iOS智能手机"

#: ../nextbox/clients/android.rst:6
msgid "Connect the NextBox with your smartphone"
msgstr "将NextBox与您的智能手机连接起来"

#: ../nextbox/clients/android.rst:8
msgid "Download the Nextcloud app from the app store or play store."
msgstr "从应用商店或游戏商店下载Nextcloud应用程序。"

#: ../nextbox/clients/android.rst ../nextbox/clients/macosx.rst
#: ../nextbox/clients/windows.rst
msgid "imgsp1"
msgstr "imgsp1"

#: ../nextbox/clients/android.rst:14
msgid "Cick on \"Sign in\"."
msgstr "请点击\"登录\"。"

#: ../nextbox/clients/android.rst
msgid "imgsp2"
msgstr "imgsp2"

#: ../nextbox/clients/android.rst:20
msgid "Enter your domain."
msgstr "输入你的域名。"

#: ../nextbox/clients/android.rst
msgid "imgsp3"
msgstr "imgsp3"

#: ../nextbox/clients/android.rst:26
msgid "Enter your username and password and click \"Log in\"."
msgstr "输入你的用户名和密码，然后点击\"登录\"。"

#: ../nextbox/clients/android.rst
msgid "imgsp4"
msgstr "imgsp4"

#: ../nextbox/clients/android.rst:32
msgid "Now you have access to your NextBox with your smartphone!"
msgstr "现在你可以用你的智能手机访问你的NextBox了!"

#: ../nextbox/clients/android.rst
msgid "imgsp5"
msgstr "imgsp5"

#: ../nextbox/clients/index.rst:8
msgid "Android/iOS"
msgstr "安卓/iOS"

#: ../nextbox/clients/index.rst:8
msgid "Mac OS X"
msgstr "Mac OS X"

#: ../nextbox/clients/index.rst:2
msgid "Desktop And Mobile Synchronization"
msgstr "桌面和手机同步化"

#: ../nextbox/clients/index.rst:6
msgid "Choose your operating system or device:"
msgstr "选择你的操作系统或设备。"

#: ../nextbox/clients/linux.rst:2
msgid "Connect Your Linux Computer"
msgstr "连接你的Linux电脑"

#: ../nextbox/clients/linux.rst:7 ../nextbox/clients/macosx.rst:7
#: ../nextbox/clients/windows.rst:7
msgid "Connect using the Nextcloud App"
msgstr "使用Nextcloud应用程序进行连接"

#: ../nextbox/clients/linux.rst:9
msgid "Download the client application from: https://nextcloud.com/install/"
msgstr "从以下网站下载客户端应用程序：https://nextcloud.com/install/"

#: ../nextbox/clients/linux.rst:11
msgid ""
"Most distributions do provide the Nextcloud client via their package "
"managers. (e.g., Ubuntu, Arch Linux, Mint, ...)"
msgstr "大多数发行版确实通过其软件包管理器提供了Nextcloud客户端。(例如，Ubuntu, Arch Linux, Mint, ...)"

#: ../nextbox/clients/linux.rst:14
msgid ""
"After starting the ``nextcloud`` application, you will find it as a tray "
"icon."
msgstr "启动``nextcloud``应用程序之后，你会发现它是一个托盘图标。"

#: ../nextbox/clients/linux.rst:17
msgid ""
"Add an account using your public server url, username and password. "
"Further you can choose the target directory the files should be synced "
"to."
msgstr "使用你的公共服务器网址、用户名和密码添加一个账户。此外，你可以选择文件应该同步到的目标目录。"

#: ../nextbox/clients/linux.rst:23 ../nextbox/clients/macosx.rst:48
#: ../nextbox/clients/windows.rst:48
msgid "Connect using WebDAV"
msgstr "使用WebDAV连接"

#: ../nextbox/clients/linux.rst:25
msgid ""
"Mounting Nextcloud using WebDAV can be done directly via most file "
"managers, by adding a \"remote server\"."
msgstr "使用WebDAV安装Nextcloud可以直接通过大多数文件管理器，通过添加一个\"远程服务器\"来完成。"

#: ../nextbox/clients/linux.rst:28
msgid ""
"Additionally you can mount your Nextcloud files using WebDAV via "
"commandline and `/etc/fstab` by installing the `davfs2` package."
msgstr "此外，您可以通过命令行和`/etc/fstab`安装`davfs2`包，使用WebDAV挂载您的Nextcloud文件。"

#: ../nextbox/clients/linux.rst:31
msgid "To mount use:"
msgstr "要安装使用。"

#: ../nextbox/clients/macosx.rst:2 ../nextbox/clients/windows.rst:2
msgid "Connect your Mac Commputer"
msgstr "连接你的Mac电脑"

#: ../nextbox/clients/macosx.rst:10 ../nextbox/clients/windows.rst:10
msgid "Download the Nextcloud client application: https://nextcloud.com/install/"
msgstr "下载Nextcloud客户端应用程序：https://nextcloud.com/install/"

#: ../nextbox/clients/macosx.rst:17 ../nextbox/clients/windows.rst:17
msgid ""
"After installation, click \"Log in to your Nextcloud\". Afterwards please"
" provide your Nextcloud's domain."
msgstr "安装完成后，请点击\"登录到您的Nextcloud\"。之后，请提供您的Nextcloud'的域名。"

#: ../nextbox/clients/macosx.rst:25 ../nextbox/clients/windows.rst:26
msgid "Provide your username and password and click \"Log in\"."
msgstr "提供您的用户名和密码，并点击\"登录\"。"

#: ../nextbox/clients/macosx.rst:32
msgid ""
"Inside the menu bar there will be a Nextcloud icon to open the Nextcloud "
"application settings."
msgstr "在菜单栏内，将有一个Nextcloud图标，以打开Nextcloud应用程序的设置。"

#: ../nextbox/clients/macosx.rst:40
msgid ""
"Inside *Finder* below \"favorites\" you will find a \"Nextcloud\" "
"directory with the user's files."
msgstr "在*Finder*的\"favorites\"下面，你会发现一个\"Nextcloud\"目录，里面有用户的文件'。"

#: ../nextbox/clients/macosx.rst:50
msgid "Inside *Finder*, open *Go* and choose *Connect to Server*"
msgstr "在*Finder*中，打开*Go*并选择*Connect to Server*。"

#: ../nextbox/clients/macosx.rst:56
msgid "Provide the WebDAV URL `https://yourdomain.xyz/remote.php/webdav`"
msgstr "提供WebDAV URL `https://yourdomain.xyz/remote.php/webdav`。"

#: ../nextbox/clients/macosx.rst:62
msgid ""
"In the next step, provide the username and password to login to your "
"Nextcloud instance."
msgstr "在下一步，提供用户名和密码以登录您的Nextcloud实例。"

#: ../nextbox/clients/macosx.rst:68
msgid "Once finished you can find your Nextcloud files in *Locations*."
msgstr "完成后，您可以在*Locations*中找到您的Nextcloud文件。"

#: ../nextbox/clients/windows.rst:33
msgid ""
"Inside the tray there will be a Nextcloud icon to open the Nextcloud "
"application settings."
msgstr "在托盘内，将有一个Nextcloud图标，以打开Nextcloud应用程序的设置。"

#: ../nextbox/clients/windows.rst:40
msgid "Inside the file-explorer you can now find your Nextcloud instance files."
msgstr "在文件浏览器中，您现在可以找到您的Nextcloud实例文件。"

#: ../nextbox/clients/windows.rst:52
msgid ""
"There have been reports that the native WebDAV support in Windows is not "
"performing well. We recommend using the Nextcloud App (as described "
"above) for the best user experience. Additionally please read "
"`Nextcloud's Windows WebDAV Known Problems`_."
msgstr ""
"有报告称，Windows中的原生WebDAV支持表现不佳。我们建议使用Nextcloud应用程序（如上所述）以获得最佳用户体验。此外，请阅读`Nextcloud'的Windows"
" WebDAV已知问题`_。"

#: ../nextbox/clients/windows.rst:56
msgid ""
"Add a WebDAV drive using the file explorer's \"Add a network location\" "
"icon. (You can also use \"Map network drive\" to bind your Nextcloud to a"
" drive, like *Z:*)."
msgstr "使用文件资源管理器的\"添加网络位置\"图标添加一个WebDAV驱动器。(您也可以使用\"映射网络驱动器\"将您的Nextcloud绑定到一个驱动器，如*Z:*）。"

#: ../nextbox/clients/windows.rst:63
msgid ""
"In the following dialog please enter the full WebDAV address of your "
"NextBox: ``https://my.domain.tld/remote.php/dav/files/USERNAME``. Replace"
" *my.domain.tld* with your NextBox's public domain and *USERNAME* with "
"the username you would like to connect."
msgstr "在下面的对话框中，请输入你的NextBox的完整WebDAV地址。``https://my.domain.tld/remote.php/dav/files/USERNAME``。将*my.domain.tld*替换为你的NextBox'的公共域，*USERNAME*替换为你想连接的用户名。"

#: ../nextbox/clients/windows.rst:67
msgid ""
"In the following window insert your full Nextcloud credentials, means "
"your username and password you use to login into your Nextcloud."
msgstr "在下面的窗口中插入您的完整Nextcloud凭证，即您用来登录Nextcloud的用户名和密码。"

#: ../nextbox/clients/windows.rst:74
msgid ""
"Now your files from your Nextcloud instance are accessible via the file-"
"explorer."
msgstr "现在您的Nextcloud实例中的文件可以通过文件浏览器访问。"

#: ../nextbox/external-storage.rst:2
msgid "Connect External Storage"
msgstr "连接外部存储器"

#: ../nextbox/external-storage.rst:6 ../nextbox/gettingstarted.rst:20
msgid ""
"External storage drives without an external power supply must NOT be "
"connected to the USB sockets. Otherwise, this can lead to data loss on "
"the internal hard disk. **Always use external storage drives with a "
"separate power supply together with the NextBox.**"
msgstr "没有外部电源的外部存储驱动器不得连接到USB插座上。否则，这可能导致内部硬盘的数据丢失。**始终将带有独立电源的外部存储驱动器与NextBox一起使用**。"

#: ../nextbox/external-storage.rst:14
msgid "an external storage drive with a separate power supply"
msgstr "一个有独立电源的外部存储驱动器"

#: ../nextbox/external-storage.rst:15
msgid ""
"the external storage must be formatted with a supported filesystem (e.g. "
"ext3, ext4 or XFS)"
msgstr "外部存储器必须用支持的文件系统（如ext3、ext4或XFS）进行格式化。"

#: ../nextbox/external-storage.rst:20
msgid "Connect your external storage to your NextBox"
msgstr "将您的外部存储器连接到您的NextBox"

#: ../nextbox/external-storage.rst:21
msgid "Switch to the NextBox Administration App"
msgstr "切换到NextBox管理应用程序"

#: ../nextbox/external-storage.rst:22
msgid "Select \"Storage Management\""
msgstr "选择\"存储管理\"。"

#: ../nextbox/external-storage.rst:23
msgid "Click onto the plus sign to mount the storage"
msgstr "点击加号来装载存储设备"

#: ../nextbox/external-storage.rst:27
msgid ""
"If you want to share directories with multiple users you have to install "
"the \"Group folders app\" and click onto the three dotted symbol and "
"\"Share\" to make it available for other users. (As the last image shows)"
msgstr "如果你想与多个用户共享目录，你必须安装\"群组文件夹应用程序\"，并点击三个点状符号和\"共享\"，使其对其他用户可用。(如上图所示）。"

#: ../nextbox/external-storage.rst:-1
msgid "Storage Configuration"
msgstr "存储配置"

#: ../nextbox/external-storage.rst:-1
msgid "Storage Mount"
msgstr "储存支架"

#: ../nextbox/external-storage.rst:38
msgid "Allow Access From Files App"
msgstr "允许从文件应用程序访问"

#: ../nextbox/external-storage.rst:40
msgid ""
"As an additional requirement the hard-disk must have its mounted "
"directory access permissions be set to ``777`` or owned by user and group"
" id ``32``. If the hard-disk is mounted on your host locally the easiest "
"way is just to do ``chmod 777 /path/to/mounted/hard-disk`` as root."
msgstr ""
"作为额外要求，硬盘必须将其挂载目录的访问权限设置为``777`` 或由用户和组 id``32`` "
"拥有。如果硬盘挂载在本地主机上，最简单的方法就是以根用户身份执行``chmod 777 /path/to/mounted/hard-disk``。"

#: ../nextbox/external-storage.rst:45
msgid ""
"To allow direct access to the mounted external storage through the "
"Nextcloud \"Files\" App, the **External storage support** app has to be "
"installed from the Nextcloud App Store. There the correct mount point "
"listed inside \"Storage Management\" inside the NextBox App has to be "
"made available. As shown in this screenshot:"
msgstr ""
"要通过 Nextcloud \"文件 \"应用程序直接访问已挂载的外部存储，必须从 Nextcloud 应用程序商店安装**外部存储支持** "
"应用程序。必须在 NextBox 应用程序内的 \"存储管理 \"中列出正确的挂载点。如截图所示："

#: ../nextbox/external-storage.rst:-1
msgid "External Storage Support Settings"
msgstr "外部存储支持设置"

#: ../nextbox/external-storage.rst:53
msgid ""
"Replace ``/media/extra-1`` with the mountpoint found in \"Storage "
"Management\". Given the configuration above the external hard-disk shall "
"be available as \"Local\" within the Files App now."
msgstr ""
"将``/media/extra-1`` 替换为在 \"存储管理 \"中找到的挂载点。根据上述配置，外部硬盘现在可以在文件应用程序中作为 \"本地 "
"\"硬盘使用。"

#: ../nextbox/faq/generic.rst:2
msgid "Generic FAQ"
msgstr "一般性常见问题"

#: ../nextbox/faq/generic.rst:15
msgid "**Q:** What to do if my NextBox doesn't start?"
msgstr "**问：** 如果我的 NextBox 无法启动，该怎么办？"

#: ../nextbox/faq/generic.rst:5
msgid ""
"If your NextBox doesn't start correctly or you have some other problem "
"using it, chances are a soft reset can fix it: :doc:`../technical/soft-"
"reset`. To press the button use a thin (~1mm) pin like a smartphone sim-"
"card tray removal device. If this doesn't help, please make sure you have"
" connected the NextBox correctly as described in Quickstart: "
":doc:`../gettingstarted`. Otherwise you can try a factory reset: "
":doc:`../technical/factory-reset` as long as your NextBox doesn't contain"
" any data you care about losing. If everything fails, please contact our "
"customer support. Do note that our ability to help you might be limited "
"if you changed your system configuration using for example ssh."
msgstr ""
"如果您的 NextBox 无法正常启动或在使用中遇到其他问题，软重置很可能可以解决： :doc:`.../technical/soft-"
"reset`。要按下按钮，请使用一根细针（约 1 毫米），就像智能手机 sim "
"卡托盘移除装置一样。如果这样做没有用，请确保您已经按照快速启动中的说明正确连接了 NextBox： "
":doc:`../gettingstarted`.否则，您可以尝试出厂重置： :doc:`../technical/factory-reset` "
"只要您的 NextBox 中没有您担心丢失的任何数据。如果一切失败，请联系我们的客户支持。请注意，如果您使用 ssh "
"等方式更改了系统配置，我们为您提供帮助的能力可能会受到限制。"

#: ../nextbox/faq/generic.rst:20
msgid "**Q:** How can I factory-reset my NextBox?"
msgstr "**问：**我如何在工厂重置我的NextBox？"

#: ../nextbox/faq/generic.rst:18
msgid ""
"Press the hardware button for 5 seconds, see :doc:`../technical/factory-"
"reset`. To press the button use a thin (~1mm) pin like a smartphone sim-"
"card tray removal device."
msgstr ""
"按下硬件按钮5秒钟，见:doc:`.../technical/factory-reset`。要按下按钮，请使用一个薄的（约1毫米）针"
"，就像智能手机的sim-card托盘移除装置。"

#: ../nextbox/faq/generic.rst:23
msgid "**Q:** What do the different LED colors mean?"
msgstr "**问：**不同的LED颜色是什么意思？"

#: ../nextbox/faq/generic.rst:23
msgid "The detailed document can be found here: :doc:`../technical/led-colors`"
msgstr "详细的文件可以在这里找到： :doc:`./technical/led-colors`."

#: ../nextbox/faq/generic.rst:28
msgid "**Q:** Can the inital setup be done using a monitor & keyboard?"
msgstr "**问：**最初的设置是否可以用显示器& 键盘来完成？"

#: ../nextbox/faq/generic.rst:26
msgid ""
"No, this is not possible as the regular login is disabled on delivery. "
"Please connect the the NextBox to a network and access the NextBox using "
"`nextbox.local`_ or the IP directly."
msgstr "不，这是不可能的，因为常规的登录功能在交付时被禁用。请将NextBox连接到网络，使用`nextbox.local`_或直接使用IP访问NextBox。"

#: ../nextbox/faq/generic.rst:32
msgid "**Q:** What is the typical power consumption?"
msgstr "**问：**典型的耗电量是多少？"

#: ../nextbox/faq/generic.rst:31
msgid ""
"The minimum of 0,6A (3W) is rarely reached, in idle mostly around 1A (5W)"
" and more than 2A (10W) under higher loads."
msgstr "很少达到0.6A（3W）的最低值，在空闲状态下大多在1A（5W）左右，在较高的负载下超过2A（10W）。"

#: ../nextbox/faq/generic.rst:40
msgid "**Q:** How secure is the NextBox?"
msgstr "**问：**NextBox的安全性如何？"

#: ../nextbox/faq/generic.rst:35
msgid ""
"Debian with frequent `unattended-upgrades` based security updates, a "
"minimal attack surface by ensuring that not a single unneccessary port is"
" open are the main contributors to system security. **Make sure your "
"Nextcloud users and passwords are on a high level, either with long-"
"random passwords or a 2-Factor-Authentification supported login method "
"with e.g., a Nitrokey FIDO2.**"
msgstr ""
"频繁的 \"无人值守升级 "
"\"的安全更新的Debian，通过确保不开放任何一个不必要的端口来实现最小的攻击面，是系统安全的主要贡献者。**确保你的Nextcloud用户和密码是高水平的，要么使用长的随机密码，要么使用Nitrokey"
" FIDO2等支持双因素认证的登录方式。"

#: ../nextbox/faq/generic.rst:46
msgid "**Q:** What do all the ssh-related \"warnings\" mean?"
msgstr "**问：**所有与ssh有关的\"警告\"是什么意思？"

#: ../nextbox/faq/generic.rst:43
msgid ""
"Once you set up your ssh-access, you make yourself technically "
"responsible for your NextBox. We do provide help as good as we can as "
"goodwill, but under the line we cannot provide generic Linux-"
"administration support outside of the intended NextBox use-cases."
msgstr ""
"一旦你设置了 ssh-access，你就对你的 NextBox "
"负有技术责任。我们会尽力提供帮助，但在NextBox的使用范围之外，我们不能提供一般的Linux管理支持。"

#: ../nextbox/faq/generic.rst:52
msgid "**Q:** Can I mirror my NextBox onto another NextBox?"
msgstr "**问：**我可以将我的NextBox镜像到另一个NextBox吗？"

#: ../nextbox/faq/generic.rst:49
msgid ""
"This translates to a cluster setup, which is considered an (paid) "
"enterprise solution by Nextcloud. The details, especially data "
"consistency and collision handling, are far from trivial to realize. "
"Nevertheless, we also see demand for more sophisticated backup solutions "
"and will address this issue."
msgstr "这转化为集群设置，被Nextcloud认为是一种（付费）企业解决方案。这些细节，特别是数据的一致性和碰撞处理，远不是实现的小事。尽管如此，我们也看到了对更复杂的备份解决方案的需求，并将解决这个问题。"

#: ../nextbox/faq/generic.rst:58 ../nextbox/faq/nextcloud.rst:8
msgid ""
"**Q:** What to do to run/install/fix Nextcloud App \"XYZ\"? Why does "
"Nextcloud feature XYZ not work?"
msgstr "**问：**如何运行/安装/修复Nextcloud应用程序\"XYZ\"？为什么Nextcloud的XYZ功能不能使用？"

#: ../nextbox/faq/generic.rst:55 ../nextbox/faq/nextcloud.rst:5
msgid ""
"Generally we cannot help in detail for these topics. Nextcloud internals "
"and apps are out-of-scope for the NextBox development as we use the stock"
" Docker images provided by Nextcloud. Ultimately, if some NextBox/OS "
"configuration is blocking an app to run properly we for sure will look "
"into fixing it."
msgstr "一般来说，我们无法对这些主题提供详细的帮助。Nextcloud内部和应用程序不属于NextBox开发的范围，因为我们使用Nextcloud提供的库存Docker镜像。最终，如果NextBox/操作系统的某些配置阻碍了应用程序的正常运行，我们肯定会研究如何解决这个问题。"

#: ../nextbox/faq/generic.rst:62
msgid "**Q:** Can I connect/use the NextBox using WiFi?"
msgstr "**问：**我可以使用WiFi连接/使用NextBox吗？"

#: ../nextbox/faq/generic.rst:61
msgid ""
"No, currently this is not (easily) possible, only wired ethernet using "
"RJ-45 is available."
msgstr "不，目前这是不（容易）实现的，只有使用RJ-45的有线以太网是可用的。"

#: ../nextbox/faq/generic.rst:69
msgid ""
"**Q:** Is the WiFi on the Raspberry PI 4B physically available and "
"working?"
msgstr "**问：**Raspberry PI 4B上的WiFi是否实际可用并能工作？"

#: ../nextbox/faq/generic.rst:65
msgid ""
"Yes, physically the WiFi is available and working, but not used/managed "
"by the NextBox App. If you know what you are doing you can configure and "
"use it, if works although being inside the NextBox casing."
msgstr "是的，从物理上看，WiFi是可用的，可以工作，但不被NextBox应用程序使用/管理。如果你知道你在做什么，你可以配置和使用它，如果它在NextBox的外壳内工作。"

#: ../nextbox/faq/hardware.rst:2
msgid "Hardware FAQ"
msgstr "硬件常见问题"

#: ../nextbox/faq/hardware.rst:12
msgid ""
"**Q:** Why must I not connect external hard-drives without an external "
"power-supply to my NextBox?"
msgstr "**问：**为什么我不能在没有外部电源的情况下连接外部硬盘到我的NextBox？"

#: ../nextbox/faq/hardware.rst:8
msgid ""
"The Raspberry Pi 4 Model B can only supply 1.2A of power through USB (see"
" `RPi Power Supply`_). The internal hard-drive is already connected and "
"powered via USB and pulls ~1.0A. Thus connecting another hard-drive "
"without an external power supply can lead to an unreliable power supply "
"for the internal hard-drive, thus potential data loss."
msgstr ""
"Raspberry Pi 4 Model B通过USB只能提供1.2A的电源（见`RPi Power "
"Supply`_）。内部硬盘已经连接并通过USB供电，拉动~1.0A。因此，在没有外部电源的情况下连接另一个硬盘，会导致内部硬盘的供电不可靠，从而可能导致数据丢失。"

#: ../nextbox/faq/hardware.rst:20
msgid "**Q:** Where can I find an external hard-drive with its own power supply?"
msgstr "**问：**哪里可以找到自带电源的外接硬盘？"

#: ../nextbox/faq/hardware.rst:15
#, python-format
msgid ""
"The smaller form factors (2.5'' and smaller) for external hard-drives "
"mostly come without an additional power supply. For these, *a USB Hub "
"with an additional power supply can be considered the \"external power-"
"supply\"* for the hard-drive. Although the latter is it not 100% sure for"
" powered USB hubs, thus we recommend external 3.5'' hard-drives, which "
"are nearly always externally powered."
msgstr ""
"小尺寸的外置硬盘（2.5''和更小）大多没有附加电源。对于这些，*带有额外电源的USB集线器可以被认为是硬盘的\"外部电源\"*。虽然后者对于供电的USB集线器来说不是100%"
" s%的，因此我们推荐外置3.5''硬盘，它们几乎总是由外部供电。"

#: ../nextbox/faq/hardware.rst:26
msgid "**Q:** Why does my USB device / hub not work, if connected to the NextBox?"
msgstr "**问：**为什么我的USB设备/集线器不能工作，如果连接到NextBox？"

#: ../nextbox/faq/hardware.rst:23
msgid ""
"There are some devices and especially USB3 hubs that are known to not "
"work properly with the Raspberry PI 4B, please see this `USB "
"Documentation`_ from Raspberry. On top of that also make sure the USB "
"device is working in general by connecting it to another computer (best "
"case: Linux) and verify that it works."
msgstr ""
"有一些设备，特别是USB3集线器，已知不能与Raspberry PI "
"4B正常工作，请参见Raspberry的`USB文档`_。除此之外，还要确保USB设备在一般情况下可以正常工作，将它连接到另一台电脑上（最好的情况是：Linux），并验证它是否工作。"

#: ../nextbox/faq/hardware.rst:30
msgid "**Q:** Why does my hard-drive not show up after plugging it in?"
msgstr "**问：**为什么我的硬盘插上电源后不显示？"

#: ../nextbox/faq/hardware.rst:29
msgid ""
"Please make sure that you are using one of the supported filesystems "
"(e.g., ext, xfs) and you have mounted your hard-drive within *Storage "
"Management*."
msgstr "请确保你使用的是支持的文件系统之一（例如ext、xfs），并且你已经在*存储管理*中安装了你的硬盘。"

#: ../nextbox/faq/hardware.rst:36
msgid "**Q:** Can I generally extend the NextBox using a USB hard-drive?"
msgstr "**问：**我可以用USB硬盘扩展NextBox吗？"

#: ../nextbox/faq/hardware.rst:33
msgid ""
"Yes, this is possible, please make sure you are using a hard-drive, which"
" has an external power supply. Once connected you can mount the hard-"
"drive using the NextBox *Storage Management* and include it into "
"Nextcloud file-management using the `External storage support`_ app."
msgstr "是的，这是有可能的，请确保你使用的是有外部电源的硬盘。连接后，您可以使用NextBox的*存储管理*装载硬盘，并使用`外部存储支持`_应用程序将其纳入Nextcloud文件管理。"

#: ../nextbox/faq/hardware.rst:41
msgid "**Q:** What functions does the additional \"shield\" provide?"
msgstr "**问：**额外的\"盾牌\"提供什么功能？"

#: ../nextbox/faq/hardware.rst:39
msgid ""
"As of now the shield does provide a :doc:`status LED <../technical/led-"
"colors>`, a hardware button to :doc:`factory reset <../technical/factory-"
"reset>` and an additional USB Type-C connector on the same side as the "
"Ethernet port for power supply exclusively."
msgstr ""
"截至目前，该盾牌确实提供了一个:doc:`状态LED <.../technical/led-"
"colors>`，一个硬件按钮来:doc:`出厂复位<.../technical/factory-reset>`，以及一个额外的USB "
"Type-C接口，位于以太网端口的同一侧，专门用于供电。"

#: ../nextbox/faq/hardware.rst:46
msgid "**Q:** Is the NextBox hardware extendable/replaceable?"
msgstr "**问：**NextBox的硬件是否可以扩展/更换？"

#: ../nextbox/faq/hardware.rst:44
msgid ""
"Yes, all NextBox components can be easily replaced. None of the "
"components are glued or somehow permanently assembled. Using a Phillips "
"screwdriver you can disassemble and re-assemble the NextBox easily. Keep "
"in mind that you are doing this at your own risk."
msgstr "是的，所有NextBox的部件都可以很容易地更换。没有一个部件是用胶水或某种方式永久装配的。使用十字螺丝刀，您可以轻松地拆卸和重新组装NextBox。请记住，你这样做的风险是你自己的。"

#: ../nextbox/faq/hardware.rst:50
msgid "**Q:** What are the two USB Type-C ports used for?"
msgstr "**问：**两个USB Type-C端口的用途是什么？"

#: ../nextbox/faq/hardware.rst:49
msgid ""
"Both USB Type-C ports are exclusively for power supply and can not be "
"used for data transfer. Do not connect two power supplies, please just "
"use one of both to power your NextBox."
msgstr "两个USB Type-C端口都是专门用于供电的，不能用于数据传输。不要连接两个电源，请只使用其中一个为您的NextBox供电。"

#: ../nextbox/faq/hardware.rst:58
msgid "**Q:** Which fan should I install?"
msgstr "**问：**我应该安装哪个风扇？"

#: ../nextbox/faq/hardware.rst:53
msgid ""
"**There is absolutely no need for a fan, the NextBox is designed to work "
"without an active cooling**. Although if the NextBox is used for "
"additional tasks (it's still a Linux), we have prepared a fan mount for a"
" 30mm x 12mm fan at 5V connected to the shield. More details (connector, "
"used pins) can be taken from `NextBox' GitHub`_. Currently we *do not* "
"recommend adding a fan as the outputs are not controlled yet by the "
"NextBox daemon, so this is also something you would have to do by "
"yourself."
msgstr ""
"**绝对不需要风扇，NextBox的设计是在没有主动冷却的情况下工作**。尽管如果NextBox被用于额外的任务（它仍然是一个Linux），我们已经为一个30mm"
" x 12mm的风扇准备了一个连接到屏蔽罩的5V的风扇支架。更多的细节（连接器，使用的引脚）可以从`NextBox' "
"GitHub`_中获取。目前我们*不*推荐添加风扇，因为输出还没有被NextBox守护程序控制，所以这也是你必须自己做的事情。"

#: ../nextbox/faq/hardware.rst:62
msgid "**Q:**: Can I upgrade the NextBox' RAM size?"
msgstr "**Q:**:我可以升级NextBox'的内存大小吗？"

#: ../nextbox/faq/hardware.rst:61
msgid ""
"No, the Raspberry PI 4B has the RAM component soldered onto the "
"mainboard, thus it cannot be replaced/extended."
msgstr "不，Raspberry PI 4B的RAM组件被焊接在主板上，因此不能被替换/扩展。"

#: ../nextbox/faq/index.rst:4
msgid "Generic"
msgstr "通用型"

#: ../nextbox/faq/index.rst:4
msgid "Hardware"
msgstr "硬件设施"

#: ../nextbox/faq/index.rst:4 ../software/index.rst:2
msgid "Software"
msgstr "软件"

#: ../nextbox/faq/index.rst:4
msgid "Nextcloud"
msgstr "翌云"

#: ../nextbox/faq/index.rst:4
msgid "Remote Access"
msgstr "远程访问"

#: ../nextbox/faq/index.rst:2
msgid "NextBox FAQ"
msgstr "NextBox常见问题"

#: ../nextbox/faq/nextcloud.rst:2
msgid "Nextcloud FAQ"
msgstr "壹云网常见问题"

#: ../nextbox/faq/nextcloud.rst:12
msgid ""
"**Q:** Why does Nitrokey currently not recommend to use OnlyOffice or "
"Collabora Office on the NextBox?"
msgstr "**问：**为什么Nitrokey目前不建议在NextBox上使用OnlyOffice或Collabora Office？"

#: ../nextbox/faq/nextcloud.rst:11
msgid ""
"The state of these Nextcloud apps is not yet mature (for ARM platforms). "
"Although it is (partly) possible to install them we do not recommend "
"doing so currently."
msgstr "这些Nextcloud应用程序的状态还不成熟（针对ARM平台）。虽然可以（部分）安装它们，但我们目前不建议这样做。"

#: ../nextbox/faq/nextcloud.rst:16
msgid "**Q:** Why does updating Nextcloud from inside Nextcloud not work?"
msgstr "**问：**为什么从Nextcloud内部更新Nextcloud不起作用？"

#: ../nextbox/faq/nextcloud.rst:15
msgid ""
"The Nextcloud version is rolled out by us. Thus the option to update from"
" inside Nextcloud is not working."
msgstr "Nextcloud的版本是由我们推出的。因此，从Nextcloud内部更新的选项不起作用。"

#: ../nextbox/faq/nextcloud.rst:20
msgid "**Q:** Can I add apps to the Nextcloud instance?"
msgstr "**问：**我可以向Nextcloud实例添加应用程序吗？"

#: ../nextbox/faq/nextcloud.rst:19
msgid ""
"Yes, the Nextcloud app store is available and any app available there can"
" be installed through the Nextcloud web frontend."
msgstr "是的，Nextcloud应用程序商店是可用的，那里的任何应用程序都可以通过Nextcloud网页前端安装。"

#: ../nextbox/faq/nextcloud.rst:24
msgid ""
"**Q:** My Nextcloud instance is stuck in \"Maintenance Mode\", how can I "
"switch it off?"
msgstr "**问：**我的Nextcloud实例被卡在\"维护模式\"，我怎样才能关闭它？"

#: ../nextbox/faq/nextcloud.rst:23
msgid ""
"To *force exit* the Nextcloud \"Maintenance Mode\", you can push the "
"hardware button **shortly, once**. The NextBox will then switch-off the "
"maintenance mode. Please avoid this, if possible."
msgstr "要*强行退出*Nextcloud \"维护模式\"，您可以**短按一次硬件按钮。然后，NextBox将关闭维护模式。如果可能的话，请避免这样做。"

#: ../nextbox/faq/nextcloud.rst:30
msgid ""
"**Q:** Why am I getting a permission warning for "
"``/var/www/html/custom_apps/nextbox`` inside the Nextcloud settings "
"overview?"
msgstr "**问：**为什么我在Nextcloud设置概览内收到``/var/www/html/custom_apps/nextbox``的许可警告？"

#: ../nextbox/faq/nextcloud.rst:27
msgid ""
"This is a \"feature\". The NextBox Nextcloud App is installed on the "
"system with the Debian nextbox package. To avoid an accidental deletion "
"of the NextBox Nextcloud App from within the Nextcloud app management, "
"the stated directory can not be written by Nextcloud, this is what "
"Nextcloud is complaining about here."
msgstr ""
"这是一个\"功能\"。NextBox Nextcloud应用程序是通过Debian nextbox软件包安装在系统上的。为了避免NextBox "
"Nextcloud应用在Nextcloud应用管理中被意外删除，所述目录不能被Nextcloud写入，这就是Nextcloud在这里抱怨的原因。"

#: ../nextbox/faq/nextcloud.rst:34
msgid "**Q:** How can I run Nextcloud's `occ`?"
msgstr "**问：**我如何运行Nextcloud'的`occ`？"

#: ../nextbox/faq/nextcloud.rst:33
msgid ""
"As Nextcloud is running inside a Docker container, you need to be root "
"and execute the following: ``docker exec -it -u www-data nextbox-"
"compose_app_1 /var/www/html/occ``"
msgstr ""
"由于Nextcloud在Docker容器内运行，您需要以root身份执行以下内容。``docker exec -it -u www-data "
"nextbox-compose_app_1 /var/www/html/occ``。"

#: ../nextbox/faq/nextcloud.rst:39
msgid "**Q:** What to do about missing php-modules like `imagemagick`?"
msgstr "**问：**如何处理缺失的php模块，如`imagemagick`？"

#: ../nextbox/faq/nextcloud.rst:37
msgid ""
"Similar to Apache, PHP is also provided by the Nextcloud container, "
"therefore as we are using the stock Nextcloud container this will also "
"only be resolved once this is resolved by the Nextcloud Team."
msgstr "与Apache类似，PHP也是由Nextcloud容器提供的，因此，由于我们使用的是库存的Nextcloud容器，这也只有在Nextcloud团队解决了这个问题后才会得到解决。"

#: ../nextbox/faq/nextcloud.rst:51
msgid ""
"**Q:** Why is my Nextcloud not loading properly, instead I get a white "
"page and a `.htaccess` error?"
msgstr "**问：**为什么我的Nextcloud不能正常加载，而是出现了白色页面和`.htaccess`错误？"

#: ../nextbox/faq/nextcloud.rst:42
msgid ""
"This usually is an indication that the OS has unmounted/detached the "
"internal hard-drive due to an low-power-incident. Please make sure you "
"read and understood `USB power <faq/hardware.html#why-must-i-not-connect-"
"external-hard-drives-without-an-external-power-supply-to-my-nextbox>`_. "
"In most cases doing a power-cycle (unplug the USB-C connector, wait 5secs"
" and plug it in again) should resolve this. **Make sure no additional USB"
" devices are connected during this procedure.**"
msgstr ""
"这通常表明操作系统由于低电量事故而卸载/分离了内部硬盘。请确保您已阅读并理解`USB 电源<faq/hardware.html#why-"
"must-i-not-connect-external-hard-drives-without-an-external-power-supply-"
"to-my-nextbox>`_ 。在大多数情况下，进行电源循环（拔下 USB-C 接口，等待 5 "
"秒钟，然后重新插入）应该可以解决这个问题。**确保在此过程中没有连接其他 USB 设备。**"

#: ../nextbox/faq/remote-access.rst:2
msgid "Remote Access FAQ"
msgstr "远程访问常见问题"

#: ../nextbox/faq/remote-access.rst:9
msgid "**Q:** What is the correct WebDAV URL?"
msgstr "**问：**正确的WebDAV URL是什么？"

#: ../nextbox/faq/remote-access.rst:5
msgid ""
"The full URL to use for WebDAV is: "
"``https://my.domain.tld/remote.php/webdav/``, there have been reports "
"that for native Windows WebDAV you might need: "
"``https://my.domain.tld/remote.php/dav/files/USERNAME`` with *USERNAME* "
"being the username you would like to use."
msgstr ""
"用于WebDAV的完整URL是。``https://my.domain.tld/remote.php/webdav/``，有报告说，对于本地Windows"
" "
"WebDAV，你可能需要。``https://my.domain.tld/remote.php/dav/files/USERNAME``，*USERNAME*是你想使用的用户名。"

#: ../nextbox/faq/remote-access.rst:16
msgid "**Q:** Can I access my Nextcloud instance using WebDAV?"
msgstr "**问：**我能否使用WebDAV访问我的Nextcloud实例？"

#: ../nextbox/faq/remote-access.rst:12
msgid ""
"Yes, please see `Nextcloud WebDAV documentation`_ for a complete "
"overview. A simple mount for unix-like systems might look like this: "
"``mount -t davfs https://my.domain.tld/remote.php/webdav/ "
"/mnt/target/path`` while making sure that the ``davfs2`` package is "
"installed. For Windows please additionally read these :doc:`docs "
"<../clients/windows>`."
msgstr ""
"是的，请参见`Nextcloud WebDAV 文档`_以获得完整的概述。类似unix的系统的简单挂载可能看起来像这样。``mount -t "
"davfs https://my.domain.tld/remote.php/webdav/ "
"/mnt/target/path``同时确保``davfs2``包已安装。对于Windows，请另外阅读这些 :doc:`docs "
"<../clients/windows>`。"

#: ../nextbox/faq/remote-access.rst:21
msgid ""
"**Q:**: Why does my Android smartphone's browser not open: "
"``http://nextbox.local``"
msgstr "**Q:**:为什么我的安卓智能手机'的浏览器打不开。``http://nextbox.local``。"

#: ../nextbox/faq/remote-access.rst:19
msgid ""
"As of today the technology needed to use ``.local`` URLs is not supported"
" by various (stock) Android browser(s). The mechanism is based on "
"``mDNS``. One possible workaround is to use a 3rd party app like "
"BonjourBrowser to discover all mDNS services in your network."
msgstr "截至目前，使用``.local``URLs所需的技术不被各种（库存）Android浏览器支持。该机制是基于``mDNS``。一个可能的解决方法是使用第三方应用程序，如BonjourBrowser来发现你网络中的所有mDNS服务。"

#: ../nextbox/faq/remote-access.rst:28
msgid ""
"**Q:**: Why does accessing my NextBox using: ``http://nextbox.local`` not"
" work?"
msgstr "**Q:**:为什么使用以下方式访问我的NextBox？``http://nextbox.local``不能工作？"

#: ../nextbox/faq/remote-access.rst:24
msgid ""
"There are several other reasons why the access using "
"``http://nextbox.local`` may not work, further known scenarios are:"
msgstr "使用``http://nextbox.local``的访问可能不工作的原因还有几个，进一步的已知情况是。"

#: ../nextbox/faq/remote-access.rst:27
msgid ""
"Using a Fritz!Box with the NextBox being connected via a LAN port and the"
" client/browser is connected to the network via WiFI (WLAN), the "
"Fritz!Box will block mDNS."
msgstr "使用Fritz！Box，NextBox通过LAN端口连接，客户端/浏览器通过WiFI（WLAN）连接到网络，Fritz！Box会阻止mDNS。"

#: ../nextbox/faq/remote-access.rst:38
msgid ""
"**Q:**: I followed all guides and still cannot acquire the TLS "
"certificate, what can I do?"
msgstr "**Q:**:我遵循了所有的指南，但仍然无法获得TLS证书，我可以做什么？"

#: ../nextbox/faq/remote-access.rst:31
msgid ""
"The reason a TLS certificate cannot be acquired is nearly always the fact"
" that your NextBox is not reachable from the internet. Make sure you have"
" followed the :doc:`../remote/walkthrough`. If you followed the step-by-"
"step instructions and it still does not work, very likely something is "
"blocking the connection, typical candidates are router web administration"
" features like: ``MyFritz!``, ``Fritz Web Services`` or similar services,"
" which are running on your router and thus blocking the traffic on "
"port(s) 80 and/or 443. Switch them off and retry acquiring your TLS "
"certificate."
msgstr ""
"无法获得TLS证书的原因几乎都是你的NextBox无法从互联网上到达。请确保你已经按照:doc:`.../remote/walkthrough`的要求做了。如果你按照说明一步步操作，但仍然无法工作，很可能是有什么东西阻挡了连接，典型的候选人是路由器的网络管理功能，如。``MyFritz!``,"
" ``Fritz Web "
"Services``或类似服务，它们正在你的路由器上运行，从而阻止了80或443端口的流量。关掉它们并重新尝试获取你的TLS证书。"

#: ../nextbox/faq/remote-access.rst:51
msgid "**Q:** Why is my reachability with IPv4 not working?"
msgstr "**问：**为什么我的IPv4的可达性不工作？"

#: ../nextbox/faq/remote-access.rst:41
msgid ""
"If you have properly set up :doc:`port forwarding <../remote/port-"
"forwarding>` and IPv4 connections (reachability test) are still not "
"working there are good chances that your Internet-Service-Provider (ISP) "
"does not provide a proper (public) IPv4 address to you. There are several"
" (end-customer) internet technologies, which do not allow incoming "
"traffic for the IPv4, which was assigned to you. An incomplete list is: "
"*private IPv4 address*, *DS-Lite connection* or *CarrierGrade-NAT (CG-"
"NAT)*. All these essentially share one IPv4 address accross multiple "
"users, thus block (incoming) traffic from the internet to you. Some ISPs "
"allow upgrading to so-called **full-stack connections**, which should "
"enable full bi-directional traffic for IPv4 and IPv6."
msgstr ""
"如果你已经正确设置了 :doc:`端口转发 <.../remote/port-"
"forwarding>`，但IPv4连接（可达性测试）仍然不工作，那么很有可能是你的互联网服务提供者（ISP）没有为你提供一个合适的（公共）IPv4地址。有一些（终端客户）互联网技术，不允许分配给你的IPv4的流量进入。一个不完整的列表是。*私人IPv4地址"
"*，*DS-Lite连接*或*CarrierGrade-NAT（CG-"
"NAT）*。所有这些基本上都是在多个用户之间共享一个IPv4地址，从而阻止了从互联网到你的（传入）流量。一些ISP允许升级到所谓的**全堆栈连接**，这应该可以实现IPv4和IPv6的完全双向通信。"

#: ../nextbox/faq/remote-access.rst:62
msgid "**Q:** Why do some devices fail to connect for my IPv6 configured NextBox?"
msgstr "**问：**为什么我配置了IPv6的NextBox，有些设备却无法连接？"

#: ../nextbox/faq/remote-access.rst:54
msgid ""
"Sadly, still not all ISPs and mobile-network providers (smartphones) do "
"have full IPv6 support activated. This means, if your NextBox is "
"configured for IPv6 only access, devices inside these networks will not "
"be able to connect. The **backwards-proxy does work as a workaround "
"here**, as it provides an IPv4 entrypoint to your NextBox independant of "
"your other remote access configuration."
msgstr "遗憾的是，并不是所有的互联网服务供应商和移动网络供应商（智能手机）都激活了完全的IPv6支持。这意味着，如果你的NextBox被配置为只能访问IPv6，这些网络中的设备将无法连接。在这里，**反向代理确实可以作为一种变通方法，因为它为你的NextBox提供了一个IPv4入口，与你的其他远程访问配置无关。"

#: ../nextbox/faq/software.rst:2
msgid "Software FAQ"
msgstr "软件常见问题"

#: ../nextbox/faq/software.rst:7
msgid "**Q:** What kind of public key is expected for SSH access?"
msgstr "**问：**SSH访问需要什么样的公钥？"

#: ../nextbox/faq/software.rst:5
msgid ""
"An openssh style (public) key is expected. Depending on your operating "
"system there are different ways to determine your public key. One might "
"be ``ssh-add -L``, another might be ``cat ~/.ssh/id_rsa.pub``. If you are"
" using Putty, please see the `Putty documentation`_."
msgstr ""
"希望有一个openssh风格的（公钥）。根据你的操作系统，有不同的方法来确定你的公钥。一种可能是``ssh-add "
"-L``，另一种可能是``cat ~/.ssh/id_rsa.pub``。如果你使用Putty，请看`Putty文档`_。"

#: ../nextbox/faq/software.rst:12
msgid "**Q:** Can the operating system be extended or configured manually?"
msgstr "**问：**操作系统是否可以手动扩展或配置？"

#: ../nextbox/faq/software.rst:10
msgid ""
"Yes, you can set up ssh access through the NextBox Nextcloud app. "
"Afterwards you can access your NextBox using ssh and you can do with the "
"system whatever you want. Obviously we will only provide support for the "
"NextBox stock configuration."
msgstr ""
"是的，你可以通过NextBox "
"Nextcloud应用程序设置ssh访问。之后，你可以使用ssh访问你的NextBox，你可以对系统进行任何操作。显然，我们将只提供对NextBox股票配置的支持。"

#: ../nextbox/faq/software.rst:15
msgid "**Q:** Where can I see a changelog for the NextBox versions?"
msgstr "**问：**我在哪里可以看到NextBox版本的更新日志？"

#: ../nextbox/faq/software.rst:15
msgid "Currently only here: `Launchpad NextBox`_"
msgstr "目前只在这里。`Launchpad NextBox`_"

#: ../nextbox/faq/software.rst:21
msgid "**Q:** How can I update the Operating System?"
msgstr "**问：**我怎样才能更新操作系统？"

#: ../nextbox/faq/software.rst:18
msgid ""
"There is no need to update the NextBox OS by hand. This is done using "
"``unattended-upgrades`` and on top the *nextbox-daemon* will check for "
"upgrades manually (as a redundant fallback solution) on every start. You "
"are free to update your OS by hand using ``apt``, if you know what you "
"are doing."
msgstr ""
"没有必要手工更新NextBox操作系统。这是用``unattended-upgrades``完成的，在每次启动时，*nextbox-"
"daemon*会手动检查升级（作为一个冗余的后备解决方案）。你可以自由地使用``apt``手动更新你的操作系统，如果你知道自己在做什么的话。"

#: ../nextbox/faq/software.rst:24
msgid "**Q:** Is the NextBox running a 32bit or 64bit operating system?"
msgstr "**问：**NextBox是运行32位还是64位操作系统？"

#: ../nextbox/faq/software.rst:24
msgid "The used OS is a 64bit system. The ``arch`` output: `aarch64`."
msgstr "使用的操作系统是64位系统。``arch``输出。`aarch64`."

#: ../nextbox/faq/software.rst:30
msgid ""
"**Q:** Which users and default passwords are created by default on the "
"NextBox's operating system?"
msgstr "**问：**哪些用户和默认密码是在NextBox'的操作系统中默认创建的？"

#: ../nextbox/faq/software.rst:27
msgid ""
"There is not one single default password set on any (system) user. The "
"only non-system user created is named ``nextuser``, without a default "
"password. The only way to access the NextBox is using ``ssh`` with a "
"public key, which can be set via the NextBox App."
msgstr "在任何（系统）用户上都没有设置一个默认密码。唯一创建的非系统用户名为``nextuser``，没有默认密码。访问NextBox的唯一方法是使用``ssh``与公钥，可以通过NextBox应用程序设置。"

#: ../nextbox/gettingstarted.rst:7
msgid "Quickstart"
msgstr "快速入门"

#: ../nextbox/gettingstarted.rst:10
msgid "Connect NextBox to your Internet router via network cable."
msgstr "通过网线将NextBox连接到您的互联网路由器。"

#: ../nextbox/gettingstarted.rst:11
msgid ""
"Connect the power cable to the NextBox, you can use any of the two USB-C "
"ports."
msgstr "将电源线连接到NextBox，你可以使用两个USB-C端口中的任何一个。"

#: ../nextbox/gettingstarted.rst:12
msgid "Once powered the NextBox will start"
msgstr "一旦通电，NextBox将启动"

#: ../nextbox/gettingstarted.rst:13
msgid ""
"Wait approx. 5 minutes and open \"http://nextbox.local\" in your web "
"browser - this duration may vary. The NextBox is ready once the LED is "
"constantly green (see :doc:`LEDs <technical/led-colors>`)."
msgstr ""
"等待大约5分钟，在你的网络浏览器中打开\"http://nextbox.local\"，这个时间可能会有所不同。当LED灯持续为绿色时，NextBox就准备好了（见:doc:`LEDs"
" <technical/led-colors>`）。"

#: ../nextbox/gettingstarted.rst:26
msgid "Create Admin Account"
msgstr "创建管理账户"

#: ../nextbox/gettingstarted.rst:28
msgid ""
"Enter your desired username and password. Remember to choose a strong "
"password for your admin account."
msgstr "输入你想要的用户名和密码。记住要为你的管理账户选择一个强密码。"

#: ../nextbox/gettingstarted.rst:36
msgid "An occurring warning can be ignored since you are on your local network."
msgstr "发生的警告可以忽略，因为您是在本地网络中。"

#: ../nextbox/gettingstarted.rst:38
msgid "Press \"Finish Setup\". This process may take a few minutes."
msgstr "按\"完成设置\"。这个过程可能需要几分钟时间。"

#: ../nextbox/gettingstarted.rst:44
msgid "Configure NextBox Related Features"
msgstr "配置NextBox的相关功能"

#: ../nextbox/gettingstarted.rst:46
msgid ""
"The NextBox comes with Nextcloud App to realize various configurations "
"(e.g., :doc:`backup-restore` or :doc:`Remote Access<remote/index>`) and "
"operations for your NextBox."
msgstr ""
"NextBox配有Nextcloud App，以实现各种配置（例如:doc:`backup-restore`或:doc:`Remote "
"Access<remote/index>`）和对NextBox的操作。"

#: ../nextbox/gettingstarted.rst:49
msgid ""
"Your can find the NextBox-App in Nextcloud's top level navigation, as "
"shown in this figure:"
msgstr "您可以在Nextcloud'的顶级导航中找到NextBox-App，如图所示。"

#: ../nextbox/gettingstarted.rst:-1
msgid "nextbox-app"
msgstr "NextBox-应用"

#: ../nextbox/gettingstarted.rst:55
msgid "Ready To Go"
msgstr "准备出发"

#: ../nextbox/gettingstarted.rst:57
msgid ""
"This is all it takes to get started with your NextBox. From this point "
"you are free to choose how you would like to make the best use of your "
"personal Nextcloud-powered cloud. To get you started, here is a "
"collection of ideas to continue on:"
msgstr ""
"这就是开始使用您的NextBox的全部步骤。从这一点出发，您可以自由选择如何最好地利用您的个人Nextcloud-"
"powered云。为了让你开始，这里收集了一些想法来继续。"

#: ../nextbox/gettingstarted.rst:62
msgid ""
"**Set up remote access for your NextBox** to allow access to your private"
" cloud from the internet. Our :doc:`guide <remote/index>` covers various "
"approaches."
msgstr "**为你的NextBox设置远程访问**，允许从互联网访问你的私有云。我们的 :doc:`guide <remote/index>`涵盖各种方法。"

#: ../nextbox/gettingstarted.rst:66
msgid ""
"We prepared a *one-click* remote access method, allowing you to set up "
"basic remote access in seconds."
msgstr "我们准备了一个*一键式的远程访问方法，允许你在几秒钟内设置基本的远程访问。"

#: ../nextbox/gettingstarted.rst:69
msgid ""
"**Connect your devices to your NextBox.** For smartphones the official "
"`Android App`_ and `iOS App`_ are both great additions for your personal "
"cloud. Apart from these there are also `Windows, macOS, Linux clients`_ "
"available, which integrate seamlessly into the OS of your choice. For "
"Android smartphones you might want to read our pictured :doc:`guide "
"<clients/android>`."
msgstr ""
"**将您的设备连接到您的NextBox。**对于智能手机，官方的`Android App`_和`iOS "
"App`_都是您个人云的重要补充。除了这些，还有`Windows、macOS、Linux客户端`_，它们可以无缝地集成到你选择的操作系统中。对于安卓智能手机，你可能想阅读我们的图片"
" :doc:`guide <client/android>`。"

#: ../nextbox/gettingstarted.rst:75
msgid ""
"**Browse the vast amount of apps** for your Nextcloud at the `official "
"store`_ for Nextcloud apps. Alternatively, just browse, find and install "
"directly from within your NextBox via the built-in app manager and "
"browser."
msgstr "**在`Nextcloud应用程序的官方商店`_为您的Nextcloud浏览大量的应用程序**。或者，通过内置的应用程序管理器和浏览器，直接在您的NextBox内浏览、查找和安装。"

#: ../nextbox/gettingstarted.rst:79
msgid ""
"**Extend your Dashboard** using the various `Dashboard Integrations`_ to "
"create your personal information hub."
msgstr "**使用各种`Dashboard Integrations`_扩展你的Dashboard，以创建你的个人信息枢纽。"

#: ../nextbox/gettingstarted.rst:82
msgid ""
"**Share photos, documents, any files, bookmarks and much more with your "
"family and friends**, or become part of a `Federation`_ and share, "
"communicate and collaborate with other Nextcloud users."
msgstr "**与您的家人和朋友分享照片、文档、任何文件、书签和更多内容**，或成为`联盟的一部分`_，与其他Nextcloud用户分享、交流和协作。"

#: ../nextbox/gettingstarted.rst:86
msgid ""
"**Your communications under your control** - use Nextcloud's powerful "
"`groupware apps`_ like *Mail*, *Contacts*, *Calendar* or even *Deck* to "
"have all your personal data under your control or to organize and work "
"together with others."
msgstr ""
"**你的通信在你的控制之下** - "
"使用Nextcloud'强大的`群件应用程序`_，如*邮件*、*联系人*、*日历*或甚至*Deck*，使你的所有个人数据在你的控制之下，或与其他人组织和合作。"

#: ../nextbox/gettingstarted.rst:91
msgid ""
"More interested in :doc:`technical details <technical/index>`? Or in "
"Open-Source in general? Then head over to the NextBox `repositories`_ at "
"GitHub, leave a star, contribute or discuss latest ideas and plans with "
"us."
msgstr ""
"对:doc:`技术细节<technical/index>`更感兴趣？或者对一般的开放源代码感兴趣？那就去GitHub上的NextBox "
"`存储库`_，留下一颗星，做出贡献或与我们讨论最新的想法和计划。"

#: ../nextbox/hardware-overview.rst:2
msgid "Hardware Overview"
msgstr "硬件概述"

#: ../nextbox/hardware-overview.rst:7
msgid "Summary"
msgstr "摘要"

#: ../nextbox/hardware-overview.rst:9
msgid "A NextBox consists of the following hardware components:"
msgstr "一个NextBox由以下硬件组件组成。"

#: ../nextbox/hardware-overview.rst:11
msgid "Raspberry PI 4 Type B"
msgstr "树莓PI 4 B型"

#: ../nextbox/hardware-overview.rst:12
msgid "Nitrokey NextBox (aluminum) case"
msgstr "Nitrokey NextBox（铝）机箱"

#: ../nextbox/hardware-overview.rst:13
msgid "Internal hard-drive (SSD or HDD)"
msgstr "内部硬盘（SSD或HDD）"

#: ../nextbox/hardware-overview.rst:14
msgid "NextBox Reset Shield"
msgstr "NextBox 重置盾牌"

#: ../nextbox/hardware-overview.rst:15
msgid "Various smaller parts (internal wiring, connectors)"
msgstr "各种较小的部件（内部布线、连接器）。"

#: ../nextbox/hardware-overview.rst:17
msgid ""
"The casing is made out of aluminum and a passive thermal design. There "
"are no glued components and the case can easily be opened using a "
"Phillips screwdriver.  Please keep in mind that opening the case will "
"void your warranty and it is generally not recommended to open the case "
"for the non-professional user, especially as this might damage the "
"thermal conductivity and therefore the heat dissipating capabilities of "
"the NextBox might suffer."
msgstr ""
"外壳由铝制成，采用被动散热设计。没有胶粘的部件，使用十字螺丝刀就可以轻松打开机箱。  "
"请记住，打开机箱将使您的保修失效，一般不建议非专业用户打开机箱，特别是这样做可能会破坏导热性，因此NextBox的散热能力可能会受到影响。"

#: ../nextbox/hardware-overview.rst:25
msgid "Connectors and Interfaces"
msgstr "连接器和接口"

#: ../nextbox/hardware-overview.rst:27
msgid ""
"In general the NextBox exposes all ports, which are available on the "
"Raspberry PI 4 and one additional USB Type C port for a better accessible"
" power supply connector. In the following a short description of the "
"different connectors and interfaces is given."
msgstr ""
"总的来说，NextBox提供了树莓派4上的所有端口，以及一个额外的USB Type "
"C端口，以便更好地使用电源接口。以下是对不同连接器和接口的简短描述。"

#: ../nextbox/hardware-overview.rst:31
msgid "Hardware button for :doc:`Factory-Reset<technical/factory-reset>`"
msgstr "硬件按钮为 :doc:`Factory-Reset<technical/factory-reset>`。"

#: ../nextbox/hardware-overview.rst:32
msgid ":doc:`Status LED<technical/led-colors>`"
msgstr ":doc:`状态LED<技术/led-colors>`。"

#: ../nextbox/hardware-overview.rst
msgid "back view"
msgstr "后视图"

#: ../nextbox/hardware-overview.rst:38
msgid ""
"**USB Type-C / Power Supply** connector is designated as a replacement "
"for the stock connector on the front side and is exclusively for "
"supplying power to the NextBox and cannot transfer data."
msgstr "**USB Type-C / Power Supply**连接器被指定为替代正面的原厂连接器，专门为NextBox供电，不能传输数据。"

#: ../nextbox/hardware-overview.rst:43
msgid ""
"The right side of the NextBox is designed so that all mandatory "
"interfaces can be accessed from this side."
msgstr "NextBox右侧的设计使所有必须的接口都可以从这一侧进入。"

#: ../nextbox/hardware-overview.rst
msgid "right view"
msgstr "右视图"

#: ../nextbox/hardware-overview.rst:50
msgid ""
"The **RJ45 - 1GbE Ethernet** connector connects your NextBox with your "
"home network and shall stay connected at all times."
msgstr "RJ45 - 1GbE以太网**连接器将您的NextBox与您的家庭网络连接起来，应随时保持连接。"

#: ../nextbox/hardware-overview.rst:52
msgid "**Free USB 3 - Type A Slot**, please see `Hardware FAQ`_"
msgstr "**免费 USB 3 - A 型插槽**, 请参阅`Hardware FAQ`_"

#: ../nextbox/hardware-overview.rst:53
msgid ""
"**Reserved USB 3 - Type A Slot**, used for the internal hard-disk. *Never"
" remove this connector!*"
msgstr "**保留的USB 3 - A型插槽**，用于内部硬盘。千万不要拆除这个连接器！**。"

#: ../nextbox/hardware-overview.rst:54
msgid "**2x Free USB 2 - Type A Slots**, please see `Hardware FAQ`_"
msgstr "**2x 免费 USB 2 - A 型插槽**, 请参阅`硬件常见问题`_。"

#: ../nextbox/hardware-overview.rst:56
msgid ""
"Using a hard-drive with an external power supply you can use any of the "
"available USB slots. Keep in mind that the data transfer bandwidth for "
"the USB 2 slots is less compared to the USB 3 slot."
msgstr "使用带有外部电源的硬盘，你可以使用任何一个可用的USB插槽。请记住，与USB 3插槽相比，USB 2插槽的数据传输带宽较小。"

#: ../nextbox/hardware-overview.rst:60
msgid "**USB Type-C / Power Supply** (stock) connector, can be used as **[3]**"
msgstr "**USB Type-C/电源**（库存）连接器，可作为**[3]**使用。"

#: ../nextbox/hardware-overview.rst:61
msgid "**Micro HDMI 1 slot**, usable but not needed."
msgstr "**微型HDMI 1插槽**，可使用但不需要。"

#: ../nextbox/hardware-overview.rst:62
msgid "**Micro HDMI 2 slot**, usable but not needed."
msgstr "**微型HDMI 2插槽**，可使用但不需要。"

#: ../nextbox/hardware-overview.rst:63
msgid "**Headphone Jack**, usable but not needed."
msgstr "**耳机插孔**，可使用但不需要。"

#: ../nextbox/hardware-overview.rst
msgid "front view"
msgstr "正面图"

#: ../nextbox/hardware-overview.rst:69
msgid ""
"The front interfaces are all optional and not necessary for NextBox usage"
" in general. While the **USB Type-C/Power Supply** may be used, the "
"alternative on the right side of the NextBox can be used to have all "
"wiring convenient on one side."
msgstr ""
"前面的接口都是可选的，对于NextBox的一般使用来说不是必须的。虽然可以使用**USB "
"Type-C/电源**，但可以使用NextBox右侧的替代方案，使所有的接线都方便在一侧。"

#: ../nextbox/index.rst:2
msgid "NextBox"
msgstr "NextBox"

#: ../nextbox/remote/dns-rebind.rst:2
msgid "DNS Rebind Protection"
msgstr "DNS重新绑定保护"

#: ../nextbox/remote/dns-rebind.rst:5 ../nextbox/remote/ipv6-settings.rst:5
#: ../nextbox/remote/port-forwarding.rst:5
msgid "Issue"
msgstr "问题"

#: ../nextbox/remote/dns-rebind.rst:7
msgid ""
"You have your dynamic DNS correctly set up, but IPv6 resolving does not "
"work for your domain."
msgstr "你已经正确地设置了动态DNS，但IPv6解析对你的域名不起作用。"

#: ../nextbox/remote/dns-rebind.rst:11 ../nextbox/remote/ipv6-settings.rst:16
#: ../nextbox/remote/port-forwarding.rst:13
msgid "Details"
msgstr "详细内容"

#: ../nextbox/remote/dns-rebind.rst:13
msgid ""
"In general DNS Rebinding protection is a safety mechanism to avoid "
"attacks based on `DNS-Rebinding`_. Home routers include a protection "
"mechanism for this attack by never returning a local IP (v4 & v6) "
"address."
msgstr ""
"一般来说，DNS重新绑定保护是一种安全机制，以避免基于`DNS重新绑定`_的攻击。家庭路由器包括一个保护机制，通过永不返回本地IP（v4 & "
"v6）地址来防止这种攻击。"

#: ../nextbox/remote/dns-rebind.rst:17
msgid ""
"In the context of the NextBox this means that, if you are using IPv6, the"
" IPv6 address of your NextBox is considered local by your router and thus"
" wiull not be returned during DNS resolving of your designated domain."
msgstr "在NextBox的情况下，这意味着，如果你使用IPv6，你的NextBox的IPv6地址被你的路由器认为是本地的，因此在DNS解析你的指定域时不会被返回。"

#: ../nextbox/remote/dns-rebind.rst:21
msgid ""
"For IPv4 this is also applies, but not a problem. In the IPv4 world "
"(dynamic) DNS resolves to the router (WAN-IP) itself and the router will "
"forward the traffic to your NextBox. In contrast IPv6 will not resolve to"
" your router but to the IPv6 address of your NextBox directly and the "
"router just has to open its firewall for the traffic to pass."
msgstr ""
"对于IPv4，这也适用，但不是一个问题。在IPv4世界（动态）DNS解析到路由器（WAN-"
"IP）本身，路由器将转发流量到你的NextBox。相反，IPv6不会解析到你的路由器，而是直接解析到你的NextBox的IPv6地址，路由器只需打开其防火墙，流量就能通过。"

#: ../nextbox/remote/dns-rebind.rst:29 ../nextbox/remote/ipv6-settings.rst:25
#: ../nextbox/remote/port-forwarding.rst:26
msgid "Solution"
msgstr "解决方案"

#: ../nextbox/remote/dns-rebind.rst:31
msgid ""
"Most routers, which implement this DNS-Rebind protection also allow you "
"to whitelist certain domains from this protection. **Generally, to solve "
"this issue you have to insert your (full) domain to the DNS-Rebind "
"Exceptions (or whitelist) of your router.**"
msgstr ""
"大多数实施这种DNS-Rebind保护的路由器也允许你将某些域名列入白名单，使其不受这种保护。**一般来说，要解决这个问题"
"，你必须在路由器的DNS-Rebind Exceptions（或白名单）中插入你的（完整）域。"

#: ../nextbox/remote/dns-rebind.rst:35
msgid ""
"For instance, the setting inside a *Fritz!Box* is to be found in: \"Home "
"Network -> Network -> Network Settings -> More Settings -> DNS Rebind "
"Protection\". You need to ensure that you have the \"extended/expert "
"view\" activated."
msgstr "例如，在*Fritz！Box*内的设置是在：\"家庭网络->网络->网络设置->更多设置->DNS重新绑定保护\"。你需要确保你已经激活了\"扩展/专家视图\"。"

#: ../nextbox/remote/dynamic-dns.rst:2
msgid "Dynamic DNS Setup"
msgstr "动态DNS设置"

#: ../nextbox/remote/dynamic-dns.rst:6
msgid ""
"**There are two ways to configure a dynamic DNS provider to be used and "
"updated by your NextBox instance.**"
msgstr "**有两种方法可以配置动态DNS提供者，以便由你的NextBox实例使用和更新**。"

#: ../nextbox/remote/dynamic-dns.rst:9 ../nextbox/remote/static.rst:7
msgid ""
"In contrast to the :doc:`backwards proxy <proxy>` remote access method, "
"this approach will ensure full end-to-end encryption using your very own "
"TLS certificate acquired from `Let's Encrypt`_."
msgstr ""
"与 :doc:`backwards proxy <proxy>`远程访问方法相比，这种方法将确保使用你自己的TLS证书从`Let's "
"Encrypt`_获得的完全端到端加密。"

#: ../nextbox/remote/dynamic-dns.rst:15
msgid "Guided Dynamic DNS"
msgstr "引导的动态DNS"

#: ../nextbox/remote/dynamic-dns.rst:17
msgid ""
"The guided setup will register an account at `desec.io`_ for you. Please "
"follow these steps to configure your NextBox using the Guided Dynamic DNS"
" method:"
msgstr "指导性设置将为您在`desec.io`_注册一个账户。请按照以下步骤，使用引导式动态DNS方法配置您的NextBox。"

#: ../nextbox/remote/dynamic-dns.rst:20
msgid ""
"In step one you need to provide an e-mail address and the domain you "
"would like to register.  Please make sure that you have access to this "
"e-mail account and the domain ends with **.dedyn.io**. *You can continue "
"to the next step by registering at `desec.io`_ or without (e.g., if you "
"have already registered this domain before)*"
msgstr ""
"在第一步，你需要提供一个电子邮件地址和你想注册的域名。  "
"请确保你可以访问这个电子邮件账户，并且域名以**.dedyn.io**结尾。*你可以通过在 \"desec.io "
"\"注册或不注册（例如，如果你以前已经注册过这个域名）继续进行下一步的工作 *"

#: ../nextbox/remote/dynamic-dns.rst:26
msgid ""
"After the registration at `desec.io`_ you will receive a verification "
"e-mail, which will guide you through the registration process at "
"`desec.io`_. Once completed you will be presented with a secret token, "
"which is needed in step two."
msgstr "在`desec.io`_注册后，你会收到一封验证邮件，它将指导你完成`desec.io`_的注册过程。一旦完成，你将得到一个秘密令牌，这在第二步中是需要的。"

#: ../nextbox/remote/dynamic-dns.rst:31
msgid ""
"If you do not receive a verification e-mail try `reset password`_ (using "
"the same e-mail address) at `desec.io`_ to set a password, which will "
"allow you to login into your account."
msgstr ""
"如果你没有收到验证邮件，请在`reset "
"password`_（使用相同的电子邮件地址）`desec.io`_设置一个密码，这将使你能够登录到你的账户。"

#: ../nextbox/remote/dynamic-dns.rst:35
msgid ""
"In step two the just acquired secret token shall be inserted into the "
"input field to complete your guided dynamic dns configuration."
msgstr "在第二步中，应将刚刚获得的秘密令牌插入输入栏，以完成你的指导性动态域名配置。"

#: ../nextbox/remote/dynamic-dns.rst:38
msgid ""
"Your token will only be presented once to you (after the verification "
"process).  If you need a new token, you need to create a new one inside "
"the `token management`_ inside your `desec.io`_ account settings."
msgstr ""
"你的令牌只会呈现给你一次（在验证过程之后）。  如果你需要一个新的令牌，你需要在你的`token "
"management`_里面的`desec.io`_账户设置中创建一个新的令牌。"

#: ../nextbox/remote/dynamic-dns.rst:42
msgid ""
"Once the 2nd step is completed you can *Continue to TLS activation* - see"
" below..."
msgstr "一旦第二步完成，你就可以*继续进行TLS激活* - 见下文..."

#: ../nextbox/remote/dynamic-dns.rst:45
msgid "Custom Dynamic DNS"
msgstr "自定义动态DNS"

#: ../nextbox/remote/dynamic-dns.rst:47
msgid ""
"To update your dynamic DNS provider with your currently used IP(s), "
"NextBox is using `ddclient`_, which can be directly configured here or "
"via the *Guided DNS* method described before."
msgstr "为了用你目前使用的IP更新你的动态DNS提供商，NextBox使用`ddclient`_，它可以直接在这里配置或通过前面描述的*指导DNS*方法。"

#: ../nextbox/remote/dynamic-dns.rst:51
msgid ""
"In this configuration you need the provide the *domain* this "
"configuration is enabling and the contents of the `ddclient.conf` used by"
" `ddclient`_. Various examples can be found at the `official "
"documentation`_, the one used for the guided DNS configuration uses the "
"following template:"
msgstr "在这个配置中，你需要提供这个配置所启用的*域名以及`ddclient`_使用的`ddclient.conf`的内容。各种例子可以在`官方文档`_中找到，用于指导DNS配置的例子使用了以下模板。"

#: ../nextbox/remote/dynamic-dns.rst:67
msgid ""
"Once you actiavted this configuration, you can *Continue to TLS "
"activation* - see below"
msgstr "一旦你完成了这个配置，你就可以*继续进行TLS激活*--见下文。"

#: ../nextbox/remote/dynamic-dns.rst:73
msgid "Enable TLS"
msgstr "启用TLS"

#: ../nextbox/remote/dynamic-dns.rst:74
msgid ""
"On this page first wait for the status-bars to settle and mainly ensure "
"that *reachability* of your NextBox is tested successfully. If this is "
"the case, just click **Enable TLS** to acquire your TLS certificate."
msgstr "在这个页面上，首先等待状态栏的稳定，主要是确保你的NextBox的*可及性测试成功。如果是这样，只需点击**启用TLS**来获取你的TLS证书。"

#: ../nextbox/remote/dynamic-dns.rst:78
msgid ""
"If the reachibility test fails, make sure your :doc:`port forwarding "
"<port-forwarding>` is configured properly."
msgstr "如果可达性测试失败，请确保你的 :doc:`port forwarding <port-forwarding>`配置正确。"

#: ../nextbox/remote/index.rst:10
msgid "Walkthrough"
msgstr "演练"

#: ../nextbox/remote/index.rst:27
msgid "Method comparison"
msgstr "方法比较"

#: ../nextbox/remote/index.rst:36
msgid "Backwards Proxy"
msgstr "反向代理"

#: ../nextbox/remote/index.rst:36
msgid "Dynamic DNS"
msgstr "动态DNS"

#: ../nextbox/remote/index.rst:36
msgid "Static Domain"
msgstr "静态领域"

#: ../nextbox/remote/index.rst:47
msgid "DNS Rebind"
msgstr "DNS重新绑定"

#: ../nextbox/remote/index.rst:47
msgid "Port Forwarding"
msgstr "端口转发"

#: ../nextbox/remote/index.rst:47
msgid "IPv6 Settings"
msgstr "IPv6设置"

#: ../nextbox/remote/index.rst:2
msgid "Managing Remote Access"
msgstr "管理远程访问"

#: ../nextbox/remote/index.rst:4
msgid ""
"Your NextBox comes with different options on how to enable access to your"
" NextBox from any remote location as long as you have an internet "
"connection available."
msgstr "您的NextBox有不同的选项，只要您有互联网连接，就可以从任何远程地点访问您的NextBox。"

#: ../nextbox/remote/index.rst:8
msgid "If you struggle with the overall topic, please read:"
msgstr "如果你对整个主题感到纠结，请阅读。"

#: ../nextbox/remote/index.rst:16
msgid ""
"Even though the *Backwards Proxy* remote access method is a quick way to "
"realize remote access, we **strongly recommend** to use a :doc:`dynamic "
"DNS setup<dynamic-dns>` or :doc:`static DNS setup<static>` to maintain "
"the best security level for your NextBox. *In most usage scenarios the "
"latter will also provide a better data bandwidth and user experience*"
msgstr ""
"尽管*反向代理*远程访问方法是实现远程访问的快速方法，但我们**强烈建议**使用 :doc:`动态DNS设置<动态-dns>` 或 "
":doc:`静态DNS设置<静态>` 为您的NextBox保持最佳安全水平。*在大多数使用情况下，后者也将提供更好的数据带宽和用户体验*。"

#: ../nextbox/remote/index.rst:23
msgid ""
"Before you set up a remote access method you might want to read the "
":doc:`comparison<method-comparison>` in order to understand the trade-"
"offs and capabilities of the different approaches:"
msgstr "在你设置远程访问方法之前，你可能想阅读 :doc:`comparison<method-comparison>`，以了解不同方法的权衡和能力。"

#: ../nextbox/remote/index.rst:34
msgid "There are different ways to make your NextBox available for remote access."
msgstr "有不同的方法使你的NextBox可用于远程访问。"

#: ../nextbox/remote/index.rst:44
msgid ""
"The following topics might be of interest for you, depending on your "
"internet service provider and the type of your internet connection:"
msgstr "以下主题可能是你感兴趣的，这取决于你的互联网服务提供商和你的互联网连接类型。"

#: ../nextbox/remote/ipv6-settings.rst:2
msgid "IPv6-related Settings"
msgstr "与IPv6相关的设置"

#: ../nextbox/remote/ipv6-settings.rst:7
msgid ""
"You have properly set up one of the DNS configurations, :doc:`port-"
"forwarding` and :doc:`dns-rebind` and still your NextBox is not available"
" / reachable."
msgstr ""
"你已经正确地设置了一个DNS配置， :doc:`port-forwarding`和:doc:`dns-"
"rebind`，但你的NextBox仍然不可用/无法到达。"

#: ../nextbox/remote/ipv6-settings.rst:11
msgid ""
"This is in particular important for Fritz!Box owners and/or DS-Lite "
"internet connections."
msgstr "这对Fritz!Box的所有者和/或DS-Lite的互联网连接尤其重要。"

#: ../nextbox/remote/ipv6-settings.rst:18
msgid ""
"First test your (sub-)domain using a 3rd party service like `IPv6 Test`_ "
"to test your NextBox' IPv6 reachability. If this fails this is another "
"indicator that your IPv6 settings are not correct."
msgstr "首先，使用第三方服务如`IPv6 Test`_来测试你的NextBox'IPv6可达性。如果失败了，这是另一个指标，说明你的IPv6设置是不正确的。"

#: ../nextbox/remote/ipv6-settings.rst:27
msgid ""
"Some routers might have a bad default configuration for IPv6. Therefore "
"please ensure that your router is configured to pass IPv6 addresses to "
"your network clients (called ``IA_NA``), if this not done, no IPv6 "
"connection can be established to your NextBox from the outside, thus your"
" NextBox is not reachable."
msgstr "一些路由器可能对IPv6的默认配置不好。因此，请确保你的路由器配置为将IPv6地址传递给你的网络客户（称为``IA_NA``），如果没有这样做，就不能从外部建立IPv6连接到你的NextBox，因此你的NextBox是无法到达。"

#: ../nextbox/remote/ipv6-settings.rst:32
msgid ""
"On a recent *Fritz!Box* you will find this configuration inside: \"Home "
"Network -> \"Network\" -> \"Network Settings\" -> \"IPv6 Configuration\" "
"Inside this view inside the section: \"DHCPv6 Server in the Home "
"Network\" activate: \"Enable DHCPv6 server in the FRITZ!Box for the home "
"network:\" and below this the last radio button has to be active: "
"\"Assign DNS server, prefix (IA_PD) and IPv6 address (IA_NA)\" instead of"
" the default, which is the 1st radio button."
msgstr ""
"在最近的*Fritz!Box*上你会发现这个配置：\"家庭网络 -> \"网络\" -> \"网络设置\" -> \"IPv6配置\" "
"在这个视图里面的部分：\"家庭网络的DHCPv6服务器\" 激活：\"在FRITZ!Box的家庭网络中启用DHCPv6服务器：\" "
"在这下面的最后一个单选按钮必须激活：\"指定DNS服务器、前缀（IA_PD）和IPv6地址（IA_NA）\" 而不是默认的，也就是第一个单选按钮。"

#: ../nextbox/remote/method-comparison.rst:2
msgid "Comparing Methods For (Remote) Access"
msgstr "比较（远程）访问的方法"

#: ../nextbox/remote/method-comparison.rst:7
msgid "DNS-based"
msgstr "基于DNS的"

#: ../nextbox/remote/method-comparison.rst:9
msgid ""
"This is clearly the best and most secure approach and we recommend using "
"a DNS-based remote-access method including your own TLS certificate for "
"the best security"
msgstr "这显然是最好和最安全的方法，我们建议使用基于DNS的远程访问方法，包括你自己的TLS证书，以获得最佳的安全性。"

#: ../nextbox/remote/method-comparison.rst:13
msgid "This denotes the :doc:`dynamic-dns` and the :doc:`static` approach."
msgstr "这表示:doc:`dynamic-dns`和:doc:`static`方法。"

#: ../nextbox/remote/method-comparison.rst:15
msgid ""
"Clearly the *best* method, but also the one requiring some configuration "
"work on your internet router."
msgstr "显然，这是*好的方法，但也需要对你的互联网路由器进行一些配置工作。"

#: ../nextbox/remote/method-comparison.rst:17
msgid ""
"You get your *own* (sub)domain and a TLS certificate, thus all your "
"traffic will always be end-to-end encrypted and you maintain the highest "
"level of security for your traffic."
msgstr "你得到了你的**（子）域名和TLS证书，因此你的所有流量将始终是端到端加密的，你的流量保持最高的安全水平。"

#: ../nextbox/remote/method-comparison.rst:19
msgid ""
"Opening the right ports on your internet router is necessary, see "
":doc:`here<port-forwarding>`"
msgstr "在你的互联网路由器上打开正确的端口是必要的，见 :doc:`here<port-forwarding>`。"

#: ../nextbox/remote/method-comparison.rst:20
#: ../nextbox/remote/method-comparison.rst:36
msgid "Data path: [NextBox] ⟷   [Router] ⟷  [Client]"
msgstr "数据路径。[NextBox] ⟷ [Router] ⟷ [Client]."

#: ../nextbox/remote/method-comparison.rst:21
msgid "**Pro:** best performance, highest security, full end-to-end encryption"
msgstr "**优点：**性能最佳，安全性最高，完全端到端加密"

#: ../nextbox/remote/method-comparison.rst:22
msgid ""
"**Contra:** needs (dynamic) DNS, needs configuration on your internet "
"router"
msgstr "**Contra：**需要（动态）DNS，需要在你的互联网路由器上进行配置。"

#: ../nextbox/remote/method-comparison.rst:27
msgid "Non-encrypted"
msgstr "非加密的"

#: ../nextbox/remote/method-comparison.rst:29
msgid ""
"We strongly recommend to not use the non-encrypted setup, if you plan to "
"make your NextBox available outside of your local area network."
msgstr "我们强烈建议不要使用非加密的设置，如果你打算让你的NextBox在你的局域网之外可用。"

#: ../nextbox/remote/method-comparison.rst:32
msgid ""
"simple (``http``) using either ``nextbox.local`` or your local IP (e.g.: "
"``192.168.178.123``)"
msgstr "简单（``http``）使用``nextbox.local``或你的本地IP（例如：``192.168.178.123`）。"

#: ../nextbox/remote/method-comparison.rst:33
msgid ""
"Generally a bad idea, this will not encrypt the transported data in any "
"way and is only useful in a setup where you do not want remote access to "
"your NextBox (having non-encrypted traffic inside your LAN might be no "
"problem, as long as you know what you are doing)"
msgstr "一般来说，这是一个坏主意，这不会以任何方式对传输的数据进行加密，只有在你不希望远程访问你的NextBox的情况下才有用（在你的局域网内有非加密的流量可能没有问题，只要你知道你在做什么。）"

#: ../nextbox/remote/method-comparison.rst:37
msgid "**Pro:** fast, no configuration"
msgstr "**优点：**快速，无需配置"

#: ../nextbox/remote/method-comparison.rst:38
msgid "**Contra:** no transport security, no remote access (or only unencrypted)"
msgstr "**Contra:**没有运输安全，没有远程访问（或只有未加密的）。"

#: ../nextbox/remote/method-comparison.rst:41
msgid ""
"Further, once you set up TLS and thus a DNS-based method, the unencrypted"
" connection for your NextBox will be disabled, this is not the case for "
"the Reverse Proxy as a problem with the proxy would then lock you out of "
"your NextBox."
msgstr "此外，一旦你设置了TLS和基于DNS的方法，你的NextBox的未加密连接将被禁用，反向代理则不是这样，因为代理的问题将锁定你的NextBox。"

#: ../nextbox/remote/method-comparison.rst:48
msgid "Nitrokey's Reverse Proxy"
msgstr "Nitrokey的反向代理"

#: ../nextbox/remote/method-comparison.rst:50
msgid "This refers to the :doc:`proxy` method."
msgstr "这指的是:doc:`proxy`方法。"

#: ../nextbox/remote/method-comparison.rst:53
msgid ""
"Provides transport encryption between your clients and your NextBox.  But"
" with the drawback that it is not End-To-End encrypted, means the traffic"
" will be decrypted at the Nitrokey Proxy Server and passed onward with "
"another encryption. Thus a compromised proxy server might allow access to"
" your traffic to the potential attacker."
msgstr ""
"在你的客户和你的NextBox之间提供传输加密。  "
"但缺点是它不是端对端加密的，这意味着流量将在Nitrokey代理服务器上被解密，并以另一种加密方式传递下去。因此，一个被破坏的代理服务器可能允许潜在的攻击者访问你的流量。"

#: ../nextbox/remote/method-comparison.rst:58
msgid ""
"The proxy server is a bottleneck and all traffic has to go through the "
"proxy server, even if you are in a local network together with the "
"NextBox the traffic has to go through the proxy server."
msgstr "代理服务器是一个瓶颈，所有的流量都必须通过代理服务器，即使你和NextBox一起在本地网络中，流量也必须通过代理服务器。"

#: ../nextbox/remote/method-comparison.rst:61
msgid ""
"Data path (local client): [NextBox] ⟷  [Router]⟷  [Proxy Server] ⟷   "
"[Router] ⟷   [Client]"
msgstr "数据路径（本地客户端）。[NextBox] ⟷ [Router]⟷ [Proxy Server] ⟷ [Router] ⟷ [Client]."

#: ../nextbox/remote/method-comparison.rst:62
msgid ""
"Data path (remote client): [NextBox] ⟷  [Router]⟷  [Proxy Server] ⟷   "
"[Client]"
msgstr "数据路径（远程客户端）。[NextBox] ⟷ [Router]⟷ [Proxy Server] ⟷ [Client]（客户）。"

#: ../nextbox/remote/method-comparison.rst:63
msgid "**Pro:** easy to setup, good transport security"
msgstr "**优点：**容易设置，运输安全性好"

#: ../nextbox/remote/method-comparison.rst:64
msgid ""
"**Contra:** not strictly end-to-end encrypted, potentially slow (all "
"traffic through the proxy)"
msgstr "**Contra:**不是严格的端对端加密，可能很慢（所有流量都通过代理）。"

#: ../nextbox/remote/method-comparison.rst:67
msgid ""
"Non end-to-end encrypted does still mean all your traffic is indeed "
"encrypted, but within the proxy server, in order to be forwarded the "
"traffic will be decrypted once and encrypted again before being passed to"
" the client or NextBox"
msgstr "非端到端加密仍然意味着您的所有流量确实是加密的，但在代理服务器内，为了转发，流量将被解密一次，并在传递给客户端或NextBox之前再次加密。"

#: ../nextbox/remote/port-forwarding.rst:2
msgid "Port Forwarding & Firewall Configuration"
msgstr "端口转发& 防火墙配置"

#: ../nextbox/remote/port-forwarding.rst:7
msgid ""
"You have your dynamic DNS correctly set up, but your NextBox is not "
"reachable using the domain."
msgstr "你已经正确设置了动态DNS，但你的NextBox无法使用域名到达。"

#: ../nextbox/remote/port-forwarding.rst:9
msgid ""
"Before looking into this topic, make sure your domain correctly resolves "
"to your IP."
msgstr "在研究这个问题之前，请确保你的域名正确地解析到你的IP。"

#: ../nextbox/remote/port-forwarding.rst:15
msgid ""
"For both IPv4 and IPv6 you need to properly configure your internet "
"router to allow access to your NextBox. While most internet routers will "
"refer to this configuration as *port forwarding*, in fact IPv4 based "
"(dynamic) DNS will resolve to your router's IP. But IPv6 in contrast will"
" resolve to a (globally) unique IP, which refers to your NextBox."
msgstr "对于IPv4和IPv6，你需要正确配置你的互联网路由器，允许访问你的NextBox。虽然大多数互联网路由器将这种配置称为*端口转发*，但实际上基于IPv4的（动态）DNS将解析到你的路由器的IP。但相反，IPv6将解析到一个（全球）唯一的IP，也就是你的NextBox。"

#: ../nextbox/remote/port-forwarding.rst:20
msgid ""
"Therefore in technical terms IPv4 needs port forwarding to be enabled and"
" for IPv6 you need to open the firewall to allow access to your NextBox. "
"But in reality most routers do not differentiate between those and just "
"name it *port sharing* for either IPv4 or IPv6."
msgstr "因此，从技术上讲，IPv4需要启用端口转发，而对于IPv6，你需要打开防火墙，允许访问你的NextBox。但实际上，大多数路由器并不区分这些，只是将其命名为IPv4或IPv6的*端口共享*。"

#: ../nextbox/remote/port-forwarding.rst:28
msgid ""
"**The port-forwarding and/or firewall rules have to be configured to "
"allow traffic on ports 80 (HTTP-Server) and 443 (HTTPS-Server).**"
msgstr "**必须配置端口转发和/或防火墙规则，以允许端口80（HTTP-服务器）和443（HTTPS-服务器）的流量**。"

#: ../nextbox/remote/port-forwarding.rst:31
msgid ""
"On a recent *Fritz!Box* you will find this configuration inside: "
"\"Internet -> Permit Access -> Port Sharing\""
msgstr ""
"在最近的*Fritz！Box*上，你会发现里面有这样的配置：\"Internet -> Permit Access -> Port "
"Sharing\"。"

#: ../nextbox/remote/proxy.rst:2
msgid "Backwards Proxy Remote Access"
msgstr "反向代理远程访问"

#: ../nextbox/remote/proxy.rst:4
msgid ""
"**This is the fastest and easiest way to make your NextBox available for "
"remote access.**"
msgstr "**这是使您的NextBox可用于远程访问的最快和最简单的方法**。"

#: ../nextbox/remote/proxy.rst:7
msgid ""
"The only information to provide is the (sub)domain your NextBox should be"
" available at.  There is also no need for a port forwarding configuration"
" or any other setting to be done at your internet router. Although this "
"method is recommended, please be aware that this method also comes with "
"some drawbacks:"
msgstr ""
"唯一需要提供的信息是你的NextBox的（子）域名。  "
"也不需要在你的互联网路由器上进行端口转发配置或任何其他设置。虽然这种方法被推荐，但请注意，这种方法也有一些缺点。"

#: ../nextbox/remote/proxy.rst:12
msgid ""
"All traffic is passed through our (backwards) proxy server, thus is not "
"end-to-end encrypted.  *In particular, if this server is compromised, "
"your traffic might be readable.*"
msgstr "所有的流量都是通过我们的（反向）代理服务器，因此不是端到端加密的。  *特别是，如果这个服务器被破坏，你的流量可能会被读取。"

#: ../nextbox/remote/proxy.rst:16
#, python-format
msgid ""
"The same reason also introduces a bandwith bottleneck, if you are "
"connecting to your NextBox from within your local area network (LAN). As "
"all traffic has to be send to our proxy server and from there to your "
"NextBox, the available bandwidth is limited to roughly 50% of your upload"
" or download bandwidth (whichever is smaller)."
msgstr ""
"如果您从您的局域网（LAN）连接到您的NextBox，同样的原因也引入了一个带宽瓶颈。由于所有的流量必须发送到我们的代理服务器，再从那里发送到您的NextBox，可用的带宽被限制在大约50%"
" of您的上传或下载带宽（以小者为准）。"

#: ../nextbox/remote/proxy.rst:23
msgid ""
"In order to not be affected by these drawbacks you can set up a "
":doc:`dynamic DNS provider <dynamic-dns>` or a :doc:`static domain "
"<static>`."
msgstr ""
"为了不受这些缺点的影响，你可以设置一个 :doc:`动态DNS提供商 <dynamic-dns>`或者一个 :doc:`静态域名 "
"<static>`。"

#: ../nextbox/remote/proxy.rst:27
msgid "IPv6 to IPv4 Translation"
msgstr "IPv6到IPv4的转换"

#: ../nextbox/remote/proxy.rst:29
msgid ""
"If your NextBox is only available through IPv6 (e.g., DS-Lite internet "
"connection) the backwards proxy might be the only way to access your "
"NextBox using a non-IPv6 enabled device. As of today e.g., various mobile"
" network providers do not support IPv6 yet."
msgstr ""
"如果你的NextBox只能通过IPv6（如DS-"
"Lite互联网连接），反向代理可能是使用非IPv6设备访问NextBox的唯一方法。到今天为止，例如各种移动网络供应商还不支持IPv6。"

#: ../nextbox/remote/static.rst:2
msgid "Static DNS Configuration"
msgstr "静态DNS配置"

#: ../nextbox/remote/static.rst:4
msgid ""
"This configuration shall be used, if you configured DNS and thus a domain"
" for your NextBox in e.g., your internet router."
msgstr "如果您在互联网路由器上为NextBox配置了DNS和域名，就应使用此配置。"

#: ../nextbox/remote/static.rst:11
msgid ""
"In order to use the configured domain with your NextBox and its Nextcloud"
" instance you must provide the full domain here to trust this domain "
"inside your Nextcloud instance."
msgstr "为了在您的NextBox及其Nextcloud实例中使用配置的域，您必须在这里提供完整的域，以便在您的Nextcloud实例中信任这个域。"

#: ../nextbox/remote/static.rst:15
msgid ""
"For instance inside a \"Fritz!Box\" this can be done by navigating to: "
"\"Internet -> Permit Access -> DynDNS\" and configuring a dynamic DNS "
"provider of your choice."
msgstr ""
"例如，在\"Fritz!Box\"内，可以通过导航到：\"Internet -> Permit Access -> "
"DynDNS\"并配置你选择的动态DNS提供商来完成。"

#: ../nextbox/remote/walkthrough.rst:2
msgid "Remote Access Walkthrough"
msgstr "远程访问演练"

#: ../nextbox/remote/walkthrough.rst:6
msgid ""
"This documentation aims to give you a thorough introduction into the "
"Remote Access topic, including a decision helper **why to choose a "
"particular method**. If you are familiar with this topic you might want "
"to jump directly to :doc:`method-comparison`."
msgstr ""
"本文档旨在向你全面介绍远程访问主题，包括一个决策助手**为什么要选择一个特定的方法**。如果你熟悉这个主题，你可能想直接跳到 :doc"
":`method-comparison`。"

#: ../nextbox/remote/walkthrough.rst:12
msgid "What? Why?"
msgstr "什么？为什么？"

#: ../nextbox/remote/walkthrough.rst:14
msgid ""
"You want to access your NextBox from everywhere, this means you want to "
"access your NextBox from the internet through your internet router."
msgstr "您想从任何地方访问您的NextBox，这意味着您想通过互联网路由器从互联网访问您的NextBox。"

#: ../nextbox/remote/walkthrough.rst:17
msgid ""
"On top of that you want to make sure that your data (traffic) is not "
"readable by anyone else despite you. Nowadays this is accomplished by "
"using `HTTPS`_, which is driven by `TLS`_."
msgstr "除此之外，你要确保你的数据（流量）不能被其他人读取，尽管你是这样。现在，这可以通过使用`HTTPS`_来实现，它由`TLS`_驱动。"

#: ../nextbox/remote/walkthrough.rst:-1
msgid "padlock-tls"
msgstr "挂锁-tls"

#: ../nextbox/remote/walkthrough.rst:24
msgid ""
"Right next to the URL (*nitrokey.com*) you see this small padlock, which "
"translates to: This website provides an encrypted connection and all your"
" traffic is not readable by anyone between your browser (client) and the "
"Nitrokey server."
msgstr "就在URL（*nitrokey.com*）的旁边，你会看到这个小挂锁，它的意思是：。这个网站提供了一个加密的连接，在你的浏览器（客户端）和Nitrokey服务器之间，你的所有流量都不会被任何人读取。"

#: ../nextbox/remote/walkthrough.rst:28
msgid ""
"Once your NextBox is set up properly and you see the dashboard the first "
"time your URL bar in your browser might look like this:"
msgstr "一旦你的NextBox设置正确，你第一次看到仪表板，你的浏览器中的URL栏可能看起来像这样。"

#: ../nextbox/remote/walkthrough.rst:-1
msgid "no-padlock"
msgstr "无板锁"

#: ../nextbox/remote/walkthrough.rst:34
msgid ""
"In this case the local IP has been used (``192.168.10.50``), this is "
"specific to your local network and equal to ``nextbox.local``. The *not "
"secure* and the warning sign transports the information that your "
"connection is **not encrypted**, thus using *http* instead of *https*. "
"For more you can read: `HTTP vs. HTTPS`_."
msgstr ""
"在这种情况下，使用了本地IP（``192.168.10.50```），这是特定于你的本地网络，等于``nextbox.local``。不安全*和警告标志传递的信息是，你的连接是**不加密的，因此使用*http*而不是*https*。更多内容你可以阅读。`HTTP"
" vs. HTTPS`_。"

#: ../nextbox/remote/walkthrough.rst:39
msgid ""
"Obviously, access to the NextBox should be secure, thus encrypted using "
"*https*. This guide covers the different approaches to reach this goal, "
"depending on your specific needs."
msgstr "显然，对NextBox的访问应该是安全的，因此使用*https*进行加密。本指南涵盖了达到这一目标的不同方法，这取决于你的具体需求。"

#: ../nextbox/remote/walkthrough.rst:44
msgid "Use The Nitrokey Backwards Proxy"
msgstr "使用Nitrokey的反向代理"

#: ../nextbox/remote/walkthrough.rst:46
msgid ""
"This method is by far the easiest to set up and use to get an encrypted "
"to your NextBox from everywhere, the only think to do is to go to *Remote"
" Access* and *Backwards Proxy* inside the NextBox-App, insert a sub-"
"domain you want to use and click *Enable Quickstart Remote Access*. From "
"now on you can access your NextBox using a URL like this:"
msgstr ""
"这种方法是目前最容易设置和使用的，可以从任何地方加密到你的NextBox，唯一要做的是在NextBox-"
"App中的*远程访问*和*反向代理*，插入一个你想使用的子域，然后点击*启用快速启动远程访问*。从现在开始，你可以使用这样的URL访问你的NextBox。"

#: ../nextbox/remote/walkthrough.rst:-1
msgid "proxy"
msgstr "代表"

#: ../nextbox/remote/walkthrough.rst:55
msgid ""
"The padlock is there---your data (if you are using your "
"``[subdomain].nextbox.link`` URL) is now encrypted!"
msgstr "挂锁在那里--你的数据（如果你使用你的``[subdomain].nextbox.link``网址）现在已经被加密了"

#: ../nextbox/remote/walkthrough.rst:58
msgid ""
"So far so good, but wait, this works, but has two major drawbacks: "
"Performance and a chained end-to-end encryption."
msgstr "到目前为止还不错，但等等，这很有效，但有两个主要缺点。性能和连锁的端到端加密。"

#: ../nextbox/remote/walkthrough.rst:62
msgid "Performance"
msgstr "业绩"

#: ../nextbox/remote/walkthrough.rst:64
msgid ""
"The backwards proxy works like this: Your NextBox connects to the "
"Nitrokey Proxy server and opens up a (backwards) channel. So even though "
"your NextBox is maybe standing right next to your computer, the traffic "
"goes all the way from your computer, into the internet, to the Nitrokey "
"server and all the way back to your NextBox."
msgstr "反向代理的工作原理是这样的。你的NextBox连接到Nitrokey代理服务器并打开一个（反向）通道。因此，尽管你的NextBox可能就站在你的电脑旁边，但流量从你的电脑一直到互联网，再到Nitrokey服务器，然后一直回到你的NextBox。"

#: ../nextbox/remote/walkthrough.rst:70
msgid ""
"Simplified, one could say all the traffic has to travel a long way "
"towards the NextBox instead of talking directly to the NextBox. This "
"essentially is a drawback of all proxies. The effect for you as a user is"
" that data transfers will be slower, than a direct connection."
msgstr "简而言之，可以说所有的流量都要长途跋涉到NextBox，而不是直接与NextBox对话。这基本上是所有代理的一个缺点。作为用户，你的影响是，数据传输将比直接连接慢。"

#: ../nextbox/remote/walkthrough.rst:76
msgid "Chained End-to-End Encryption"
msgstr "链式端到端加密"

#: ../nextbox/remote/walkthrough.rst:78
msgid ""
"Another drawback is that your traffic is not fully end-to-end encrypted. "
"To be clear: Your data is still encrypted, but only on the path from your"
" client (browser) to the Nitrokey server, there the data will be "
"decrypted and encrypted again to be sent to the NextBox."
msgstr "另一个缺点是，你的流量不是完全端对端加密的。明确地说：你的数据仍然是加密的，但只是在从你的客户端（浏览器）到Nitrokey服务器的路径上，数据将在那里被解密并再次加密，然后被发送到NextBox。"

#: ../nextbox/remote/walkthrough.rst:83
msgid ""
"Essentially this means you have to trust Nitrokey, because technically "
"whoever is controlling this server might read the traffic that goes "
"through it using this proxy.  Nitrokey would never do such a thing, but "
"there is a certain remaining risk that someone could compromise this "
"server and read your traffic."
msgstr ""
"从本质上讲，这意味着你必须信任Nitrokey，因为从技术上讲，控制这个服务器的人可能会读取通过这个代理服务器的流量。  "
"Nitrokey不会做这样的事情，但仍有一定的风险，即有人可能破坏这个服务器并读取你的流量。"

#: ../nextbox/remote/walkthrough.rst:88
msgid ""
"Obviously this can be done in a better way, but still this might be "
"enough depending on your personal usage scenario."
msgstr "显然，这可以用更好的方式完成，但根据你的个人使用情况，这可能已经足够了。"

#: ../nextbox/remote/walkthrough.rst:92
msgid "Acquire Your Own Certificate"
msgstr "获得你自己的证书"

#: ../nextbox/remote/walkthrough.rst:94
msgid ""
"This is clearly the best and most secure method to remote access your "
"NextBox as it will give your the best performance and true end-to-end "
"encryption, but it comes with some additional configuration needs. We "
"start first with a very quick introduction what encryption with an own "
"certificate means and what is needed."
msgstr "这显然是远程访问NextBox的最佳和最安全的方法，因为它将为您提供最好的性能和真正的端到端加密，但它也有一些额外的配置需求。我们首先快速介绍一下使用自有证书加密的含义和需要。"

#: ../nextbox/remote/walkthrough.rst:101
msgid "The Certificate Authority"
msgstr "证书颁发机构"

#: ../nextbox/remote/walkthrough.rst:103
msgid ""
"A `CA`_, as the name suggests, is *someone* who is able to provide you "
"with a digital certificate, which will allow you to use `TLS`_, thus "
"encrypt the your traffic, enabling you to use *https*."
msgstr "`CA`_，顾名思义，是*个能够为你提供数字证书的人，这将使你能够使用`TLS`_，从而加密你的流量，使你能够使用*https*。"

#: ../nextbox/remote/walkthrough.rst:107
msgid ""
"By definition, a `CA`_ is only allowed to issue a certificate, if they "
"can verify that your are the **owner of a public internet (sub)domain**. "
"This ownership is a very important property as this, despite the "
"encryption, additionally allows the client (browser) to verify that the "
"traffic that is sent by a certain website is really originating from this"
" (sub)domain and no man-in-the-middle has injected some data, which could"
" compromise your client."
msgstr "根据定义，`CA`_只被允许签发证书，如果他们能够验证你是一个公共互联网（子）域的**所有者。这个所有权是一个非常重要的属性，因为尽管有加密，还可以让客户（浏览器）验证某个网站发送的流量确实来自这个（子）域，没有中间人注入一些数据，从而损害你的客户。"

#: ../nextbox/remote/walkthrough.rst:115
msgid ""
"This being said, obviously it is not possible to acquire an certificate "
"for *nextbox.local* or even a local IP, as these are neither public nor "
"unique."
msgstr "既然如此，显然不可能获得*nextbox.local*或甚至是本地IP的证书，因为这些都不是公开的，也不是唯一的。"

#: ../nextbox/remote/walkthrough.rst:119
msgid "Acquire a public (sub)domain for your NextBox"
msgstr "为你的NextBox获得一个公共（子）域名"

#: ../nextbox/remote/walkthrough.rst:121
msgid ""
"The NextBox comes with a feature (:doc:`dynamic-dns`), which allows you "
"to easily register a public sub-domain for your NextBox using a so-called"
" *dynamic DNS provider*, here namely `deSEC`_. This particular service is"
" totally free and a non-profit organization."
msgstr ""
"NextBox有一个功能（:doc:`dynamic-"
"dns`），它允许你使用所谓的*动态DNS提供商*，即`deSEC`_为你的NextBox轻松注册一个公共子域。这个特殊的服务是完全免费的，是一个非营利组织。"

#: ../nextbox/remote/walkthrough.rst:126
msgid ""
"This is a very important step prior to acquiring a certificate, as this "
"sub-domain registered through `deSEC`_ will be public and unique, whose "
"as we learned are needed to acquire a certificate."
msgstr "这是获取证书之前非常重要的一步，因为通过`deSEC`_注册的这个子域将是公开的和唯一的，正如我们所了解的那样，获取证书需要这些子域。"

#: ../nextbox/remote/walkthrough.rst:131
msgid "Step-by-Step DNS & TLS"
msgstr "一步一步的DNS & TLS"

#: ../nextbox/remote/walkthrough.rst:133
msgid ""
"This may sound complex, but the NextBox comes with all you need to get "
"through this process:"
msgstr "这听起来可能很复杂，但NextBox配备了你完成这一过程所需的一切。"

#: ../nextbox/remote/walkthrough.rst:136 ../nextbox/remote/walkthrough.rst:160
msgid "Navigate to the Nextcloud NextBox-App"
msgstr "导航至Nextcloud NextBox-App"

#: ../nextbox/remote/walkthrough.rst:137
msgid "Click on \"Remote Access\" -> \"Guided Dynamic DNS\""
msgstr "单击 \"远程访问\"->\"指导动态 DNS"

#: ../nextbox/remote/walkthrough.rst:138
msgid ""
"Insert a valid e-mail address you have access to into the first input "
"field"
msgstr "在第一个输入字段中插入一个你可以访问的有效电子邮件地址"

#: ../nextbox/remote/walkthrough.rst:139
msgid ""
"Insert the full sub-domain your NextBox shall be available through. As "
"`deSEC`_ is used here, your sub-domain always has to end with *dedyn.io*,"
" so something like: ``mynextbox.dedyn.io``"
msgstr "插入你的NextBox可以使用的完整子域。由于这里使用了`deSEC`_，你的子域名必须以*dedyn.io*结尾，所以类似的东西。``mynextbox.dedyn.io``。"

#: ../nextbox/remote/walkthrough.rst:142
msgid ""
"Click \"Register at deSEC\" and the NextBox will try to register your "
"domain and e-mail at `deSEC`_. This may fail, if the sub-domain you chose"
" is already taken, please choose another one in this case."
msgstr "点击\"在deSEC注册\"，NextBox将尝试在`deSEC`_注册你的域名和电子邮件。这可能会失败，如果你选择的子域名已经被占用，在这种情况下请选择另一个。"

#: ../nextbox/remote/walkthrough.rst:145
msgid ""
"You will receive an e-mail in which you should verify that this is your "
"e-mail by clicking on the provided link"
msgstr "你将收到一封电子邮件，你应该通过点击所提供的链接来确认这是你的电子邮件。"

#: ../nextbox/remote/walkthrough.rst:147
msgid ""
"In step two, you will have to input a *token*, which you received after "
"you clicked the verification link and completed the captcha."
msgstr "在第二步，你将不得不输入一个*token*，这是你点击验证链接并完成验证码后收到的。"

#: ../nextbox/remote/walkthrough.rst:150
msgid ""
"Now you are the owner of your very own sub-domain. You can try and visit "
"this subdomain now, but you will see that it will only (best case) end up"
" on your internet router. This is because your router is your door to the"
" internet and it has to be made aware that you want specific traffic to "
"be forwarded to your NextBox. Please set up :doc:`port-forwarding` on "
"your internet router now, once this is done, visiting your registered "
"sub-domain in the browser will show you your NextBox' Nextcloud instance."
msgstr ""
"现在你是你自己的子域的所有者。你现在可以尝试访问这个子域，但你会发现，它只会（最好的情况）在你的互联网路由器上结束。这是因为你的路由器是你通往互联网的大门，它必须知道你想把特定的流量转发到你的NextBox。请在您的互联网路由器上设置"
" :doc:`port-forwarding`，一旦完成，在浏览器中访问您的注册子域，将显示您的NextBox' Nextcloud实例。"

#: ../nextbox/remote/walkthrough.rst:158
msgid "Great from here there is just one step remaining:"
msgstr "很好，从这里开始，只剩下一个步骤。"

#: ../nextbox/remote/walkthrough.rst:161
msgid "Click on \"HTTPS / TLS\""
msgstr "点击\"HTTPS / TLS\"。"

#: ../nextbox/remote/walkthrough.rst:162
msgid "Click the button \"Enable TLS\""
msgstr "点击按钮\"启用TLS\"。"

#: ../nextbox/remote/walkthrough.rst:163
msgid "Please wait some moments to acquire your certificate"
msgstr "请稍等片刻以获得您的证书"

#: ../nextbox/remote/walkthrough.rst:165
msgid ""
"Shortly after you will be automatically redirected to your now encrypted "
"NextBox sub-domain, which might look similar to this:"
msgstr "不久之后，你会自动转到你现在加密的NextBox子域，它可能看起来类似于这样。"

#: ../nextbox/remote/walkthrough.rst:-1
msgid "dns-url"
msgstr "dns-url"

#: ../nextbox/remote/walkthrough.rst:171
msgid ""
"There we are, your very own sub-domain, certificate and fully end-to-end "
"encrypted Nextcloud."
msgstr "这就是我们，您自己的子域、证书和完全端到端加密的Nextcloud。"

#: ../nextbox/remote/walkthrough.rst:174
msgid ""
"If you encounter problems, please read the other articles inside the "
":doc:`Remote Access Section<index>`."
msgstr "如果你遇到问题，请阅读 :doc:`远程访问部分<index>`内的其他文章。"

#: ../nextbox/technical/factory-reset.rst:2 ../nitrokey3/shared/reset.rst.inc:2
#: ../nitrokey3/windows/piv/factory_reset.rst:2
#: ../nitropad/factory-reset.rst.inc:2 ../nitrowall/nw750/factory-reset.rst:2
#: ../pro/factory-reset.rst.inc:2 ../start/factory-reset.rst:2
#: ../storage/linux/factory-reset.rst:2 ../storage/mac/factory-reset.rst:2
#: ../storage/windows/factory-reset.rst:2
msgid "Factory Reset"
msgstr "工厂重置"

#: ../nextbox/technical/factory-reset.rst:7
msgid ""
"Factory Resetting your NextBox will inevitably **delete all your files** "
"on the NextBox and any configuration settings."
msgstr "出厂重置您的NextBox将不可避免地**删除您在NextBox上的所有文件**和任何配置设置。"

#: ../nextbox/technical/factory-reset.rst:10
msgid ""
"**To factory reset your NextBox simply press the hardware button for 5 "
"seconds.**"
msgstr "**要重置您的NextBox，只需按下硬件按钮5秒钟即可**。"

#: ../nextbox/technical/factory-reset.rst:12
msgid ""
"The NextBox LED will change to *blue* once you press the button, after "
"the 5 seconds have passed the color will change to blinking red (see "
":doc:`LED documentation <led-colors>`). Once the LED has finally reached "
"*green* again your NextBox is ready for the initial setup as described in"
" :doc:`Getting Started <../gettingstarted>`"
msgstr ""
"一旦你按下按钮，NextBox的LED会变成*蓝色，5秒过后，颜色会变成闪烁的红色（见:doc:`LED文档<led-"
"colors>`）。一旦LED最终再次达到*绿色，你的NextBox就可以进行初始设置了，如 :doc:`Getting Started "
"<.../gettingstarted>`所述。"

#: ../nextbox/technical/factory-reset.rst:22
#: ../nextbox/technical/soft-reset.rst:21
msgid ""
"The hardware button is a pinhole-style button similar to other embedded "
"devices. In order to press it, it is recommended to use a thin (~1mm) "
"needle-like pin. E.g., the pin to remove a sim-card from a smartphone is "
"working great. **Further take care to not press the button too hard, be "
"careful, there should be a recognizable haptic feedback (button click) "
"with minimal applied force.**"
msgstr "硬件按钮是一个类似于其他嵌入式设备的针孔式按钮。为了按下它，建议使用一根细的（约1毫米）针状的针。例如，从智能手机上取下SIM卡的针，效果很好。**进一步注意不要太用力按压按钮，要小心，在最小的作用力下应该有一个可识别的触觉反馈（按钮点击）**。"

#: ../nextbox/technical/index.rst:2
msgid "Technical Documentation"
msgstr "技术文件"

#: ../nextbox/technical/led-colors.rst:2
msgid "LED Colors and Patterns"
msgstr "LED颜色和图案"

#: ../nextbox/technical/led-colors.rst:5
msgid "Color"
msgstr "颜色"

#: ../nextbox/technical/led-colors.rst:5
msgid "Pattern"
msgstr "样式"

#: ../nextbox/technical/led-colors.rst:7
msgid "Dimmed-out-Blue"
msgstr "调光-蓝色"

#: ../nextbox/technical/led-colors.rst:7
msgid "NextBox is booting"
msgstr "NextBox正在启动"

#: ../nextbox/technical/led-colors.rst:8 ../nextbox/technical/led-colors.rst:9
msgid "Green"
msgstr "绿色"

#: ../nextbox/technical/led-colors.rst:8
msgid "NextBox Daemon active and in regular operating mode"
msgstr "NextBox守护神处于激活状态，并处于正常运行模式下"

#: ../nextbox/technical/led-colors.rst:9
msgid "Fast-Blink"
msgstr "快闪"

#: ../nextbox/technical/led-colors.rst:9
msgid "Nextcloud is starting up (docker starting)"
msgstr "Nextcloud正在启动（docker启动）。"

#: ../nextbox/technical/led-colors.rst:10
#: ../nextbox/technical/led-colors.rst:11
msgid "Blue"
msgstr "蓝色"

#: ../nextbox/technical/led-colors.rst:10
msgid "(Reset) button is currently being pressed"
msgstr "(复位)按钮目前正被按下"

#: ../nextbox/technical/led-colors.rst:11
#: ../nextbox/technical/led-colors.rst:13
#: ../nextbox/technical/led-colors.rst:14
msgid "Blink"
msgstr "眨眼"

#: ../nextbox/technical/led-colors.rst:11
msgid "Soft-Reset is ongoing"
msgstr "软重置正在进行"

#: ../nextbox/technical/led-colors.rst:12
#: ../nextbox/technical/led-colors.rst:13
msgid "Yellow"
msgstr "黄色"

#: ../nextbox/technical/led-colors.rst:12
msgid "Initializing NextBox Daemon"
msgstr "初始化NextBox守护进程"

#: ../nextbox/technical/led-colors.rst:13
msgid "NextBox Daemon update check/apply"
msgstr "NextBox Daemon更新检查/应用"

#: ../nextbox/technical/led-colors.rst:14
msgid "Red"
msgstr "红色"

#: ../nextbox/technical/led-colors.rst:14
msgid "Factory-Reset is ongoing"
msgstr "工厂重建正在进行中"

#: ../nextbox/technical/led-colors.rst:15
msgid "Purple"
msgstr "紫色"

#: ../nextbox/technical/led-colors.rst:15
msgid "Nextcloud Maintenance mode active"
msgstr "Nextcloud维护模式激活"

#: ../nextbox/technical/led-colors.rst:18
msgid "**Fast-Blink** means 0,5secs on and 0,5secs off"
msgstr "**快闪**意味着0.5秒开，0.5秒关。"

#: ../nextbox/technical/led-colors.rst:19
msgid "**Blink** means 2secs on and 2secs off"
msgstr "**眨眼**表示开2秒，关2秒"

#: ../nextbox/technical/led-colors.rst:21
msgid ""
"If the LED is *purple*, the Nextcloud instance is in maintenance mode, "
"you can force exit the maintenance mode by pushing the hardware button "
"**shortly, once**. The NextBox will then switch-off the maintenance mode."
msgstr "如果LED灯是*紫色的，Nextcloud实例处于维护模式，您可以通过短按硬件按钮***次强制退出维护模式。然后，NextBox将关闭维护模式。"

#: ../nextbox/technical/led-colors.rst:26
msgid ""
"As of today if the maintenance mode is switched using the button press, "
"the \"mail\" app will in addition be disabled as the version 1.11.0 "
"together with Nextcloud version 21.0.0.x will never exit the maintenance "
"mode."
msgstr ""
"从今天起，如果使用按钮切换维护模式，那么\"邮件\"应用程序也将被禁用，因为1.11.0版本和Nextcloud "
"21.0.0.x版本将永远不会退出维护模式。"

#: ../nextbox/technical/replace-drive.rst:2
msgid "Replace Internal Hard-Drive"
msgstr "更换内部硬盘驱动器"

#: ../nextbox/technical/replace-drive.rst:7
msgid ""
"Please do this only, if you know what you are doing. By modifying the "
"NextBox you void your warranty for at least the hardware of the NextBox. "
"These steps are generally not covered by the support, you are modifying "
"your NextBox at your own risk!"
msgstr "请只在你知道你在做什么的情况下这样做。修改NextBox，你至少会使你的NextBox的硬件保修失效。这些步骤一般不包括在支持范围内，您修改NextBox的风险由您自己承担!"

#: ../nextbox/technical/replace-drive.rst:14
msgid "Linux(-like) operating system"
msgstr "Linux(-like)操作系统"

#: ../nextbox/technical/replace-drive.rst:15
msgid "2.5'' hard-drive with a max height of 15mm, most are 7mm"
msgstr "2.5''硬盘，最大高度为15毫米，大多数为7毫米"

#: ../nextbox/technical/replace-drive.rst:16
msgid "A user which can acquire root-rights using ``sudo``"
msgstr "一个可以使用``获得根权限的用户sudo``。"

#: ../nextbox/technical/replace-drive.rst:17
msgid ""
"The following commands must be available: ``sudo``, ``parted``, "
"``mkfs.ext4``, ``bash``"
msgstr "必须有以下命令。``sudo`, ``parted`, ``mkfs.ext4`, ``bash```。"

#: ../nextbox/technical/replace-drive.rst:18
msgid ""
"At least a basic understanding about mounting / unmounting and shell-"
"scripts (execution)"
msgstr "至少对安装/卸载和shell-scripts（执行）有基本了解"

#: ../nextbox/technical/replace-drive.rst:19
msgid "Phillips Screwdriver"
msgstr "十字螺丝刀"

#: ../nextbox/technical/replace-drive.rst:20
msgid "Set up the ssh-access on your NextBox"
msgstr "在你的NextBox上设置ssh-access。"

#: ../nextbox/technical/replace-drive.rst:23
msgid ""
"The script which is used will acquire root rights to wipe the hard-drive "
"you pass to the script. **Be extremely careful to pass the correct device"
" to the script, if you pass your system partition, this script will "
"destroy your runnning OS!** Any data on the passed hard-drive will "
"inevitably be deleted!"
msgstr "使用的脚本将获得root权限来擦除你传递给脚本的硬盘驱动器。**要非常小心地把正确的设备传给脚本，如果你传给你的系统分区，这个脚本就会破坏你正在运行的操作系统！**传来的硬盘上的任何数据将不可避免地被删除"

#: ../nextbox/technical/replace-drive.rst:30
msgid ""
"Read the following steps completely and thoroughly **before executing "
"them**, if you do not understand what a certain step means this might be "
"an indication that you should not do this by yourself."
msgstr "在执行下列步骤之前，**要完全彻底地阅读这些步骤，如果你不明白某个步骤的含义，这可能表明你不应该自己做这个。"

#: ../nextbox/technical/replace-drive.rst:35
msgid "Prepare New Hard-Disk"
msgstr "准备好新的硬盘"

#: ../nextbox/technical/replace-drive.rst:37
msgid ""
"Get your ``nextbox.conf`` file from your original hard-disk using ssh, it"
" is located on your NextBox inside the ``/srv/nextbox`` directory"
msgstr "使用ssh从你的原始硬盘获取你的``nextbox.conf``文件，它位于你NextBox的``/srv/nextbox``目录中。"

#: ../nextbox/technical/replace-drive.rst:39
msgid "Save your ``nextbox.conf`` on your computer"
msgstr "将你的``nextbox.conf``保存在你的电脑上。"

#: ../nextbox/technical/replace-drive.rst:40
msgid ""
"Get the following script: "
"https://raw.githubusercontent.com/Nitrokey/nextbox/master/assembly/simple_prepare_harddrive.sh"
msgstr "获得以下脚本：https://raw.githubusercontent.com/Nitrokey/nextbox/master/assembly/simple_prepare_harddrive.sh"

#: ../nextbox/technical/replace-drive.rst:41
msgid "Make the script executable: ``chmod +x simple_prepare_harddrive.sh``"
msgstr "使该脚本可执行。``chmod +x simple_prepare_harddrive.sh``。"

#: ../nextbox/technical/replace-drive.rst:42
msgid "Connect your new hard-disk to your computer"
msgstr "将你的新硬盘连接到你的电脑上"

#: ../nextbox/technical/replace-drive.rst:43
msgid ""
"Determine your hard-disk's device name (e.g., ``/dev/sdb``) and make sure"
" none of its partitions are mounted"
msgstr "确定你的硬盘设备名称（例如，``/dev/sdb``），并确保它的所有分区都没有被安装。"

#: ../nextbox/technical/replace-drive.rst:47
msgid ""
"**Again: think at least twice about the following step. Make sure you are"
" referring to the correct hard-drive device (and NOT a partition, means**"
" ``/dev/sdb1`` **is wrong).** The script will decline to do the operation"
" on ``/dev/sda`` as there are good chances this might be your system "
"hard-disk, if you really need this you can comment out lines 23-26 inside"
" the script."
msgstr ""
"**再次：对下面的步骤至少要考虑两次。确保你指的是正确的硬盘设备（而不是一个分区，意味着** ``/dev/sdb1` **是错误的）。** "
"脚本将拒绝对``/dev/sda``进行操作，因为这很有可能是你的系统硬盘，如果你真的需要，你可以注释掉脚本中第23-26行。"

#: ../nextbox/technical/replace-drive.rst:52
msgid ""
"Run the script using the device name you have determined. Once prompted "
"for your sudo-password please provide it to allow r/w access to the hard-"
"drive:"
msgstr "使用你确定的设备名称运行该脚本。一旦提示你输入sudo密码，请提供该密码，以允许对硬盘的R/W访问。"

#: ../nextbox/technical/replace-drive.rst:62
msgid "Watch the script's output for any errors, there should be none"
msgstr "注意脚本的输出是否有错误，应该没有。"

#: ../nextbox/technical/replace-drive.rst:63
msgid ""
"At the end of the script you will be asked to mount the created partition"
" and copy over the ``nextbox.conf`` (to ``/nextbox``) you copied in step "
"1. and 2., unmount the partition and you have successfully prepared your "
"new hard-drive."
msgstr "在脚本的最后，你将被要求挂载创建的分区，并复制你在步骤1和2中复制的``nextbox.conf``（到``/nextbox``），卸载分区，你就成功准备了你的新硬盘。"

#: ../nextbox/technical/replace-drive.rst:70
msgid "Replacement Guide"
msgstr "替换指南"

#: ../nextbox/technical/replace-drive.rst:72
msgid ""
"Inside the NextBox Nextcloud App go to \"System Settings\" and switch it "
"off your NextBox using the \"Poweroff\" button"
msgstr "在NextBox Nextcloud应用程序中，进入 \"系统设置\"，使用 \"关机 \"按钮关闭NextBox。"

#: ../nextbox/technical/replace-drive.rst:74
msgid ""
"Once the Status LED is shortly off (not entirely, thus very dark) and the"
" Ethernet port LEDs are off you can unplug all cables from your NextBox"
msgstr "一旦状态LED灯很快熄灭（不是完全熄灭，因此非常暗），以太网端口的LED灯也熄灭了，您就可以从NextBox上拔掉所有电缆了。"

#: ../nextbox/technical/replace-drive.rst:76
msgid "Unscrew all 8 Phillips screws"
msgstr "拧下所有8个十字螺丝"

#: ../nextbox/technical/replace-drive.rst:77
msgid "Carefully remove the top-cover (as vertical as possible) first"
msgstr "首先小心翼翼地取下顶盖（尽可能垂直）。"

#: ../nextbox/technical/replace-drive.rst:78
msgid ""
"Again carefully, vertically remove the bottom cover, now you see the so-"
"called bridge"
msgstr "再次小心翼翼地垂直取下底盖，现在你可以看到所谓的桥架了。"

#: ../nextbox/technical/replace-drive.rst:79
msgid ""
"Unfold the USB-to-SATA cable and put the NextBox bridge upside down onto "
"a electronics friendly surface like a desk as shown in the following "
"image"
msgstr "展开USB-to-SATA数据线，将NextBox桥接器倒置在电子元件友好的表面上，比如桌子，如下图所示"

#: ../nextbox/technical/replace-drive.rst
msgid "nextbox-backside"
msgstr "下一个盒子-背面"

#: ../nextbox/technical/replace-drive.rst:86
msgid ""
"Unscrew the Phillips screws holding the hard-disk in position (the amount"
" of screws may differ, depending on your hard-disk type) shown in the "
"following image:"
msgstr "拧开固定硬盘位置的十字螺丝（螺丝的数量可能不同，取决于你的硬盘类型），如下图所示。"

#: ../nextbox/technical/replace-drive.rst
msgid "nextbox-backside-screws"
msgstr "下一个盒子--背板螺丝"

#: ../nextbox/technical/replace-drive.rst:93
msgid ""
"Once the screws are removed, push the hard-disk carefully towards the "
"direction shown in the image above. Do not push it towards the other "
"direction, you might damage the USB cable."
msgstr "一旦螺丝被卸下，小心地把硬盘推向上图所示的方向。不要把它推向其他方向，你可能会损坏USB电缆。"

#: ../nextbox/technical/replace-drive.rst:95
msgid "Remove the USB-to-SATA cable from the hard-drive"
msgstr "从硬盘上拆下USB-to-SATA数据线"

#: ../nextbox/technical/replace-drive.rst:98
msgid ""
"Avoid disconnecting the male-female USB connector to not change the "
"position and bending of the cable. If you have to: be careful to keep the"
" force as small as possible onto the 90° part of the USB extension cable."
msgstr "避免断开男-女USB连接器的连接，以免改变电缆的位置和弯曲。如果你不得不这样做：要注意保持对USB延长线的90°部分的力尽可能小。"

#: ../nextbox/technical/replace-drive.rst:102
msgid "Connect your previously prepared new hard-drive"
msgstr "连接你之前准备好的新硬盘"

#: ../nextbox/technical/replace-drive.rst:103
msgid ""
"Carefully slide your new hard-drive into the bridge and fix it into the "
"right position using the previously removed screws"
msgstr "小心翼翼地将新硬盘滑入桥架，并使用先前卸下的螺钉将其固定在正确的位置。"

#: ../nextbox/technical/replace-drive.rst:105
msgid ""
"Fold the USB-to-SATA cable (in circles) into the open space behind the "
"hard-disk."
msgstr "将USB-to-SATA电缆（呈圆形）折叠到硬盘后面的空隙中。"

#: ../nextbox/technical/replace-drive.rst:106
msgid "Finally assemble your NextBox again in reverse order using steps 5. to 3."
msgstr "最后用步骤5至3，以相反的顺序再次组装您的NextBox。"

#: ../nextbox/technical/replace-drive.rst:108
msgid ""
"On first boot after the assembly, give the NextBox enough time to boot "
"and get all necessary packages from the internet. **Make sure you have "
"ethernet connected**. You should expect a changing status LED (yellow "
"shall be first) quite fast (less than 2 minutes). If the status LED does "
"not change at all, it is likely that there is something wrong with your "
"hard-drive wiring or contents."
msgstr "在组装后第一次启动时，给NextBox足够的时间来启动并从互联网上获得所有必要的软件包。**确保你有以太网连接**。你应该期待LED状态灯的变化（黄色应该是第一个），速度很快（不到2分钟）。如果LED状态灯完全没有变化，很可能是你的硬盘线路或内容有问题。"

#: ../nextbox/technical/soft-reset.rst:2
msgid "Soft Reset"
msgstr "软复位"

#: ../nextbox/technical/soft-reset.rst:4
msgid ""
"**If ever your NextBox doesn't start or behaves strangely the soft reset "
"might fix your problems** The soft reset functionality tries to fix some "
"common failures on your NextBox. So whenever something is wrong, e.g. the"
" NextBox doesn't start, the first thing you could try is a soft reset."
msgstr ""
"**如果您的 NextBox 无法启动或行为异常，软重置可能会解决您的问题** 软重置功能可修复 NextBox "
"上的一些常见故障。因此，只要出现问题，例如 NextBox 无法启动，您首先可以尝试软重置。"

#: ../nextbox/technical/soft-reset.rst:9
msgid ""
"**To start the soft reset on your NextBox simply press the hardware "
"button 2 times within 2 seconds.**"
msgstr "**要开始软重置 NextBox，只需在 2 秒钟内按 2 次硬件按钮。**"

#: ../nextbox/technical/soft-reset.rst:11
msgid ""
"The NextBox LED will change to *blue* on every press, after the second "
"press it will change to blinking blue (see :doc:`LED documentation <led-"
"colors>`). Once the LED has finally reached *green* again for at least 20"
" seconds your NextBox is ready for use again. Please do not unplug your "
"NextBox during this process as that might break something."
msgstr ""
"每次按下时，NextBox LED 将变为*蓝色* ，第二次按下后将变为蓝色闪烁（参见 :doc:`LED 文档 <led-"
"colors>`）。一旦 LED 最终达到*绿色* ，至少持续 20 秒，您的 NextBox 就可以重新使用了。在此过程中，请不要拔下 "
"NextBox 的电源插头，否则可能会损坏某些部件。"

#: ../nitrokey3/faq.rst:2
msgid "Nitrokey 3 FAQ"
msgstr "硝基钥匙3常见问题"

#: ../nitrokey3/faq.rst:5
msgid "Windows, Linux and macOS. Also some support for Android and iOS."
msgstr "Windows、Linux和macOS。也有一些对安卓和iOS的支持。"

#: ../nitrokey3/faq.rst:8
msgid ""
"See the `overview <https://www.nitrokey.com/products/nitrokeys>`_  of "
"supported use cases."
msgstr "请参阅`概述<https://www.nitrokey.com/products/nitrokeys>`_ 支持的用例。"

#: ../nitrokey3/faq.rst:14
msgid "**Q:** How can I check if my Nitrokey 3 is working?"
msgstr "**问：**如何检查我的Nitrokey 3是否在工作？"

#: ../nitrokey3/faq.rst:11
msgid ""
"On `WebAuthn.io`_ you can check various high-level functionalities, while"
" `webautn.bin.coffee`_ provides good developer level details (technical) "
"details. You can also `test`_ your Nitrokey."
msgstr ""
"在`WebAuthn.io`_ 上，您可以检查各种高级功能，而`webautn.bin.coffee`_ "
"则提供了良好的开发人员级细节（技术）。您还可以`test`_ 您的 Nitrokey。"

#: ../nitrokey3/faq.rst:19
msgid "**Q:** Where is the right spot for NFC on my smartphone?"
msgstr "**问：**我的智能手机上NFC的正确位置在哪里？"

#: ../nitrokey3/faq.rst:17
msgid ""
"This is different for every smartphone model, you should find your "
"brand's respective hardware description to find this out. A quite "
"extensive list can be found `here <https://support.bagtag.com/hc/en-"
"us/articles/4417056455185-Where-to-the-find-NFC-location-per-phone-"
"brand>`_."
msgstr ""
"每种智能手机型号的情况都不一样，您应该查找自己品牌各自的硬件说明来了解情况。`这里有一份相当详尽的清单<https://support.bagtag.com/hc"
"/en-us/articles/4417056455185-Where-to-the-find-NFC-location-per-phone-"
"brand>`_ 。"

#: ../nitrokey3/faq.rst:27
msgid "**Q:** What happens if I lose my device?"
msgstr "**问：**如果我丢失了我的设备会怎样？"

#: ../nitrokey3/faq.rst:22
msgid ""
"When securing accounts using FIDO (two-factor authentication and "
"passwordless login), you should configure another factor in your account "
"as a backup. Depending on the service this backup factor can be a phone "
"number, an app or even a second Nitrokey FIDO2. If you lose a device, you"
" can still log in with the second Nitrokey (or with another second "
"factor)."
msgstr ""
"在使用FIDO（双因素认证和无密码登录）保护账户安全时，你应该在账户中配置另一个因素作为备份。根据不同的服务，这个备份因素可以是一个电话号码、一个应用程序，甚至是第二个Nitrokey"
" FIDO2。如果你丢失了一个设备，你仍然可以用第二个硝基钥匙（或另一个第二因素）登录。"

#: ../nitrokey3/faq.rst:30
msgid ""
"The Nitrokey 3 doesn't contain storage capability for ordinary data (it "
"can only store cryptographic keys and certificates)."
msgstr "Nitrokey 3不包含普通数据的存储能力（它只能存储加密密钥和证书）。"

#: ../nitrokey3/faq.rst:35
msgid "**Q:** Why does the Nitrokey 3 not show up in GnuPG"
msgstr "**问：** 为什么Nitrokey 3在GnuPG中没有显示出来？"

#: ../nitrokey3/faq.rst:34
msgid ""
"Make sure to install a firmware more recent than version 1.4.0. For more "
"information, see the firmware-update page for your operating system."
msgstr "请确保安装比1.4.0版本更新的固件。欲了解更多信息，请参阅您的操作系统的固件更新页面。"

#: ../nitrokey3/faq.rst:38
msgid "**Q:** Why does the Nitrokey 3 not show up in Nitrokey App?"
msgstr "**问：** 为什么Nitrokey 3在Nitrokey App中不显示？"

#: ../nitrokey3/faq.rst:38
msgid ""
"Nitrokey 3 does only show up and can be managed in \"nitropy\" and "
"\"Nitrokey App 2, not in Nitrokey App 1\"."
msgstr "硝基钥匙3确实只在 \"nitropy \"和 \"硝基钥匙应用2 \"中显示并可以管理，在硝基钥匙应用1中没有。"

#: ../nitrokey3/faq.rst:44
msgid "**Q:** How can I set the PIN for my Nitrokey 3?"
msgstr "**问：**如何为我的Nitrokey 3设置密码？"

#: ../nitrokey3/faq.rst:43
msgid ""
"The Nitrokey 3 has distinct PINs for each feature. Please refer to the "
"chapter of your respective operating system (`Linux <linux/set-"
"pins.html>`__, `macOS <mac/set-pins.html>`__, `Windows <windows/set-"
"pins.html>`__)."
msgstr ""
"Nitrokey 3 的每种功能都有不同的 PIN 码。请参阅各自操作系统的相关章节 (`Linux<linux/set-"
"pins.html>`__,`macOS<mac/set-pins.html>`__,`Windows<windows/set-"
"pins.html>`__ )。"

#: ../nitrokey3/faq.rst:48
msgid "**Q:** Is the Nitrokey 3 Common Criteria or FIPS certified?"
msgstr "**问：** Nitrokey 3是否经过通用标准或FIPS认证？"

#: ../nitrokey3/faq.rst:47
msgid ""
"The secure element (SE050M) is Common Criteria EAL 6+ security certified "
"up to the OS level (`Certificate "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-23-0075446_2-Cert.pdf>`__, `Certification Report "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-0075446-CR2-1.pdf>`__, `Security Target "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-0075446_2-STLite.pdf>`__, `Java Card Protection Profile - Open "
"Configuration "
"<https://commoncriteriaportal.org/files/ppfiles/pp0099b_pdf.pdf>`__)."
msgstr ""
"安全元件 (SE050M) 已通过 Common Criteria EAL 6+ 安全认证，达到操作系统级别 "
"(`Certificate<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-23-0075446_2-Cert.pdf>`__,`Certification "
"Report<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-0075446-CR2-1.pdf>`__,`Security "
"Target<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-0075446_2-STLite.pdf>`__,`Java Card Protection Profile - Open "
"Configuration<https://commoncriteriaportal.org/files/ppfiles/pp0099b_pdf.pdf>`__)"
" 。"

#: ../nitrokey3/faq.rst:51
msgid "**Q:** How to use Nitrokey 3 with Azure Entra ID (Active Directory)?"
msgstr "**问：** 如何将 Nitrokey 3 与 Azure Entra ID（活动目录）一起使用？"

#: ../nitrokey3/faq.rst:51
msgid ""
"After `disabling Enforce Attestation`_ Nitrokey 3 is supported by Azure "
"Entra ID out of the box."
msgstr "`禁用 \"强制认证 \"后，Azure Entra ID 即可支持 Nitrokey 3。"

#: ../nitrokey3/faq.rst:62
msgid "**Q:** How can I use the SE050 Secure Element?"
msgstr "**问：** 如何使用 SE050 安全元件？"

#: ../nitrokey3/faq.rst:54
msgid ""
"Starting with version 1.7.0 the Secure Element should be automatically "
"activated, if the OpenPGP Card was not used before. To check its "
"activation state you can use: ``nitropy nk3 get-config "
"opcard.use_se050_backend``. To activate it, if it isn't activated use: "
"``nitropy nk3 set-config opcard.use_se050_backend true`` or disable it "
"accordingly by passing ``false``. **Changing the backend from one to the "
"other will always wipe all your data inside the OpenPGP Card**"
msgstr ""
"从 1.7.0 版开始，如果之前未使用 OpenPGP 卡，安全元素应自动激活。要检查其激活状态，可以使用`nitropy nk3 get-"
"config opcard.use_se050_backend``。如果未激活，请使用以下方式激活：``nitropy nk3 set-"
"config opcard.use_se050_backend true`` 或通过``false`` "
"相应地禁用它。**将后端从一个改为另一个将始终清除 OpenPGP 卡内的所有数据。**"

#: ../nitrokey3/faq.rst:60
msgid ""
"If you are updating from a test version firmware, we recommend factory "
"resetting the device before using the Nitrokey 3 with the SE050 in "
"production environments."
msgstr "如果您是从测试版固件升级的，我们建议您在生产环境中使用 Nitrokey 3 和 SE050 之前，先对设备进行出厂重置。"

#: ../nitrokey3/features.rst:2
msgid "Features"
msgstr "特点"

#: ../nitrokey3/features.rst:5
msgid ""
"The Nitrokey 3 is a very versatile platform which allows us to constantly"
" improve and add functionalities. This overview represents the current "
"state and furthermore adds various technical details on how the different"
" features are realized."
msgstr "Nitrokey 3 是一个非常灵活的平台，它允许我们不断改进和增加功能。本概述代表了当前的状态，并进一步补充了有关如何实现不同功能的各种技术细节。"

#: ../nitrokey3/features.rst:14 ../nitrokey3/features.rst:57
msgid "**Feature**"
msgstr "**特点**"

#: ../nitrokey3/features.rst:15 ../nitrokey3/features.rst:58
msgid "**Description**"
msgstr "**说明**"

#: ../nitrokey3/features.rst:16 ../nitrokey3/features.rst:59
msgid "**Transport(s)**"
msgstr "**运输**"

#: ../nitrokey3/features.rst:17 ../nitrokey3/features.rst:60
msgid "**Secure element support**"
msgstr "**安全元件支持**"

#: ../nitrokey3/features.rst:20
msgid "`FIDO2`_"
msgstr "`FIDO2`_"

#: ../nitrokey3/features.rst:21
msgid "Increase (Web-)security using 2FA and passwordless logins; ssh logins"
msgstr "使用 2FA 和无密码登录、ssh 登录提高（网络）安全性"

#: ../nitrokey3/features.rst:22
msgid "USB, NFC"
msgstr "USB, NFC"

#: ../nitrokey3/features.rst:23 ../nitrokey3/features.rst:33
#: ../nitrokey3/features.rst:38 ../nitrokey3/features.rst:65
#: ../nitrokey3/features.rst:70 ../pro/factory-reset.rst.inc:25
#: ../pro/factory-reset.rst.inc:26 ../pro/factory-reset.rst.inc:28
#: ../storage/factory-reset.rst:33 ../storage/factory-reset.rst:34
#: ../storage/factory-reset.rst:36
msgid "no"
msgstr "不"

#: ../nitrokey3/features.rst:25
msgid "`OpenPGP Card`_"
msgstr "`OpenPGP Card`_"

#: ../nitrokey3/features.rst:26
msgid "Asymmetric cryptography; keep your private key(s) secure; email encryption"
msgstr "非对称加密；确保私人密钥安全；电子邮件加密"

#: ../nitrokey3/features.rst:27 ../nitrokey3/features.rst:32
#: ../nitrokey3/features.rst:37 ../nitrokey3/features.rst:64
#: ../nitrokey3/features.rst:69
msgid "USB"
msgstr "USB"

#: ../nitrokey3/features.rst:28 ../pro/factory-reset.rst.inc:25
#: ../pro/factory-reset.rst.inc:26 ../pro/factory-reset.rst.inc:27
#: ../pro/factory-reset.rst.inc:28 ../storage/factory-reset.rst:33
#: ../storage/factory-reset.rst:34 ../storage/factory-reset.rst:35
#: ../storage/factory-reset.rst:36
msgid "yes"
msgstr "是"

#: ../nitrokey3/features.rst:30
msgid "`Password Safe`_"
msgstr "`密码保险箱`_"

#: ../nitrokey3/features.rst:31
msgid "(One-Time-)Passwords securely stored on your Nitrokey 3"
msgstr "(一次性）密码安全存储在 Nitrokey 3 中"

#: ../nitrokey3/features.rst:35
msgid "`Admin App`_"
msgstr "`管理 App`_"

#: ../nitrokey3/features.rst:36
msgid "Administration functions used by `pynitrokey`_ and `NitrokeyApp2`_"
msgstr "`pynitrokey`_ 和`NitrokeyApp2`_ 使用的管理功能"

#: ../nitrokey3/features.rst:41
msgid ""
"Secure element support for OpenPGP Card is available since stable "
"firmware v1.7.0. Any new devices will have this automatically activated. "
"For devices already in use, the user has to `manually switch`_ as "
"described in the FAQ."
msgstr ""
"自稳定固件 v1.7.0 起，OpenPGP "
"卡的安全元素支持已可用。任何新设备都将自动激活。对于已在使用的设备，用户必须按照常见问题中的说明`手动切换。"

#: ../nitrokey3/features.rst:46
msgid ""
"On top of the stable firmware for the Nitrokey 3, we also provide a `Test"
" Firmware`_, which comes with additional functionalities, which are not "
"(yet) included into the stable firmware."
msgstr "除了 Nitrokey 3 的稳定固件外，我们还提供`Test Firmware`_，它具有稳定固件尚未包含的额外功能。"

#: ../nitrokey3/features.rst:49
msgid ""
"**Using the Test Firmware is not recommended for production environments,"
" there might be incompatibilities between test and stable firmware "
"upgrades - please use with caution. Especially data migrations from test "
"to stable firmwares will not be implemented.**"
msgstr "**不建议在生产环境中使用测试固件，因为测试固件和稳定固件升级之间可能不兼容，请谨慎使用。特别是从测试固件到稳定固件的数据迁移将无法实现。**"

#: ../nitrokey3/features.rst:62
msgid "`PIV`_"
msgstr "`PIV`_"

#: ../nitrokey3/features.rst:63
msgid "Asymmetric cryptography; more business focussed smartcard realization"
msgstr "非对称加密；实现更多业务功能的智能卡"

#: ../nitrokey3/features.rst:67
msgid "`WebSmartCard`_"
msgstr "`网络智能卡"

#: ../nitrokey3/features.rst:68
msgid "Provides smartcard-functionalities through the web & FIDO2"
msgstr "通过网络和 FIDO2 提供智能卡功能"

#: ../nitrokey3/index.rst:7
msgid "The Nitrokey 3 currently supports:"
msgstr "Nitrokey 3 目前支持"

#: ../nitrokey3/index.rst:9 ../nitrokey3/shared/reset.rst.inc:9
#: ../nitrokey3/shared/set-pins.rst.inc:4
#: ../nitrokey3/shared/set-pins.rst.inc:8
msgid "FIDO2"
msgstr "FIDO2"

#: ../nitrokey3/index.rst:10
msgid "Password-Safe & One-Time Passwords (OTP)"
msgstr "密码保护和一次性密码 (OTP)"

#: ../nitrokey3/index.rst:11
msgid "OpenPGP Card (`Secure Element Backend or Software Backend`_)"
msgstr "OpenPGP 卡 (`安全元件后端或软件后端`_)"

#: ../nitrokey3/index.rst:13
msgid ""
"Additional features like PIV are available in test firmware releases. See"
" the `release notes`_ on GitHub for more information."
msgstr "测试固件版本中还提供 PIV 等其他功能。更多信息，请参阅 GitHub 上的`release notes`_。"

#: ../nitrokey3/index.rst:27
msgid "Or choose your operating system:"
msgstr "或者选择你的操作系统。"

#: ../nitrokey3/adsk.rst.inc:2
msgid "Additional Decryption Subkeys (ADSK) with GnuPG"
msgstr "使用GnuPG的额外解密子密钥（ADSK）。"

#: ../nitrokey3/adsk.rst.inc:6
msgid ""
"`Additional Decryption Subkeys (ADSK) "
"<https://gnupg.org/blog/20230321-adsk.html>`__ can be used to "
"automatically add recipients when encrypting a message with GnuPG. "
"Typical use cases include"
msgstr "`额外解密子密钥（ADSK）<https://gnupg.org/blog/20230321-adsk.html>`__在用GnuPG加密信息时，可用于自动添加收件人。典型的使用情况包括"

#: ../nitrokey3/adsk.rst.inc:9
msgid ""
"having a single encryption key for a group without the need to share the "
"private key between the members of the group,"
msgstr "一个组有一个单一的加密密钥，而不需要在组内成员之间共享私人密钥、"

#: ../nitrokey3/adsk.rst.inc:10
msgid "adding a backup key to an encryption key, and"
msgstr "将备份密钥添加到加密密钥中，以及"

#: ../nitrokey3/adsk.rst.inc:11
msgid "setting up a master key that can decrypt messages for other keys."
msgstr "设置一个主钥匙，可以为其他钥匙解密信息。"

#: ../nitrokey3/adsk.rst.inc:15
msgid ""
"To configure an ADSK, you need GnuPG 2.4.1 or newer. To encrypt a message"
" for a key with an ADSK, you need GnuPG 2.2.42 or newer."
msgstr "要配置 ADSK，你需要 GnuPG 2.4.1 或更新版本。要用ADSK为一个密钥加密信息，你需要GnuPG 2.2.42或更新版本。"

#: ../nitrokey3/adsk.rst.inc:19
msgid "Overview"
msgstr "概述"

#: ../nitrokey3/adsk.rst.inc:21
msgid ""
"This guide explains how to add a backup key (user ID "
"``backup@example.com``) as an ADSK to a main key (user ID "
"``main@example.com``). Both keys are stored on a Nitrokey. The same steps"
" can be used to add multiple ADSK to a key, or to add the same key as an "
"ADSK to multiple other keys."
msgstr "本指南解释了如何将一个备份钥匙（用户ID``backup@example.com``）作为ADSK添加到一个主钥匙（用户ID``main@example.com``）。两把钥匙都存储在一个Nitrokey上。同样的步骤可以用来为一把钥匙添加多个ADSK，或将同一把钥匙作为ADSK添加到其他多个钥匙上。"

#: ../nitrokey3/adsk.rst.inc:26
msgid "Preparing the Keys"
msgstr "准备钥匙"

#: ../nitrokey3/adsk.rst.inc:28
msgid "Follow one of these guides to generate the two keys:"
msgstr "按照这些指南之一来生成这两个钥匙："

#: ../nitrokey3/adsk.rst.inc:30
msgid ":doc:`openpgp-keygen-backup`"
msgstr ":doc:`openpgp-keygen-backup`。"

#: ../nitrokey3/adsk.rst.inc:31
msgid ":doc:`openpgp-keygen-on-device`"
msgstr ":doc:`openpgp-keygen-on-device`。"

#: ../nitrokey3/adsk.rst.inc:32
msgid ":doc:`openpgp-keygen-gpa`"
msgstr ":doc:`openpgp-keygen-gpa`。"

#: ../nitrokey3/adsk.rst.inc:34
msgid ""
"Make sure that you can list both keys with ``gpg --list-keys``, for "
"example::"
msgstr "确保你能用``gpg --list-keys``列出两个键，例如：："

#: ../nitrokey3/adsk.rst.inc:51
msgid "Adding an ADSK"
msgstr "添加一个ADSK"

#: ../nitrokey3/adsk.rst.inc:53
msgid ""
"First determine the fingerprint of the encryption subkey for the backup "
"key::"
msgstr "首先确定备份钥匙的加密子钥匙的指纹：："

#: ../nitrokey3/adsk.rst.inc:64
msgid ""
"Look for the line starting with ``sub`` that contains the letter ``E``, "
"indicating a subkey with the encryption capability. The fingerprint of "
"this subkey is listed in the next line. In this case, the fingerprint is "
"``C1735CB29890EEDEABCF1D0DC9310F81D77519BC``."
msgstr "寻找以``sub``开头的一行，其中包含字母``E``，表示一个具有加密能力的子键。这个子键的指纹被列在下一行。在这个例子中，指纹是``C1735CB29890EEDEABCF1D0DC9310F81D77519BC``。"

#: ../nitrokey3/adsk.rst.inc:68
msgid "Then determine the fingerprint of the main key::"
msgstr "然后确定主键的指纹：："

#: ../nitrokey3/adsk.rst.inc:77
msgid ""
"You can find it in the next line after ``pub``, in this case "
"``55BC284C1D30D97638DA4A2C7963A4CD00C947CE``."
msgstr "你可以在``pub``之后的下一行找到它，在这里是``55BC284C1D30D97638DA4A2C7963A4CD00C947CE``。"

#: ../nitrokey3/adsk.rst.inc:79
msgid "Now you can add the ADSK using the ``--quick-add-adsk`` flag::"
msgstr "现在你可以使用``--quick-add-adsk``标志添加ADSK：："

#: ../nitrokey3/adsk.rst.inc:85
msgid ""
"The first argument is the fingerprint of the main key. The second "
"argument is the fingerprint of the encryption subkey of the backup key."
msgstr "第一个参数是主密钥的指纹。第二个参数是备份钥匙的加密子钥匙的指纹。"

#: ../nitrokey3/adsk.rst.inc:88
msgid "You can check that the ADSK has been created::"
msgstr "你可以检查ADSK是否已经被创建：："

#: ../nitrokey3/adsk.rst.inc:101
msgid ""
"The subkey with the ``R`` (restricted) capability is the ADSK. It has the"
" same fingerprint as the encryption subkey of the backup key."
msgstr "具有``R``（限制）能力的子键是ADSK。它的指纹与备份钥匙的加密子钥匙相同。"

#: ../nitrokey3/adsk.rst.inc:104
msgid "Now you can distribute the public key with the ADSK."
msgstr "现在你可以用ADSK分发公钥。"

#: ../nitrokey3/adsk.rst.inc:107
msgid "Using an ADSK"
msgstr "使用ADSK"

#: ../nitrokey3/adsk.rst.inc:109
msgid ""
"When encrypting a message for the main key, the backup key is now "
"automatically added as a recipient. The only requirements for this are:"
msgstr "当为主密钥加密信息时，备份密钥现在被自动添加为接收者。这方面的唯一要求是："

#: ../nitrokey3/adsk.rst.inc:112
msgid ""
"The sender of the message has an up-to-date public key that includes the "
"ADSK."
msgstr "信息的发送者有一个最新的公钥，其中包括ADSK。"

#: ../nitrokey3/adsk.rst.inc:113
msgid "The sender of the message uses GnuPG 2.2.42 or newer."
msgstr "信息的发件人使用GnuPG 2.2.42或更新版本。"

#: ../nitrokey3/adsk.rst.inc:115
msgid ""
"If you add the ``--verbose`` flag, you can check the keys the message is "
"encrypted to::"
msgstr "如果你添加``--verbose``标志，你可以检查信息被加密的密钥：："

#: ../nitrokey3/adsk.rst.inc:128
msgid ""
"You can also use the ``--list-packets`` option to check an encrypted "
"message::"
msgstr "你也可以使用``--list-packets``选项来检查加密的信息：："

#: ../nitrokey3/adsk.rst.inc:134
msgid ""
"Each ``pubkey enc packet`` line represents one key that can decrypt the "
"message."
msgstr "每一行``pubkey enc packet``代表一个可以解密信息的钥匙。"

#: ../nitrokey3/adsk.rst.inc:138
msgid "Revoking an ADSK"
msgstr "撤销ADSK"

#: ../nitrokey3/adsk.rst.inc:140
msgid ""
"If you revoke an ADSK, it will no longer be added as a recipient when "
"encrypting a message. To perform a revocation, open the key with ``gpg "
"--edit-key``::"
msgstr "如果你撤销了一个ADSK，在加密信息时，它将不再被添加为收件人。要执行撤销，用``gpg --edit-key``:打开密钥："

#: ../nitrokey3/adsk.rst.inc:160
msgid ""
"Select the subkey to revoke with ``key N``. The selected subkey is marked"
" with an asterisk::"
msgstr "用``key N``选择要撤销的子键。所选的子键被标记为星号：："

#: ../nitrokey3/adsk.rst.inc:179
msgid ""
"Revoke the subkey with ``revkey`` and then save the changes with "
"``save``::"
msgstr "用``revkey``撤销子键，然后用``save``保存更改：："

#: ../nitrokey3/adsk.rst.inc:213
msgid "Now distribute the updated public key."
msgstr "现在分发更新后的公钥。"

#: ../nitrokey3/adsk.rst.inc:217
msgid ""
"The revocation will only become effective once the sender has updated the"
" public key with the revoked ADSK. Messages that have already been "
"encrypted can still be decrypted with the ADSK even if it is revoked."
msgstr "撤销只有在发件人用撤销的ADSK更新公钥后才会生效。已经被加密的信息仍然可以用ADSK进行解密，即使它被撤销了。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:2
msgid "OpenPGP smartcard with GnuPG on Fedora"
msgstr "在 Fedora 上使用 GnuPG 的 OpenPGP 智能卡"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:5
msgid ""
"The following instructions require the Nitrokey 3 to have at least "
"firmware version ``1.4.0`` installed. Please refer to `firmware update "
"<./firmware-update.html>`__ to learn how to update it."
msgstr ""
"以下说明要求 Nitrokey 3 至少安装有固件版本``1.4.0``。请参阅`固件更新<./firmware-update.html>`__ "
"了解如何更新。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:8
msgid ""
"The GnuPG smartcard support requires *scdaemon*. In Fedora the *scdaemon*"
" is part of the GnuPG package."
msgstr "支持 GnuPG 智能卡需要*scdaemon* 。在 Fedora 中，*scdaemon* 是 GnuPG 软件包的一部分。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:12
msgid ""
"The *scdaemon* is installed in ``/usr/libexec/scdaemon``. This path is "
"usually not part of the PATH environment variable."
msgstr "*scdaemon* 安装在``/usr/libexec/scdaemon``。该路径通常不在 PATH 环境变量中。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:15
msgid ""
"The GnuPG project supports two setups of interfacing with a OpenPGP "
"smartcard."
msgstr "GnuPG 项目支持两种与 OpenPGP 智能卡连接的设置。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:17
msgid "**GnuPG (scdaemon with CCID driver) → Smartcard (e.g. Nitrokey)**"
msgstr "**GnuPG（带 CCID 驱动程序的 scdaemon） → 智能卡（如 Nitrokey）**"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:19
msgid ""
"In this setup the *scdaemon* communicates directly to the Nitrokey with "
"its internal CCID driver and *libusb*. It requires the Udev rules to be "
"set, because the *scdaemon* runs in userspace with the permissions of the"
" logged in user."
msgstr ""
"在此设置中，*scdaemon* 通过其内部 CCID 驱动程序和*libusb* 直接与 Nitrokey 通信。它需要设置 Udev "
"规则，因为*scdaemon* 在用户空间运行，具有登录用户的权限。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:22
msgid "**GnuPG (scdaemon with PCSC library) → pcscd → Smartcard (e.g. Nitrokey)**"
msgstr "**GnuPG（带有 PCSC 库的 scdaemon） → pcscd → 智能卡（如 Nitrokey）**"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:24
msgid ""
"In this setup the *scdaemon* communicates with *pcscd*, which then "
"communicates with the Nitrokey."
msgstr "在此设置中，*scdaemon* 与*pcscd* 通信，后者再与 Nitrokey 通信。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:26
msgid ""
"On Fedora only the second setup is supported, because the configuration "
"of the GnuPG package sets the CCID driver as disabled and the pcsc "
"support as required. The relevant configuration can be found in the spec "
"file `here "
"<https://src.fedoraproject.org/rpms/gnupg2/blob/rawhide/f/gnupg2.spec#_140>`__"
" and `here "
"<https://src.fedoraproject.org/rpms/gnupg2/blob/rawhide/f/gnupg2.spec#_51>`__."
msgstr ""
"在 Fedora 上只支持第二种设置，因为 GnuPG 软件包的配置将 CCID 驱动程序设置为禁用，将 pcsc "
"支持设置为必需。相关配置可在规格文件`这里<https://src.fedoraproject.org/rpms/gnupg2/blob/rawhide/f/gnupg2.spec#_140>`__"
" "
"和`这里<https://src.fedoraproject.org/rpms/gnupg2/blob/rawhide/f/gnupg2.spec#_51>`__"
" 中找到。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:32
msgid ""
"The latest Fedora 38 version should work after installation without "
"issues. Upgraded versions of Fedora might have conflicting configuration "
"and should be checked as below. Fedora Silverblue was reported to have "
"issues with GnuPG and smartcards. The instructions below only apply to "
"*Fedora Workstation* and *Fedora Server* editions."
msgstr ""
"最新的 Fedora 38 版本在安装后应该可以正常工作。Fedora 的升级版本可能存在配置冲突，应按以下步骤检查。据报告，Fedora "
"Silverblue 在 GnuPG 和智能卡方面存在问题。以下说明仅适用于*Fedora Workstation* 和*Fedora "
"Server* 版本。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:37
msgid ""
"The correct configuration of a setup can be checked by querying "
"information about the Nitrokey with ``gpg --card-status``."
msgstr "可通过``gpg --card-status`` 查询 Nitrokey 的信息，检查设置是否正确。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:40
msgid "Check recognition"
msgstr "检查识别"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:42
msgid ""
"Verify with the `lsusb` command that the Nitrokey is recognized. The "
"output should list the Nitrokey, e.g. `Bus 001 Device 002: ID 20a0:42b2 "
"Clay Logic Nitrokey 3`."
msgstr ""
"使用 `lsusb` 命令验证 Nitrokey 是否被识别。输出结果应列出 Nitrokey，例如 `Bus 001 Device 002：ID"
" 20a0:42b2 Clay Logic Nitrokey 3`。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:46
msgid "Check system configuration"
msgstr "检查系统配置"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:48
msgid ""
"Make sure the *pcscd* package is installed with ``dnf install pcsc-"
"lite``. Further the *systemd* service and socket must be enabled and "
"started with ``systemctl enable pcscd.socket pcscd.service && systemctl "
"start pcscd.socket``."
msgstr ""
"确保通过``dnf install pcsc-lite`` 安装了*pcscd* 软件包。此外，必须启用*systemd* "
"服务和套接字，并通过``systemctl enable pcscd.socket pcscd.service && systemctl "
"start pcscd.socket`` 启动。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:51
msgid ""
"The *scdaemon* requires the *libpcsclite* library to connect to *pcscd*. "
"The path to the pcsc library can be set explicitly with ``echo \"pcsc-"
"driver /usr/lib64/libpcsclite.so.1\" >> ~/.gnupg/scdaemon.conf``. "
"Alternatively, the library can also be made available with a symlink as "
"follows ``ln -s /usr/lib64/libpcsclite.so.1 /usr/lib64/libpcsclite.so``. "
"Make sure the ``~/.gnupg/scdaemon.conf`` file has no conflicting settings"
" applied."
msgstr ""
"*scdaemon* 需要*libpcsclite* 库才能连接*pcscd* 。pcsc 库的路径可通过``echo \"pcsc-driver"
" /usr/lib64/libpcsclite.so.1\" >> ~/.gnupg/scdaemon.conf`` "
"明确设置。或者，也可以使用符号链接提供该库，如下所示``ln -s /usr/lib64/libpcsclite.so.1 "
"/usr/lib64/libpcsclite.so``。确保``~/.gnupg/scdaemon.conf`` 文件中没有与之冲突的设置。"

#: ../nitrokey3/linux/fedora-gnupg-configuration.rst:56
msgid ""
"The *scdaemon* by default expects exclusive access to *pcscd*, to avoid "
"potential issues with concurrent modifications of information on the "
"card. This causes access to fail if other clients, usually web browsers, "
"accessed the card, even if only for reading. Shared access can be enabled"
" with ``echo \"pcsc-shared\" >> ~/.gnupg/scdaemon.conf`` (in GnuPG "
"version 2.2.28 or higher)."
msgstr ""
"*scdaemon* 默认独占访问*pcscd* "
"，以避免同时修改卡上信息的潜在问题。如果其他客户端（通常是网络浏览器）访问该卡，即使只是读取，也会导致访问失败。可通过``echo \"pcsc-"
"shared\" >> ~/.gnupg/scdaemon.conf``（GnuPG 2.2.28 或更高版本）启用共享访问。"

#: ../nitrokey3/firmware-update.rst.inc:8
msgid "This guide describes how to update the firmware on the Nitrokey 3."
msgstr "本指南介绍了如何更新Nitrokey 3的固件。"

#: ../nitrokey3/firmware-update.rst.inc:11
msgid ""
"**For firmware v.1.0.0 and below the update will delete all user data!** "
"Make sure you have proper backup login methods enabled and/or ensure that"
" the Nitrokey 3 is not the only way to authenticate/2FA for your "
"applications/services."
msgstr ""
"**对于1.0.0及以下版本的固件，更新将删除所有的用户数据。** 请确保你启用了适当的备份登录方法，并/或确保Nitrokey "
"3不是你的应用程序/服务的唯一认证/2FA方式。"

#: ../nitrokey3/firmware-update.rst.inc:17
msgid ""
"**For firmware v1.0.1 and above user data is retained** during the "
"update. Anyways, be sure to always have another device (or login method) "
"registered with your service, if for some reason your data is not "
"retained."
msgstr ""
"**对于固件V1.0.1及以上版本，用户数据在更新期间被保留** "
"。总之，要确保总是有另一个设备（或登录方式）在你的服务中注册，如果由于某种原因你的数据没有被保留。"

#: ../nitrokey3/firmware-update.rst.inc:23
msgid ""
"Never disconnect the Nitrokey 3 or abort the process while updating, this"
" will likely render your device useless!"
msgstr "在更新过程中，千万不要断开Nitrokey 3的连接或中止进程，这很可能会使你的设备失去作用。"

#: ../nitrokey3/firmware-update.rst.inc:27
msgid "Run ``nitropy nk3 update``."
msgstr "运行``nitropy nk3 update``。"

#: ../nitrokey3/firmware-update.rst.inc:30
msgid ""
"Please wait until the process finished. (This may vary depending on your "
"operating system)"
msgstr "请等待，直到该过程结束。(这可能因你的操作系统而异）"

#: ../nitrokey3/firmware-update.rst.inc:31
msgid ""
"*Optional*: run ``nitropy nk3 test`` to check if device is working "
"properly after flashing."
msgstr "*可选*：运行``nitropy nk3 test``以检查设备在闪烁后是否工作正常。"

#: ../nitrokey3/firmware-update.rst.inc:40
msgid "Firmware Release Types"
msgstr "固件发布类型"

#: ../nitrokey3/firmware-update.rst.inc:42
msgid "There are three types of firmware releases for the Nitrokey 3:"
msgstr "Nitrokey 3有三种类型的固件发布："

#: ../nitrokey3/firmware-update.rst.inc:44
msgid ""
"**Stable releases** are most important for users. They are designed to be"
" backward compatible and to retain all user data and are thoroughly "
"tested. On production devices, only stable releases should be used."
msgstr "**稳定的版本** ，对用户来说是最重要的。它们被设计成向后兼容，保留所有的用户数据，并经过全面测试。在生产设备上，应该只使用稳定版。"

#: ../nitrokey3/firmware-update.rst.inc:48
msgid ""
"A **release candidate** is a preview of an upcoming stable release. It "
"should also be backward compatible but is not tested as thoroughly as a "
"stable release."
msgstr "**候选版本** 是即将发布的稳定版本的预览。它也应该是向后兼容的，但没有像稳定版那样进行彻底的测试。"

#: ../nitrokey3/firmware-update.rst.inc:51
msgid ""
"**Test releases** (previously: *alpha releases*) contain additional "
"features that are not ready for production yet. User data created with a "
"test release may not be compatible with other releases. These releases "
"are still being tested and are more likely to contain bugs."
msgstr ""
"**测试版** (以前是：*alpha "
"releases*)包含了尚未准备好用于生产的额外功能。用测试版本创建的用户数据可能与其他版本不兼容。这些版本仍在测试中，更有可能包含错误。"

#: ../nitrokey3/firmware-update.rst.inc:55
msgid ""
"See the `release notes`_ on GitHub for more information on the features "
"available in a release."
msgstr "请参阅GitHub上的`release notes`_，以了解更多关于一个版本中可用功能的信息。"

#: ../nitrokey3/firmware-update.rst.inc:59
msgid "You can identify the type of a firmware release by its version number:"
msgstr "你可以通过版本号来识别固件发布的类型："

#: ../nitrokey3/firmware-update.rst.inc:65
msgid "Type"
msgstr "类型"

#: ../nitrokey3/firmware-update.rst.inc:66
msgid "Version Number"
msgstr "版本号"

#: ../nitrokey3/firmware-update.rst.inc:68
msgid "stable release"
msgstr "稳定版"

#: ../nitrokey3/firmware-update.rst.inc:69
msgid "``v<major>.<minor>.<patch>``"
msgstr "``v<major>.<minor>.<patch>``"

#: ../nitrokey3/firmware-update.rst.inc:70
msgid "``v1.3.1``"
msgstr "``v1.3.1``"

#: ../nitrokey3/firmware-update.rst.inc:71
msgid "release candidate"
msgstr "候选发布"

#: ../nitrokey3/firmware-update.rst.inc:72
msgid "``v<major>.<minor>.<patch>-rc.<counter>``"
msgstr "``v<major>.<minor>.<patch>-rc.<counter>``"

#: ../nitrokey3/firmware-update.rst.inc:73
msgid "``v1.3.1-rc.1``"
msgstr "``v1.3.1-rc.1``"

#: ../nitrokey3/firmware-update.rst.inc:74
msgid "test release"
msgstr "试放"

#: ../nitrokey3/firmware-update.rst.inc:75
msgid "``v<major>.<minor>.<patch>-test.<date>``"
msgstr "``v<major>.<minor>.<patch>-test.<date>``"

#: ../nitrokey3/firmware-update.rst.inc:76
msgid "``v1.3.1-test.20230414``"
msgstr "``v1.3.1-test.20230414``"

#: ../nitrokey3/firmware-update.rst.inc:79
msgid "Downgrade Protection"
msgstr "降级保护"

#: ../nitrokey3/firmware-update.rst.inc:81
msgid ""
"The firmware of the Nitrokey 3 cannot be downgraded. You can only install"
" a firmware update with the same or a higher major, minor and patch "
"version number than the firmware currently installed on the device. This "
"protects against downgrade attacks where a secure firmware version would "
"be replaced with an old, potentially insecure version."
msgstr ""
"Nitrokey "
"3的固件不能被降级。你只能安装与设备上当前安装的固件相同或更高的主要、次要和补丁版本号的固件更新。这可以防止降级攻击，即安全的固件版本会被一个旧的、可能不安全的版本取代。"

#: ../nitrokey3/firmware-update.rst.inc:83
msgid "Examples:"
msgstr "例子："

#: ../nitrokey3/firmware-update.rst.inc:85
msgid ""
"``v1.3.1`` can be updated to ``v1.3.1-test.20230414`` and vice versa "
"because they have the same major, minor and patch version number."
msgstr "``v1.3.1``可以更新为``v1.3.1-test.20230414``，反之亦然，因为它们具有相同的主要、次要和补丁版本号。"

#: ../nitrokey3/firmware-update.rst.inc:86
msgid ""
"``v1.3.1`` can be updated to ``v1.3.2`` or ``v1.4.0`` because the version"
" number increases."
msgstr "``v1.3.1``可以更新为``v1.3.2``或``v1.4.0``因为版本号增加。"

#: ../nitrokey3/firmware-update.rst.inc:87
msgid ""
"``v1.3.1`` cannot be updated to ``v1.3.0-rc.1`` because the version "
"number would decrease."
msgstr "``v1.3.1``不能更新为``v1.3.0-rc.1``因为版本号会减少。"

#: ../nitrokey3/firmware-update.rst.inc:89
msgid ""
"This is mostly relevant for users that rely on a feature from the test "
"releases. Users of the stable firmware can always update to the latest "
"available firmware version."
msgstr "这主要与依赖测试版本的功能的用户有关。稳定版固件的用户可以随时更新到最新的可用固件版本。"

#: ../nitrokey3/linux/firmware-update.rst:4
msgid "Troubleshooting:"
msgstr "故障排除。"

#: ../nitrokey3/linux/firmware-update.rst:14
#: ../pro/linux/firmware-update.rst:11
msgid "**Issue:** I get ``permission denied for /dev/hidrawX`` during update."
msgstr "**问题：**我在更新时得到``permission denied for /dev/hidrawX``。"

#: ../nitrokey3/linux/firmware-update.rst:7
msgid ""
"This likely means your user has not the needed permissions to read/write "
"the device. Please make sure you have set up the correct `udev-rules`_. "
"Download this `udev-rules`_ set and place it in your udev rules directory"
" (e.g., ``/etc/udev/rules.d``). Then remove your Nitrokey 3 from the USB "
"slot and run: ``udevadm control --reload-rules && udevadm trigger`` or "
"reboot your machine. Afterwards the update should work without the "
"permission issue."
msgstr ""
"这可能意味着你的用户没有必要的权限来读写设备。请确认你已经设置了正确的`udev-rules`_。下载这个`udev-"
"rules`_集，并把它放在你的udev规则目录中（例如，``/etc/udev/rules.d``）。然后从USB插槽中取出你的Nitrokey"
" 3并运行。``udevadm control --reload-rules && udevadm "
"trigger``或者重新启动你的机器。之后，更新应该可以工作，没有权限问题。"

#: ../nitrokey3/linux/firmware-update-qubes.rst:2
msgid "Firmware Update With Qubes OS"
msgstr "使用 Qubes OS 进行固件更新"

#: ../nitrokey3/linux/firmware-update-qubes.rst:8
msgid ""
"This guide describes how to update Nitrokey 3's firmware with nitropy in "
"Qubes OS."
msgstr "本指南介绍如何使用 Qubes OS 中的 nitropy 更新 Nitrokey 3 的固件。"

#: ../nitrokey3/linux/firmware-update-qubes.rst:11
msgid ""
"please read the general `firmware update instructions`_ before! Since for"
" specifc versions there are limitations regarding what data is possible "
"to migrate to the new version."
msgstr "请先阅读`固件更新说明！因为对于特定版本来说，可以迁移到新版本的数据是有限制的。"

#: ../nitrokey3/linux/firmware-update-qubes.rst:17
msgid "Setup"
msgstr "设置"

#: ../nitrokey3/linux/firmware-update-qubes.rst:19
msgid ""
"Install nitropy in a app VM of your choice following the `installation "
"instructions`_."
msgstr "按照`installation instructions`_ 在您选择的应用程序虚拟机中安装 nitropy。"

#: ../nitrokey3/linux/firmware-update-qubes.rst:28
msgid ""
"Never disconnect the Nitrokey 3 or abort the process while updating, "
"because it will likely render your device unusable!"
msgstr "在更新过程中，切勿断开 Nitrokey 3 的连接或中止进程，因为这很可能会导致设备无法使用！"

#: ../nitrokey3/linux/firmware-update-qubes.rst:31
msgid "Run ``nitropy nk3 reboot --bootloader`` in app VM."
msgstr "在应用程序虚拟机中运行``nitropy nk3 reboot --bootloader``。"

#: ../nitrokey3/linux/firmware-update-qubes.rst:32
msgid ""
"Once instructed by ``nitropy`` touch the device to activate the "
"bootloader."
msgstr "一旦收到``nitropy`` 的指示，请触摸设备激活引导加载程序。"

#: ../nitrokey3/linux/firmware-update-qubes.rst:33
msgid ""
"This will detach the nitrokey from the app VM, and the bootloader will "
"apear in sys-usb"
msgstr "这将使 nitrokey 脱离应用程序虚拟机，引导加载程序将出现在 sys-usb 中。"

#: ../nitrokey3/linux/firmware-update-qubes.rst:34
msgid "Attach the bootloader to the app VM"
msgstr "将引导加载器附加到应用程序虚拟机"

#: ../nitrokey3/linux/firmware-update-qubes.rst:35
msgid ""
"Run ``nitropy nk3 update`` and follow the instructions. This will reboot "
"the Nitrokey to finalice the update eventually."
msgstr "运行``nitropy nk3 update`` 并按说明操作。这将重启 Nitrokey，最终完成更新。"

#: ../nitrokey3/linux/firmware-update-qubes.rst:36
msgid "Re-attach the Nitrokey back to th app VM"
msgstr "将 Nitrokey 重新装回应用程序虚拟机"

#: ../nitrokey3/linux/index.rst:2
msgid "Nitrokey 3 With Linux"
msgstr "使用Linux的Nitrokey 3"

#: ../nitrokey3/shared/main.rst:1
msgid ""
"The Nitrokey 3 supports two-factor authentication (2FA) and passwordless "
"authentication:"
msgstr "Nitrokey 3支持双因素认证（2FA）和无密码认证。"

#: ../nitrokey3/shared/main.rst:4
msgid ""
"With **passwordless authentication**, entering a password is replaced by "
"logging in with the Nitrokey 3 and a PIN."
msgstr "有了**无密码认证**，输入密码被用Nitrokey 3和密码登录所取代。"

#: ../nitrokey3/shared/main.rst:7
msgid ""
"With **two-factor authentication** (2FA), the Nitrokey 3 is checked in "
"addition to the password."
msgstr "通过**双因素认证**（2FA），除了密码外，还要检查硝基钥匙3。"

#: ../nitrokey3/shared/main.rst:10
msgid ""
"The Nitrokey 3 can be used with any current browser and with the "
"`Nitrokey App 2 </software/nk-app2/>`__."
msgstr "Nitrokey 3 可与当前任何浏览器和`Nitrokey App 2</software/nk-app2/>`__ 一起使用。"

#: ../nitrokey3/shared/main.rst:15
msgid "Open a web page that supports FIDO2."
msgstr "打开一个支持FIDO2的网页。"

#: ../nitrokey3/shared/main.rst:16
msgid ""
"Log in to the website and go to “Set up security key” in the security "
"settings of your account."
msgstr "登录网站，在你账户的安全设置中进入 \"设置安全密钥\"。"

#: ../nitrokey3/shared/main.rst:18
msgid "Now you need to set a PIN for your Nitrokey 3."
msgstr "现在你需要为你的Nitrokey 3设置一个密码。"

#: ../nitrokey3/shared/main.rst:19
msgid "Touch the button of your Nitrokey 3 when prompted."
msgstr "根据提示，触摸你的Nitrokey 3的按钮。"

#: ../nitrokey3/shared/main.rst:20
msgid ""
"Once you have successfully configured the device, you will need to "
"activate your Nitrokey 3 this way each time you log in, after entering "
"your PIN."
msgstr "一旦你成功地配置了设备，你就需要在每次登录时，在输入密码后以这种方式激活你的Nitrokey 3。"

#: ../nitrokey3/shared/main.rst:29 ../u2f/shared/index-content1.rst:12
msgid ""
"Log in to the website and enable two-factor authentication in your "
"account settings. (In most cases you will find a link to the "
"documentation of the supported web service at `dongleauth.com "
"<https://www.dongleauth.com/>`__.)"
msgstr ""
"登录网站，在你的账户设置中启用双因素认证。(在大多数情况下，你可以在`dongleauth.com "
"<https://www.dongleauth.com/>`__找到支持的网络服务文档的链接)。"

#: ../nitrokey3/shared/main.rst:33
msgid ""
"Register your Nitrokey 3 in the account settings by touching the button "
"to activate the Nitrokey 3. After you have successfully configured the "
"device, you must activate the Nitrokey 3 this way each time you log in."
msgstr ""
"在账户设置中注册你的Nitrokey 3，触摸按钮激活Nitrokey 3。在你成功配置设备后，你必须在每次登录时以这种方式激活Nitrokey "
"3。"

#: ../software/nk-app2/keepassxc.rst:2
msgid "KeePassXC"
msgstr "KeePassXC"

#: ../software/nk-app2/keepassxc.rst:4
msgid ""
"These instructions describe how to protect and encrypt a `KeePassXC "
"<https://keepassxc.org/>`__ password database with Nitrokey 3."
msgstr "本说明介绍如何使用 Nitrokey 3 保护和加密`KeePassXC<https://keepassxc.org/>`__密码数据库。"

#: ../software/nk-app2/keepassxc.rst:8
msgid "KeePassXC version 2.7.6 or newer is required."
msgstr "需要 KeePassXC 2.7.6 或更新版本。"

#: ../software/nk-app2/keepassxc.rst:9
msgid ""
"`Nitrokey App 2 </software/nk-app2/>`__ version 2.2.2 or newer is "
"required."
msgstr "`需要 Nitrokey App 2</software/nk-app2/>`__ 2.2.2 或更新版本。"

#: ../software/nk-app2/keepassxc.rst:12
msgid "First Step: Generate a HMAC Secret With the Nitrokey App 2"
msgstr "第一步：使用 Nitrokey 应用程序生成 HMAC 密文 2"

#: ../software/nk-app2/keepassxc.rst:14
msgid "Open `Nitrokey App 2 </software/nk-app2/>`__"
msgstr "打开`Nitrokey App 2</software/nk-app2/>`__。"

#: ../software/nk-app2/keepassxc.rst:15
msgid "Select the Nitrokey 3"
msgstr "选择 Nitrokey 3"

#: ../software/nk-app2/keepassxc.rst:16
msgid "Select the ``PASSWORDS`` tab"
msgstr "选择``PASSWORDS`` 选项卡"

#: ../software/nk-app2/keepassxc.rst:17
msgid "Click on ``ADD`` to create a new credential"
msgstr "单击``ADD`` 创建新凭证"

#: ../software/nk-app2/keepassxc.rst:18
msgid "Select ``HMAC`` from the algorithm drop-down menu"
msgstr "从算法下拉菜单中选择``HMAC``"

#: ../software/nk-app2/keepassxc.rst:22
msgid "The credential is automatically named in ``HmacSlot2``."
msgstr "``HmacSlot2`` 中自动命名证书。"

#: ../software/nk-app2/keepassxc.rst:23
msgid "No extra attributes can be saved for the HMAC credential."
msgstr "HMAC 凭据不能保存额外属性。"

#: ../software/nk-app2/keepassxc.rst:24
msgid ""
"The HMAC secret must be *exactly 20 bytes* long and in *Base32* format. "
"That is exactly 32 characters."
msgstr "HMAC 密文必须是*，长度为 20 字节* ，格式为*Base32* 。即正好 32 个字符。"

#: ../software/nk-app2/keepassxc.rst:25
msgid "It is possible to save exactly one HMAC secret on a Nitrokey 3."
msgstr "在 Nitrokey 3 上可以准确保存一个 HMAC 密文。"

#: ../software/nk-app2/keepassxc.rst:27
msgid ""
"To generate a secret, there is a button in the field on the right-hand. "
"It is also possible to enter your own secret, as long as it is compliant."
msgstr "右侧字段中有一个按钮可用于生成密文。您也可以输入自己的秘密，只要它符合要求即可。"

#: ../software/nk-app2/keepassxc.rst:32
msgid ""
"The database can no longer be unlocked if the Nitrokey 3 is lost or "
"unavailable! Thus, you may want to set up a second Nitrokey 3 with the "
"same HMAC secret as a backup device."
msgstr ""
"如果 Nitrokey 3 丢失或不可用，数据库将无法再解锁！因此，您可能需要设置第二个具有相同 HMAC 密钥的 Nitrokey 3 "
"作为备份设备。"

#: ../software/nk-app2/keepassxc.rst:36
msgid ""
"The secret can **only** be seen before saving. If the KeePassXC database "
"is to be used with another Nitrokey 3, the HMAC secret must be copied "
"which is **only** possible **before saving** the credential."
msgstr ""
"在保存之前，该密文只能**** 查看。如果 KeePassXC 数据库要与另一个 Nitrokey 3 一起使用，则必须在保存** 证书之前复制 "
"HMAC 密文，**，** ，**。"

#: ../software/nk-app2/keepassxc.rst:38
msgid "Click on ``SAVE`` to save the credential"
msgstr "单击``SAVE`` 保存证书"

#: ../software/nk-app2/keepassxc.rst:41
msgid "First Option: Protect an Existing KeePassXC Database With a Nitrokey 3"
msgstr "第一种选择：使用 Nitrokey 3 保护现有 KeePassXC 数据库"

#: ../software/nk-app2/keepassxc.rst:43 ../software/nk-app2/keepassxc.rst:65
msgid "Open KeePassXC"
msgstr "打开 KeePassXC"

#: ../software/nk-app2/keepassxc.rst:44
msgid ""
"Open the existing KeePassXC database that is to be protected with a "
"Nitrokey 3."
msgstr "打开要使用 Nitrokey 3 保护的现有 KeePassXC 数据库。"

#: ../software/nk-app2/keepassxc.rst:45
msgid "Select ``Database`` -> ``Database Security...`` from the menu bar"
msgstr "从菜单栏选择``Database`` ->``Database Security...``"

#: ../software/nk-app2/keepassxc.rst:46
msgid "Select ``Security`` on the left side"
msgstr "在左侧选择``Security``"

#: ../software/nk-app2/keepassxc.rst:47
msgid ""
"Click on the ``Add additional protection...`` button in the ``Database "
"Credentials`` tab"
msgstr "点击``Database Credentials`` 选项卡中的``Add additional protection...`` 按钮"

#: ../software/nk-app2/keepassxc.rst:48 ../software/nk-app2/keepassxc.rst:76
msgid ""
"Scroll down to ``Challenge-Response`` and click on ``Add Challenge-"
"Response``"
msgstr "向下滚动到``Challenge-Response``，然后点击``Add Challenge-Response``。"

#: ../software/nk-app2/keepassxc.rst:49
msgid ""
"Now if the Nitrokey 3 is plugged in and a HMAC was generated before, "
"Nitrokey 3 should be displayed in the field."
msgstr "现在，如果插入了 Nitrokey 3，并且之前生成了 HMAC，那么 Nitrokey 3 就会显示在字段中。"

#: ../software/nk-app2/keepassxc.rst:51
msgid "Click on ``OK`` to add the Nitrokey 3 to the existing KeePassXC database"
msgstr "点击``OK`` 将 Nitrokey 3 添加到现有的 KeePassXC 数据库中"

#: ../software/nk-app2/keepassxc.rst:55
msgid ""
"By default the Nitrokey 3 is used as a second factor in addition to the "
"passphrase. To protect the database by the Nitrokey 3 exclusively, delete"
" the passphrase by clicking the button ``Remove Password``."
msgstr ""
"默认情况下，除密码外，Nitrokey 3 还被用作第二个因素。要完全使用 Nitrokey 3 保护数据库，请点击``Remove "
"Password`` 按钮删除口令。"

#: ../software/nk-app2/keepassxc.rst:59
msgid ""
"If the Nirokey 3 is not recognized, close KeePassXC completely. Then "
"connect the Nitrokey 3 to your computer before restarting KeePassXC."
msgstr "如果无法识别 Nirokey 3，请完全关闭 KeePassXC。然后将 Nitrokey 3 与电脑连接，再重新启动 KeePassXC。"

#: ../software/nk-app2/keepassxc.rst:64
msgid "Second Option: Creating a KeePassXC Database, Protected by Nitrokey 3"
msgstr "第二种选择：创建受 Nitrokey 3 保护的 KeePassXC 数据库"

#: ../software/nk-app2/keepassxc.rst:66
msgid ""
"Select ``Database`` -> ``New Database...`` from the menu bar to create a "
"new KeePassXC database."
msgstr "从菜单栏选择``Database`` ->``New Database...``，创建新的 KeePassXC 数据库。"

#: ../software/nk-app2/keepassxc.rst:67
msgid ""
"Fill in the display name and an optional description for your new "
"database and click on ``Continue``"
msgstr "填写新数据库的显示名称和可选描述，然后点击``Continue``。"

#: ../software/nk-app2/keepassxc.rst:68
msgid ""
"`Further database encryption settings <https://keepassxc.org/docs/>`__ "
"can now be configured here or the default settings can be retained. The "
"settings can also be changed later in the database settings."
msgstr ""
"`现在可以在此配置进一步的数据库加密设置<https://keepassxc.org/docs/>`__ "
"或保留默认设置。以后也可以在数据库设置中更改这些设置。"

#: ../software/nk-app2/keepassxc.rst:71
msgid "Click on ``Continue`` to confirm the settings"
msgstr "点击``Continue`` 确认设置"

#: ../software/nk-app2/keepassxc.rst:72
msgid "**Database Credential**"
msgstr "**数据库证书**"

#: ../software/nk-app2/keepassxc.rst:74
msgid ""
"Here you can enter a password as a second factor to unlock the database. "
"To connect the Nitrokey 3 (on which the HMAC secret was generated) to the"
" new KeePassXC database, click on ``Add additional protection...``"
msgstr ""
"您可以在此输入密码作为解锁数据库的第二个因素。要将 Nitrokey 3（在其上生成 HMAC 秘密）连接到新的 KeePassXC "
"数据库，请点击``Add additional protection...``。"

#: ../software/nk-app2/keepassxc.rst:77
msgid ""
"Now if the Nitrokey 3 is plugged in and a HMAC was generated before, "
"Nitrokey 3 should be displayed in the field. Click on ``Continue`` to "
"complete the creation of the new KeePassXC database."
msgstr ""
"现在，如果已插入 Nitrokey 3 且之前已生成 HMAC，则字段中应显示 Nitrokey 3。点击``Continue`` 完成新 "
"KeePassXC 数据库的创建。"

#: ../software/nk-app2/keepassxc.rst:82
msgid ""
"If the passphrase is left empty, the database will be protected by the "
"Nitrokey 3 exclusively. If a passphrase is entered, the database will be "
"protected by the passphrase **and** the Nitrokey 3."
msgstr "如果密码为空，数据库将只受 Nitrokey 3 保护。如果输入了口令，数据库将由口令**和** Nitrokey 3 保护。"

#: ../software/nk-app2/keepassxc.rst:86
msgid ""
"If the Nitrokey 3 is not recognized, close KeePassXC completely. Then "
"connect the Nitrokey 3 to your computer before restarting KeePassXC."
msgstr "如果无法识别 Nitrokey 3，请完全关闭 KeePassXC。然后将 Nitrokey 3 与电脑连接，再重新启动 KeePassXC。"

#: ../software/nk-app2/keepassxc.rst:89
msgid "Troubleshooting for Linux"
msgstr "Linux 故障排除"

#: ../software/nk-app2/keepassxc.rst:90
msgid ""
"If the Nirokey 3 device is not recognised by `KeePassXC "
"<https://keepassxc.org/>`__ on a Linux system:"
msgstr "如果`KeePassXC<https://keepassxc.org/>`__在 Linux 系统上无法识别 Nirokey 3 设备："

#: ../software/nk-app2/keepassxc.rst:92
msgid ""
"Provided that the udev rules have been set as described `here "
"</software/nitropy/linux/udev.html>`__."
msgstr "前提是 udev 规则已按`此处所述设置</software/nitropy/linux/udev.html>`__。"

#: ../software/nk-app2/keepassxc.rst:93
msgid "Provided that the ``pcscd service`` are has been started with:"
msgstr "前提是``pcscd service`` 已经启动："

#: ../software/nk-app2/keepassxc.rst:99
msgid "Install the latest version of KeePassXC with flatpak:"
msgstr "使用 flatpak 安装最新版本的 KeePassXC："

#: ../software/nk-app2/keepassxc.rst:105
msgid ""
"Install ``ccid`` on Arch Linux based systems. See also: `Arch wiki: "
"Nitrokey <https://wiki.archlinux.org/title/Nitrokey>`__."
msgstr ""
"在基于 Arch Linux 的系统上安装``ccid``。另请参见：`Arch "
"wiki：Nitrokey<https://wiki.archlinux.org/title/Nitrokey>`__."

#: ../nitrokey3/shared/nitropy.rst:2
msgid "Using The Nitrokey 3 With nitropy"
msgstr "使用Nitrokey 3与nitropy的关系"

#: ../nitrokey3/shared/nitropy.rst:6
msgid "``nitropy`` can be used to list and manage Nitrokey 3 devices."
msgstr "``nitropy``可用于列出和管理Nitrokey 3设备。"

#: ../nitrokey3/shared/nitropy.rst:11
msgid ""
"Please see `this guide <https://docs.nitrokey.com/software/nitropy/all-"
"platforms/installation>`__ for pynitrokey installation instructions."
msgstr ""
"请参阅`本指南<https://docs.nitrokey.com/software/nitropy/all-"
"platforms/installation>`__了解pynitrokey的安装说明。"

#: ../nitrokey3/shared/nitropy.rst:14
msgid "Listing Nitrokey 3 Devices"
msgstr "列出硝基钥匙3设备"

#: ../nitrokey3/shared/nitropy.rst:16
msgid ""
"Use ``nitropy list`` or ``nitropy nk3 list`` to list all connected "
"devices:"
msgstr "使用``nitropy list`或``nitropy nk3 list``来列出所有连接的设备。"

#: ../nitrokey3/shared/nitropy.rst:33
msgid "Querying Device Information"
msgstr "查询设备信息"

#: ../nitrokey3/shared/nitropy.rst:35
msgid ""
"The following commands are currently available for querying device "
"information:"
msgstr "目前有以下命令可用于查询设备信息。"

#: ../nitrokey3/shared/nitropy.rst:37
msgid "``nitropy nk3 version``: queries the firmware version of the device"
msgstr "``nitropy nk3 version``：查询设备的固件版本。"

#: ../nitrokey3/shared/nitropy.rst:46
msgid "Working With Multiple Devices"
msgstr "在多个设备上工作"

#: ../nitrokey3/shared/nitropy.rst:48
msgid ""
"If multiple Nitrokey 3 devices are connected, you can use the ``--path`` "
"option to select one of them.  To determine the path of a device, use the"
" ``nitropy list`` or ``nitropy nk3 list`` command."
msgstr ""
"如果连接了多个Nitrokey 3设备，你可以使用``--path``选项来选择其中一个。  要确定一个设备的路径，使用``nitropy "
"list`或``nitropy nk3 list``命令。"

#: ../nitrokey3/shared/nitropy.rst:73
msgid ""
"To diagnose issues with your Nitrokey 3 device, you can use the ``nitropy"
" nk3 test`` command.  It performs a number of tests to determine the "
"state of your device."
msgstr "要诊断你的Nitrokey 3设备的问题，你可以使用``nitropy nk3 test``命令。  它执行了一些测试，以确定你的设备的状态。"

#: ../nitrokey3/shared/nitropy.rst:75
msgid "If the tests are successful, a summary of the steps is printed:"
msgstr "如果测试成功，会打印出步骤的摘要。"

#: ../nitrokey3/shared/nitropy.rst:97
msgid ""
"If a test fails, the error message contains the path of a log file with "
"detailed information.  Please include this log file in support requests."
msgstr "如果测试失败，错误信息中包含有详细信息的日志文件的路径。  请在支持请求中包括这个日志文件。"

#: ../nitrokey3/shared/nitropy.rst:99
msgid ""
"If you have set a FIDO2 pin for your device, you have to use the "
"``--pin`` option:"
msgstr "如果你为你的设备设置了一个FIDO2引脚，你必须使用``--pin``选项。"

#: ../nitrokey3/shared/openpgp.rst.inc:2 ../pro/openpgp.rst.inc:2
msgid "OpenPGP Email Encryption"
msgstr "OpenPGP电子邮件加密"

#: ../nitrokey3/shared/openpgp.rst.inc:7
msgid ""
"OpenPGP support was introduced with the `1.4.0 release of the Nitrokey 3 "
"<https://www.nitrokey.com/news/2023/milestone-nitrokey-3-achieved-"
"openpgp-card-one-time-passwords-and-usb-c-availability>`_ firmware. If "
"you have an older version, `update your firmware <firmware-update.html>`_"
msgstr ""
"OpenPGP支持是在`1.4.0版本的Nitrokey 3<https://www.nitrokey.com/news/2023"
"/milestone-nitrokey-3-achieved-openpgp-card-one-time-passwords-and-"
"usb-c-availability>`_ 固件中引入的。如果你有一个旧版本，`更新你的固件<firmware-update.html>`_"

#: ../shared/openpgp.rst.inc:7
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP. While "
"this page describes the usage of OpenPGP, S/MIME is described `here "
"<smime.html>`_."
msgstr "如果你对选择哪一个有疑问，你应该使用OpenPGP。本页介绍了OpenPGP的用法，而S/MIME则在`这里<smime.html>`_。"

#: ../shared/openpgp.rst.inc:9
msgid ""
"Please familiarize yourself with the general concept behind the OpenPGP "
"standard first, for example by reading `this info graphic "
"<https://emailselfdefense.fsf.org/en/infographic.html>`__ of the Free "
"Software Foundation."
msgstr "请先熟悉OpenPGP标准背后的一般概念，例如通过阅读自由软件基金会的`这个信息图形<https://emailselfdefense.fsf.org/en/infographic.html>`__。"

#: ../pro/openpgp-keygen-backup.rst.inc:9 ../pro/openpgp-keygen-gpa.rst.inc:11
#: ../pro/openpgp-keygen-on-device.rst.inc:17 ../shared/openpgp.rst.inc:12
msgid "Key Generation"
msgstr "密钥生成"

#: ../shared/openpgp.rst.inc:14
msgid "If you do not have OpenPGP keys yet, you need to generate them first."
msgstr "如果你还没有OpenPGP密钥，你需要先生成它们。"

#: ../shared/openpgp.rst.inc:16
msgid ""
"`Generate keys on your Nitrokey device <openpgp-keygen-gpa.html>`_ - this"
" is the best option if you are unexperienced, but you won’t have a backup"
" of your keys and therefore won’t be able to mitigate the loss of the "
"Nitrokey"
msgstr ""
"`在你的Nitrokey设备上生成钥匙<openpgp-keygen-gpa.html>`_ - "
"如果你没有经验，这是最好的选择，但你不会有钥匙的备份，因此无法减轻Nitrokey的损失。"

#: ../shared/openpgp.rst.inc:22
msgid ""
"`Generate keys on your Nitrokey device with different algorithm or key "
"size <openpgp-keygen-on-device.html>`_ - this is as secure as the "
"previous option and thus you won’t have a backup as well, but you can "
"change the key attributes (that is the algorithm and key size)"
msgstr ""
"`在你的Nitrokey设备上用不同的算法或密钥大小生成密钥<openpgp-keygen-on-device.html>`_ - "
"这和之前的选项一样安全，因此你也不会有备份，但你可以改变密钥属性（即算法和密钥大小）。"

#: ../shared/openpgp.rst.inc:28
msgid ""
"`Generate keys locally <openpgp-keygen-backup.html>`_ and copy them to "
"your Nitrokey device - this is the most flexible, expert option, but only"
" secure if your system is not compromised, because you can create a "
"backup key outside your Nitrokey A similar description in french can be "
"found `here <https://xieme-art.org/post/importer-des-clefs-gnupg-dans-sa-"
"nitrokey-pro/>`__."
msgstr ""
"`在本地生成密钥<openpgp-keygen-backup.html>`_ ，并将其复制到你的Nitrokey设备上--"
"这是最灵活、最专业的选择，但只有在你的系统没有被破坏的情况下才安全，因为你可以在你的Nitrokey之外创建一个备份密钥。在这里可以找到类似的法语描述`"
" <https://xieme-art.org/post/importer-des-clefs-gnupg-dans-sa-nitrokey-"
"pro/>` __。"

#: ../shared/openpgp.rst.inc:37
msgid "Importing Existing Keys"
msgstr "导入现有的钥匙"

#: ../shared/openpgp.rst.inc:39
msgid ""
"If you already have OpenPGP keys you may want to use them with your "
"Nitrokey, instead of generating new ones. Importing existing keys works "
"basically the same as generating keys locally first and copying them to "
"the Nitrokey (see above). Therefore, please have a look at the "
"`corresponding instructions <openpgp-keygen-backup.html#key-import>`_. "
"Note that you probably want to generate another subkey for authentication"
" to your existing key. See at the same instructions for `subkey "
"generation <openpgp-keygen-backup.html#subkey-for-authentication>`_."
msgstr ""
"如果你已经有OpenPGP密钥，你可能想在你的Nitrokey上使用它们，而不是生成新的密钥。导入现有密钥的方法基本上与在本地生成密钥并复制到Nitrokey上的方法相同（见上文）。因此，请看一下`相应的说明"
"<openpgp-keygen-backup.html#key-import>`_ "
"。请注意，你可能想生成另一个子密钥来验证你现有的密钥。请看`子密钥生成的相同说明<openpgp-keygen-backup.html"
"#subkey-for-authentication>`_ 。"

#: ../shared/openpgp.rst.inc:46
msgid "to use `OpenPGP encryption with Thunderbird <openpgp-thunderbird.html>`_"
msgstr "在Thunderbird中使用`OpenPGP加密技术<openpgp-thunderbird.html>`_"

#: ../shared/openpgp.rst.inc:49
msgid "to use `OpenPGP encryption with Outlook <openpgp-outlook.html>`_"
msgstr "在Outlook中使用`OpenPGP加密。<openpgp-outlook.html>`_"

#: ../shared/openpgp.rst.inc:52
msgid ""
"to use `Claws Mail <https://www.claws-mail.org/plugin.php?plugin=gpg>`__,"
" an email client (and news reader) for Linux and Windows"
msgstr ""
"以使用`Claws Mail<https://www.claws-"
"mail.org/plugin.php?plugin=gpg>`__，一个用于Linux和Windows的电子邮件客户端（和新闻阅读器）。"

#: ../shared/openpgp.rst.inc:56
msgid ""
"to use `Evolution <https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`__, an email client for the Gnome Desktop on Linux "
"systems"
msgstr ""
"以使用`Evolution<https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`__，这是Linux系统上Gnome桌面的一个电子邮件客户端。"

#: ../shared/openpgp.rst.inc:60
msgid "to use `GPGTools <https://gpgtools.org/>`__ on macOS."
msgstr "以在macOS上使用`GPGTools<https://gpgtools.org/>`__。"

#: ../pro/openpgp-keygen-backup.rst.inc:2
msgid "OpenPGP Key Generation With Backup"
msgstr "带备份的OpenPGP密钥生成"

#: ../pro/openpgp-keygen-backup.rst.inc:6
msgid ""
"The following instructions explain the generation of OpenPGP keys and how"
" to copy them to the Nitrokey. This method has the advantage of providing"
" a backup of the keys in case of losing or breaking the Nitrokey. The "
"instructions are based on the command line interface of GnuPG. Thus, you "
"need to have GnuPG installed on your system. The newest GnuPG version for"
" Windows can be found `here <https://www.gpg4win.org/>`__ and the newest "
"version for MacOS can be found `here <https://gpgtools.org/>`__. Users of"
" Linux systems please install GnuPG with help of the package manager."
msgstr "下面的说明解释了OpenPGP密钥的生成以及如何将其复制到Nitrokey上。这种方法的好处是在Nitrokey丢失或损坏的情况下可以提供钥匙的备份。这些说明是基于GnuPG的命令行界面的。因此，你需要在你的系统上安装GnuPG。最新的Windows版GnuPG可以在`这里<https://www.gpg4win.org/>`__，最新的MacOS版可以在`这里<https://gpgtools.org/>`__找到。Linux系统的用户请在软件包管理器的帮助下安装GnuPG。"

#: ../pro/openpgp-keygen-backup.rst.inc:11
msgid ""
"At first, you need to generate a key locally. You can decide, which key "
"attributes to use and - most importantly - you can export the key and "
"keep it somewhere save in case you need to restore the key."
msgstr "首先，你需要在本地生成一个密钥。你可以决定使用哪种密钥属性，最重要的是，你可以导出密钥并将其保存在某个地方，以备你需要恢复密钥。"

#: ../pro/openpgp-keygen-backup.rst.inc:14
msgid "Main Key and Encryption Subkey"
msgstr "主密钥和加密子密钥"

#: ../pro/openpgp-keygen-backup.rst.inc:16
msgid ""
"We can use the command ``gpg --full-generate-key --expert`` to start a "
"guided key generation with all possible options. You can choose the key "
"type (usually RSA (1) or ECC (9)), the length of the key and other "
"attributes. The following output is just a simple example, you may choose"
" other values."
msgstr ""
"我们可以使用``gpg --full-generate-key "
"--expert``命令来启动一个具有所有可能选项的指导性密钥生成。你可以选择钥匙类型（通常是RSA（1）或ECC（9）），钥匙的长度和其他属性。下面的输出只是一个简单的例子，你可以选择其他值。"

#: ../pro/openpgp-keygen-backup.rst.inc:80
msgid ""
"For information regarding the supported algorithms, please refer to the "
"`faq <../faq.html>`_"
msgstr "有关支持的算法的信息，请参考`faq<../faq.html>`_"

#: ../pro/openpgp-keygen-backup.rst.inc:84
msgid "Subkey for Authentication"
msgstr "认证的子密钥"

#: ../pro/openpgp-keygen-backup.rst.inc:86
msgid ""
"You now have a main key with the capability to sign and certify (marked "
"as [SC]) and a subkey for encryption (marked as [E]). It is necessary to "
"have another subkey for use cases in which authentication is needed. This"
" subkey is generated in the next step. Type in ``gpg --edit-key --expert "
"keyID`` to start the process, whereas “keyID” is either the id of the key"
" or the email address used during key generation."
msgstr ""
"你现在有一个能够签名和认证的主钥匙（标记为[SC]）和一个用于加密的子钥匙（标记为[E]）。在需要认证的情况下，有必要拥有另一个子密钥。这个子密钥将在下一步生成。输入``gpg"
" --edit-key --expert keyID``来开始这个过程，而 \"keyID \"是钥匙的id或在钥匙生成时使用的电子邮件地址。"

#: ../pro/openpgp-keygen-backup.rst.inc:107
msgid ""
"Now you are in the interactive mode of GnuPG and you can add a key by "
"simply typing ``addkey``. You need to choose the key you want to use. It "
"is crucial to choose “set your own capabilities”, because we want to have"
" the “authenticate” capability which is not available otherwise. We "
"toggle sign and encrypt by typing ``s`` and ``e`` and we activate "
"authenticate by typing ``a``."
msgstr ""
"现在你处于GnuPG的交互式模式，你可以通过简单地输入``addkey``添加一个密钥。你需要选择你想使用的密钥。选择 \"设置你自己的能力 "
"\"是很关键的，因为我们想拥有 \"验证 "
"\"能力，否则就没有这个能力。我们通过输入``s`和``<xid=\"330\"></x>``，我们通过输入``a``激活认证。"

#: ../pro/openpgp-keygen-backup.rst.inc:165
msgid ""
"We quit with ``q``. Afterwards we need to answer the same questions as "
"before. Finally, we have a ready-to-go key set which we can import to our"
" device."
msgstr "我们以``q``退出。之后，我们需要回答和之前一样的问题。最后，我们有一个准备好的密钥集，可以导入到我们的设备中。"

#: ../pro/openpgp-keygen-backup.rst.inc:199
msgid ""
"Now is good time to backup your key. Please keep this backup very secure."
" It is best practice to never have this key on a regular computer which "
"has connection to the internet, so that the key never gets compromised. "
"You can create a backup with something like:"
msgstr "现在是备份你的钥匙的好时机。请保持这个备份非常安全。最好的做法是永远不要把这个密钥放在有互联网连接的普通计算机上，这样密钥就不会被破坏。你可以用以下方法创建一个备份。"

#: ../pro/openpgp-keygen-backup.rst.inc:206
msgid "Key Import"
msgstr "关键进口"

#: ../pro/openpgp-keygen-backup.rst.inc:208
msgid ""
"You have a main key and two subkeys which can be imported to your "
"Nitrokey. Before proceeding please make sure that you really have a "
"backup of the key, if you need one. The ``keytocard`` command used in the"
" next steps will **delete** your key from your disk!"
msgstr "你有一个主钥匙和两个子钥匙，可以导入到你的Nitrokey。在继续进行之前，请确保你真的有一个钥匙的备份，如果你需要的话。在接下来的步骤中使用的``keytocard``命令将从你的磁盘中**删除你的钥匙!"

#: ../pro/openpgp-keygen-backup.rst.inc:210
msgid ""
"We start the process by accessing the interactive interface of GnuPG "
"again with ``gpg --edit-key --expert keyID``, whereas ``keyID`` is either"
" the id of the key or the email address used during key generation."
msgstr ""
"我们用``gpg --edit-key --expert "
"keyID``再次访问GnuPG的交互式界面，而``keyID``是钥匙的id或钥匙生成时使用的电子邮件地址。"

#: ../pro/openpgp-keygen-backup.rst.inc:246
msgid ""
"We just imported the main key to the card. Now we proceed with the two "
"subkeys. We type ``key 1`` to select the encryption subkey and type in "
"``keytocard`` again and select the slot to use."
msgstr ""
"我们刚刚把主钥匙导入卡中。现在我们继续处理两个子密钥。我们输入``key "
"1``来选择加密子密钥，并输入``keytocard``并再次选择要使用的插槽。"

#: ../pro/openpgp-keygen-backup.rst.inc:275
msgid ""
"Now we deselect the first key with ``key 1`` and select the second subkey"
" with ``key 2`` and move it as well with ``keytocard``. Afterwards we "
"quit and save the changes."
msgstr ""
"现在我们用``key 1``取消对第一个子键的选择，用<xid=\"79\"></x>`key "
"2``并且用``keytocard``移动它。之后，我们退出并保存更改。"

#: ../pro/openpgp-keygen-backup.rst.inc:318
msgid ""
"Your keys are now moved to the Nitrokey and thus secured in hardware. "
"Congratulations!"
msgstr "你的钥匙现在已经转移到了Nitrokey，从而在硬件上得到了保障。祝贺你!"

#: ../pro/openpgp-keygen-backup.rst.inc:321
#: ../pro/openpgp-keygen-gpa.rst.inc:51
#: ../pro/openpgp-keygen-on-device.rst.inc:204
msgid "Exporting Public Key and Keyserver Usage"
msgstr "导出公钥和钥匙服务器的使用"

#: ../pro/openpgp-keygen-backup.rst.inc:323
#: ../pro/openpgp-keygen-gpa.rst.inc:53
#: ../pro/openpgp-keygen-on-device.rst.inc:206
msgid ""
"Although you can start to use your Nitrokey right away after generating "
"the keys on your system, you need to import your public key on every "
"system, you want to use the Nitrokey on. So to be prepared you have two "
"options: You either save the public key anywhere you like and use it on "
"another system or you save the public key on a webpage/keyserver."
msgstr "虽然你可以在你的系统上生成钥匙后立即开始使用你的Nitrokey，但你需要在每个你想使用Nitrokey的系统上导入你的公钥。所以为了做好准备，你有两个选择。你可以把公钥保存在你喜欢的任何地方，然后在另一个系统上使用，或者把公钥保存在一个网页/钥匙服务器上。"

#: ../pro/openpgp-keygen-backup.rst.inc:326
#: ../pro/openpgp-keygen-on-device.rst.inc:209
msgid "Generating a Public Key File"
msgstr "生成公钥文件"

#: ../pro/openpgp-keygen-backup.rst.inc:328
msgid ""
"To get a simple file of your public key, you can just use ``gpg --armor "
"--export keyID > pubkey.asc``. Use either the fingerprint as “keyID” "
"(look at ``gpg -K`` to get it) or just use your email address as an "
"identifier."
msgstr ""
"要获得你的公钥的简单文件，你可以直接使用``gpg --armor --export keyID > pubkey.asc``。使用指纹作为 "
"\"keyID\"（查看``gpg -K``以获得它），或者直接使用你的电子邮件地址作为标识。"

#: ../pro/openpgp-keygen-backup.rst.inc:330
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via ``gpg --import pubkey.asc`` "
"and then types ``gpg --card-status`` so that the system knows where to "
"look for this key. That’s all."
msgstr ""
"你可以随身携带这个文件，或者把它发送给你喜欢的人。这个文件一点也不秘密。如果你想在另一个系统上使用Nitrokey，你首先通过``gpg "
"--import pubkey.asc``导入这个公钥，然后输入``gpg --card-"
"status``，这样系统就知道要在哪里寻找这个密钥。这就是全部。"

#: ../pro/openpgp-keygen-backup.rst.inc:334
#: ../pro/openpgp-keygen-on-device.rst.inc:216
msgid "Uploading the Public Key"
msgstr "上传公钥"

#: ../pro/openpgp-keygen-backup.rst.inc:336
#: ../pro/openpgp-keygen-on-device.rst.inc:218
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it "
"to keyserver. You can do this by typing ``gpg --keyserver "
"search.keyserver.net --send-key keyID``. If you are using another machine"
" you can just import it by using ``gpg --keyserver search.keyserver.net "
"--recv-key keyID``."
msgstr ""
"如果你不想随身携带公钥文件，你可以把它上传到钥匙服务器。你可以通过输入``gpg --keyserver search.keyserver.net"
" --send-key keyID``来实现。如果你使用另一台机器，你可以通过使用``gpg --keyserver "
"search.keyserver.net --recv-key keyID``导入它。"

#: ../pro/openpgp-keygen-backup.rst.inc:338
msgid ""
"Another possibility is to change the URL setting on your card. Start "
"``gpg --card-edit`` again and first set the URL where the key is situated"
" (e.g. on the keyserver or on your webpage etc.) via the ``url`` command."
" From now on you can import the key on another system by just using the "
"``fetch`` command within the ``gpg --card-edit environment``."
msgstr ""
"另一个可能性是改变你的卡上的URL设置。再次启动``gpg --card-"
"edit``并首先通过``url``命令设置钥匙所在的URL（例如，在钥匙服务器或你的网页上等）。从现在开始，你可以通过使用``fetch``命令在``gpg"
" --card-edit environment``中导入另一个系统上的密钥。"

#: ../pro/openpgp-keygen-gpa.rst.inc:2
msgid "OpenPGP Key Generation Using GPA"
msgstr "使用GPA生成OpenPGP密钥"

#: ../pro/openpgp-keygen-gpa.rst.inc:6
msgid ""
"The following instructions explain the generation of OpenPGP keys "
"directly on the Nitrokey with help of the GNU Privacy Assistant (GPA). "
"You won’t be able to create a backup of these keys. Thus, if you lose the"
" Nitrokey or it breaks you can not decrypt mails or use these keys "
"anymore. Please see `here <openpgp-outlook.html>`_ for a comparison of "
"the different methods to generate OpenPGP keys."
msgstr ""
"下面的说明解释了在GNU隐私助手（GPA）的帮助下直接在Nitrokey上生成OpenPGP密钥的过程。你将无法创建这些密钥的备份。因此，如果你丢失了Nitrokey或它坏了，你就不能再解密邮件或使用这些密钥了。请参阅`这里"
"<openpgp-outlook.html>`_以了解不同方法生成OpenPGP密钥的比较。"

#: ../pro/openpgp-keygen-gpa.rst.inc:8
msgid ""
"You need to have GnuPG and GPA installed on your system. The newest "
"version for Windows can be found `here <https://www.gpg4win.org/>`__ "
"(make sure to check “GPA” during the installation!). Users of Linux "
"systems please install GnuPG and GPA with help of the package manager "
"(e.g. using ``sudo apt install gnupg gpa`` on Ubuntu)."
msgstr ""
"你需要在你的系统上安装GnuPG和GPA。最新的Windows版本可以在`这里找到 "
"<https://www.gpg4win.org/>`__（确保在安装时勾选 "
"\"GPA\"！）。Linux系统的用户请在软件包管理器的帮助下安装GnuPG和GPA（例如，使用``sudo apt install gnupg"
" gpa``在Ubuntu上）。"

#: ../pro/openpgp-keygen-gpa.rst.inc:13
msgid ""
"At first, open the GNU Privacy Assistant (GPA). You may are asked to "
"generate a key, you can skip this step for now by clicking “Do it later”."
" In the main window, please click on “Card” or “Card Manager”."
msgstr ""
"首先，打开GNU隐私助理（GPA）。你可能会被要求生成一个密钥，你可以点击 \"以后再做 \"暂时跳过这一步。在主窗口中，请点击 \"卡 \"或 "
"\"卡管理器\"。"

#: ../pro/openpgp-keygen-gpa.rst.inc:20
msgid ""
"Another windows opens. Please go to “Card” -> “Generate key” to start the"
" key generation process."
msgstr "另一个窗口打开。请进入 \"卡片\"-> \"生成密钥\"，开始密钥生成过程。"

#: ../pro/openpgp-keygen-gpa.rst.inc:27
msgid ""
"Now you can put in your name and the email address you want to use for "
"the key that will be generated next. You may choose an expiration date "
"for your key, but you don’t have to."
msgstr "现在你可以输入你的名字和你想用于接下来生成的密钥的电子邮件地址。你可以为你的钥匙选择一个到期日，但你不一定要选择。"

#: ../pro/openpgp-keygen-gpa.rst.inc:29
msgid ""
"**Please do not use the backup checkbox**. This “backup” does only save "
"the encryption key. In case of a loss of the device, you will not be able"
" to restore the whole key set. So on the one hand it is no full backup "
"(use `these instructions <openpgp-keygen-backup.html>`_ instead, if you "
"need one) and on the other hand you risk that someone else can get in "
"possession of your encryption key. The advantage of generating keys on-"
"device is to make sure that keys are stored securely. Therefore, we "
"recommend to skip this half-backup."
msgstr ""
"**请不要使用备份复选框**。这种 \"备份 "
"\"只保存加密密钥。在设备丢失的情况下，你将无法恢复整个密钥集。因此，一方面它不是完整的备份（如果你需要的话，请使用`这些说明<openpgp-"
"keygen-"
"backup.html>`_代替），另一方面，你有可能被别人占有你的加密密钥。在设备上生成密钥的好处是确保密钥被安全地存储。因此，我们建议跳过这个半备份。"

#: ../pro/openpgp-keygen-gpa.rst.inc:36
msgid ""
"You will be asked for the admin PIN (default: 12345678) and the user PIN "
"(default: 123456). When the key generation is finished, you can see the "
"fingerprints of the keys on the bottom of the window. You may fill up the"
" fields shown above, which are saved on your Nitrokey as well."
msgstr "你将被要求提供管理密码（默认：12345678）和用户密码（默认：123456）。当钥匙生成完成后，你可以在窗口的底部看到钥匙的指纹。你可以填写上面显示的字段，这些字段也会保存在你的Nitrokey上。"

#: ../pro/openpgp-keygen-gpa.rst.inc:43
msgid ""
"Now you can close the window and go back to the main window. Your key "
"will be visible in the key manager after refreshing. Every application "
"which makes use of GnuPG will work with your Nitrokey as well, because "
"GnuPG is fully aware of the fact, that the keys are stored on your "
"Nitrokey."
msgstr "现在你可以关闭该窗口并回到主窗口。刷新后，你的钥匙将在钥匙管理器中可见。每一个使用GnuPG的应用程序都可以使用你的Nitrokey，因为GnuPG完全知道钥匙是存储在你的Nitrokey上的事实。"

#: ../pro/openpgp-keygen-gpa.rst.inc:60
msgid ""
"Right-click on your key entry in the key manager and click “Export Keys…”"
" to export the public key to a file and/or “Send Keys…” to upload the key"
" to a keyserver."
msgstr "在钥匙管理器中右击你的钥匙条目，点击 \"导出钥匙... \"将公钥导出到文件中，和/或点击 \"发送钥匙... \"将钥匙上传至钥匙服务器。"

#: ../pro/openpgp-keygen-gpa.rst.inc:62
msgid ""
"You can carry the keyfile with you or send it to anyone who you like. "
"This file is not secret at all. If you want to use the Nitrokey on "
"another system, you first import this public key via clicking on “Keys” "
"-> “Importing Keys…” and choosing the file."
msgstr ""
"你可以随身携带钥匙文件，或将其发送给任何你喜欢的人。这个文件根本就不是秘密。如果你想在另一个系统上使用Nitrokey，你首先要通过点击 "
"\"钥匙\"-> \"导入钥匙... \"并选择文件来导入这个公钥。"

#: ../pro/openpgp-keygen-gpa.rst.inc:65
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it "
"to keyserver. If you are using another machine you can just import it by "
"using “Server” -> “Retrieve Keys…” and entering your name or key id."
msgstr ""
"如果你不想随身携带公钥文件，你可以把它上传到keyserver。如果你使用的是另一台机器，你可以通过使用 \"服务器\"-> \"检索钥匙... "
"\"并输入你的名字或钥匙ID来导入它。"

#: ../pro/openpgp-keygen-gpa.rst.inc:67
msgid ""
"Another possibility is to change the URL setting on your card. Open the "
"card manager again and fill in the URL where the key is situated (e.g. on"
" the keyserver or on your webpage etc.). From now on you can import the "
"key on another system by right-clicking on the URL and click on “Fetch "
"Key”."
msgstr ""
"另一种可能是改变你的卡片上的URL设置。再次打开卡片管理器，填写钥匙所在的URL（例如在钥匙服务器或你的网页上等）。从现在开始，你可以通过在URL上点击右键并点击"
" \"Fetch Key\"，将钥匙导入另一个系统。"

#: ../pro/openpgp-keygen-on-device.rst.inc:2
msgid "OpenPGP Key Generation On-Device"
msgstr "在设备上生成OpenPGP密钥"

#: ../pro/openpgp-keygen-on-device.rst.inc:6
msgid ""
"The following instructions explain the generation of OpenPGP keys "
"directly on the Nitrokey. This is done by using the command line "
"interface of GnuPG. Thus, you need to have GnuPG installed on your "
"system. The newest GnuPG version for Windows can be found `here "
"<https://www.gpg4win.org/>`__ and the newest version for MacOS can be "
"found `here <https://gpgtools.org/>`__. Users of Linux systems please "
"install GnuPG with help of the package manager."
msgstr ""
"下面的说明解释了如何在Nitrokey上直接生成OpenPGP密钥。这是通过使用GnuPG的命令行界面完成的。因此，你需要在你的系统上安装GnuPG。最新的Windows版GnuPG可以在`这里"
" <https://www.gpg4win.org/>`__，最新的MacOS版可以在`这里 "
"<https://gpgtools.org/>`__。Linux系统的用户请在软件包管理器的帮助下安装GnuPG。"

#: ../pro/openpgp-keygen-on-device.rst.inc:10
msgid ""
"These instructions are based on GnuPG version 2.2.6 or higher. Some Linux"
" Distributions have an older version installed. In this case please "
"choose a different method as listed `here <openpgp.html>`_ or install a "
"newer version if possible."
msgstr ""
"这些说明是基于GnuPG "
"2.2.6或更高版本。有些Linux发行版安装的是旧版本。在这种情况下，请选择不同的方法，如`这里<openpgp.html>`_或者尽可能地安装一个较新的版本。"

#: ../pro/openpgp-keygen-on-device.rst.inc:19
msgid ""
"The following descriptions explain the basic key generation on-device via"
" GnuPG’s command line interface. The default behaviour is to generate RSA"
" keys of 2048 bit size. If you want to change the key algorithm and "
"length, have a look at the next section first."
msgstr "下面的描述说明了通过GnuPG的命令行界面在设备上生成基本的密钥。默认行为是生成2048比特大小的RSA密钥。如果你想改变钥匙的算法和长度，请先看看下一节。"

#: ../pro/openpgp-keygen-on-device.rst.inc:21
msgid "Open a command line and type ``gpg2 --card-edit``."
msgstr "打开一个命令行，输入``gpg2 --card-edit``。"

#: ../pro/openpgp-keygen-on-device.rst.inc:51
msgid ""
"Now you are in the interactive interface of GnuPG. Activate the admin "
"commands with ``admin`` and use ``generate`` afterwards to start the "
"generation of keys."
msgstr "现在你进入了GnuPG的交互界面。用``admin``激活管理命令，之后用``generate``开始生成密钥。"

#: ../pro/openpgp-keygen-on-device.rst.inc:93
msgid ""
"**Please do not create the suggested off-card backup.** This “backup” "
"does only save the encryption key, but not the signature and "
"authentication keys. In case of a loss of the device, you will not be "
"able to restore the whole key set. So on the one hand it is no full "
"backup (use `these instructions <openpgp-keygen-backup.html>`_ instead, "
"if you need one) and on the other hand you risk that someone else can get"
" in possession of your encryption key. The advantage of generating keys "
"on-device is to make sure that keys are stored securely. Therefore, we "
"recommend to skip this half-backup."
msgstr ""
"**请不要创建建议的卡外备份。**这种 \"备份 "
"\"只保存加密密钥，但不保存签名和认证密钥。在设备丢失的情况下，你将无法恢复整个密钥集。因此，一方面，它不是完整的备份（如果你需要，可以使用`这些说明"
"<openpgp-keygen-"
"backup.html>`_代替），另一方面，你有可能被其他人占有你的加密密钥。在设备上生成密钥的好处是确保密钥被安全地存储。因此，我们建议跳过这个半备份。"

#: ../pro/openpgp-keygen-on-device.rst.inc:96
msgid ""
"Now you have a complete key set on your device which can be used for the "
"`various applications "
"<https://www.nitrokey.com/documentation/applications>`__ listed on our "
"site. Type ``quit`` and hit enter to exit."
msgstr "现在你的设备上有一个完整的密钥集，可以用于我们网站上列出的各种应用程序`<https://www.nitrokey.com/documentation/applications>`__。输入``quit``并点击回车键退出。"

#: ../pro/openpgp-keygen-on-device.rst.inc:99
msgid "Change Key Attributes"
msgstr "改变关键属性"

#: ../pro/openpgp-keygen-on-device.rst.inc:101
msgid ""
"This section is about changing the key attributes. If you want to use the"
" default values, you can proceed with the next section."
msgstr "本节是关于改变关键属性的。如果你想使用默认值，你可以继续下一节。"

#: ../pro/openpgp-keygen-on-device.rst.inc:103
msgid "Open a command line and type ``gpg2 --card-edit --expert``."
msgstr "打开一个命令行，输入``gpg2 --card-edit --expert``。"

#: ../pro/openpgp-keygen-on-device.rst.inc:129
msgid ""
"Now you are in the interactive interface of GnuPG. As you can see in the "
"“Key attributes” field above, the default value rsa2048 is set. To change"
" them, activate the admin commands with ``admin`` and use ``key-attr`` "
"afterwards to change the attributes of the keys."
msgstr ""
"现在你进入了GnuPG的交互界面。正如你在上面的 \"密钥属性 "
"\"字段中看到的，默认值是rsa2048。要改变它们，用``admin``激活管理命令，然后用``key-attr``来改变钥匙的属性。"

#: ../pro/openpgp-keygen-on-device.rst.inc:160
msgid ""
"You can choose the attribute for each key (that is, signature, encryption"
" and authentication key). Most people will use the same attributes for "
"every key. Type ``list`` to see the results (have look at the “Key "
"attributes” field, which now reads rsa4096)."
msgstr ""
"你可以为每个密钥（即签名、加密和认证密钥）选择属性。大多数人将为每个密钥使用相同的属性。输入``list``以查看结果（请看 \"密钥属性 "
"\"字段，现在是rsa4096）。"

#: ../pro/openpgp-keygen-on-device.rst.inc:186
msgid ""
"Type ``quit`` and hit enter to exit or proceed directly with the previous"
" section to actually generate the keys with the key attributes you just "
"set."
msgstr "输入``quit``，然后点击回车键退出，或者直接进行上一节，用你刚才设置的钥匙属性实际生成钥匙。"

#: ../pro/openpgp-keygen-on-device.rst.inc:188
msgid ""
"The following table illustrates which algorithm can be used on which "
"device."
msgstr "下表说明了哪种算法可以在哪种设备上使用。"

#: ../pro/openpgp-keygen-on-device.rst.inc:191
msgid "\\"
msgstr "\\"

#: ../pro/openpgp-keygen-on-device.rst.inc:197
msgid "curve25519 (ECC)"
msgstr "curve25519 (ECC)"

#: ../pro/openpgp-keygen-on-device.rst.inc:198
msgid "NIST (ECC)"
msgstr "NIST (ECC)"

#: ../pro/openpgp-keygen-on-device.rst.inc:199
msgid "Brainpool (ECC)"
msgstr "脑库（ECC）"

#: ../pro/openpgp-keygen-on-device.rst.inc:200
msgid "secp256k1"
msgstr "secp256k1"

#: ../pro/openpgp-keygen-on-device.rst.inc:211
msgid ""
"To get a simple file of your public key, you can just use ``gpg2 --armor "
"--export keyID > pubkey.asc``. Use either the fingerprint as “keyID” "
"(look at ``gpg -K`` to get it) or just use your email address as an "
"identifier."
msgstr ""
"要获得你的公钥的简单文件，你可以直接使用``gpg2 --armor --export keyID > pubkey.asc``。使用指纹作为 "
"\"keyID\"（查看``gpg -K``来获得它），或者直接使用你的电子邮件地址作为标识。"

#: ../pro/openpgp-keygen-on-device.rst.inc:213
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via ``gpg2 --import pubkey.asc``"
" and then types ``gpg2 --card-status`` so that the system knows where to "
"look for this key. That’s all."
msgstr ""
"你可以随身携带这个文件，或将其发送给你喜欢的人。这个文件一点也不秘密。如果你想在另一个系统上使用Nitrokey，你首先通过``gpg2 "
"--import pubkey.asc``导入这个公钥，然后输入``gpg2 --card-"
"status``，以便系统知道在哪里寻找这个密钥。这就是全部。"

#: ../pro/openpgp-keygen-on-device.rst.inc:220
msgid ""
"Another possibility is to change the URL setting on your card. Start gpg "
"–card-edit again and first set the URL where the key is situated (e.g. on"
" the keyserver or on your webpage etc.) via the ``url`` command. From now"
" on you can import the key on another system by just using the ``fetch`` "
"command within the ``gpg --card-edit`` environment."
msgstr ""
"另一个可能性是改变你卡上的 URL 设置。再次启动 gpg -card-edit 并首先通过 ``url`` 命令设置钥匙所在的 "
"URL（例如，在钥匙服务器或你的网页上等）。从现在起，你可以通过在``fetch``命令在``gpg --card-edit``环境中导入密钥。"

#: ../pro/openpgp-outlook.rst.inc:2
msgid "OpenPGP Email Encryption with Outlook"
msgstr "使用Outlook的OpenPGP电子邮件加密"

#: ../pro/openpgp-outlook.rst.inc:8
msgid ""
"Unfortunately, there is no solution to use OpenPGP in Outlook for macOS "
"yet."
msgstr "不幸的是，目前还没有在Outlook for macOS中使用OpenPGP的解决方案。"

#: ../pro/openpgp-outlook.rst.inc:14
msgid ""
"If you do not have PGP-Keys on your Nitrokey yet, please look at `this "
"page <openpgp.html>`_ first."
msgstr "如果你的Nitrokey上还没有PGP-Keys，请先看看`这个页面<openpgp.html>`_。"

#: ../pro/openpgp-outlook.rst.inc:16
msgid ""
"You need to have GnuPG installed on your System. The newest GnuPG version"
" for Windows can be found `here <https://www.gpg4win.org>`__. You need to"
" make sure to have “GpgOL” checked during installation process (see "
"below)."
msgstr ""
"你需要在你的系统上安装GnuPG。最新的Windows版GnuPG可以在`这里找到 "
"<https://www.gpg4win.org>`__。你需要确保在安装过程中选中 \"GpgOL\"（见下文）。"

#: ../pro/openpgp-outlook.rst.inc:26
msgid ""
"After installing GPG4Win along with GpgOL, you will see a new icon "
"labeled “Secure” in the composing window. To encrypt and sign a mail you "
"just click on the sign like seen below."
msgstr "在安装了GPG4Win和GpgOL之后，你会在合成窗口中看到一个标有 \"安全 \"的新图标。要对邮件进行加密和签名，你只需点击下面的签名即可。"

#: ../pro/openpgp-outlook.rst.inc:33
msgid ""
"GnuPG will start signing and encrypting the mail as soon as you click on "
"‘send’. You are requested to choose the identity you want to sign with "
"and encrypt for."
msgstr "当你点击 \"发送 \"时，GnuPG将开始对邮件进行签名和加密。你被要求选择你想签名和加密的身份。"

#: ../pro/openpgp-outlook.rst.inc:40
msgid ""
"Furthermore, you are asked for typing in the User PIN of the Nitrokey for"
" signing the mail."
msgstr "此外，还要求你输入Nitrokey的用户密码来签署邮件。"

#: ../pro/openpgp-outlook.rst.inc:47
msgid ""
"You will be asked automatically for your User PIN if you want to read an "
"encrypted mail."
msgstr "如果你想阅读加密的邮件，你会被自动要求提供你的用户密码。"

#: ../pro/openpgp-thunderbird.rst.inc:2
msgid "OpenPGP Email Encryption With Thunderbird"
msgstr "使用雷鸟的OpenPGP电子邮件加密"

#: ../pro/openpgp-thunderbird.rst.inc:7
msgid "Thunderbird 78.3 and newer"
msgstr "雷鸟78.3及以上版本"

#: ../pro/openpgp-thunderbird.rst.inc:9
msgid ""
"At the moment Thunderbird’s 78 support for the OpenPGP emails is not easy"
" to set up. See `Thunderbird’s documentation "
"<https://wiki.mozilla.org/Thunderbird:OpenPGP:Smartcards>`__ for details."
" Here is a `comprehensive German guide "
"<https://decatec.de/it/thunderbird-78-pgp-verschluesselung-mit-dem-"
"nitrokey-storage/>`__."
msgstr ""
"目前，Thunderbird对OpenPGP邮件的78项支持并不容易设置。请参阅`Thunderbird的文档<https://wiki.mozilla.org/Thunderbird:OpenPGP:Smartcards>`__了解详情。这里有一份`全面的德国指南<https://decatec.de/it/thunderbird-78"
"-pgp-verschluesselung-mit-dem-nitrokey-storage/>`__。"

#: ../pro/openpgp-thunderbird.rst.inc:14
msgid ""
"Error message: ``The configured key ID '4BA0183FCBA844A7' cannot be found"
" on your keyring``"
msgstr ""
"错误信息。``The configured key ID '4BA0183FCBA844A7' cannot be found on your "
"keyring``"

#: ../pro/openpgp-thunderbird.rst.inc:16
msgid "Make sure that the public key is imported to the Thunderbird’s manager and"
msgstr "确保公钥被导入到Thunderbird的管理器和"

#: ../pro/openpgp-thunderbird.rst.inc:17
msgid ""
"The key ID does not contain any whitespace, and consists of 16 characters"
" from range 0-9 A-F"
msgstr "密钥ID不包含任何空格，由16个字符组成，范围为0-9 A-F。"

#: ../pro/openpgp-thunderbird.rst.inc:18
msgid "you have GPA or Kleopatra software installed."
msgstr "您已安装GPA或Kleopatra软件。"

#: ../pro/openpgp-thunderbird.rst.inc:20
msgid ""
"Please use Kleopatra or `GPA <openpgp-keygen-gpa.html>`_ software to "
"handle the smart card."
msgstr "请使用Kleopatra或`GPA <openpgp-keygen-gpa.html>`_软件来处理智能卡。"

#: ../pro/openpgp-thunderbird.rst.inc:23
msgid "Thunderbird 77 and older"
msgstr "雷鸟77及以上版本"

#: ../pro/openpgp-thunderbird.rst.inc:28
msgid ""
"Install the device driver as described `here "
"<https://www.nitrokey.com/documentation/installation>`__."
msgstr "按照`的描述安装设备驱动程序 <https://www.nitrokey.com/documentation/installation>`__。"

#: ../pro/openpgp-thunderbird.rst.inc:31
msgid ""
"Install `Thunderbird <https://www.thunderbird.net/en-US/>`__ and the Add-"
"on `Enigmail <https://www.enigmail.net/index.php/en/>`__."
msgstr ""
"安装`Thunderbird <https://www.thunderbird.net/en-US/>`__和插件`Enigmail "
"<https://www.enigmail.net/index.php/en/>`__。"

#: ../pro/openpgp-thunderbird.rst.inc:35
msgid "Changing PINs"
msgstr "更改密码"

#: ../pro/openpgp-thunderbird.rst.inc:37
msgid "There are two PINs for the Nitrokey:"
msgstr "Nitrokey有两个密码。"

#: ../pro/openpgp-thunderbird.rst.inc:39
msgid "The User PIN required for daily work"
msgstr "日常工作所需的用户密码"

#: ../pro/openpgp-thunderbird.rst.inc:41
msgid ""
"The Admin PIN is required to change keys or other settings of the device."
" In addition, the Nitrokey can be unlocked (for example, after 3 times "
"incorrect input of the User PIN) by means of the Admin PIN."
msgstr "在改变钥匙或设备的其他设置时，需要有管理密码。此外，Nitrokey可以通过管理密码来解锁（例如，在错误输入3次用户密码后）。"

#: ../pro/openpgp-thunderbird.rst.inc:45
msgid ""
"After receiving the Nitrokey, you should immediately change the User PIN "
"= “123456” and Admin PIN = “12345678”."
msgstr "收到硝基钥匙后，你应立即更改用户密码=\"123456 \"和管理员密码=\"12345678\"。"

#: ../nitropad/factory-reset-heads2.rst.inc:21
#: ../nitropad/factory-reset.rst.inc:24 ../nitropad/firmware-update.rst.inc:57
#: ../pro/openpgp-thunderbird.rst.inc:49
msgid "Procedure"
msgstr "程序"

#: ../pro/openpgp-thunderbird.rst.inc:51
msgid "Insert the Nitrokey into a USB port on your computer."
msgstr "将Nitrokey插入电脑上的USB接口。"

#: ../pro/openpgp-thunderbird.rst.inc:53
msgid "Start Thunderbird."
msgstr "启动Thunderbird。"

#: ../pro/openpgp-thunderbird.rst.inc:55
msgid ""
"In Thunderbird, select as shown in the following picture. “OpenPGP” → "
"“Manage smart card”"
msgstr "在Thunderbird中，选择如下图所示。\"OpenPGP\" → \"管理智能卡\""

#: ../pro/openpgp-thunderbird.rst.inc:63
msgid "In the “SmartCard Details” window, select “SmartCard → Change PIN”"
msgstr "在 \"智能卡详细信息 \"窗口，选择 \"智能卡→更改密码\""

#: ../pro/openpgp-thunderbird.rst.inc:70
msgid ""
"Select “Change PIN”. This is your User PIN you need for daily work. Enter"
" the current PIN ( “123456” for delivery) and twice your new PIN. For "
"this PIN you can use the characters: a-z A-Z 0-9 / .;;:- !? () [] {}% +. "
"The PIN should be at least 6 characters long. Click “OK”."
msgstr ""
"选择 \"更改密码\"。这是你在日常工作中需要的用户密码。输入当前的PIN码（\"123456 "
"\"用于送货）和两次你的新PIN码。对于这个密码，你可以使用以下字符：a-z A-Z 0-9 / ...；；：- !?() [] {}% "
"+.密码应该至少有6个字符。点击 \"确定\"。"

#: ../pro/openpgp-thunderbird.rst.inc:81
msgid "Repeat the procedure for the Admin PIN. “SmartCard → Change PIN”"
msgstr "重复管理密码的程序。\"智能卡→更改密码\""

#: ../pro/openpgp-thunderbird.rst.inc:88
msgid ""
"Select Change Admin PIN. This is your Admin PIN that you only rarely "
"need. Enter the current PIN ( “12345678” for delivery) and the new PIN "
"twice. For this PIN, you can use the characters: a-z A-Z 0-9 / .;;:- !? "
"() [] {}% +. The PIN should be at least 8 characters long. Click “OK”."
msgstr ""
"选择 "
"\"更改管理员密码\"。这是你的管理密码，你很少需要。输入当前的PIN码（\"12345678\"，用于交付）和新的PIN码两次。对于这个PIN，您可以使用以下字符：a-z"
" A-Z 0-9 / ...；；：- !?() [] {}% +.该PIN码应至少有8个字符。点击 \"确定\"。"

#: ../pro/openpgp-thunderbird.rst.inc:99
msgid ""
"You have now changed the PINs and should continue to generate your "
"personal keys."
msgstr "你现在已经改变了PIN码，应该继续生成你的个人密钥。"

#: ../pro/openpgp-thunderbird.rst.inc:102
msgid "Generation of Keys"
msgstr "钥匙的产生"

#: ../pro/openpgp-thunderbird.rst.inc:104
msgid ""
"To encrypt data and e-mails, a key pair consisting of a public key and a "
"private key, must first be generated. The so-called public key is used to"
" **en**\\ crypt the data or e-mails. You can distribute this to all those"
" with whom you want to communicate securely (for example, publish it "
"publicly on your site). The so-called private key is used to **de**\\ "
"crypt the data or messages. This key should **NEVER** be made known! "
"Usually, you also do not have direct access to it (see below), since this"
" is stored securely on the Nitrokey. Use the Nitrokey to create both keys"
" using the following procedure:"
msgstr "要对数据和电子邮件进行加密，首先必须生成一个由公钥和私钥组成的密钥对。所谓的公钥是用来对数据或电子邮件进行***/加密的。你可以把它分发给所有你想与之进行安全通信的人（例如，在你的网站上公开发布）。所谓的私钥是用来对数据或邮件进行****加密的。这把钥匙应该***永远不被人知道!通常情况下，你也不能直接接触到它（见下文），因为它被安全地储存在Nitrokey上。使用Nitrokey创建这两把钥匙的程序如下。"

#: ../pro/openpgp-thunderbird.rst.inc:107
msgid "Insert the Nitrokey into a USB port on your computer. StartThunderbird"
msgstr "将Nitrokey插入电脑上的USB接口。启动Thunderbird"

#: ../pro/openpgp-thunderbird.rst.inc:110
msgid ""
"In Thunderbird, select as shown in the following picture „OpenPGP“ → "
"„Manage Smart Card“"
msgstr "在Thunderbird中，选择如下图所示的 \"OpenPGP\"→\"管理智能卡\""

#: ../pro/openpgp-thunderbird.rst.inc:113
msgid "In the “SmartCard details” window, select “SmartCard” → “Generate key”"
msgstr "在 \"智能卡详情 \"窗口，选择 \"智能卡\"→\"生成密钥\""

#: ../pro/openpgp-thunderbird.rst.inc:116
msgid ""
"In the following window, select your e-mail address for which you want to"
" generate keys. Verify that the e-mail address specified in “User ID” is "
"correct. You can also specify whether a private key backup copy should be"
" stored on your computer."
msgstr ""
"在下面的窗口中，选择你的电子邮件地址，你想为其生成密钥。确认在 \"用户ID "
"\"中指定的电子邮件地址是正确的。你还可以指定是否要在你的电脑上存储一个私钥备份副本。"

#: ../pro/openpgp-thunderbird.rst.inc:126
msgid ""
"If you do not create a backup copy, you have no chance to get your "
"encrypted data if the Nitrokey is lost or damaged!"
msgstr "如果你不创建一个备份，在Nitrokey丢失或损坏的情况下，你就没有机会得到你的加密数据!"

#: ../pro/openpgp-thunderbird.rst.inc:134
msgid ""
"It is recommended to store this safety device. Select “Save key copy of "
"the key outside the Smard Card”. Then enter your personal password for "
"the backup copy under “Passphrase”. This password should not be less than"
" 8 characters, and should contain both uppercase and lowercase letters "
"and numbers. You can also use a long sentence, but avoid known prose or "
"lyric. Also, no name or known term should be used."
msgstr ""
"建议储存这个安全装置。选择 \"在Smard卡外保存钥匙副本\"。然后在 \"Passphrase "
"\"下输入备份副本的个人密码。这个密码不应少于8个字符，并应包含大写和小写字母和数字。你也可以使用一个长句子，但要避免已知的散文或抒情诗。另外，不应使用姓名或已知术语。"

#: ../pro/openpgp-thunderbird.rst.inc:142
msgid ""
"**Allowed characters**: a-z A-Z 0-9 /.,;:-!?( )%+ (no umlauts ä,ü,ö,Ä,Ü,Ö"
" or ß)"
msgstr "**允许的字符**: a-z A-Z 0-9 /。,;:-!( )%+ (没有 umlauts ä、ü、ö、Ä、Ü、Ö 或 ß)"

#: ../pro/openpgp-thunderbird.rst.inc:144
msgid ""
"**Poor Passwords**: qwerty123, ILoveSusi3, Password, If you can dream it,"
" you can do it."
msgstr "**可怜的密码**: qwerty123, ILoveSusi3, 密码, 如果你能梦想，你就能做到。"

#: ../pro/openpgp-thunderbird.rst.inc:146
#, python-format
msgid ""
"**Strong Passwords**: g(Ak?2Pn7Yn or Ki.stg2bLqzp%d or A dog with greeen "
"Earz and fife legs (spelling errors increase security)"
msgstr ""
"**强大的密码**：g(Ak?2Pn7Yn或Ki.stg2bLqzp%d或A dog with greeen Earz and fife "
"legs（拼写错误增加安全性）。"

#: ../pro/openpgp-thunderbird.rst.inc:148
msgid ""
"You do **not** need this password for daily work. It is only necessary "
"for the restoration of the secret key, e.g. if you have lost the "
"Nitrokey. Therefore, keep the password in a safe place."
msgstr "在日常工作中，你不**需要这个密码。只有在恢复密匙时才需要，例如，如果你丢失了Nitrokey。因此，请将该密码保存在安全的地方。"

#: ../pro/openpgp-thunderbird.rst.inc:150
msgid ""
"You can also specify whether and when the key should be automatically "
"invalid. This means, from this point onwards, no more e-mails can be "
"encrypted with this key and you have to create a new key pair."
msgstr "你还可以指定该密钥是否以及何时自动失效。这意味着，从这时起，就不能再用这个密钥加密电子邮件了，你必须创建一个新的密钥对。"

#: ../pro/openpgp-thunderbird.rst.inc:152
msgid "Finally, click on “Generate key pair”."
msgstr "最后，点击 \"生成密钥对\"。"

#: ../pro/openpgp-thunderbird.rst.inc:159
msgid "You are now asked if the key should be generated. Confirm with “Yes”."
msgstr "现在会问你是否应该生成密钥。确认 \"是\"。"

#: ../pro/openpgp-thunderbird.rst.inc:166
msgid ""
"In order for the program to write your keys to the stick, you must enter "
"the admin PIN and the user PIN (changed above)."
msgstr "为了让程序把你的钥匙写到记忆棒上，你必须输入管理密码和用户密码（上面已经改变）。"

#: ../pro/openpgp-thunderbird.rst.inc:174
msgid ""
"The key generation can take a few minutes. Do not terminate the program "
"prematurely!"
msgstr "钥匙的生成可能需要几分钟的时间。不要过早地终止该程序!"

#: ../pro/openpgp-thunderbird.rst.inc:176
msgid ""
"When the key generation is complete, you receive the following message. A"
" certificate is now created that allows you to invalidate your key in an "
"emergency. This certificate is automatically saved with your private key."
" This should be printed out or backed up on at least one other external "
"medium so that you can revoke the validity of the keys if your keys and "
"backups are lost. Click “Yes”"
msgstr ""
"当密钥生成完成后，你会收到以下信息。现在已经创建了一个证书，允许你在紧急情况下使你的钥匙失效。该证书会自动与你的私钥一起保存。这应该被打印出来或至少备份到另一个外部媒介上，这样，如果你的钥匙和备份丢失，你就可以撤销钥匙的有效性。点击"
" \"是\""

#: ../pro/openpgp-thunderbird.rst.inc:183
msgid ""
"You can now select the directory in which the backup copy is stored. This"
" copy is encrypted with your password entered above. This means that no "
"one can read or use the keys without your password. Do not give your "
"password to anyone. This file with the name of your e-mail address and "
"the suffix “.asc” should be backed up on another medium. After selecting "
"the directory, click “Save”."
msgstr ""
"现在你可以选择存储备份副本的目录。这个副本是用你上面输入的密码加密的。这意味着，没有你的密码，任何人都不能阅读或使用这些钥匙。不要把你的密码给任何人。这个带有你的电子邮件地址名称和后缀\".asc"
" \"的文件应该被备份在另一个介质上。选择目录后，点击 \"保存\"。"

#: ../pro/openpgp-thunderbird.rst.inc:190
msgid "Here you must again specify your user PIN or passphrase. Then click “OK”"
msgstr "在这里你必须再次指定你的用户密码或口令。然后点击 \"确定\""

#: ../pro/openpgp-thunderbird.rst.inc:-1 ../pro/windows/2fa-microsoft.rst:-1
#: ../storage/firmware-update-manually.rst:-1
msgid "img12"
msgstr "img12"

#: ../pro/openpgp-thunderbird.rst.inc:198
msgid ""
"You will now see the message that the certificate was created and saved. "
"Click “OK”"
msgstr "现在你会看到证书已创建并保存的信息。点击 \"确定\""

#: ../pro/openpgp-thunderbird.rst.inc:-1 ../pro/windows/2fa-microsoft.rst:-1
#: ../storage/firmware-update-manually.rst:-1
msgid "img13"
msgstr "img13"

#: ../pro/openpgp-thunderbird.rst.inc:206
msgid ""
"Key generation is now complete. You can now exit the program (File - "
"Close)."
msgstr "钥匙生成现在已经完成。你现在可以退出程序（文件-关闭）。"

#: ../pro/openpgp-thunderbird.rst.inc:-1 ../pro/windows/2fa-microsoft.rst:-1
msgid "img14"
msgstr "img14"

#: ../pro/openpgp-thunderbird.rst.inc:214
msgid ""
"Your Nitrokey is personalized and ready to use. **Have fun with the "
"secure email encryption!**"
msgstr "你的Nitrokey是个性化的，可以随时使用。**在安全的电子邮件加密中享受乐趣！**。"

#: ../nitrokey3/shared/openpgp-uif.rst.inc:2
msgid "OpenPGP Touch Confirmation (UIF)"
msgstr "OpenPGP触摸确认(UIF)"

#: ../nitrokey3/shared/openpgp-uif.rst.inc:6
msgid ""
"The Nitrokey 3 OpenPGP Card functionality supports touch button "
"confirmations (so called User Interaction Flags, UIF) when performing "
"cryptographic key operations. It can be configured separately for each "
"operation (Signature, Decryption and Authentication)."
msgstr ""
"Nitrokey 3 "
"OpenPGP卡的功能在执行加密密钥操作时支持触摸按钮确认（所谓的用户交互标志，UIF）。它可以为每个操作（签名、解密和认证）单独配置。"

#: ../nitrokey3/shared/openpgp-uif.rst.inc:8
msgid "UIF supports 3 modes:"
msgstr "UIF支持3种模式："

#: ../nitrokey3/shared/openpgp-uif.rst.inc:10
msgid ""
"Disabled: The device never prompts for user presence, which is the "
"default behaviour"
msgstr "禁用：设备从不提示用户存在，这是默认行为。"

#: ../nitrokey3/shared/openpgp-uif.rst.inc:11
msgid "Enabled: The device always prompts for user presence"
msgstr "启用：设备总是提示用户存在"

#: ../nitrokey3/shared/openpgp-uif.rst.inc:12
msgid ""
"Permanentaly Enabled: Behaves like Enabled, but can only be reverted to "
"Disabled through a factory-reset"
msgstr "永久启用：行为类似于启用，但只能通过工厂复位恢复为禁用。"

#: ../nitrokey3/shared/openpgp-uif.rst.inc:17
msgid "With GnuPG 2.3 or more recent:"
msgstr "使用GnuPG 2.3或更近的版本："

#: ../nitrokey3/shared/openpgp-uif.rst.inc:27
msgid "Then, set the UIF flag accordingly:"
msgstr "然后，相应地设置UIF标志："

#: ../nitrokey3/shared/openpgp-uif.rst.inc:29
msgid ""
"For signature operation: ``uif 1 on`` or ``uif 1 off`` or with ``uif 1 "
"permanent``."
msgstr "对于签名操作：``uif 1 on``或``uif 1 off``或与``uif 1 permanent``。"

#: ../nitrokey3/shared/openpgp-uif.rst.inc:30
msgid ""
"For decryption operation: ``uif 2 on`` or ``uif 2 off`` or ``uif 2 "
"permanent``."
msgstr "对于解密操作：``uif 2 on`` 或``uif 2 off`` 或``uif 2 permanent``。"

#: ../nitrokey3/shared/openpgp-uif.rst.inc:31
msgid ""
"For authentication operation: ``uif 3 on`` or ``uif 3 off`` or ``uif 3 "
"permanent``."
msgstr "对于认证操作：``uif 3 on`` 或``uif 3 off`` 或``uif 3 permanent``。"

#: ../nitrokey3/shared/reset.rst.inc:6
msgid "Each functionality of the Nitrokey 3 can be reset individually."
msgstr "Nitrokey 3的每个功能都可以单独重置。"

#: ../nitrokey3/shared/reset.rst.inc:11
msgid ""
"The Factory Reset operation deletes all (and generates new) secret FIDO2 "
"keys stored in the Nitrokey:"
msgstr "出厂重置操作会删除所有（并生成新的）存储在Nitrokey中的FIDO2密匙："

#: ../nitrokey3/shared/reset.rst.inc:13
msgid ""
"nitropy tool: ``nitropy fido2 reset`` (execution requires Administrator "
"rights)"
msgstr "nitropy工具：``nitropy fido2 reset`` (执行需要管理员权限)"

#: ../nitrokey3/shared/reset.rst.inc:19
msgid ""
"Static passwords and One-Time Passwords (OTP) can be reset with ``nitropy"
" nk3 secrets reset``."
msgstr "静态密码和一次性密码（OTP）可以通过``nitropy nk3 secrets reset``来重置。"

#: ../nitrokey3/shared/reset.rst.inc:22
msgid "OpenPGP"
msgstr "开放PGP"

#: ../nitrokey3/shared/reset.rst.inc:24
msgid ""
"The OpenPGP Card can be reset with GnuPG: ``gpg --card-edit``, then "
"``admin`` and ``factory-reset``."
msgstr "可以用GnuPG重置OpenPGP卡：``gpg --card-edit``，然后是``admin``和``factory-reset``。"

#: ../nitrokey3/shared/reset.rst.inc:27
msgid "PIV Smartcard"
msgstr "PIV 智能卡"

#: ../nitrokey3/shared/reset.rst.inc:29
msgid "The PIV smartcard can be reset using the following command:"
msgstr "可以使用以下命令重置 PIV 智能卡："

#: ../nitrokey3/shared/set-pins.rst.inc:4
msgid "Set PINs"
msgstr "设置密码"

#: ../nitrokey3/shared/set-pins.rst.inc:6
msgid "The Nitrokey 3 has distinct PINs for each feature."
msgstr "Nitrokey 3的每项功能都有不同的密码。"

#: ../nitrokey3/shared/set-pins.rst.inc:9
msgid "Password and OTP secrets"
msgstr "密码和OTP的秘密"

#: ../nitrokey3/shared/set-pins.rst.inc:10
msgid "OpenPGP Card (User PIN, Admin PIN, and optional Reset Code)"
msgstr "OpenPGP卡（用户PIN、管理员PIN和可选的重置码）。"

#: ../nitrokey3/shared/set-pins.rst.inc:4
#: ../nitrokey3/shared/set-pins.rst.inc:11
msgid "PIV"
msgstr "PIV"

#: ../nitrokey3/shared/set-pins.rst.inc:6
msgid ""
"The PIN for FIDO2 can be set with `Nitropy "
"<../../software/nitropy/index.html>`__, operating system native apps, or "
"a webbrowser such as Chrom(e|ium)."
msgstr "FIDO2的PIN码可以通过`Nitropy<../../software/nitropy/index.html>`__、操作系统原生应用或Chrom(e|ium)等网络浏览器来设置。"

#: ../nitrokey3/shared/set-pins.rst.inc:4
msgid "Setting PIN with Nitropy"
msgstr "用Nitropy设置密码"

#: ../nitrokey3/shared/set-pins.rst.inc:6
msgid ""
"The PIN for FIDO2 can be set with the `Nitropy "
"<../../software/nitropy/index.html>`__ utility."
msgstr "FIDO2的PIN码可以用`Nitropy<../../software/nitropy/index.html>`__工具设置。"

#: ../nitrokey3/shared/set-pins.rst.inc:8
#: ../nitrokey3/shared/set-pins.rst.inc:22
#: ../nitrokey3/shared/set-pins.rst.inc:24
#: ../nitrokey3/shared/set-pins.rst.inc:39
#: ../nitrokey3/shared/set-pins.rst.inc:44
#: ../nitrokey3/shared/set-pins.rst.inc:71
#: ../nitrokey3/windows/piv/access_control.rst:39
#: ../nitrokey3/windows/piv/access_control.rst:57
msgid "Connect the Nitrokey 3 with your computer."
msgstr "将Nitrokey 3与你的电脑相连。"

#: ../nitrokey3/shared/set-pins.rst.inc:9
msgid ""
"On the terminal enter ``nitropy fido2 set-pin`` and follow the "
"instructions. If the PIN has been already set before the above command "
"must be changed to ``nitropy fido2 change-pin``."
msgstr ""
"在终端上输入``nitropy fido2 set-pin``并按照指示操作。如果之前已经设置了PIN码，那么上述命令必须改为``nitropy "
"fido2 change-pin``。"

#: ../nitrokey3/shared/set-pins.rst.inc:4
msgid "Setting PIN with the Chrom(e|ium) webbrowser"
msgstr "用Chrom(e|ium)网络浏览器设置PIN码"

#: ../nitrokey3/shared/set-pins.rst.inc:6
msgid "# Chrome(e|ium) - Linux, Mac OS, and Windows"
msgstr "# Chrome(e|ium) - Linux, Mac OS, 和 Windows"

#: ../nitrokey3/shared/set-pins.rst.inc:8
msgid "Open Chrome(e|ium)."
msgstr "打开Chrome(e|ium)。"

#: ../nitrokey3/shared/set-pins.rst.inc:9
msgid "Open the menu with the three dots in the top right of the menubar."
msgstr "打开菜单，在菜单栏的右上方有三个点。"

#: ../nitrokey3/shared/set-pins.rst.inc:10
msgid "Click on \"Settings\"."
msgstr "点击 \"设置\"。"

#: ../nitrokey3/shared/set-pins.rst.inc:11
msgid "In the menubar on the left click on \"Privacy and security\"."
msgstr "在左侧的菜单栏中点击 \"隐私和安全\"。"

#: ../nitrokey3/shared/set-pins.rst.inc:12
msgid "In the menu in the middle click on \"Security\"."
msgstr "在中间的菜单上点击 \"安全\"。"

#: ../nitrokey3/shared/set-pins.rst.inc:13
msgid "In the menu in the middle click on \"Manage security keys\"."
msgstr "在中间的菜单上点击 \"管理安全密钥\"。"

#: ../nitrokey3/shared/set-pins.rst.inc:14
msgid "In the menu in the middle click on \"Create a PIN\"."
msgstr "在中间的菜单上点击 \"创建一个PIN\"。"

#: ../nitrokey3/shared/set-pins.rst.inc:11
#: ../nitrokey3/shared/set-pins.rst.inc:15
msgid "Follow the instructions on the screen to set the PIN."
msgstr "按照屏幕上的指示来设置密码。"

#: ../nitrokey3/shared/set-pins.rst.inc:4
msgid "Passwords and OTP secrets"
msgstr "密码和OTP的秘密"

#: ../nitrokey3/shared/set-pins.rst.inc:6
msgid ""
"The PIN for passwords and OTP secrets can be set with the `Nitropy "
"<../../software/nitropy/index.html>`__ utility."
msgstr "密码和OTP机密的PIN可以通过`Nitropy<../../software/nitropy/index.html>`__工具来设置。"

#: ../nitrokey3/shared/set-pins.rst.inc:9
msgid ""
"On the terminal enter ``nitropy nk3 secrets set-pin`` and follow the "
"instructions."
msgstr "在终端上输入``nitropy nk3 secrets set-pin``，并按照指示操作。"

#: ../nitrokey3/shared/set-pins.rst.inc:4
msgid "OpenPGP Card"
msgstr "开放PGP卡"

#: ../nitrokey3/shared/set-pins.rst.inc:6
msgid ""
"The PINs on the OpenPGP Card can be set with GnuPG. The OpenPGP Card has "
"the *User PIN*, *Admin PIN*, and an optional *Reset Code*."
msgstr "OpenPGP卡上的PIN码可以用GnuPG设置。OpenPGP卡有*用户PIN码* ，*管理PIN码* ，以及一个可选的*重置码* 。"

#: ../nitrokey3/shared/set-pins.rst.inc:10 ../pro/change-pins.rst.inc:7
msgid "User PIN"
msgstr "用户密码"

#: ../nitrokey3/shared/set-pins.rst.inc:12
msgid ""
"The *User PIN* is used for key operations, such as signing, encrypting, "
"and authentication. The factory default for the *User PIN* is ``123456``."
msgstr "*用户密码* 用于密钥操作，如签名、加密和认证。*用户密码* 的出厂默认值是``123456``。"

#: ../nitrokey3/shared/set-pins.rst.inc:16
msgid ""
"The *User PIN* must have a minimal length of 6 characters and maximal "
"length of 127 characters. It can contain alphanumeric characters, "
"including special characters such as punctations."
msgstr "*用户密码* ，最小长度为6个字符，最大长度为127个字符。它可以包含字母数字字符，包括特殊字符，如标点符号。"

#: ../nitrokey3/shared/set-pins.rst.inc:20
msgid ""
"The *User PIN* has a PIN retry counter of 3 attempts. If this attempts "
"are used up, the *User PIN* must be unlocked with the *Admin PIN*. "
"Alternatively the optional *Reset Code* can be used for unlocking."
msgstr ""
"*用户PIN码* 有一个3次尝试的PIN码重试计数器。如果这个尝试次数用完了，*用户密码* ，必须用*管理密码* "
"来解锁。另外，也可以使用可选的*重置代码* 来解锁。"

#: ../nitrokey3/shared/set-pins.rst.inc:25
#: ../nitrokey3/shared/set-pins.rst.inc:45
#: ../nitrokey3/shared/set-pins.rst.inc:72
msgid "On the terminal enter ``gpg --card-edit``."
msgstr "在终端输入``gpg --card-edit``。"

#: ../nitrokey3/shared/set-pins.rst.inc:26
msgid "In the promt enter ``passwd``."
msgstr "在 promt 中输入``passwd``。"

#: ../nitrokey3/shared/set-pins.rst.inc:27
msgid ""
"GnuPG will now ask for the current *User PIN*, and the new *User PIN*. "
"Please note that if you provision a new Nitrokey the factory default PIN "
"from above must be entered as the current *User PIN*."
msgstr ""
"GnuPG现在会要求输入当前的*用户密码* ，以及新的*用户密码* "
"。请注意，如果你提供一个新的Nitrokey，必须输入上面的出厂默认PIN作为当前*用户PIN* 。"

#: ../nitrokey3/shared/set-pins.rst.inc:31 ../pro/change-pins.rst.inc:29
msgid "Admin PIN"
msgstr "管理密码"

#: ../nitrokey3/shared/set-pins.rst.inc:33
msgid ""
"The Admin PIN is used for management operations, such as copying and "
"generating keys, unblocking the PIN, and setting the *Admin PIN* and "
"Reset Code. The factory default for the *Admin PIN* is ``12345678``."
msgstr ""
"管理员PIN码用于管理操作，如复制和生成钥匙，解除PIN码的封锁，以及设置*管理员PIN码* 和复位码。*Admin PIN* "
"的出厂默认值是``12345678``。"

#: ../nitrokey3/shared/set-pins.rst.inc:37
msgid ""
"The *Admin PIN* must have a minimal length of 8 characters and maximal "
"length of 127 characters. It can contain alphanumeric characters, "
"including special characters such as punctations."
msgstr "*Admin PIN* ，其最小长度为8个字符，最大长度为127个字符。它可以包含字母数字字符，包括特殊字符，如标点符号。"

#: ../nitrokey3/shared/set-pins.rst.inc:41
msgid ""
"The *Admin PIN* has a PIN retry counter of 3 attempts. If this attempts "
"are used up, the OpenPGP Card can not be used anymore and must be reset "
"to factory defaults."
msgstr "*Admin PIN* 有一个3次尝试的PIN重试计数器。如果这个尝试次数用完了，OpenPGP卡就不能再使用，必须重置为出厂默认值。"

#: ../nitrokey3/shared/set-pins.rst.inc:46
#: ../nitrokey3/shared/set-pins.rst.inc:73
msgid "In the prompt enter ``admin``, followed by ``passwd``."
msgstr "在提示中输入``admin``，接着输入``passwd``。"

#: ../nitrokey3/shared/set-pins.rst.inc:47
msgid "In the prompt enter ``3``, to set the *Admin PIN*."
msgstr "在提示中输入``3``，以设置*管理密码* 。"

#: ../nitrokey3/shared/set-pins.rst.inc:48
msgid ""
"GnuPG will now ask for the current *Admin PIN*, and the new *Admin PIN*. "
"Please note that if you provision a new Nitrokey the factory default PIN "
"from above must be entered as the current *Admin PIN*."
msgstr ""
"GnuPG现在会要求输入当前的*管理密码* ，以及新的*管理密码* "
"。请注意，如果你提供一个新的硝基钥匙，必须将上面的出厂默认密码作为当前的*管理密码* 。"

#: ../nitrokey3/shared/set-pins.rst.inc:52
msgid "Reset Code"
msgstr "重置代码"

#: ../nitrokey3/shared/set-pins.rst.inc:54
msgid ""
"The *Reset Code* is used to unblock the *User PIN*. It is useful in "
"situations when the user of the Nitrokey should be able to unblock the "
"*User PIN*, but not be able to manage it with the *Admin PIN*."
msgstr "*重置代码* ，用于解除对*用户密码* 。当硝基钥匙的使用者能够解除对*用户密码* ，但不能用*管理密码* 进行管理时，它就很有用。"

#: ../nitrokey3/shared/set-pins.rst.inc:58
msgid ""
"The Reset Code has no factory default. It must be explicitly set using "
"the Admin PIN."
msgstr "重置代码没有出厂默认值。它必须使用管理密码明确设置。"

#: ../nitrokey3/shared/set-pins.rst.inc:61
msgid ""
"The *Reset Code* must have a minimal length of 8 characters and maximal "
"length of 127 characters. It can contain alphanumeric characters, "
"including special characters such as punctations."
msgstr "*重置密码* 最小长度必须为 8 个字符，最大长度必须为 127 个字符。它可以包含字母数字字符，包括标点符号等特殊字符。"

#: ../nitrokey3/shared/set-pins.rst.inc:65
msgid ""
"Once the *Reset Code* is set it can not be disabled anymore. Disabling "
"would require a reset of the OpenPGP Card application."
msgstr "一旦*Reset Code* ，它就不能再被禁用。禁用将需要重置OpenPGP卡应用程序。"

#: ../nitrokey3/shared/set-pins.rst.inc:68
msgid ""
"The *Reset Code* has a PIN retry counter of 3 attempts. If this attempts "
"are used up, the *Reset Code* must be unlocked with the *Admin PIN*."
msgstr "*重置密码* 有一个3次尝试的密码重试计数器。如果这个尝试次数用完了，*重置密码* ，必须用*管理密码* 来解锁。"

#: ../nitrokey3/shared/set-pins.rst.inc:74
msgid "In the prompt enter ``4``, to set the *Reset Code*."
msgstr "在提示中输入``4``，以设置*重置代码* 。"

#: ../nitrokey3/shared/set-pins.rst.inc:75
msgid "GnuPG will now ask for the *Admin PIN*, and the *Reset Code*."
msgstr "GnuPG现在会要求输入*管理密码* ，以及*重置代码* 。"

#: ../nitrokey3/shared/set-pins.rst.inc:6
msgid ""
"The *PIN* and *PUK* for PIV (Personal Identity Verification) Card can be "
"set with `pivy-tool <https://github.com/arekinath/pivy>`__."
msgstr ""
"*PIN* 和*PUK* 用于 PIV（个人身份验证）卡，可使用`pivy-"
"tool<https://github.com/arekinath/pivy>`___进行设置。"

#: ../nitrokey3/shared/set-pins.rst.inc:9
#: ../nitrokey3/windows/piv/access_control.rst:7
msgid "PIN"
msgstr "密码"

#: ../nitrokey3/shared/set-pins.rst.inc:11
#: ../nitrokey3/windows/piv/access_control.rst:28
msgid ""
"The *PIN* is used for key operations, such as signing and authentication."
" The factory default for the *PIN* is ``123456``."
msgstr "*PIN* 用于密钥操作，如签名和身份验证。*PIN* 的出厂默认值为``123456``。"

#: ../nitrokey3/shared/set-pins.rst.inc:15
#: ../nitrokey3/windows/piv/access_control.rst:32
msgid ""
"The *PIN* must have maximal length of 8 characters. It can contain "
"alphanumeric characters, including special characters such as "
"punctations."
msgstr "*PIN* ，最大长度必须为8个字符。它可以包含字母数字字符，包括特殊字符，如标点符号。"

#: ../nitrokey3/shared/set-pins.rst.inc:19
msgid ""
"The *PIN* has a PIN retry counter of 3 attempts. If this attempts are "
"used up, the *PIN* must be unlocked with the *PUK*."
msgstr "*PIN* 有一个3次尝试的PIN重试计数器。如果这个尝试次数用完了，*PIN* 必须用*PUK* 来解锁。"

#: ../nitrokey3/shared/set-pins.rst.inc:23
msgid "On the terminal enter ``pivy-tool change-pin``."
msgstr "在终端输入``pivy-tool change-pin``。"

#: ../nitrokey3/shared/set-pins.rst.inc:26
#: ../nitrokey3/windows/piv/access_control.rst:7
msgid "PUK"
msgstr "PUK"

#: ../nitrokey3/shared/set-pins.rst.inc:28
#: ../nitrokey3/windows/piv/access_control.rst:46
msgid ""
"The *PUK* is used for management operations, such as unblocking the PIN. "
"The factory default for the *PUK* is ``123456``."
msgstr "*PUK* 用于管理操作，如解除 PIN。*PUK* 的出厂默认值为``123456``。"

#: ../nitrokey3/shared/set-pins.rst.inc:32
#: ../nitrokey3/windows/piv/access_control.rst:50
msgid ""
"The *PUK* must have a maximal length of 8 characters. It can contain "
"alphanumeric characters, including special characters such as "
"punctations."
msgstr "*PUK* ，最大长度必须为8个字符。它可以包含字母数字字符，包括特殊字符，如标点符号。"

#: ../nitrokey3/shared/set-pins.rst.inc:36
msgid ""
"The *PUK* has a retry counter of 3 attempts. If this attempts are used "
"up, the PIV Card can not be used anymore and must be reset to factory "
"defaults."
msgstr "*PUK* 有一个3次尝试的重试计数器。如果这个尝试次数用完了，PIV卡就不能再使用，必须重置为出厂默认值。"

#: ../nitrokey3/shared/set-pins.rst.inc:40
msgid "On the terminal enter ``pivy-tool change-puk``."
msgstr "在终端输入``pivy-tool change-pin``。"

#: ../pro/smime.rst.inc:15
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP, see "
"`here <openpgp.html>`_. This page describes the usage of S/MIME email "
"encryption."
msgstr "如果你对选择哪一种有疑问，你应该使用OpenPGP，见`这里<openpgp.html>`_。本页介绍了S/MIME电子邮件加密的用法。"

#: ../nitrokey3/troubleshooting.rst.inc:4
#: ../nitropad/troubleshooting.rst.inc:11
msgid "Here you will find a collection of common issues."
msgstr "在这里，你会发现一个常见的问题集合。"

#: ../nitrokey3/troubleshooting.rst.inc:8
msgid "Nitrokey is Not Detected on Linux"
msgstr "Nitrokey在Linux上未被检测到"

#: ../nitrokey3/troubleshooting.rst.inc:10
msgid "If the Nitrokey is not detected, proceed as follows:"
msgstr "如果没有检测到硝基钥匙，请按以下步骤操作。"

#: ../nitrokey3/troubleshooting.rst.inc:12
msgid ""
"Copy this file `41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__ to "
"``/etc/udev/rules.d/``."
msgstr ""
"把这个文件`41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__复制到``/etc/udev/rules.d/``。"

#: ../nitrokey3/troubleshooting.rst.inc:20
msgid "Google and Microsoft Services"
msgstr "谷歌和微软服务"

#: ../nitrokey3/troubleshooting.rst.inc:22
msgid ""
"Currently there seems to be a bug we hope to fix soon which affects the "
"Nitrokey 3 working with some Google and Microsoft Services per FIDO2."
msgstr "目前，似乎有一个错误，我们希望能尽快修复，它影响了Nitrokey 3与一些谷歌和微软服务的FIDO2的工作。"

#: ../nitrokey3/troubleshooting.rst.inc:25
msgid "Timeout Bug"
msgstr "超时错误"

#: ../nitrokey3/troubleshooting.rst.inc:27
msgid ""
"There is a bug with the Nitrokey being recognized by the system, where a "
"timeout occurs before the connection succeeds."
msgstr "系统在识别Nitrokey时有一个错误，在连接成功之前会出现超时。"

#: ../nitrokey3/troubleshooting.rst.inc:30
msgid "NFC is Not Working"
msgstr "NFC不工作"

#: ../nitrokey3/troubleshooting.rst.inc:31
msgid ""
"Please make sure FIDO2 is working correctly. Otherwise NFC won't work "
"either."
msgstr "请确保FIDO2工作正常。否则NFC也不会工作。"

#: ../nitrokey3/troubleshooting.rst.inc:33
msgid ""
"Also check if you are using the right spot on your smartphone. Find the "
"right spot using: `nfc.fail`_."
msgstr "还要检查你是否在你的智能手机上使用正确的位置。找到正确的位置，使用。`nfc.fail`_."

#: ../nitrokey3/troubleshooting.rst.inc:36
msgid ""
"The backside of the Nitrokey has to be held against the smartphone. For "
"the USB-A version it might be helpful to lift the side with the USB "
"connector slightly to reduce the distance to the end part of the stick."
msgstr "Nitrokey的背面必须靠着智能手机。对于USB-A版本，稍微抬起带有USB接口的一侧，以减少与棒子末端的距离，可能会有帮助。"

#: ../nitrokey3/troubleshooting.rst.inc:38
msgid ""
"If you have a phone cover, try to find the right spot first without it. "
"Retry afterwards with the cover."
msgstr "如果你有手机套，先试着在没有手机套的情况下找到正确的位置。之后再带着盖子重试。"

#: ../nitrokey3/troubleshooting.rst.inc:40
msgid ""
"The search of the optimal spot sometimes took up to 20-30 sec. In our "
"experience holding the Nitrokey in an horizontal orientation yields "
"better results.If you still encounter issues please write a mail to our "
"support. For optimal help please include the shipping/order number and "
"your smartphone model."
msgstr "寻找最佳位置有时需要20-30秒。根据我们的经验，将Nitrokey水平放置会产生更好的效果。如果你仍然遇到问题，请写信给我们的支持。如果您仍然遇到问题，请给我们的支持部门写信，为了获得最佳帮助，请注明发货/订单号和您的智能手机型号。"

#: ../nitrokey3/troubleshooting.rst.inc:43
msgid "OpenPGP Troubleshooting"
msgstr "OpenPGP的故障排除"

#: ../nitrokey3/troubleshooting.rst.inc:46
msgid "GnuPG: OpenPGP Card Not Available"
msgstr "GnuPG：OpenPGP卡不可用"

#: ../nitrokey3/troubleshooting.rst.inc:48
msgid ""
"**Problem:** GnuPG cannot access the Nitrokey 3 and shows an error "
"message like this::"
msgstr "**问题：** GnuPG无法访问Nitrokey 3，并显示这样的错误信息：："

#: ../nitrokey3/troubleshooting.rst.inc:55
msgid ""
"**Solution:** There are two common smartcard services on Linux systems: "
"``scdaemon``, GnuPG’s smartcard daemon, and ``pcscd``, a generic "
"smartcard daemon. ``scdaemon`` has two drivers for accessing smartcards: "
"Its integrated ``ccid`` driver tries to directly access the smartcard. "
"The ``pcsc`` drivers uses the ``pcscd`` daemon instead."
msgstr ""
"**解决方案：** "
"在Linux系统上有两种常见的智能卡服务：``scdaemon``，GnuPG的智能卡守护程序，以及``pcscd``，一个通用的智能卡守护程序。``scdaemon``有两个驱动用于访问智能卡：其集成的``ccid``驱动程序试图直接访问智能卡。``pcsc``"
" 驱动程序使用``pcscd`` 守护程序代替。"

#: ../nitrokey3/troubleshooting.rst.inc:61
msgid ""
"A smartcard can only be accessed directly by one daemon. This means that "
"depending on the startup order, ``pcscd`` might lock the card before "
"``scdaemon`` tries to access it using the internal ``ccid`` driver. "
"Therefore we recommend to use the ``pcscd`` driver for ``scdaemon``. You "
"can activate it by adding ``disable-ccid`` to the "
"``~/.gnupg/scdaemon.conf`` config file and restarting ``scdaemon``, for "
"example with ``gpg-connect-agent \"SCD KILLSCD\" /bye``. If this does not"
" fix the problem, see the next section for more information."
msgstr ""
"一个智能卡只能由一个守护进程直接访问。这意味着，根据启动顺序，``pcscd`` 可能会在``scdaemon`` 试图使用内部``ccid`` "
"驱动程序访问该卡之前锁定该卡。因此，我们建议使用``pcscd`` 驱动程序，用于``scdaemon``。你可以通过将``disable-"
"ccid``添加到``~/.gnupg/scdaemon.conf``配置文件中，并重新启动``scdaemon``，例如用``gpg-"
"connect-agent \"SCD KILLSCD\" /bye``来激活它。如果这样还不能解决问题，请看下一节，了解更多信息。"

#: ../nitrokey3/troubleshooting.rst.inc:67
msgid ""
"Alternatively, you can deactivate or uninstall ``pcscd`` to avoid this "
"conflict."
msgstr "另外，你可以停用或卸载``pcscd``以避免这种冲突。"

#: ../nitrokey3/troubleshooting.rst.inc:70
msgid "pcscd: Card Not Found"
msgstr "pcscd：未找到卡片"

#: ../nitrokey3/troubleshooting.rst.inc:72
msgid "**Problem:** An application using ``pcscd`` does not show the Nitrokey 3."
msgstr "**问题：** 一个使用``pcscd``的应用程序不显示Nitrokey 3。"

#: ../nitrokey3/troubleshooting.rst.inc:75
msgid ""
"**Solution:** First, make sure that ``scdaemon`` is not running (see the "
"previous section)::"
msgstr "**解决方案：** 首先，确保``scdaemon``没有运行（见上一节）：："

#: ../nitrokey3/troubleshooting.rst.inc:80
msgid ""
"Now list the smartcards recognized by ``pcscd`` with ``pcsc_scan -r``. "
"You should see an entry like this one::"
msgstr "现在列出由``pcscd``与``pcsc_scan -r``识别的智能卡。你应该看到一个像这样的条目：："

#: ../nitrokey3/troubleshooting.rst.inc:88
msgid ""
"If the Nitrokey 3 shows up, it is recognized correctly by ``pcscd`` and "
"there might be an issue with the application that tries to access it. If "
"it does not show up, make sure that your ``libccid`` version is up to "
"date. Support for the Nitrokey 3 was added in ``libccid`` 1.5.0."
msgstr ""
"如果Nitrokey "
"3显示出来，说明它被``pcscd``正确识别，试图访问它的应用程序可能有问题。如果它没有出现，请确保你的``libccid``版本是最新的。对Nitrokey"
" 3的支持在``libccid`` 1.5.0中添加。"

#: ../nitrokey3/troubleshooting.rst.inc:93
msgid "Updating The Device Database"
msgstr "更新设备数据库"

#: ../nitrokey3/troubleshooting.rst.inc:95
msgid ""
"If you cannot update ``libccid`` to a supported version, you have to "
"manually update the device database. The path of the database depends on "
"your distribution:"
msgstr "如果你不能将``libccid``更新到一个支持的版本，你必须手动更新设备数据库。数据库的路径取决于你的发行版："

#: ../nitrokey3/troubleshooting.rst.inc:98
msgid "Arch, Debian, Ubuntu: ``/etc/libccid_Info.plist``"
msgstr "Arch, Debian, Ubuntu：``/etc/libccid_Info.plist``"

#: ../nitrokey3/troubleshooting.rst.inc:100
msgid ""
"Make sure to backup the file before overwriting it. You can download an "
"`updated device database file "
"<https://github.com/Nitrokey/nitrokey-3-firmware/blob/main/Info.plist>`__"
" from the ``nitrokey-3-firmware`` repository. After updating the file, "
"restart ``pcscd`` and run ``pcsc_scan -r`` again. The Nitrokey 3 should "
"now show up."
msgstr ""
"在覆盖文件之前，请确保备份该文件。你可以从``nitrokey-3-firmware`` "
"资源库下载一个`更新的设备数据库文件<https://github.com/Nitrokey/nitrokey-3-firmware/blob/main/Info.plist>`__。更新文件后，重新启动``pcscd``并再次运行``pcsc_scan"
" -r``。Nitrokey 3现在应该出现了。"

#: ../nitrokey3/troubleshooting.rst.inc:106
msgid "Update Via update.nitrokey.com Does Not Work"
msgstr "通过update.nitrokey.com进行的更新不起作用"

#: ../nitrokey3/troubleshooting.rst.inc:108
msgid ""
"Currently the web updater doesn't support the Nitrokey 3. However you can"
" get the latest firmware using these `instructions <firmware-"
"update.html>`_."
msgstr "目前网络更新程序不支持Nitrokey 3。然而，你可以使用这些`说明获得最新的固件<firmware-update.html>`_ 。"

#: ../nitrokey3/mac/index.rst:2
msgid "Nitrokey 3 With macOS"
msgstr "硝基钥匙3与MacOS"

#: ../nitrokey3/windows/index.rst:2
msgid "Nitrokey 3 With Windows"
msgstr "Nitrokey 3与Windows"

#: ../pro/windows/openpgp-csp.rst:2
msgid "Windows Login and S/MIME Email Encryption with Active Directory"
msgstr "使用活动目录的Windows登录和S/MIME电子邮件加密"

#: ../pro/windows/openpgp-csp.rst:6
msgid ""
"Please note that this driver is still in development/testing. Please tell"
" us your experiences! See our `contact page "
"<https://www.nitrokey.com/contact>`__."
msgstr ""
"请注意，这个驱动程序仍在开发/测试中。请告诉我们你的经验!请参阅我们的`联系页面 "
"<https://www.nitrokey.com/contact>`__。"

#: ../pro/windows/openpgp-csp.rst:11
msgid ""
"This guide assumes that an Active Directory server with role ‘Active "
"Directory Certificate Services’ is installed and running on a server. "
"These instructions are based on Nitrokey Storage 2 and Nitrokey Pro 2 "
"only."
msgstr ""
"本指南假定在一台服务器上安装并运行了具有 \"活动目录证书服务 \"角色的活动目录服务器。这些说明仅基于Nitrokey Storage "
"2和Nitrokey Pro 2。"

#: ../pro/windows/openpgp-csp.rst:14
msgid "Installing OpenPGP-CSP"
msgstr "安装OpenPGP-CSP"

#: ../pro/windows/openpgp-csp.rst:16
msgid ""
"This step is needed for clients to use the OpenPGP-CSP driver. Download "
"and install the `latest version <https://github.com/vletoux/OpenPGP-"
"CSP/releases/tag/1.3>`__ of the installer file ‘SetupOpenPGPCsp’ for your"
" system architecture, for ‘SetupOpenPGPCsp_x64.msi’ for 64-bit systems."
msgstr ""
"客户端使用OpenPGP-CSP驱动时需要这个步骤。下载并安装`最新版本<https://github.com/vletoux/OpenPGP-"
"CSP/releases/tag/1.3>`__的安装文件'SetupOpenPGPCsp'，适用于您的系统架构，对于64位系统的'SetupOpenPGPCsp_x64.msi'。"

#: ../pro/windows/openpgp-csp.rst:18
msgid ""
"You may want to install the driver on the server as well for being able "
"to enforce the use of this driver in the template (see below)."
msgstr "你可能想在服务器上也安装该驱动，以便能够在模板中强制使用该驱动（见下文）。"

#: ../pro/windows/openpgp-csp.rst:21
msgid "Creating Certificate Template on Server Side"
msgstr "在服务器端创建证书模板"

#: ../pro/windows/openpgp-csp.rst:23
msgid ""
"On Active Directory Server open certsrv.msc to manage your certificate "
"templates. Right click on ‘Certificate Templates’ and choose ‘Manage’"
msgstr "在活动目录服务器上打开certsrv.msc来管理你的证书模板。在 \"证书模板 \"上点击右键，选择 \"管理\"。"

#: ../pro/windows/openpgp-csp.rst:30
msgid ""
"Now right click on ‘Smartcard Logon’ template and click ‘Duplicate’, to "
"create a new template on basis of this standard template. Rename template"
" to ‘OpenPGP Card Logon and Email’ or alike."
msgstr ""
"现在，右击 \"智能卡登录 \"模板，点击 \"复制\"，在这个标准模板的基础上创建一个新模板。将模板重命名为 \"OpenPGP卡登录和电子邮件"
" \"或类似的内容。"

#: ../pro/windows/openpgp-csp.rst:37
msgid ""
"Under ‘Request Handling’, you can choose the OpenPGP-CSP as the one and "
"only Cryptography Service Provider (click the Button labeled ‘CSPs…’). "
"For this to work, you need to install the driver on the server as well "
"and you have to insert a Nitrokey beforehand. This is optional. You can "
"let the user choose, which CSP to use."
msgstr ""
"在 \"请求处理 \"下，你可以选择OpenPGP-CSP作为唯一的加密服务提供商（点击标有 \"CSPs... "
"\"的按钮）。要做到这一点，你需要在服务器上安装驱动程序，而且你必须事先插入一个Nitrokey。这是可选的。你可以让用户选择使用哪个CSP。"

#: ../pro/windows/openpgp-csp.rst:49
msgid ""
"For enabling S/MIME email encryption go to ‘Subject name’. Tick the "
"checkbox ‘E-Mail name’ (note: You must save the mail addresses of your "
"users in the corresponding Active Directory field!)."
msgstr "对于启用S/MIME电子邮件加密，请进入'主题名称'。勾选'E-Mail name'（注意：你必须在相应的活动目录字段中保存用户的邮件地址！）。"

#: ../pro/windows/openpgp-csp.rst:56
msgid ""
"Then go to ‘Extensions’, there you edit the applications guideline and "
"add ‘Secure Email’."
msgstr "然后进入 \"扩展\"，在那里编辑应用指南并添加 \"安全电子邮件\"。"

#: ../pro/windows/openpgp-csp.rst:69
msgid "Request Certificate on Client (Domain Member)"
msgstr "在客户（域成员）上申请证书"

#: ../pro/windows/openpgp-csp.rst:71
msgid ""
"To request a certificate for a domain member, you have to open "
"certmgr.msc. Right click on folder ‘Personal->Certificates’ and click "
"’All Tasks->Request New Certificate and choose the template you created "
"on the AD."
msgstr ""
"要为一个域成员申请证书，你必须打开certmgr.msc。在 \"个人->证书 \"文件夹上点击右键，并点击 "
"\"所有任务->请求新证书\"，选择你在AD上创建的模板。"

#: ../pro/windows/openpgp-csp.rst:79
msgid ""
"If you did not enforce the usage of OpenPGP-CSP you have to choose it "
"here now."
msgstr "如果你没有强制使用OpenPGP-CSP，你现在必须在这里选择它。"

#: ../pro/windows/openpgp-csp.rst:91
msgid "Next you choose the Authentication slot for the certificate."
msgstr "接下来你选择证书的认证槽。"

#: ../pro/windows/openpgp-csp.rst:93
msgid ""
"You are now ready to logon on the computer with the Nitrokey instead of "
"your password and you can use `S/MIME email encryption/signing "
"<smime.html>`_ with the Nitrokey. The driver has to be installed on every"
" computer you want to use the certificate on."
msgstr "你现在可以用Nitrokey代替你的密码登录电脑了，你可以用Nitrokey使用`S/MIME电子邮件加密/签名<smime.html>`_。驱动程序必须安装在你想使用证书的每台电脑上。"

#: ../nitrokey3/windows/piv/access_control.rst:2
msgid "Access Control"
msgstr "门禁控制"

#: ../nitrokey3/windows/piv/access_control.rst:4
msgid ""
"The following access matrix shows what authentication a certain operation"
" requires."
msgstr "下面的访问矩阵显示了某项操作需要哪些身份验证。"

#: ../nitrokey3/windows/piv/access_control.rst:7
msgid "MGM"
msgstr "米高梅"

#: ../nitrokey3/windows/piv/access_control.rst:7
msgid "Remarks"
msgstr "备注"

#: ../nitrokey3/windows/piv/access_control.rst:9
msgid "Change PIN"
msgstr "更改密码"

#: ../nitrokey3/windows/piv/access_control.rst:9
#: ../nitrokey3/windows/piv/access_control.rst:11
#: ../nitrokey3/windows/piv/access_control.rst:13
#: ../nitrokey3/windows/piv/access_control.rst:15
#: ../nitrokey3/windows/piv/access_control.rst:17
#: ../nitrokey3/windows/piv/access_control.rst:21
msgid "x"
msgstr "x"

#: ../nitrokey3/windows/piv/access_control.rst:11
msgid "Change PUK"
msgstr "更改 PUK"

#: ../nitrokey3/windows/piv/access_control.rst:13
msgid "Change MGM"
msgstr "改变米高梅"

#: ../nitrokey3/windows/piv/access_control.rst:15
msgid "Unblock PIN"
msgstr "解锁密码"

#: ../nitrokey3/windows/piv/access_control.rst:17
msgid "Generate key"
msgstr "生成密钥"

#: ../nitrokey3/windows/piv/access_control.rst:19
msgid "Read certificate"
msgstr "阅读证书"

#: ../nitrokey3/windows/piv/access_control.rst:19
msgid "This operatain does not require authentication."
msgstr "该操作不需要验证。"

#: ../nitrokey3/windows/piv/access_control.rst:21
msgid "Write certificate"
msgstr "书写证书"

#: ../nitrokey3/windows/piv/access_control.rst:26
msgid "Personal Identification Number (PIN)"
msgstr "个人识别码 (PIN)"

#: ../nitrokey3/windows/piv/access_control.rst:36
msgid ""
"The *PIN* is subject to the restriction of a retry counter. Please refer "
"to the chapter `Retry Counter <access_control.html#retry-counter>`__ to "
"learn more."
msgstr "*PIN* 受重试计数器的限制。请参阅`重试计数器<access_control.html#retry-counter>`__ 章节了解更多信息。"

#: ../nitrokey3/windows/piv/access_control.rst:40
msgid "On the terminal enter ``nitropy nk3 piv change-pin``."
msgstr "在终端上输入``nitropy nk3 piv change-pin``。"

#: ../nitrokey3/windows/piv/access_control.rst:44
msgid "Personal Unblocking Key (PUK)"
msgstr "个人解锁密钥 (PUK)"

#: ../nitrokey3/windows/piv/access_control.rst:54
msgid ""
"The *PUK* is subject to the restriction of a retry counter. Please refer "
"to the chapter `Retry Counter <access_control.html#retry-counter>`__ to "
"learn more."
msgstr "*PUK* 受重试计数器的限制。请参阅`重试计数器<access_control.html#retry-counter>`__ 章节了解更多信息。"

#: ../nitrokey3/windows/piv/access_control.rst:58
msgid "On the terminal enter ``nitropy nk3 piv change-puk``."
msgstr "在终端上输入``nitropy nk3 piv change-pin``。"

#: ../nitrokey3/windows/piv/access_control.rst:62
msgid "Retry Counter"
msgstr "重试计数器"

#: ../nitrokey3/windows/piv/access_control.rst:64
msgid ""
"The retry counter is used for the *PIN* and *PUK*. The counter decrements"
" for every failed login attempt. A retry counter of zero means that there"
" are no attempts left."
msgstr "重试计数器用于*PIN* 和*PUK* 。每次登录失败，计数器都会递减。重试计数器为零表示没有任何登录尝试。"

#: ../nitrokey3/windows/piv/access_control.rst:68
msgid ""
"The *PIN* has a retry counter of 3 attempts. If these attempts are used "
"up, the *PIN* must be unlocked with the *PUK*."
msgstr "*PIN 码* 的重试次数为 3 次。如果尝试次数用完，*密码* 必须使用*PUK* 解锁。"

#: ../nitrokey3/windows/piv/access_control.rst:71
msgid ""
"To unblock the *PIN*, use the command ``nitropy nk3 piv reset-retry-"
"counter``. This command requires the *PUK*."
msgstr "要解除对*PIN* 的封锁，请使用``nitropy nk3 piv reset-retry-counter`` 命令。该命令需要*PUK* 。"

#: ../nitrokey3/windows/piv/access_control.rst:74
msgid ""
"The *PUK* has a retry counter of 3 attempts. If these attempts are used "
"up, the PIV Card can not be used anymore and must be reset to factory "
"defaults. Please refer to the chapter `Factory Reset "
"<factory_reset.html>`__ to learn more."
msgstr ""
"*PUK* 有一个 3 次重试计数器。如果这些尝试次数用完，PIV 卡就不能再使用，必须重置为出厂默认设置。请参阅`Factory "
"Reset<factory_reset.html>`__ 章节了解更多信息。"

#: ../nitrokey3/windows/piv/access_control.rst:80
msgid "Management Key (MGM)"
msgstr "管理钥匙 (MGM)"

#: ../nitrokey3/windows/piv/access_control.rst:82
msgid "The management key is used for management operations."
msgstr "管理密钥用于管理操作。"

#: ../nitrokey3/windows/piv/access_control.rst:84
msgid ""
"Before you can perform management operations you must authenticate with "
"the management key. The authentication is done with ``nitropy nk3 piv "
"admin-auth``."
msgstr "在执行管理操作前，必须使用管理密钥进行身份验证。身份验证通过``nitropy nk3 piv admin-auth`` 完成。"

#: ../nitrokey3/windows/piv/access_control.rst:87
msgid ""
"The management key can be changed with ``nitropy nk3 piv change-admin-"
"key``."
msgstr "可通过``nitropy nk3 piv change-admin-key`` 更改管理密钥。"

#: ../nitrokey3/windows/piv/certificate_management.rst:2
msgid "Certificate Management"
msgstr "证书管理"

#: ../nitrokey3/windows/piv/certificate_management.rst:4
msgid ""
"Every private key has a certificate associated. The certificates can be "
"read and written. The size of a certificate is limited by the transport "
"layer and about 6kB."
msgstr "每个私人密钥都有一个相关证书。证书可以读取和写入。证书的大小受传输层限制，约为 6kB。"

#: ../nitrokey3/windows/piv/certificate_management.rst:9
msgid "Read Certificate"
msgstr "阅读证书"

#: ../nitrokey3/windows/piv/certificate_management.rst:11
msgid "Certificates can be read from the Nitrokey per key slot."
msgstr "每个密钥槽都可以从 Nitrokey 读取证书。"

#: ../nitrokey3/windows/piv/certificate_management.rst:21
msgid "Write Certificate"
msgstr "书写证书"

#: ../nitrokey3/windows/piv/certificate_management.rst:23
msgid "Certificates can be written to the Nitrokey per key slot."
msgstr "每个密钥槽都可以向 Nitrokey 写入证书。"

#: ../nitrokey3/windows/piv/factory_reset.rst:4
msgid ""
"The PIV application can be reset to factory defaults. It can only be "
"reset if the PIN and PUK are blocked."
msgstr "PIV 应用程序可以重置为出厂默认设置。只有在 PIN 和 PUK 被阻止的情况下才能重置。"

#: ../nitrokey3/windows/piv/factory_reset.rst:8
msgid ""
"Performing a factory reset of the PIV application will delete all private"
" keys and certificates."
msgstr "对 PIV 应用程序进行出厂重置将删除所有私钥和证书。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:2
msgid "Client Logon with Active Directory"
msgstr "使用活动目录登录客户端"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:4
msgid ""
"This document explains how to use the PIV application of a Nitrokey 3 for"
" smartcard logon with Active Directory."
msgstr "本文档介绍如何使用 Nitrokey 3 的 PIV 应用程序通过 Active Directory 进行智能卡登录。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:6
msgid ""
"In the future, this manual provisioning may be automated through a "
"Windows MiniDriver."
msgstr "在未来，这种手动配置可能会通过Windows MiniDriver自动进行。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:9
msgid ""
"The PIV application of the Nitrokey 3 is currently considered unstable "
"and is not available on the stable firmware releases. To obtain that "
"functionality it is required to install a test firmware. Subsequent "
"firmware updates may lead to loss of data and cryptographic keys. Please "
"refer to `the firmware update documentation </nitrokey3/windows/firmware-"
"update.html#firmware-release-types>`__ for more information."
msgstr ""
"Nitrokey 3 的 PIV "
"应用程序目前被认为是不稳定的，在稳定固件版本中不可用。要获得该功能，需要安装测试固件。随后的固件更新可能会导致数据和加密密钥丢失。更多信息请参阅`固件更新文档</nitrokey3/windows"
"/firmware-update.html#firmware-release-types>`__。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:17
msgid ""
"The setup requires administrative access to the machines running Active "
"Directory Directory Services (ADDS) and Active Directory Certificate "
"Services (ADCS). On the client machine only access to the respective user"
" account used for logon is required."
msgstr ""
"设置要求对运行 Active Directory 目录服务 (ADDS) 和 Active Directory 证书服务 (ADCS) "
"的计算机具有管理访问权限。在客户机上，只需访问用于登录的相应用户账户。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:23
msgid ""
"Windows server (supported versions are Windows Server 2016, 2019, 2022 in"
" all editions)"
msgstr "Windows 服务器（支持的版本包括 Windows Server 2016、2019 和 2022 的所有版本）"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:21
msgid "ADDS role installed and configured."
msgstr "已安装并配置 ADDS 角色。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:23
msgid "ADCS role installed and *Enterprise-CA* with root certificate configured."
msgstr "已安装 ADCS 角色，*Enterprise-CA* 并配置了根证书。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:23
msgid ""
"Each Domain Controller (DC) must have a *Domain Controller*, *Domain "
"Controller Authentication*, and *Kerberos Authentication* certificate "
"issued."
msgstr "每个域控制器 (DC) 都必须有*域控制器* 、*域控制器验证* 和*Kerberos 验证* 证书。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:24
msgid ""
"If you have clients leaving the company network, make sure the published "
"full and delta certificate revocation lists (CRL) are retrievable from "
"external networks."
msgstr "如果有客户离开公司网络，请确保已发布的完整和 delta 证书吊销列表 (CRL) 可从外部网络检索到。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:25
msgid ""
"Windows client (supported versions are Windows 10, 11 in editions "
"*Professional* and *Enterprise*)"
msgstr "Windows 客户端（支持的版本有 Windows 10、11，版本为*Professional* 和*Enterprise*)"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:26
msgid "Client must be a domain member of the Active Directory (AD) domain."
msgstr "客户端必须是 Active Directory (AD) 域的域成员。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:27
msgid "Nitrokey 3 with PIV application."
msgstr "带有 PIV 应用程序的 Nitrokey 3。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:30
msgid "Configure smartcard logon for use with Active Directory (AD)"
msgstr "配置智能卡登录，以便与 Active Directory (AD) 一起使用"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:32
msgid ""
"The smartcard logon requires a certificate template in the certificate "
"authority (CA) of the the domain. This template defines the values and "
"constraints of the user certificates. It is used to sign the Certificate "
"Request (CSR) during provisioning of the Nitrokey."
msgstr "智能卡登录需要域证书颁发机构（CA）的证书模板。该模板定义了用户证书的值和限制。它用于在配置 Nitrokey 时签署证书请求（CSR）。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:36
msgid ""
"Signing a certificate request for smartcard logon requires to create a "
"certificate template in the certificate authority."
msgstr "签署智能卡登录证书请求需要在证书颁发机构创建证书模板。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:39
#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:74
msgid "MMC"
msgstr "MMC"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:40
msgid ""
"From the Command Line, PowerShell, or Run, type ``certtmpl.msc`` and "
"press Enter."
msgstr "从命令行、PowerShell 或运行中，键入``certtmpl.msc`` 并按 Enter。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:41
msgid "In the detail pane select the template **Smartcard Logon**."
msgstr "在详细信息窗格中选择模板**Smartcard Logon** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:42
msgid "In the menu bar click **Actions → All Tasks → Duplicate Template**."
msgstr "在菜单栏中单击**操作 → 所有任务 → 复制模板** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:43
msgid "Set the settings below on the template, according to the mentioned tab."
msgstr "根据上述选项卡在模板上进行以下设置。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:50
msgid "**Compatibility**"
msgstr "**兼容性**"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:46
msgid "Disable **Show resulting changes**"
msgstr "禁用**显示产生的更改**"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:47
msgid ""
"Set **Certificate Authority** and **Certificate recipient** to the oldest"
" clients in the domain which are supposed to use smartcard logon."
msgstr "将**Certificate Authority** 和**Certificate recipient** 设置为域中最早使用智能卡登录的客户端。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:50
msgid ""
"If you want to use Elliptic Curve (EC) keys your clients must be not "
"older than Windows Server 2008 and Windows Vista."
msgstr "如果要使用椭圆曲线 (EC) 密钥，客户机的版本必须不高于 Windows Server 2008 和 Windows Vista。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:54
msgid "**General**"
msgstr "**一般情况**"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:53
msgid "Set a **Template display name**."
msgstr "设置**模板显示名称** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:54
msgid "Set the **Validity period** and **Renewal period**."
msgstr "设置**有效期** 和**续展期** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:57
msgid "**Request handling**"
msgstr "**请求处理**"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:57
msgid "Set a purpose of **Signature and smartcard logon**."
msgstr "设置**签名和智能卡登录** 的目的。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:65
msgid "**Cryptography**"
msgstr "**加密技术**"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:60
msgid "Set a provider category of **Key Storage Provider**."
msgstr "设置提供程序类别**Key Storage Provider** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:61
msgid "Set a algorithm name and minimum key size."
msgstr "设置算法名称和最小密钥大小。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:64
msgid ""
"Microsoft recommends to use the RSA algorithm with a key length of "
"``2048`` Bit. If you choose to use Eliptic Curve (EC) keys you need to "
"make additional changes on your client computers."
msgstr ""
"Microsoft 建议使用密钥长度为``2048`` 位的 RSA 算法。如果选择使用 Eliptic Curve (EC) "
"密钥，则需要在客户端计算机上进行额外的更改。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:67
msgid "**Subject Name**"
msgstr "**科目名称**"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:68
msgid "Set **Supply in the request**."
msgstr "在请求** 中设置**供应。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:69
msgid "Confirm the template creation with **OK**."
msgstr "使用**OK** 确认模板创建。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:71
msgid ""
"After the creation of a certificate template, the template must be issued"
" to be used by the clients."
msgstr "创建证书模板后，必须签发模板供客户使用。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:75
#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:138
#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:164
msgid ""
"From the Command Line, PowerShell, or Run, type ``certsrv.msc`` and press"
" Enter."
msgstr "从命令行、PowerShell 或运行中，键入``certsrv.msc`` 并按 Enter。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:76
msgid ""
"In the navigation pane expand the Certificate Authority (CA) and navigate"
" to **Certificate Templates**."
msgstr "在导航窗格中展开证书颁发机构 (CA)，并导航至**Certificate Templates** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:77
msgid "In the menu bar click **Action → New → Certificate Template to Issue**."
msgstr "在菜单栏中单击**操作 → 新建 → 签发证书模板** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:78
msgid "Select the certificate template you want to issue and confirm with **OK**."
msgstr "选择要签发的证书模板，并通过**OK** 确认。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:82
msgid "Provision Nitrokey 3 for smartcard logon with Active Directory"
msgstr "使用 Active Directory 为智能卡登录提供 Nitrokey 3"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:84
msgid ""
"The smartcard logon requires to provision a Nitrokey for an user in "
"Active Directory. The provisiong contains the private key and Certificate"
" Singing Request (CSR) generation. The certificate is then written to the"
" Nitrokey."
msgstr ""
"智能卡登录需要在 Active Directory 中为用户配置 Nitrokey。该配置包含私钥和证书生成请求（CSR）。然后将证书写入 "
"Nitrokey。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:89
msgid ""
"Before following the steps below make sure the Active Directory user "
"account you want to use for smartcard logon exists. A creation time of "
"the certificate before the creation time of the user account will lead to"
" a failed logon."
msgstr "在执行以下步骤之前，请确保要用于智能卡登录的 Active Directory 用户账户已经存在。证书创建时间早于用户账户创建时间将导致登录失败。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:93
msgid ""
"If the PIV application on the Nitrokey was not used before, perform a "
"initialization with ``nitropy nk3 piv init`` first."
msgstr "如果之前没有使用过 Nitrokey 上的 PIV 应用程序，请先使用``nitropy nk3 piv init`` 进行初始化。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:95
msgid "Generate a private key and write the CSR to file with the command below."
msgstr "使用下面的命令生成私钥并将 CSR 写入文件。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:101
msgid ""
"The value of ``<algorithm>`` is the used algorithm with its key length, "
"e.g. ``rsa2048``. The values of ``<subject-name>`` and ``<subject-"
"alternative-name>`` corresponds typically to the ``commonName`` and "
"``userPrincipalName`` attribute of the Active Directory user account."
msgstr ""
"``<algorithm>`` 的值是使用的算法及其密钥长度，例如``rsa2048``。``<subject-name>`` 和"
"``<subject-alternative-name>`` 的值通常与活动目录用户账户的``commonName`` "
"和``userPrincipalName`` 属性相对应。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:104
msgid ""
"Sign the CSR with the certificate authority (CA) of the domain with the "
"command below."
msgstr "用下面的命令在域的证书颁发机构 (CA) 上签署 CSR。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:110
msgid ""
"The value of ``<template-name>`` is the name of the certificate template "
"for smartcard logon. The value of ``<file>`` is the certificate singing "
"request file."
msgstr "``<template-name>`` 的值是用于智能卡登录的证书模板名称。``<file>`` 的值是证书演唱请求文件。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:113
msgid "Write the signed certificate to the Nitrokey with the command below."
msgstr "用下面的命令将签名证书写入 Nitrokey。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:119
msgid "The value of ``<file>`` is the certificate file."
msgstr "``<file>`` 的值是证书文件。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:123
msgid "Revoke smartcard logon for use with Active Directory (AD)"
msgstr "撤销智能卡登录，以便与 Active Directory (AD) 一起使用"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:125
msgid ""
"The issued user logon certificates are listed in the Active Directory "
"Certificate Services (ADCS). From ADCS the certificates can be revoked, "
"which adds them to the configured Certificate Revocation List (CRL). This"
" is required in case of a lost or broken Nitrokey."
msgstr ""
"已签发的用户登录证书列在 Active Directory 证书服务 (ADCS) 中。从 ADCS "
"中可以撤销证书，并将其添加到配置的证书撤销列表（CRL）中。这在 Nitrokey 丢失或损坏时是必需的。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:130
msgid ""
"It is strongly advised to never leave unused user certificates without "
"revoking them."
msgstr "强烈建议不要在未撤销证书的情况下留下未使用的用户证书。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:133
msgid ""
"It is possible to temporarily revoke a certificate with the reason "
"*Certificate Hold*. This revocation can be reverted and is hence not "
"permanent."
msgstr "可以暂时吊销证书，理由是*Certificate Hold* 。这种撤销可以恢复，因此不是永久性的。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:137
msgid "MMC (certsrv.msc)"
msgstr "MMC (certsrv.msc)"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:139
msgid ""
"In the navigation pane expand the certificate authority (CA) and navigate"
" to **Issued Certificates**."
msgstr "在导航窗格中展开证书颁发机构 (CA)，并导航至**Issued Certificates** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:140
msgid "In the detail pane select the user certificate you want to revoke."
msgstr "在详细窗格中选择要撤销的用户证书。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:141
msgid "In the menu bar click **Action → All Tasks → Revoke Certificate**."
msgstr "在菜单栏中单击**操作 → 所有任务 → 注销证书** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:142
msgid ""
"Specifiy a reason for the revocation, date and time, and confirm with "
"**Yes**."
msgstr "指定撤销原因、日期和时间，并通过**Yes** 进行确认。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:143
msgid "In the navigation pane navigate to **Revoked Certificates**."
msgstr "在导航窗格中导航至**已撤销证书** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:144
msgid "In the menu bar click **Action → All Tasks → Publish**."
msgstr "在菜单栏中单击**操作 → 所有任务 → 发布** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:145
msgid "Select the revocation list you want to publish and confirm with **OK**."
msgstr "选择要发布的撤销列表，并通过**OK** 确认。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:148
msgid ""
"During each smartcard logon attempt Windows checks if the certificate "
"presented by the smartcard is listed on a Certificate Revocation List "
"(CRL). If the certificate is found on a CRL the logon is denied. Each CRL"
" contains a validity to make them expire. Windows caches the fetched CRL "
"and updates them if the CRL is about to expire. Hence a revocation is not"
" immediate and depends on the expiration of the CRL the client has."
msgstr ""
"在每次智能卡登录尝试中，Windows 都会检查智能卡出示的证书是否列在证书吊销列表（CRL）中。如果在证书吊销列表中发现该证书，则拒绝登录。每个"
" CRL 都包含一个使其过期的有效期。Windows 会缓存获取的 CRL，并在 CRL "
"即将过期时更新它们。因此，证书吊销不会立即发生，而是取决于客户端所拥有的证书废止列表的过期时间。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:156
msgid "Import a user smartcard certificate to the personal certificate store"
msgstr "将用户智能卡证书导入个人证书存储区"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:158
msgid ""
"The user certificate which is stored on the Nitrokey can be imported to "
"the user's personal certificate store. In certain situations this is a "
"required procedure."
msgstr "存储在 Nitrokey 上的用户证书可以导入到用户的个人证书存储空间。在某些情况下，这是必要的程序。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:162
msgid "MMC (certmgr.msc)"
msgstr "MMC (certmgr.msc)"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:163
#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:172
msgid ""
"Make sure you are logged on to the user account the certificate "
"corresponds to."
msgstr "确保您已登录证书对应的用户账户。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:165
msgid ""
"In the navigation pane expand the **Personal** key store and navigate to "
"**Certificates**."
msgstr "在导航窗格中展开**个人** 密钥存储，并导航至**证书** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:166
msgid "In the menu bar click **Action → All Tasks → Import**."
msgstr "在菜单栏中单击**操作 → 所有任务 → 导入** 。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:167
msgid ""
"Follow the import wizard and provide the user certificate file when "
"requested."
msgstr "按照导入向导操作，并按要求提供用户证书文件。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:168
msgid ""
"After the import completed check the detail pane for the imported "
"certificate. If the Nitrokey is connected, the properties of the "
"certificate should show the message *You have a private key that "
"corresponds to this certificate.* indicating that the private on the "
"Nitrokey could be identified."
msgstr ""
"导入完成后，检查导入证书的详细信息窗格。如果 Nitrokey 已连接，证书属性应显示*You have a private key that "
"corresponds to this certificate（你有一个与此证书对应的私钥）。* 表明 Nitrokey 上的私钥可以被识别。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:171
msgid "PowerShell"
msgstr "PowerShell"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:173
msgid "Open PowerShell."
msgstr "打开 PowerShell。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:174
msgid ""
"Change to the personal certficate store of the user with ``Set-Location "
"-Path cert:\\CurrentUser\\My``."
msgstr "通过``Set-Location -Path cert:\\CurrentUser\\My`` 更改用户的个人证书存储。"

#: ../nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:175
msgid ""
"Import the certificate to the store with ``Import-Certificate -Filepath "
"'<path>'``, replacing ``<path>`` with the certificate file path."
msgstr "使用``Import-Certificate -Filepath '<path>'`` 将证书导入存储区，用证书文件路径替换``<path>``。"

#: ../nitrokey3/windows/piv/guides/index.rst:2
msgid "Guides"
msgstr "指南"

#: ../nitrokey3/windows/piv/index.rst:2
msgid "PIV (Personal Identity Verification)"
msgstr "PIV（个人身份验证）"

#: ../nitrokey3/windows/piv/index.rst:5
msgid ""
"The PIV application of the Nitrokey 3 is currently considered unstable "
"and is not available on the stable firmware releases. To obtain that "
"functionality it is required to install a test firmware. Subsequent "
"firmware updates may lead to loss of data and cryptographic keys. Please "
"refer to `the firmware update documentation <../firmware-update.html"
"#firmware-release-types>`__ for more information."
msgstr ""
"Nitrokey 3 的 PIV "
"应用程序目前被认为是不稳定的，在稳定固件版本中不可用。要获得该功能，需要安装测试固件。随后的固件更新可能会导致数据和加密密钥丢失。更多信息请参阅`固件更新文档"
"<../firmware-update.html#firmware-release-types>`__。"

#: ../nitrokey3/windows/piv/index.rst:10
msgid ""
"The *Personal Identity Verfication* (PIV) is based on the NIST special "
"publication `SP 800-73 "
"<https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-73-4.pdf>`__."
msgstr ""
"*Personal Identity Verfication* (PIV) 以 NIST 特别出版物`SP "
"800-73<https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-73-4.pdf>`___为基础。"

#: ../nitrokey3/windows/piv/key_management.rst:5
msgid "Key Slots"
msgstr "关键插槽"

#: ../nitrokey3/windows/piv/key_management.rst:7
msgid ""
"The PIV application can hold certificates for different purposes. For "
"each purpose the private key and its corresponding certificate are stored"
" in a key slot."
msgstr "PIV 应用程序可持有不同用途的证书。每种用途的私人密钥及其相应的证书都存储在一个密钥槽中。"

#: ../nitrokey3/windows/piv/key_management.rst:11
msgid "Slot"
msgstr "插槽"

#: ../nitrokey3/windows/piv/key_management.rst:11
msgid "Application"
msgstr "应用"

#: ../nitrokey3/windows/piv/key_management.rst:13
msgid "82-95"
msgstr "82-95"

#: ../nitrokey3/windows/piv/key_management.rst:13
msgid "Retired Key Management"
msgstr "退休的主要管理人员"

#: ../nitrokey3/windows/piv/key_management.rst:13
msgid ""
"The private keys and certificates in these slots were used for key "
"management applications and are still there to provide backward "
"compatibility."
msgstr "这些插槽中的私钥和证书用于密钥管理应用程序，目前仍在提供向后兼容性。"

#: ../nitrokey3/windows/piv/key_management.rst:17
msgid "9a"
msgstr "9a"

#: ../nitrokey3/windows/piv/key_management.rst:17
msgid "Authentication"
msgstr "认证"

#: ../nitrokey3/windows/piv/key_management.rst:17
msgid ""
"The private key and certificate in this slot are used to authenticate the"
" cardholder."
msgstr "此插槽中的私钥和证书用于验证持卡人的身份。"

#: ../nitrokey3/windows/piv/key_management.rst:20
msgid "9c"
msgstr "9c"

#: ../nitrokey3/windows/piv/key_management.rst:20
msgid "Signature"
msgstr "签名"

#: ../nitrokey3/windows/piv/key_management.rst:20
msgid ""
"The private key and certificate in this slot are used to sign emails and "
"files."
msgstr "此插槽中的私钥和证书用于签署电子邮件和文件。"

#: ../nitrokey3/windows/piv/key_management.rst:23
msgid "9d"
msgstr "9d"

#: ../nitrokey3/windows/piv/key_management.rst:23
msgid ""
"The private key and certificate in this slot are used to encrypt emails "
"and files."
msgstr "此插槽中的私钥和证书用于加密电子邮件和文件。"

#: ../nitrokey3/windows/piv/key_management.rst:26
msgid "9e"
msgstr "9e"

#: ../nitrokey3/windows/piv/key_management.rst:26
msgid "Card Authentication"
msgstr "卡认证"

#: ../nitrokey3/windows/piv/key_management.rst:26
msgid ""
"The private key and certificate in this slot are used for physical "
"operations, such as building access or time recording. Support from the "
"respective system is a prerequisite."
msgstr "该插槽中的私钥和证书用于实际操作，如楼宇门禁或时间记录。前提条件是相关系统提供支持。"

#: ../nitrokey3/windows/piv/key_management.rst:33
msgid "Algorithms"
msgstr "算法"

#: ../nitrokey3/windows/piv/key_management.rst:35
msgid ""
"The PIV application uses asymmetric and symmetric algorithms. The "
"asymmetric algorithms are used for the user private keys and the "
"symmetric algorithms for the management key."
msgstr "PIV 应用程序使用非对称和对称算法。非对称算法用于用户私钥，对称算法用于管理密钥。"

#: ../nitrokey3/windows/piv/key_management.rst:38
msgid "Supported asymmetric key algorithms:"
msgstr "支持非对称密钥算法："

#: ../nitrokey3/windows/piv/key_management.rst:40
msgid "RSA 2048"
msgstr "RSA 2048"

#: ../nitrokey3/windows/piv/key_management.rst:41
msgid "nistp256"
msgstr "nistp256"

#: ../nitrokey3/windows/piv/key_management.rst:43
msgid "Supported symmetric key algorithms:"
msgstr "支持对称密钥算法："

#: ../nitrokey3/windows/piv/key_management.rst:45
msgid "AES 256"
msgstr "AES 256"

#: ../nitrokey3/windows/piv/key_management.rst:46
msgid "3DES (TDES)"
msgstr "3DES (TDES)"

#: ../nitrokey3/windows/piv/key_management.rst:49
msgid "It is not recommended to use the 3DES (TDES) algorithm."
msgstr "不建议使用 3DES (TDES) 算法。"

#: ../nitrokey3/windows/piv/key_management.rst:54
msgid "The PIV application can generate a new private key on the Nitrokey."
msgstr "PIV 应用程序可在 Nitrokey 上生成新的私人密钥。"

#: ../nitrokey3/windows/piv/key_management.rst:56
msgid ""
"The command below will create private key in key slot ``9a`` for the user"
" with the subject name ``John Doe`` and subject alternative name "
"``jd@nitrokey.local``."
msgstr "下面的命令将在密钥槽``9a`` 中为用户创建私人密钥，用户名为``John Doe``，主题替代名称为``jd@nitrokey.local``。"

#: ../nitrokey3/shared/set-pins.rst.inc:4
msgid "Settings PIN with Windows Settings application"
msgstr "使用Windows设置应用程序的设置密码"

#: ../nitrokey3/shared/set-pins.rst.inc:6
msgid "Open the Windows \"Settings\" application."
msgstr "打开Windows \"设置 \"应用程序。"

#: ../nitrokey3/shared/set-pins.rst.inc:7
msgid "Open the \"Accounts\" menu."
msgstr "打开 \"账户 \"菜单。"

#: ../nitrokey3/shared/set-pins.rst.inc:8
msgid "In the menubar on the left click on \"Sign-in options\"."
msgstr "在左侧的菜单栏中点击 \"登录选项\"。"

#: ../nitrokey3/shared/set-pins.rst.inc:9
msgid ""
"In the menu in the middle click on \"Security Key\" and then \"Manage\" "
"under it."
msgstr "在中间的菜单上点击 \"安全密钥\"，然后在其下点击 \"管理\"。"

#: ../nitrokey3/shared/set-pins.rst.inc:10
msgid "Under the header \"Security Key PIN\" click on \"Change\"."
msgstr "在 \"安全密钥密码 \"标题下，点击 \"更改\"。"

#: ../nitropad/content/shared-index-content1.rst:11
#: ../nitropad/content/shared-index-content1.rst:28
msgid ""
"With the NitroPad, malicious changes to the BIOS, operating system, and "
"software can be easily detected. For example, if you left your NitroPad "
"in a hotel room, you can use your Nitrokey to check if it has been "
"tampered with while you were away. If an attacker modifies the NitroPad’s"
" firmware or operating system, the Nitrokey will detect this "
"(instructions below)."
msgstr "有了NitroPad，对BIOS、操作系统和软件的恶意修改可以很容易被发现。例如，如果你把NitroPad留在酒店房间里，你可以用Nitrokey来检查它在你离开时是否被篡改过。如果攻击者修改了NitroPad的固件或操作系统，Nitrokey会检测到这一点（说明如下）。"

#: ../nitropad/content/shared-index-content1.rst:19
msgid "Verification of Sealed Hardware"
msgstr "密封硬件的验证"

#: ../nitropad/content/shared-index-content1.rst:21
msgid ""
"If you have ordered the unit with the option “sealed screws and sealed "
"bag”, please `verify the sealing <sealed-hardware.html>`_ before "
"unpacking. If you do not know what this means, skip this section."
msgstr ""
"如果您订购的设备带有 \"密封螺钉和密封袋 \"选项，请在开箱前`验证密封<sealed-hardware.html>`_ "
"。如果您不知道这意味着什么，请跳过本节。"

#: ../nitropad/content/shared-index-content1.rst:26
msgid "Secure Starting Procedure"
msgstr "安全启动程序"

#: ../nitropad/content/shared-index-content1.rst:35
msgid ""
"Each time you start the NitroPad, you should - if possible - connect your"
" Nitrokey. If the Nitrokey is plugged in and the system has not been "
"modified, the following screen will appear when the NitroPad is turned "
"on."
msgstr ""
"每次启动NitroPad时，您应该--如果可能的话--"
"连接您的Nitrokey。如果Nitrokey被插入，并且系统没有被修改过，那么当NitroPad被打开时，将出现以下屏幕。"

#: ../nitropad/content/shared-index-content1.rst:43
msgid ""
"The box marked in red contains the information that the BIOS has not been"
" changed and that the shared secret of the NitroPad and the Nitrokey "
"match. But this information is not sufficient, because an attacker could "
"have faked it. If at the same time the Nitrokey also flashes green, "
"everything is fine. An attacker would have to have had access to the "
"NitroPad and Nitrokey to achieve this result. It is therefore important "
"that you do not leave both devices unattended."
msgstr "标记为红色的方框中包含了BIOS没有被改变以及NitroPad和Nitrokey的共享秘密相匹配的信息。但这一信息是不够的，因为攻击者有可能伪造了它。如果在同一时间，Nitrokey也闪烁着绿光，那就说明一切正常。攻击者必须有机会接触到NitroPad和Nitrokey才能达到这个结果。因此，重要的是，你不要让这两个设备无人看管。"

#: ../nitropad/content/shared-index-content1.rst:51
msgid ""
"If the information on the NitroPad does not match the information on the "
"Nitrokey, the background would turn red and the message “Invalid Code” "
"would appear. This could indicate that manipulation has taken place."
msgstr "如果NitroPad上的信息与Nitrokey上的信息不一致，背景就会变成红色，并会出现 \"无效代码 \"的信息。这可能表明发生了操纵行为。"

#: ../nitropad/content/shared-index-content1.rst:58
msgid ""
"How the boot process may look like if the system has been changed (for "
"example after an update) and what error messages may otherwise occur is "
"described further below."
msgstr "如果系统被改变了（例如在更新之后），启动过程可能是什么样子的，还有可能出现什么错误信息，下面会进一步描述。"

#: ../nitropad/content/shared-index-content1.rst:64
msgid ""
"The NitroPad can also be started without the Nitrokey. If you don’t have "
"the Nitrokey with you, but are sure that the hardware has not been "
"manipulated, you can boot your system without checking."
msgstr "在没有Nitrokey的情况下也可以启动NitroPad。如果你没有带Nitrokey，但确定硬件没有被操作过，你可以不用检查就启动系统。"

#: ../nitropad/content/shared-index-content2.rst:2
msgid "Behavior After a System Update"
msgstr "系统更新后的行为"

#: ../nitropad/content/shared-index-content2.rst:4
msgid ""
"The NitroPad firmware checks certain system files for changes. If your "
"operating system has updated important components, you will be warned the"
" next time you boot the NitroPad. This could look like this, for example:"
msgstr "NitroPad固件会检查某些系统文件是否有变化。如果您的操作系统已经更新了重要的组件，那么在您下次启动NitroPad时，您将会收到警告。例如，这可能是这样的：。"

#: ../nitropad/content/shared-index-content2.rst:12
msgid ""
"That’s why it’s important to restart your NitroPad under controlled "
"conditions after a system update. Only when the new status has been "
"confirmed can you leave the device unattended again. Otherwise, you will "
"not be able to distinguish a possible attack from a system update. "
"Detailed instructions for a system update can be `found here <system-"
"update.html>`_."
msgstr ""
"这就是为什么在系统更新后要在可控条件下重启NitroPad的重要原因。只有当新的状态被确认后，你才可以再次让设备无人看管。否则，您将无法区分可能的攻击和系统更新。关于系统更新的详细说明可以在这里找到"
" ` <system-update.html>`_。"

#: ../nitropad/faq.rst:2
msgid "NitroPad FAQ"
msgstr "NitroPad常见问题"

#: ../nitropad/faq.rst:5 ../nitropc/faq.rst:6
msgid "**Q:** What is the default hard-disk encryption password?"
msgstr "**问：**默认的硬盘加密密码是什么？"

#: ../nitropad/faq.rst:5
msgid ""
"The default Nitropad disk encryption password: \"12345678\". This was "
"change on the 15.01.2024 so if \"12345678\" is not working try the old "
"default: \"PleaseChangeMe\""
msgstr ""
"Nitropad 磁盘加密的默认密码为 \"12345678\"。该密码已于 15.01.2024 更改，因此如果 \"12345678 "
"\"无法使用，请尝试旧的默认密码：\"PleaseChangeMe\"。"

#: ../nitropad/faq.rst:10
msgid "**Q:** How to change the hard-disk encryption password from within HEADS?"
msgstr "**问：** 如何在 HEADS 中更改硬盘加密密码？"

#: ../nitropad/faq.rst:8
msgid ""
"This is the prefered way to change the hard-disk encryption password. "
"Inside HEADS choose ``Options -> Change LUKS Disk Recovery Key "
"passphrase`` and follow the instructions."
msgstr ""
"这是更改硬盘加密密码的首选方法。在 HEADS 中选择``Options -> Change LUKS Disk Recovery Key "
"passphrase``，然后按说明操作。"

#: ../nitropad/faq.rst:18
msgid "**Q:** How to change the hard-disk encryption password from within the OS?"
msgstr "**问：** 如何在操作系统内更改硬盘加密密码？"

#: ../nitropad/faq.rst:13
msgid ""
"Using default ``cryptsetup`` tools it is important to note that the right"
" key slot is used: ``sudo cryptsetup luksChangeKey --key-slot=0 "
"/dev/nvme0n1p3`` or ``sudo cryptsetup luksChangeKey --key-slot=0 "
"/dev/sda3``. In Qubes 4.2 exist also now a GUI tool for that:"
msgstr ""
"使用默认的``cryptsetup`` 工具时，必须注意使用正确的键位：`sudo cryptsetup luksChangeKey --key-"
"slot=0 /dev/nvme0n1p3`` 或``sudo cryptsetup luksChangeKey --key-slot=0 "
"/dev/sda3``。在 Qubes 4.2 中也有一个图形用户界面工具："

#: ../nitropad/faq.rst ../nitropad/qubes/index.rst ../nitropc/qubes/index.rst
msgid "Change Password Qubes Image"
msgstr "更改密码 Qubes 图像"

#: ../nitropad/faq.rst:30
msgid "**Q:** What is re-ownership / re-encryption and why is it important?"
msgstr "**问：** 什么是重新拥有/重新加密，为什么它很重要？"

#: ../nitropad/faq.rst:21
msgid ""
"Changing your hard-disk encryption password does not change the "
"encryption itself, just the access to the encryption key. This means that"
" in a situation where somebody had phyisical access to the device (e.g., "
"during shipment) they may have copied the LUKS header, i.e., the "
"encryption key. Using this copy one might decrypt the hard-disk even with"
" a new password being set. This is why the re-ownership wizard proposes "
"to re-encrypt the hard-disk, which reencrypts in place ensuring the "
"previously described scenario cannot be applied."
msgstr ""
"更改硬盘加密密码不会改变加密本身，只会改变加密密钥的访问权限。这就意味着，如果有人对设备进行了物理访问（如在运输过程中），他们可能已经复制了 "
"LUKS 标头，即加密密钥。即使设置了新密码，也可能利用该副本解密硬盘。因此，重新拥有权向导建议对硬盘重新加密，以确保前面所述的情况无法发生。"

#: ../nitropad/index.rst:16 ../nitropc/index.rst:17
msgid "Qubes"
msgstr "Qubes"

#: ../nitropad/index.rst:16 ../nitropc/index.rst:17
msgid "Ubuntu"
msgstr "乌班图"

#: ../nitropad/index.rst:2
msgid "NitroPad"
msgstr "NitroPad"

#: ../pro/change-pins.rst.inc:2 ../start/setting-kdf-do.rst.inc:26
msgid "Change User and Admin PIN"
msgstr "更改用户和管理员密码"

#: ../pro/change-pins.rst.inc:9
msgid ""
"The user PIN is at least 6-digits long and is used to get access to the "
"content of the Nitrokey. This is the PIN you will use a lot in every day "
"use e.g. for decrypting messages, for unlocking your encrypted storage "
"(NK Storage only) etc."
msgstr "用户PIN码至少有6位数，用于访问Nitrokey的内容。这是你在日常使用中经常用到的PIN码，如解密信息、解锁加密的存储空间（仅限NK存储）等。"

#: ../pro/change-pins.rst.inc:11
msgid ""
"You can change the user PIN with the Nitrokey App if using a Nitrokey Pro"
" or Nitrokey Storage. In the `Nitrokey "
"<https://www.nitrokey.com/download>`__ App open ‘Menu -> Configure -> "
"Change User PIN’ to open the dialog to change the PIN."
msgstr ""
"如果使用Nitrokey Pro或Nitrokey Storage，你可以通过Nitrokey App更改用户密码。在`Nitrokey "
"<https://www.nitrokey.com/download>`__应用程序中，打开'菜单-> 配置-> "
"更改用户密码'以打开更改密码的对话框。"

#: ../pro/change-pins.rst.inc:19
msgid "You can change the User PIN in the dialog window now."
msgstr "你现在可以在对话窗口中更改用户密码。"

#: ../pro/change-pins.rst.inc:21
msgid ""
"The user PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the user PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have a 6 digits PIN. The default PIN is 123456."
msgstr "用户密码可以有多达20位数字和其他字符（如字母和特殊字符）。但是，由于用户的PIN码在尝试了三次错误的PIN码后就会被阻止，所以只有6位数的PIN码就足够安全了。默认的PIN码是123456。"

#: ../pro/change-pins.rst.inc:31
msgid ""
"The admin PIN is at least 8-digits long and is used to change "
"contents/settings of the Nitrokey. That is to say after initializing the "
"Nitrokey you probably won’t need this PIN too often (e.g. if you want to "
"add another password to the password safe of the Nitrokey Pro or Nitrokey"
" Storage)."
msgstr ""
"管理密码至少有8位数，用于改变硝基钥匙的内容/设置。也就是说，在初始化Nitrokey后，你可能不会经常需要这个PIN码（例如，如果你想在Nitrokey"
" Pro或Nitrokey Storage的密码箱中添加另一个密码）。"

#: ../pro/change-pins.rst.inc:33
msgid ""
"You can change the admin PIN with the Nitrokey App if using a Nitrokey "
"Pro or Nitrokey Storage. In the `Nitrokey App "
"<https://www.nitrokey.com/download>`__ open ‘Menu -> Configure -> Change "
"Admin PIN’ to open the dialog to change the PIN."
msgstr ""
"如果使用Nitrokey Pro或Nitrokey Storage，你可以通过Nitrokey "
"App更改管理密码。在`Nitrokey应用程序<https://www.nitrokey.com/download>`__中，打开'菜单-> "
"配置-> 更改管理密码'，以打开更改密码的对话框。"

#: ../pro/change-pins.rst.inc:41
msgid "You can change the admin PIN in the dialog window now."
msgstr "你现在可以在对话窗口中改变管理密码。"

#: ../pro/change-pins.rst.inc:43
msgid ""
"The admin PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the admin PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have 8 digits PIN. The default PIN is 12345678."
msgstr "管理密码最多可以有20位数字和其他字符（如字母和特殊字符）。但是，由于只要有三次错误的PIN尝试，管理PIN就会被阻止，所以只有8位数的PIN就足够安全了。默认的PIN码是12345678。"

#: ../nitropad/default-boot.rst.inc:2
msgid "Default Boot"
msgstr "默认启动"

#: ../nitropad/default-boot.rst.inc:6
msgid ""
"If you have installed a new operating system, it may be that default boot"
" is not yet assigned. If this is the case, please proceed as described "
"below."
msgstr "如果你安装了一个新的操作系统，可能默认启动还没有分配。如果是这种情况，请按下文所述进行。"

#: ../nitropad/default-boot.rst.inc:8
msgid "Select “Default boot”."
msgstr "选择 \"默认启动\"。"

#: ../nitropad/default-boot.rst.inc:15
msgid ""
"Heads informs you that it does not yet know any default. First you agree "
"to the update of the checksums."
msgstr "头部通知你，它还不知道任何默认情况。首先，你同意更新校验和。"

#: ../nitropad/default-boot.rst.inc:23 ../nitropad/default-boot.rst.inc:49
#: ../nitropad/firmware-update.rst.inc:98
#: ../nitropad/firmware-update.rst.inc:112
msgid "Confirm the process with Enter."
msgstr "用回车键确认这一过程。"

#: ../nitropad/default-boot.rst.inc:30
msgid ""
"Now insert the Nitrokey if this is not already the case and confirm with "
"Enter. Then you have to enter the User PIN of the Nitrokey."
msgstr "现在插入硝基钥匙，如果还没有的话，用回车键确认。然后，你必须输入硝基钥匙的用户密码。"

#: ../nitropad/default-boot.rst.inc:47
msgid "Now the NitroPad marks the files that changed by the update as verified."
msgstr "现在，NitroPad将被更新所改变的文件标记为已验证。"

#: ../nitropad/default-boot.rst.inc:56
msgid ""
"You will then see a list of all possible boot entries - choose the first "
"one here by simply pressing Enter. Boot Options"
msgstr "然后你会看到一个所有可能的启动项的列表--在这里选择第一个，只需按下回车键。启动选项"

#: ../nitropad/default-boot.rst.inc:64
msgid ""
"To save this value as default, select “Make Ubuntu the default” for "
"Ubuntu or “Make Qubes the default” for Qubes OS. Confirm Boot Details"
msgstr "要把这个值保存为默认值，为Ubuntu选择 \"使Ubuntu成为默认值\"，为Qubes OS选择 \"使Qubes成为默认值\"。确认启动细节"

#: ../nitropad/default-boot.rst.inc:72
msgid ""
"Confirm the next three questions with Enter and enter the PIN of the "
"Nitrokey if you are prompted to do so."
msgstr "用回车键确认接下来的三个问题，如果提示你输入硝基钥匙的密码，则输入密码。"

#: ../nitropad/default-boot.rst.inc:93 ../nitropad/system-update.rst.inc:121
msgid "Your system will then boot."
msgstr "然后你的系统将启动。"

#: ../nitropad/default-boot.rst.inc:96
msgid "Changing default kernel"
msgstr "改变默认内核"

#: ../nitropad/default-boot.rst.inc:98
msgid ""
"This is a workaround for Heads v1.1 bug, which does not allow to change "
"the kernel to the one later (lower) in the list."
msgstr "这是为了解决Heads v1.1的错误，该错误不允许将内核改为列表中较后（较低）的内核。"

#: ../nitropad/default-boot.rst.inc:100
msgid ""
"Usual way would be to go to ``Options -> Boot Options -> Show OS boot "
"menu``, selecting the kernel and making it default, however the latter is"
" not working at the moment. Instead please use the following workaround:"
msgstr ""
"通常的方法是进入``Options -> Boot Options -> Show OS boot "
"menu``，选择内核并使其成为默认值，然而后者目前还不能工作。相反，请使用下面的解决方法。"

#: ../nitropad/default-boot.rst.inc:102
msgid ""
"Start recovery console and remove the default boot files. Please make "
"sure the correct files are removed. Here 2 default files were available:"
msgstr "启动恢复控制台，删除默认的启动文件。请确保删除的是正确的文件。这里有2个默认文件。"

#: ../nitropad/default-boot.rst.inc:117
msgid ""
"Sign all current boot files with: ``Options --> Update checksums and sign"
" all files in /boot``"
msgstr ""
"在所有当前的引导文件上签名。``Options --> Update checksums and sign all files in "
"/boot``。"

#: ../nitropad/default-boot.rst.inc:119
msgid "Return to main menu and select default boot ``Main Menu --> Default boot``"
msgstr "返回主菜单并选择默认启动 ``Main Menu --> Default boot``"

#: ../nitropad/default-boot.rst.inc:121
msgid ""
"Agree to select default kernel (screen: ``No Default Boot Option "
"Configured`` )"
msgstr "同意选择默认内核（屏幕：``No Default Boot Option Configured`` )"

#: ../nitropad/default-boot.rst.inc:123
msgid "Select the desired kernel to work as the default"
msgstr "选择所需的内核作为默认的工作。"

#: ../nitropad/default-boot.rst.inc:124
msgid "Select 2nd option: ``Make <kernel version> the default``"
msgstr "选择第二个选项。``Make <kernel version> the default``。"

#: ../nitropad/default-boot.rst.inc:125
msgid ""
"Save the kernel with accepting default options (proceed, do not agree for"
" TPM encryption, confirm GPG card):"
msgstr "保存内核并接受默认选项（继续，不同意TPM加密，确认GPG卡）。"

#: ../nitropad/default-boot.rst.inc:134
msgid "Enter PIN for the Nitrokey Pro/Storage device to execute signing process"
msgstr "输入Nitrokey Pro/Storage设备的PIN码，以执行签名过程。"

#: ../nitropad/default-boot.rst.inc:136
msgid ""
"The selected kernel will boot and it will be the default one the next "
"time when selecting ``Default Boot`` option from the menu."
msgstr "所选的内核将被启动，下次从菜单中选择``Default Boot``选项时，它将成为默认的内核。"

#: ../nitropad/factory-reset-heads2.rst.inc:7
#: ../nitropad/factory-reset.rst.inc:7
msgid "Reasons for resetting to factory settings"
msgstr "重置为出厂设置的原因"

#: ../nitropad/factory-reset-heads2.rst.inc:9
#: ../nitropad/factory-reset.rst.inc:9
msgid "Your Nitrokey is locked (e.g. due to multiple incorrect PIN entries)"
msgstr "您的Nitrokey被锁定（例如，由于多次输入错误的PIN码）。"

#: ../nitropad/factory-reset-heads2.rst.inc:11
#: ../nitropad/factory-reset.rst.inc:11
msgid "You have lost your Nitrokey (in which case you will first need a new one)"
msgstr "你丢失了你的Nitrokey（在这种情况下，你首先需要一个新的）。"

#: ../nitropad/factory-reset-heads2.rst.inc:13
#: ../nitropad/factory-reset.rst.inc:13
msgid ""
"You have installed an operating system yourself (e.g. after changing the "
"hard disk)"
msgstr "你自己安装了一个操作系统（例如在更换硬盘后）。"

#: ../nitropad/factory-reset-heads2.rst.inc:15
#: ../nitropad/factory-reset.rst.inc:15
msgid "Your operating system does not start"
msgstr "你的操作系统不能启动"

#: ../nitropad/factory-reset.rst.inc:18 ../nitropad/factory-reset.rst.inc:44
msgid ""
"All your data will be lost if you reset your device. Therefore please "
"backup your data before performing the reset."
msgstr "如果你重置你的设备，你的所有数据都会丢失。因此，在执行重置之前，请备份您的数据。"

#: ../nitropad/factory-reset.rst.inc:21
msgid "Only for firmware till version 1.4"
msgstr "仅适用于1.4版本之前的固件"

#: ../nitropad/factory-reset.rst.inc:25
msgid ""
"Connect any USB flash drive to the NitroPad. (You need that USB flash "
"drive for saving your security key)"
msgstr "将任何USB闪存驱动器连接到NitroPad上。(你需要该U盘来保存你的安全密钥）。"

#: ../nitropad/factory-reset-heads2.rst.inc:22
#: ../nitropad/factory-reset.rst.inc:26
msgid "Connect your Nitrokey to the NitroPad."
msgstr "将你的Nitrokey连接到NitroPad。"

#: ../nitropad/factory-reset-heads2.rst.inc:23
#: ../nitropad/factory-reset.rst.inc:31
msgid "Turn on the NitroPad."
msgstr "开启NitroPad。"

#: ../nitropad/factory-reset-heads2.rst.inc:24
#: ../nitropad/factory-reset.rst.inc:32
msgid "Select “Options”."
msgstr "选择 \"选项\"。"

#: ../nitropad/factory-reset.rst.inc:37
msgid "Select “OEM-Factory Reset”."
msgstr "选择 \"OEM-Factory Reset\"。"

#: ../nitropad/factory-reset.rst.inc:46
msgid "Confirm the “OEM Factory Reset” with “Continue”."
msgstr "用 \"继续 \"确认 \"OEM工厂重置\"。"

#: ../nitropad/factory-reset.rst.inc:51
msgid ""
"You will be asked if you want to set the User and Admin/TPM PIN yourself."
" You press Enter to continue without changing the PINs."
msgstr "你会被问到是否要自己设置用户和管理员/TPM PIN。你可以按回车键继续，而不改变PIN码。"

#: ../nitropad/factory-reset.rst.inc:53
msgid ""
"You will then be asked if manual user information should be added. You "
"confirm with ‘y’ and enter your name and then the email address."
msgstr "然后会问你是否应该添加手动用户信息。你用'y'确认，并输入你的名字，然后输入电子邮件地址。"

#: ../nitropad/factory-reset.rst.inc:82
msgid ""
"If you are using Nitrokey Storage, you must then select the drive. If the"
" drives /dev/sdb1, /dev/sdc, /dev/sdd1 are displayed, select /dev/sdd1. "
"If the drives /dev/sdb1, /dev/sdc1, /dev/sdd are displayed, select "
"/dev/sdb1."
msgstr ""
"如果你使用的是Nitrokey "
"Storage，你必须接着选择驱动器。如果显示的是/dev/sdb1、/dev/sdc、/dev/sdd1这些驱动器，请选择/dev/sdd1。如果显示的是/dev/sdb1、/dev/sdc1、/dev/sdd这些驱动器，请选择/dev/sdb1。"

#: ../nitropad/factory-reset.rst.inc:88
msgid ""
"The rest of the configuration will be done automatically. You confirm the"
" subsequent restart."
msgstr "其余的配置将自动完成。你确认随后的重新启动。"

#: ../nitropad/factory-reset-heads2.rst.inc:101
#: ../nitropad/factory-reset.rst.inc:95
msgid ""
"After the restart the OTP secret must be created. Confirm the process "
"with Enter."
msgstr "重新启动后，必须创建OTP秘密。用回车键确认该过程。"

#: ../nitropad/factory-reset.rst.inc:102
msgid "Confirm that new OTP Secrets should be created."
msgstr "确认应该创建新的OTP Secrets。"

#: ../nitropad/factory-reset.rst.inc:109
msgid ""
"When prompted, enter the Admin PIN and TPM password. Both are by default:"
" “12345678”."
msgstr "当出现提示时，输入管理员PIN和TPM密码。两者都是默认的：\"12345678\"。"

#: ../nitropad/factory-reset-heads2.rst.inc:127
#: ../nitropad/factory-reset.rst.inc:116
msgid "You should then reach the Start menu."
msgstr "然后你应该到达 \"开始 \"菜单。"

#: ../nitropad/factory-reset-heads2.rst.inc:132
#: ../nitropad/factory-reset.rst.inc:123
msgid "Press Enter to start the “Default Boot”."
msgstr "按回车键，开始 \"默认启动\"。"

#: ../nitropad/factory-reset-heads2.rst.inc:136
#: ../nitropad/factory-reset.rst.inc:127
msgid ""
"If you see the message that no default exists yet, please follow the "
"procedure described in “Troubleshooting: Default Boot Menu”."
msgstr "如果你看到还没有默认值的信息，请按照 \"故障排除 \"中描述的程序操作。默认启动菜单\"。"

#: ../nitropad/factory-reset.rst.inc:129
msgid ""
"Once the operating system starts until the encryption password is "
"requested, you are done."
msgstr "一旦操作系统启动，直到要求提供加密密码，你就完成了。"

#: ../nitropad/factory-reset.rst.inc:136
msgid ""
"Finally, copy the public PGP key from the data stick to your computer, "
"e.g. to use it for e-mail encryption."
msgstr "最后，将公共PGP密钥从数据棒上复制到你的电脑上，例如用于电子邮件的加密。"

#: ../nitropad/factory-reset-heads2.rst.inc:2
msgid "Factory Reset Heads 2.0"
msgstr "工厂重置头像2.0"

#: ../nitropad/factory-reset-heads2.rst.inc:18
msgid ""
"All data on the Nitrokey will be lost if you reset your device. Therefore"
" please backup your data before performing the reset."
msgstr "如果你重置你的设备，Nitrokey上的所有数据都将丢失。因此，在执行重置之前，请备份你的数据。"

#: ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "heads options menu"
msgstr "头部选项菜单"

#: ../nitropad/factory-reset-heads2.rst.inc:29
msgid "Select “OEM-Factory Reset /Re-Ownership”."
msgstr "选择 \"OEM-Factory Reset /Re-Ownership\"。"

#: ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "reset"
msgstr "重置"

#: ../nitropad/factory-reset-heads2.rst.inc:34
msgid "Confirm Reset with “Continue”."
msgstr "用 \"继续 \"确认重置。"

#: ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "confirm"
msgstr "确认"

#: ../nitropad/factory-reset-heads2.rst.inc:39
msgid ""
"The integrity of your Setup will be tested, deppending on your reason to "
"perform the reset this can fail continue with ok anyways"
msgstr "您的设置的完整性将被测试，取决于您执行重置的原因，这可能会失败，但无论如何都会继续。"

#: ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "confirm integrity"
msgstr "确认完整性"

#: ../nitropad/factory-reset-heads2.rst.inc:44
msgid ""
"The following Question can all be answered with the Default. Just hit "
"enter if you only want to reset your device."
msgstr "下面的问题都可以用 \"默认 \"来回答。如果你只想重置你的设备，就按回车键。"

#: ../nitropad/factory-reset-heads2.rst.inc:91
msgid "It will show the Default GPG PINS and TPM Password"
msgstr "它将显示默认的GPG PINS和TPM密码"

#: ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "defaults"
msgstr "违约"

#: ../nitropad/factory-reset-heads2.rst.inc:96
msgid "confirm the subsequent restart."
msgstr "确认随后的重新启动。"

#: ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "otp secrets generate confirm 1"
msgstr "OTP秘密生成确认1"

#: ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "otp secrets generate confirm 2"
msgstr "OTP秘密生成确认2"

#: ../nitropad/factory-reset-heads2.rst.inc:111
msgid "Enter TPM Password (Default: 12345678)"
msgstr "输入TPM密码（默认：12345678）。"

#: ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "tpm password enter"
msgstr "tpm密码输入"

#: ../nitropad/factory-reset-heads2.rst.inc:116
msgid "Scan QR COde with Phone to inport TOTP Seceret (Optional) and hit Enter"
msgstr "用手机扫描二维码，输入TOTP Seceret（可选）并点击回车。"

#: ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "qr code totp"
msgstr "QR代码TOTP"

#: ../nitropad/factory-reset-heads2.rst.inc:122
msgid ""
"When prompted, enter the Admin PIN of your Nitrokey (Default: 12345678) "
"and hit Enter"
msgstr "当出现提示时，输入你的Nitrokey的管理密码（默认：12345678）并点击回车键。"

#: ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "admin pin nitrokey input"
msgstr "管理引脚硝基键输入"

#: ../nitropad/factory-reset-heads2.rst.inc:-1
msgid "start menu"
msgstr "开始菜单"

#: ../nitropad/firmware-update.rst.inc:6
msgid "This guide describes how to update the Heads firmware of the NitroPad."
msgstr "本指南介绍了如何更新NitroPad的头部固件。"

#: ../nitropad/firmware-update.rst.inc:8
msgid "These instructions are relevant in the following cases:"
msgstr "这些指示与以下情况有关。"

#: ../nitropad/firmware-update.rst.inc:10
msgid "You want to update the Heads firmware."
msgstr "你想更新头盔固件。"

#: ../nitropad/firmware-update.rst.inc:12
msgid ""
"You have already performed an OEM factory reset, but the TPM counter has "
"not been reset."
msgstr "你已经进行了OEM工厂重置，但TPM计数器没有被重置。"

#: ../nitropad/firmware-update.rst.inc:18
msgid "Connect your NitroPad to a power plug and load its battery to over 70%"
msgstr "将您的NitroPad连接到电源插头，并将其电池加载到70%以上。"

#: ../nitropad/firmware-update.rst.inc:21
msgid ""
"Download the `latest firmware "
"<https://github.com/Nitrokey/heads/releases/latest>`__ and store it on a "
"USB drive. For the:"
msgstr ""
"下载`最新固件<https://github.com/Nitrokey/heads/releases/latest>`__ 并将其存储在 USB "
"驱动器中。对于"

#: ../nitropad/firmware-update.rst.inc:23
msgid "NitroPad T430: ``firmware-nitropad-t430-[version].npf``"
msgstr "NitroPad T430：``firmware-nitropad-t430-[version].npf``"

#: ../nitropad/firmware-update.rst.inc:24
msgid "NitroPad X230: ``firmware-nitropad-x230-[version].npf``"
msgstr "NitroPad X230：``firmware-nitropad-x230-[version].npf``"

#: ../nitropad/firmware-update.rst.inc:25
msgid "NitroPad NV41: ``firmware-nitropad-nv41-[version].npf``"
msgstr "NitroPad NV41：``firmware-nitropad-nv41-[version].npf``"

#: ../nitropad/firmware-update.rst.inc:26
msgid "NitroPad NS50: ``firmware-nitropad-ns50-[version].npf``"
msgstr "NitroPad NS50：``firmware-nitropad-ns50-[version].npf``"

#: ../nitropad/firmware-update.rst.inc:29
msgid "Firmware Signature Check"
msgstr "固件签名检查"

#: ../nitropad/firmware-update.rst.inc:31
msgid "To verify the firmware follow these steps:"
msgstr "要验证固件，请按以下步骤操作："

#: ../nitropad/firmware-update.rst.inc:33
msgid ""
"Download  `sha256sum.sig "
"<https://github.com/Nitrokey/heads/releases/latest>`__ and store it"
msgstr "下载`sha256sum.sig<https://github.com/Nitrokey/heads/releases/latest>`__并存储它"

#: ../nitropad/firmware-update.rst.inc:35
#, python-format
msgid ""
"Download and import Markus Meissners `gpg key "
"<https://keyserver.ubuntu.com/pks/lookup?search=coder%40safemailbox.de&fingerprint=on&op=index>`__"
msgstr ""
"下载并导入 Markus Meissners`gpg "
"密钥<https://keyserver.ubuntu.com/pks/lookup?search=coder%40safemailbox.de&fingerprint=on&op=index>`__。"

#: ../nitropad/firmware-update.rst.inc:37
msgid "Verify the signature:"
msgstr "验证签名："

#: ../nitropad/firmware-update.rst.inc:44
msgid "You expect an output like this one:"
msgstr "你希望得到这样的输出结果："

#: ../nitropad/firmware-update.rst.inc:54
msgid "This verifys the file."
msgstr "这将验证文件。"

#: ../nitropad/firmware-update.rst.inc:59
msgid ""
"This is the actual update procedure. Usually the first two screens will "
"not be shown - in that case please start from step 3."
msgstr "这就是实际的更新程序。通常情况下，前两个屏幕不会显示 - 在这种情况下，请从第3步开始。"

#: ../nitropad/firmware-update.rst.inc:61
#: ../nitropad/firmware-update.rst.inc:69
msgid "(Optional screen) Select “Ignore error and continue to default boot menu”."
msgstr "(可选屏幕）选择 \"忽略错误，继续使用默认启动菜单\"。"

#: ../nitropad/firmware-update.rst.inc:77
msgid "Go to “Options”."
msgstr "转到 \"选项\"。"

#: ../nitropad/firmware-update.rst.inc:84
msgid "Select “Flash/Update the BIOS”."
msgstr "选择 \"Flash/Update BIOS\"。"

#: ../nitropad/firmware-update.rst.inc:91
msgid "Please confirm the first option."
msgstr "请确认第一个选项。"

#: ../nitropad/firmware-update.rst.inc:105
msgid "Select the desired .npf file."
msgstr "选择所需的.npf文件。"

#: ../nitropad/firmware-update.rst.inc:119
msgid "Confirm the restart with Enter."
msgstr "用Enter确认重启。"

#: ../nitropad/firmware-update.rst.inc:126
msgid "You have successfully updated your firmware!"
msgstr "你已经成功地更新了你的固件!"

#: ../nitropad/firmware-update.rst.inc:129
msgid "Further steps"
msgstr "进一步的步骤"

#: ../nitropad/firmware-update.rst.inc:132
msgid ""
"There is a known issue with the NV41 that it can get stuck after the "
"update in the boot splash(heads takes longer then 30s to get up). This "
"solves it self after max 5 restarts (pressing the power button short). If"
" not please contact support@nitrokey.com"
msgstr ""
"NV41 有一个已知的问题，即更新后可能会卡死在启动画面中（启动需要 30 秒以上的时间）。最多重启 5 "
"次（短按电源按钮）后即可自行解决。如果不能解决，请联系 support@nitrokey.com。"

#: ../nitropad/firmware-update.rst.inc:134
msgid ""
"In case ``ERROR: TOTP Generation Failed!`` screen will show up, please "
"follow the instructions for Factory Reset (on the left side menu), "
"starting from step"
msgstr "如果出现``ERROR: TOTP Generation Failed!`` 屏幕，请按照 \"出厂重置\"（在左侧菜单中）的说明从以下步骤开始操作"

#: ../nitropad/firmware-update-1.4.rst.inc:2
msgid "Firmware Update v1.4+"
msgstr "固件更新 v1.4+"

#: ../nitropad/firmware-update-1.4.rst.inc:6
msgid ""
"Starting with v1.4 due to elementary changes inside Heads and the "
"firmware layout, the update requires some additional considerations. This"
" applies for both NitroPads X230 and T430."
msgstr "从V1.4版本开始，由于Heads内部和固件布局的基本变化，更新需要一些额外的考虑。这适用于NitroPads X230和T430。"

#: ../nitropad/firmware-update-1.4.rst.inc:11
msgid "Should I update my NitroPad?"
msgstr "我应该更新我的NitroPad吗？"

#: ../nitropad/firmware-update-1.4.rst.inc:13
msgid ""
"When updating your firmware to 1.4 (without using an external flasher "
"device) the graphical HEADS dialogues will be replaced with a less "
"convenient text-only version."
msgstr "当更新您的固件到1.4时（不使用外部flasher设备），图形化的HEADS对话框将被一个不太方便的纯文本版本取代。"

#: ../nitropad/firmware-update-1.4.rst.inc:17
msgid ""
"If you use Ubuntu, Debian, LinuxMint, or Qubes 4.0 updating the firmware "
"beyond v1.3.1 is (as of today) not needed. If you use Qubes 4.1 *without*"
" the integrated Ethernet port, you don't need to update the firmware "
"either."
msgstr ""
"如果你使用Ubuntu、Debian、LinuxMint或Qubes 4.0，则不需要更新超过v1.3.1的固件（从今天起）。如果你使用Qubes"
" 4.1 *没有*集成以太网端口，你也不需要更新固件。"

#: ../nitropad/firmware-update-1.4.rst.inc:21
msgid ""
"If you want to use Qubes 4.1 or newer *and* the integrated Ethernet port "
"you need to update the firmware to 1.4."
msgstr "如果你想使用Qubes 4.1或更新的*和*集成的以太网端口，你需要将固件更新到1.4。"

#: ../nitropad/firmware-update-1.4.rst.inc:25
msgid ""
"If the `.npf` file is not accepted by HEADS, likely you do not run the "
"latest HEADS version. So either 1st update to version 1.3.1 or `unzip` "
"the `.npf` file and use the resulting `.rom` file instead."
msgstr ""
"如果\".npf "
"\"文件不被HEADS接受，可能你没有运行最新的HEADS版本。因此，要么第1次更新到1.3.1版本，要么`解压缩`.npf`文件并使用产生的`.rom`文件代替。"

#: ../nitropad/firmware-update-1.4.rst.inc:31
msgid "How can I update my NitroPad?"
msgstr "我怎样才能更新我的NitroPad？"

#: ../nitropad/firmware-update-1.4.rst.inc:33
msgid "Updating from ``v1.3.1`` onwards has two different ways:"
msgstr "从``v1.3.1``开始的更新有两种不同方式。"

#: ../nitropad/firmware-update-1.4.rst.inc:35
msgid ""
"Legacy update using either ``nitropad-t430-v1.4.npf`` or "
"``nitropad-x230-v1.4.npf`` from the Heads menu, see: :doc:`firmware-"
"update`"
msgstr ""
"使用``nitropad-t430-v1.4.npf`或``nitropad-x230-v1.4.npf``从头菜单中进行传统更新，见：:doc"
":`firmware-update`。"

#: ../nitropad/firmware-update-1.4.rst.inc:37
msgid ""
"When using an external flasher device you can use the ``-maximized`` "
"images. This keeps graphical HEADS dialogues working. Read about the "
"external flashing below."
msgstr "当使用外部闪光灯设备时，您可以使用``-maximized``图像。这可以保持图形化的HEADS对话工作。阅读下面关于外部闪动的内容。"

#: ../nitropad/firmware-update-1.4.rst.inc:41
msgid ""
"Never try updating your NitroPad using the `-maximized` image, if you do "
"not know exactly what you are doing! You will brick your NitroPad and it "
"can only be repaired using an external flasher!"
msgstr ""
"如果你不知道自己在做什么，千万不要尝试使用 \"最大化 "
"\"的镜像来更新你的NitroPad。你会使你的NitroPad变脆，而且只能用外部闪光灯来修复它。"

#: ../nitropad/firmware-update-1.4.rst.inc:47
msgid "How can I update to *-maximized*?"
msgstr "我怎样才能更新到*-maximized*？"

#: ../nitropad/firmware-update-1.4.rst.inc:50
msgid ""
"We highly recommend to NOT DO THIS ON YOUR OWN, as long as you are not "
"exactly know what you are doing!"
msgstr "我们强烈建议不要自己做这个，只要你不完全知道自己在做什么。"

#: ../nitropad/firmware-update-1.4.rst.inc:53
msgid ""
"We have a service to do this upgrade on your NitroPad, please write an "
"e-mail to \"shop at nitrokey.com\" together with your sales order number "
"(SOxxxxxx)."
msgstr "我们有为您的NitroPad进行升级的服务，请将您的销售订单号（SOxxxxxx）写到\"shop at nitrokey.com\" 。"

#: ../nitropad/firmware-update-1.4.rst.inc:56
msgid ""
"The following procedure describes roughly how to flash your NitroPad "
"using an external flasher - it is intentionally on a high level as we do "
"not recommend doing this process on your own. But for the sake of "
"completeness we document this here for the curios."
msgstr "但为了完整起见，我们在这里为好奇的人记录了这个过程。"

#: ../nitropad/firmware-update-1.4.rst.inc:61
msgid ""
"Make sure you have a (``flashrom``) compatible flasher like "
"``ch341a_spi`` with a SOIC-8 clamp."
msgstr "确保你有一个（``flashrom```）兼容的闪光器，如``ch341a_spi```，带有SOIC-8夹钳。"

#: ../nitropad/firmware-update-1.4.rst.inc:63
msgid ""
"Open the device (`see coreboot docs "
"<https://doc.coreboot.org/mainboard/lenovo/Ivy_Bridge_series.html>`__) "
"and make sure you can access both flash chips."
msgstr ""
"打开设备（`see coreboot docs "
"<https://doc.coreboot.org/mainboard/lenovo/Ivy_Bridge_series.html>`__）并确保你可以访问两个闪存芯片。"

#: ../nitropad/firmware-update-1.4.rst.inc:66
msgid "Using ``flashrom`` read out the **bottom** flash (the 8MB image)"
msgstr "使用``flashrom``读出**底层的闪存（8MB的图像）。"

#: ../nitropad/firmware-update-1.4.rst.inc:68
msgid ""
"Using ``ifdtool`` (`coreboot ifdtool docs "
"<https://doc.coreboot.org/ifdtool/index.html>`__) extract the ``GbE`` "
"flashregion from the image and replace the ``GbE``-region inside your "
"``-maximized`` image."
msgstr ""
"使用``ifdtool``（`coreboot ifdtool docs "
"<https://doc.coreboot.org/ifdtool/index.html>`__）提取<xid=\"104\"></x>`GbE``从图像中提取flashregion，并将``GbE``-区域在你的``-maximized``图像内。"

#: ../nitropad/firmware-update-1.4.rst.inc:71
msgid ""
"Split the modified firmware image using ``dd`` (as described in the "
"coreboot documentation) into ``-top`` and ``-bottom``"
msgstr "使用``dd``（如coreboot文档中所述）将修改后的固件镜像分割成``-top``和``</x>``。"

#: ../nitropad/firmware-update-1.4.rst.inc:73
msgid "Flash the images to the matching flash chips using your flasher and clamp"
msgstr "用你的闪光灯和夹子将图像闪到匹配的闪光芯片上。"

#: ../nitropad/firmware-update-1.4.rst.inc:75
msgid ""
"Reboot into your system (you should see ``-maximized`` inside the Heads "
"menu)"
msgstr "重新启动你的系统（你应该看到``-maximized``在Heads菜单内）。"

#: ../nitropad/firmware-update-1.4.rst.inc:79
msgid "Background information"
msgstr "背景资料"

#: ../nitropad/firmware-update-1.4.rst.inc:81
msgid ""
"The new firmware *class* of ``-maximized`` images change the firmware "
"layout in a way that it is incompatible with Heads' internal firmware "
"upgrade feature on the NitroPads."
msgstr "``-maximized``图像的新固件*类改变了固件布局，与Heads'；NitroPads的内部固件升级功能不兼容。"

#: ../nitropad/firmware-update-1.4.rst.inc:85
msgid ""
"This change mainly originates from a reduces *Management Engine* size "
"inside the firmware image. Furthermore the ``-maximized`` images do "
"contain all flash regions inside the firmware, this also includes "
"``GbE``, which contains the Ethernet MAC address."
msgstr "这一变化主要源于固件图像中*管理引擎*大小的减少。此外，``-maximized``图像确实包含了固件内的所有闪存区域，这也包括``GbE``，它包含以太网MAC地址。"

#: ../nitropad/firmware-update-1.4.rst.inc:90
msgid ""
"The non ``-maximized`` images have no **functional** differences compared"
" to the ``-maximized`` images except of the reduced Heads GUI."
msgstr "非``-maximized``图像与``-maximized``图像相比没有**功能上的差异，除了减少头的GUI。"

#: ../nitropad/qubes/index.rst:2
msgid "NitroPad with Qubes OS"
msgstr "带有Qubes操作系统的NitroPad"

#: ../nitropad/qubes/index.rst:9 ../nitropad/ubuntu/index.rst:31
msgid ""
"After purchase, the passwords are set to a default value and must be "
"changed by you:"
msgstr "购买后，密码被设置为默认值，必须由您来更改。"

#: ../nitropad/qubes/index.rst:12 ../nitropad/ubuntu/index.rst:34
msgid ""
"Press Enter (“Default Boot”) after booting the system, provided the "
"NitroPad has not shown any errors and the Nitrokey is lit green (see "
"above)."
msgstr "在启动系统后按回车键（\"默认启动\"），前提是NitroPad没有显示任何错误，且Nitrokey亮起绿色（见上文）。"

#: ../nitropad/qubes/index.rst:16
msgid ""
"Next, the system will prompt you to enter the passphrase to decrypt the "
"hard disk. The passphrase is initially \"12345678\". This was changed on "
"the 15.01.2024 so if \"12345678\" is not working try the old default: "
"\"PleaseChangeMe\""
msgstr ""
"接下来，系统会提示你输入密码来解密硬盘。密码最初为 \"12345678\"。该密码在 15.01.2024 时已更改，因此如果 "
"\"12345678 \"无法使用，请尝试使用旧的默认密码：\"PleaseChangeMe\"。"

#: ../nitropad/qubes/index.rst:22 ../nitropad/ubuntu/index.rst:44
msgid ""
"The system will then guide you through the process of creating a user "
"account. After that you should have successfully booted the system and "
"could already use it normally."
msgstr "然后，系统将引导你完成创建用户账户的过程。之后，你应该已经成功启动了系统，并且已经可以正常使用。"

#: ../nitropad/qubes/index.rst:26
msgid ""
"Open the pre-installed Nitrokey App and change the PINs of your Nitrokey "
"as `described here <change-pins.html>`_."
msgstr "打开预装的Nitrokey应用程序，按照`这里描述的<change-pins.html>`_更改Nitrokey的密码。"

#: ../nitropad/qubes/index.rst:29
msgid ""
"Change the passphrase for the hard disk encryption by searching in the "
"Qubes Menu for \"Change Disk Passwort\". This passphrase is different "
"from your user acount's passphrase."
msgstr "在 Qubes 菜单中选择 \"更改磁盘密码\"，更改硬盘加密的密码。该密码与用户账户密码不同。"

#: ../nitropad/qubes/network-settings.rst:2
msgid "Enable Network Settings, e.g. Wifi"
msgstr "启用网络设置，如：Wifi"

#: ../nitropad/qubes/network-settings.rst:4
msgid ""
"To be able to use Wifi, Bluetooth and other functionalities, \"Settings\""
" must be activated in \"sys-net\"."
msgstr "为了能够使用Wifi、蓝牙和其他功能，必须在\"sys-net\"中激活\"设置\"。"

#: ../nitropad/qubes/network-settings.rst:7
msgid "Click on the top left Qubes Icon and select Qubes:Settings under sys-net."
msgstr "点击左上方的Qubes图标，选择sys-net下的Qubes:设置。"

#: ../nitropad/qubes/network-settings.rst:12
msgid ""
"Go to Applications, select \"Settings\" and click \">\" to move it to the"
" right side."
msgstr "进入应用程序，选择\"设置\"，并点击\">\"，将其移至右侧。"

#: ../nitropad/qubes/network-settings.rst:13
msgid "Click \"Apply\" and after wards \"Ok\"."
msgstr "点击\"应用\"，然后点击\"好\"。"

#: ../nitropad/qubes/network-settings.rst:14
msgid "Now you should have \"Settings\" visible under sys-net."
msgstr "现在你应该在sys-net下看到\"设置\"。"

#: ../nitropad/qubes/network-settings.rst:18
msgid ""
"If it won't open Settings after clicking on it, please follow the "
"instructions below."
msgstr "如果点击后无法打开设置，请按照以下说明进行操作。"

#: ../nitropad/qubes/network-settings.rst:21
msgid "Fix sys-net Settings"
msgstr "修复系统网络设置"

#: ../nitropad/qubes/network-settings.rst:23
msgid "Go to the sys-net Terminal."
msgstr "转到sys-net终端。"

#: ../nitropad/qubes/network-settings.rst:24
msgid "Open the bashrc-file with ``sudo vim ~/.bashrc``."
msgstr "用``sudo vim ~/.bashrc``打开bashrc-文件。"

#: ../nitropad/qubes/network-settings.rst:29
msgid ""
"Press \"i\" to enable the editing and add ``export "
"XDG_CURRENT_DESKTOP=GNOME`` to the file."
msgstr "按\"i\"启用编辑，并将``export XDG_CURRENT_DESKTOP=GNOME``加入文件。"

#: ../nitropad/qubes/network-settings.rst:34
msgid "Save the changes with ``:wq``."
msgstr "用``:wq``保存更改。"

#: ../nitropad/qubes/network-settings.rst:35
msgid "Restart your NitroPad."
msgstr "重新启动你的NitroPad。"

#: ../nitropad/qubes/network-settings.rst:36
msgid "Now Settings should be visible."
msgstr "现在设置应该是可见的。"

#: ../nitropad/qubes/nitrokey-app.rst:2 ../nitropad/ubuntu/nitrokey-app.rst:2
#: ../nitropc/ubuntu/nitrokey-app.rst:2
msgid "Nitrokey App Installation"
msgstr "Nitrokey应用程序的安装"

#: ../nitropad/qubes/nitrokey-app.rst:5
msgid ""
"Most of the time the app is already pre installed. You simply need to "
"press the button \"refresh applications\" under the sys-usb settings (see"
" picture point 7), if the app don't show up in the menu."
msgstr "大多数情况下，该应用程序已经预先安装。如果应用程序没有出现在菜单中，你只需按下系统-usb设置下的 \"刷新应用程序 \"按钮（见图7）。"

#: ../nitropad/qubes/nitrokey-app.rst:8
msgid ""
"Set in the \"Qubes Settings\" of sys-usb \"Networking\" to default and "
"\"Apply\" the changes."
msgstr "在sys-usb的\"Qubes Settings\"中设置\"Networking\"为默认值，然后\"Apply\"改变。"

#: ../nitropad/qubes/nitrokey-app.rst:14
msgid ""
"Set in the \"Qubes Settings\" of fedora template \"Networking\" to "
"default and \"Apply\" the changes."
msgstr "在Fedora模板的\"Qubes Settings\"中设置\"Networking\"为默认，并\"Apply\"修改。"

#: ../nitropad/qubes/nitrokey-app.rst:19
msgid ""
"Open the terminal of the fedora template and run ``sudo dnf install "
"nitrokey-app``."
msgstr "打开fedora模板的终端，运行``sudo dnf install nitrokey-app``。"

#: ../nitropad/qubes/nitrokey-app.rst:24
msgid "Shut down the template."
msgstr "关闭模板。"

#: ../nitropad/qubes/nitrokey-app.rst:26
msgid "Restart all qubes based on the template."
msgstr "在模板的基础上重新启动所有qubes。"

#: ../nitropad/qubes/nitrokey-app.rst:28
msgid "Go to \"Application\" of sys-usb and select the Nitrokey App."
msgstr "进入sys-usb的\"应用\"，选择Nitrokey应用。"

#: ../nitropad/qubes/nitrokey-app.rst:33
msgid ""
"Click the arrow pointing to the right side to move it to the shortcuts "
"and \"Apply\" the changes."
msgstr "点击指向右侧的箭头，将其移动到快捷方式上，并\"应用\"改变。"

#: ../nitropad/qubes/nitrokey-app.rst:38
msgid "Now you can access the Nitrokey App by clicking on sys-usb."
msgstr "现在你可以通过点击sys-usb进入Nitrokey应用程序。"

#: ../nitropad/os-reinstallation.rst.inc:2
#: ../nitropc/os-reinstallation.rst.inc:2
msgid "Operating System Reinstallation"
msgstr "操作系统的重新安装"

#: ../nitropad/os-reinstallation.rst.inc:8
#: ../nitropad/os-reinstallation.rst.inc:47
#: ../nitropc/os-reinstallation.rst.inc:9
msgid ""
"Booting this USB drive entirely erases all data on the hard disk or SSD "
"of the NitroPad without further warning. Don’t boot this USB drive on any"
" computer which contains data you want to keep. Make sure to format the "
"USB drive after the intended use."
msgstr "启动这个USB驱动器会完全删除NitroPad硬盘或固态硬盘上的所有数据，而不会有进一步的警告。请不要在任何含有你想保留的数据的电脑上启动该USB驱动器。请确保在使用完USB驱动器后对其进行格式化。"

#: ../nitropad/os-reinstallation.rst.inc:15
msgid ""
"Due to a bug Linux Mint 21 is currently not supported. The latest "
"supported version is Linux Mint 20.1"
msgstr "由于一个错误，Linux Mint 21目前不被支持。最新的支持版本是Linux Mint 20.1。"

#: ../nitropad/os-reinstallation.rst.inc:17
msgid ""
"Download one of the operating system images: `Ubuntu Linux "
"<https://www.nitrokey.com/files/ci/ubuntu/>`__, `Qubes OS "
"<https://www.nitrokey.com/files/ci/qubes/>`__, `Debian "
"<https://www.nitrokey.com/files/ci/nitropad/debian-oem/>`__, `Linux Mint "
"<https://linuxmint.com/download.php>`__"
msgstr ""
"下载其中一个操作系统映像：`Ubuntu "
"Linux<https://www.nitrokey.com/files/ci/ubuntu/>`__,`Qubes "
"OS<https://www.nitrokey.com/files/ci/qubes/>`__,`Debian<https://www.nitrokey.com/files/ci/nitropad"
"/debian-oem/>`__,`Linux Mint<https://linuxmint.com/download.php>`__"

#: ../nitropad/os-reinstallation.rst.inc:22
#: ../nitropc/os-reinstallation.rst.inc:18
msgid ""
"Optional: Download hash sum and `verify <https://proprivacy.com/guides"
"/how-why-and-when-you-should-hash-check#how-to-hash-check>`__ the "
"downloaded operating system image."
msgstr ""
"可选的。下载哈希值并`验证<https://proprivacy.com/guides/how-why-and-when-you-should-"
"hash-check#how-to-hash-check>`__下载的操作系统镜像。"

#: ../nitropad/os-reinstallation.rst.inc:26
#: ../nitropc/os-reinstallation.rst.inc:22
msgid "Write the operating system image to any USB drive. Possible applications:"
msgstr "将操作系统镜像写入任何USB驱动器。可能的应用。"

#: ../nitropad/os-reinstallation.rst.inc:29
#: ../nitropc/os-reinstallation.rst.inc:25
msgid ""
"Windows: `Rufus <https://rufus.ie/>`__, `balenaEtcher "
"<https://www.balena.io/etcher/>`__;"
msgstr ""
"窗口。`Rufus <https://rufus.ie/>`__, `balenaEtcher "
"<https://www.balena.io/etcher/>`__。"

#: ../nitropad/os-reinstallation.rst.inc:31
#: ../nitropc/os-reinstallation.rst.inc:27
msgid "Linux: ``dd``, `balenaEtcher <https://www.balena.io/etcher/>`__;"
msgstr "Linux。``dd``, `balenaEtcher <https://www.balena.io/etcher/>`__。"

#: ../nitropad/os-reinstallation.rst.inc:32
#: ../nitropc/os-reinstallation.rst.inc:28
msgid "macOS: ``dd``, `balenaEtcher <https://www.balena.io/etcher/>`__."
msgstr "macOS。``dd``, `balenaEtcher <https://www.balena.io/etcher/>`__。"

#: ../nitropad/os-reinstallation.rst.inc:34
msgid ""
"Connect the USB drive to your NitroPad and start it. In Heads menu select"
" Boot Options -> USB Boot."
msgstr "将USB驱动器连接到你的NitroPad上并启动它。在头部菜单中选择启动选项-> USB启动。"

#: ../nitropad/os-reinstallation.rst.inc:37
msgid ""
"Depending on the operating system you may need to confirm its "
"reinstallation."
msgstr "根据操作系统的不同，你可能需要确认其重新安装。"

#: ../nitropad/os-reinstallation.rst.inc:40
msgid "`Sign the boot partition. <system-update.html>`_"
msgstr "`在启动分区上签名。<system-update.html>`_"

#: ../nitropad/os-reinstallation.rst.inc:43
#: ../nitropc/os-reinstallation.rst.inc:41
msgid ""
"To avoid accidential overwriting of valuable data, format the USB drive "
"afterwards."
msgstr "为了避免有价值的数据被意外覆盖，请在事后格式化USB驱动器。"

#: ../nitropad/sealed-hardware.rst.inc:6
msgid ""
"If you ordered your NitroPad with sealed screws and in a sealed bag, it "
"allows you to check if the NitroPad has been tampered with during "
"shipping."
msgstr "如果你订购的NitroPad带有密封的螺丝并装在密封的袋子里，就可以检查NitroPad在运输过程中是否被篡改过。"

#: ../nitropad/sealed-hardware.rst.inc:8
msgid ""
"The bag and all screws on the bottom of the device have been sealed. For "
"the bag and each of these screws you have received a photo by e-mail. The"
" orientation of the photos is such that the battery is on top."
msgstr "袋子和设备底部的所有螺丝都已密封。对于袋子和每个螺丝，你已经通过电子邮件收到了一张照片。照片的方向是这样的：电池在上面。"

#: ../nitropad/sealed-hardware.rst.inc:10
msgid ""
"Check each screw individually to see if its individual appearance matches"
" the photo. It is best to use a magnifying glass or macro lens for this "
"purpose. The screws are numbered as follows."
msgstr "逐一检查每颗螺丝，看其各自的外观是否与照片相符。为此，最好使用放大镜或微距镜头。螺钉的编号如下。"

#: ../nitropad/sealed-hardware.rst.inc:14
msgid "Nitropad NV41:"
msgstr "Nitropad NV41："

#: ../nitropad/sealed-hardware.rst.inc
msgid "NV41"
msgstr "辽宁沈阳"

#: ../nitropad/sealed-hardware.rst.inc:19
msgid "Nitropad NS50:"
msgstr "Nitropad NS50："

#: ../nitropad/sealed-hardware.rst.inc
msgid "NS50"
msgstr "NS50"

#: ../nitropad/sealed-hardware.rst.inc:24
msgid "NitroPad X230:"
msgstr "NitroPad X230。"

#: ../nitropad/sealed-hardware.rst.inc
msgid "X230"
msgstr "X230"

#: ../nitropad/sealed-hardware.rst.inc:29
msgid "NitroPad T430:"
msgstr "NitroPad T430。"

#: ../nitropad/sealed-hardware.rst.inc
msgid "T430"
msgstr "T430"

#: ../nitropad/sealed-hardware.rst.inc:35 ../nitropc/sealed-hardware.rst.inc:15
msgid ""
"This example shows a sealed screw whose glitter represents an individual "
"pattern."
msgstr "这个例子显示了一个密封的螺丝，其闪光点代表了一个单独的图案。"

#: ../nitropad/sealed-hardware.rst.inc ../nitropc/sealed-hardware.rst.inc
#: ../pro/linux/index.rst:-1 ../pro/mac/index.rst:-1
#: ../pro/windows/index.rst:-1
msgid "img"
msgstr "图片"

#: ../nitropad/sealed-hardware.rst.inc:42
msgid ""
"If the bag or the screws do not match the photos sent, an unauthorized "
"opening of your NitroPad cannot be excluded. In this case please contact "
"us to arrange further action."
msgstr "如果包装袋或螺丝与发送的照片不一致，不能排除您的NitroPad被擅自打开的可能性。在这种情况下，请联系我们以安排进一步的行动。"

#: ../nitropad/system-update.rst.inc:2
msgid "System update"
msgstr "系统更新"

#: ../nitropad/system-update.rst.inc:6
msgid ""
"The NitroPad watches for changes to important system files to detect "
"third-party tampering. This means that special steps are sometimes "
"necessary when updating the system. This can often be recognized by the "
"fact that the system prompts you to reboot."
msgstr "NitroPad会观察重要系统文件的变化，以检测第三方的篡改行为。这意味着在更新系统时有时需要采取特殊步骤。这通常可以通过系统提示你重启的事实来识别。"

#: ../nitropad/system-update.rst.inc:9
msgid "Procedure After a System Update"
msgstr "系统更新后的程序"

#: ../nitropad/system-update.rst.inc:12
msgid "Boot Hash Mismatch"
msgstr "启动哈希值不匹配"

#: ../nitropad/system-update.rst.inc:14
msgid ""
"If you restart the NitroPad after an update, the startup screen should "
"initially appear as usual without an error message."
msgstr "如果你在更新后重新启动NitroPad，最初的启动屏幕应该像往常一样出现，不会有错误信息。"

#: ../nitropad/system-update.rst.inc:22
msgid ""
"If you press Enter afterwards, you will get an error message that looks "
"like this or similar:"
msgstr "如果你事后按回车键，你会得到一个错误信息，看起来像这样或类似的信息。"

#: ../nitropad/system-update.rst.inc:30
msgid ""
"Confirm the message with Enter to have the files changed by the system "
"update verified. Afterwards you will be asked again for a confirmation."
msgstr "用回车键确认信息，使系统更新所改变的文件得到验证。之后，你会被再次要求确认。"

#: ../nitropad/system-update.rst.inc:39
msgid ""
"Now insert the Nitrokey if this is not already the case and confirm with "
"Enter. Then you must enter the User PIN of the Nitrokey (default: "
"123456). You will not see the characters you typed in on the screen."
msgstr "现在插入硝基钥匙，如果还没有的话，用回车键确认。然后你必须输入硝基钥匙的用户密码（默认：123456）。你不会在屏幕上看到你输入的字符。"

#: ../nitropad/system-update.rst.inc:45 ../nitropad/system-update.rst.inc:101
msgid ""
"Heads expects an English keyboard layout, on which e.g. “y” and “z” are "
"swapped in comparison to the German keyboard layout. If you agree with "
"the default selection (which is written in capital letter) you can also "
"simply confirm by pressing Enter."
msgstr ""
"Heads希望使用英语键盘布局，例如，与德语键盘布局相比，\"y \"和 \"z "
"\"被调换了。如果你同意默认选择（用大写字母书写），你也可以简单地按回车键确认。"

#: ../nitropad/system-update.rst.inc:61
msgid "Now the NitroPad marks the files changed by the update as verified."
msgstr "现在，NitroPad将被更新改变的文件标记为已验证。"

#: ../nitropad/system-update.rst.inc:64
msgid "Boot Entry Has Changed"
msgstr "开机进入已经改变了"

#: ../nitropad/system-update.rst.inc:66
msgid ""
"Next, either another error message appears or the operating system "
"starts. This depends on the system update. If the following error message"
" appears, proceeds as described below:"
msgstr "接下来，要么出现另一条错误信息，要么操作系统启动。这取决于系统的更新情况。如果出现以下错误信息，请按下文所述进行。"

#: ../nitropad/system-update.rst.inc:75
msgid ""
"First confirm the error message shown above. Then we see a list of all "
"possible boat entries - choose the first one by simply pressing Enter."
msgstr "首先确认上面显示的错误信息。然后，我们看到一个所有可能的船条目的列表--通过简单地按回车键选择第一个条目。"

#: ../nitropad/system-update.rst.inc:84
msgid ""
"To save this value as default, select the option “Make Ubuntu the "
"default” for Ubuntu or “Make Qubes the default” for Qubes OS in the next "
"window."
msgstr ""
"要把这个值保存为默认值，在下一个窗口中选择Ubuntu的 \"使Ubuntu成为默认值 \"或Qubes OS的 \"使Qubes成为默认值 "
"\"选项。"

#: ../nitropad/system-update.rst.inc:93
msgid "Now the Nitrokey has to be plugged in, if this is not yet the case."
msgstr "现在Nitrokey必须被插入，如果还没有的话。"

#: ../nitropad/system-update.rst.inc:95
msgid "Confirm the question \"Saving a default will modify the disk\" with Y."
msgstr "确认问题\"保存默认值将修改磁盘\"为Y。"

#: ../nitropad/system-update.rst.inc:96
msgid ""
"Confirm the question \"Do you wish to add a disk encryption to the TPM\" "
"with N."
msgstr "确认问题\"你是否希望在TPM上添加磁盘加密\"为N。"

#: ../nitropad/system-update.rst.inc:97
msgid ""
"Confirm the question \"Please confirm that your GPG card is inserted\" "
"with Y."
msgstr "确认问题\"请确认您的GPG卡已插入\"与Y。"

#: ../nitropad/system-update.rst.inc:98
msgid "Enter the User PIN of the Nitrokey whenever prompted (default: 123456)."
msgstr "只要有提示，就输入Nitrokey的用户密码（默认：123456）。"

#: ../nitropad/troubleshooting.rst.inc:17
msgid "Starting in recovery shell"
msgstr "在恢复壳中开始"

#: ../nitropad/troubleshooting.rst.inc:19
msgid ""
"If your OS doesn’t boot as shown below, please execute the following "
"steps:"
msgstr "如果你的操作系统不能如下图所示启动，请执行以下步骤。"

#: ../nitropad/troubleshooting.rst.inc:32
msgid "Restart your Laptop and go to Options."
msgstr "重新启动你的笔记本电脑并进入选项。"

#: ../nitropad/troubleshooting.rst.inc:37
msgid "Select “Update Checksums and sign all files on /boot”."
msgstr "选择 \"更新校验和并签署/boot上的所有文件\"。"

#: ../nitropad/troubleshooting.rst.inc:42
msgid ""
"After that, please follow `these instructions <system-update.html>`_ from"
" step 3 onwards."
msgstr "之后，请按照`这些说明<system-update.html>`_从第3步开始。"

#: ../nitropad/troubleshooting.rst.inc:45
msgid "NitroPad doesn’t start"
msgstr "NitroPad无法启动"

#: ../nitropad/troubleshooting.rst.inc:47
msgid ""
"If the Laptop does not start and only flashes briefly when switched on, "
"please try the following steps:"
msgstr "如果笔记本电脑不能启动，开机时只短暂闪烁，请尝试以下步骤。"

#: ../nitropad/troubleshooting.rst.inc:50
msgid ""
"Try a hard reboot: Remove the power supply and battery and press and hold"
" the power button for 20 seconds. Then reconnect the power supply and "
"battery and start."
msgstr "尝试硬重启。卸下电源和电池，按住电源按钮20秒。然后重新连接电源和电池并启动。"

#: ../nitropad/troubleshooting.rst.inc:54
msgid ""
"If this did not work: Remove the battery or start only with the power "
"supply connected."
msgstr "如果这不起作用取出电池或仅在连接电源的情况下启动。"

#: ../nitropad/troubleshooting.rst.inc:57
msgid "You could also try removing the RAMs and reinserting them."
msgstr "你也可以尝试卸下内存并重新插入。"

#: ../nitropad/troubleshooting.rst.inc:60
msgid "Invalid Code"
msgstr "无效代码"

#: ../nitropad/troubleshooting.rst.inc:62
msgid ""
"Each boot the code is generated on the Nitropad and the Nitrokey, if its "
"connected. It is allowed to run 10 boots without loosing the "
"synchronization between the devices, after which the bad code signal is "
"shown, regardless of the rest of the system being in a correct state. If "
"you are sure the system was not beign tampered with (e.g. the Nitropad "
"was booted more than 10 times without the Nitrokey), you can safely reset"
" the system’s warning."
msgstr "每次启动都会在Nitropad和Nitrokey上产生代码，如果它被连接的话。允许运行10次而不失去设备之间的同步，之后就会显示坏的代码信号，不管系统的其他部分是否处于正确状态。如果你确定系统没有被篡改（例如Nitropad在没有Nitrokey的情况下启动了10次以上），你可以安全地重置系统的警告。"

#: ../nitropad/troubleshooting.rst.inc:70
msgid ""
"Please connect the Nitrokey and execute the following from the main boot "
"screen:"
msgstr "请连接Nitrokey并在主启动屏幕上执行以下内容。"

#: ../nitropad/troubleshooting.rst.inc:73
msgid "Options"
msgstr "选择"

#: ../nitropad/troubleshooting.rst.inc:74
msgid "TPM/TOTP/HOTP Options"
msgstr "TPM/TOTP/HOTP选项"

#: ../nitropad/troubleshooting.rst.inc:75
msgid "Generate new TOTP/HOTP secret"
msgstr "生成新的TOTP/HOTP秘密"

#: ../nitropad/troubleshooting.rst.inc:77
msgid ""
"and follow the on-screen guide. After that the secret and counter should "
"be both reset to a new value."
msgstr "并按照屏幕上的提示操作。之后，秘密和计数器应该都被重置为一个新的值。"

#: ../nitropad/qubes/user-password-reset.rst:2
msgid "User Password Reset"
msgstr "用户密码重置"

#: ../nitropad/qubes/user-password-reset.rst:4
msgid "Follow the next five steps to boot from the installation media"
msgstr "按照接下来的五个步骤，从安装介质启动"

#: ../nitropad/qubes/user-password-reset.rst
msgid "Step 1"
msgstr "步骤1"

#: ../nitropad/qubes/user-password-reset.rst
msgid "Step 2"
msgstr "第2步"

#: ../nitropad/qubes/user-password-reset.rst
msgid "Step 3"
msgstr "步骤3"

#: ../nitropad/qubes/user-password-reset.rst
msgid "Step 4"
msgstr "第四步"

#: ../nitropad/qubes/user-password-reset.rst
msgid "Step 5"
msgstr "第5步"

#: ../nitropad/qubes/user-password-reset.rst:21
msgid ""
"In the rescue shell, type: `cryptsetup open /dev/sda3 qubes` or "
"`cryptsetup open /dev/nvme0n1p3 qubes` to unlock the encrypted root drive"
msgstr ""
"在应急外壳中键入cryptsetup open /dev/sda3 qubes` 或 `cryptsetup open "
"/dev/nvme0n1p3 qubes` 以解锁加密的根驱动器"

#: ../nitropad/qubes/user-password-reset.rst:23
msgid "Mount the root drive `mount /dev/mapper/qubes_dom0-root /mnt`"
msgstr "挂载根驱动器 `mount /dev/mapper/qubes_dom0-root /mnt`。"

#: ../nitropad/qubes/user-password-reset.rst:25
msgid "Change root to it `chroot /mnt`"
msgstr "将根目录改为`chroot /mnt`。"

#: ../nitropad/qubes/user-password-reset.rst:27
msgid "Change the password `passwd user` (where \"user\" is your Qubes login)"
msgstr "修改密码`passwd user`（其中\"user\"是你的Qubes登录名）。"

#: ../nitropad/qubes/user-password-reset.rst:28
msgid "Type in a new password and confirm"
msgstr "输入一个新的密码并确认"

#: ../nitropad/qubes/user-password-reset.rst:29
msgid "Type `exit` to exit the chroot"
msgstr "输入`exit`退出chroot。"

#: ../nitropad/qubes/user-password-reset.rst:30
msgid "Type `reboot` and then boot as usal without the installation medium"
msgstr "输入 \"reboot\"，然后在没有安装介质的情况下以普通方式启动。"

#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:2
msgid "Change Disk Encryption Passphrase"
msgstr "更改磁盘加密密码"

#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:4
msgid ""
"To change the passphrase for disk encryption, first click on “Activities”"
" in the upper left corner and enter “disk” in the search bar. Then select"
" the “Disks” program that appears in the middle of the screen."
msgstr "要改变磁盘加密的密码，首先点击左上角的 \"活动\"，在搜索栏中输入 \"磁盘\"。然后选择出现在屏幕中间的 \"磁盘 \"程序。"

#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:14
msgid ""
"Select the field that says “Luks”. Afterwards it should have an orange "
"background."
msgstr "选择写有 \"Luks \"的字段。之后，它应该有一个橙色的背景。"

#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:22
msgid ""
"Left click on the gears and select “Change Passphrase” from the context "
"menu."
msgstr "左击齿轮，从上下文菜单中选择 \"更改密码\"。"

#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:30
msgid ""
"Enter \"12345678\" this was changed on the 10.04.2024 so if it's not "
"working try the old default: \"PleaseChangeMe\" as the current passphrase"
" and select a secure new one."
msgstr ""
"输入 \"12345678\"，10.04.2024 "
"版本对该密码进行了更改，因此如果无法使用，请尝试使用旧的默认密码：\"PleaseChangeMe \"作为当前密码，然后选择一个安全的新密码。"

#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:38
msgid "Enter the your account password."
msgstr "输入你的账户密码。"

#: ../nitropad/ubuntu/index.rst:2
msgid "NitroPad with Ubuntu Linux"
msgstr "使用Ubuntu Linux的NitroPad"

#: ../nitropad/ubuntu/index.rst:7
msgid "Workaround Ubuntu 24.04."
msgstr "解决方法 Ubuntu 24.04."

#: ../nitropad/ubuntu/index.rst:9
msgid ""
"There is an (`issue "
"<https://github.com/linuxboot/heads/issues/1641>`__)that prevents Ubuntu "
"to show the luks decryption screen if started with heads. Its there and "
"you can type in your password blindly, after that Ubuntu starts normal. "
"Follow these Steps:"
msgstr ""
"有一个 (`issue<https://github.com/linuxboot/heads/issues/1641>`__)问题，如果用头启动 "
"Ubuntu，它会阻止 Ubuntu 显示 luks 解密屏幕。有了这个问题，你可以盲打密码，之后 Ubuntu "
"就会正常启动。请按照以下步骤操作："

#: ../nitropad/ubuntu/index.rst:12
msgid "Heads starts. If nothing needs to be done, Ubuntu will start automatically"
msgstr "头部启动。如果不需要做任何事情，Ubuntu 会自动启动"

#: ../nitropad/ubuntu/index.rst:14
msgid ""
"After a while, you will see a black screen with white writing on the last"
" lines:"
msgstr "过一会儿，您会看到一个黑色屏幕，最后一行写着白色文字："

#: ../nitropad/ubuntu/index.rst:22
msgid "These lines indicate that Ubuntu is starting."
msgstr "这几行表示 Ubuntu 正在启动。"

#: ../nitropad/ubuntu/index.rst:24
msgid ""
"Wait **5 seconds** and then enter your **password** (\"12345678\" if you "
"are starting it for the first time) followed by **Enter**."
msgstr "等待**5 秒** ，然后输入您的**密码** （如果是首次启动，则输入 \"12345678\"），接着**输入** 。"

#: ../nitropad/ubuntu/index.rst:26
msgid ""
"Now you will see the normal Ubuntu screen. When you start for the first "
"time, you must complete the initial configuration."
msgstr "现在，你将看到 Ubuntu 的正常界面。首次启动时，必须完成初始配置。"

#: ../nitropad/ubuntu/index.rst:38
msgid ""
"Next, the system will prompt you to enter the passphrase to decrypt the "
"hard disk. The passphrase is initially \"12345678\". This was changed on "
"the 10.04.2024 so if \"12345678\" is not working try the old default: "
"\"PleaseChangeMe\""
msgstr ""
"接下来，系统会提示你输入密码来解密硬盘。密码最初为 \"12345678\"。10.04.2024 版本对此进行了更改，因此如果 "
"\"12345678 \"不起作用，请尝试使用旧的默认值：\"PleaseChangeMe\"。"

#: ../nitropad/ubuntu/index.rst:48
msgid ""
"Open the pre-installed Nitrokey App and change the PINs of your Nitrokey."
" To learn more about how to change the PINs, please refer to chapter "
"`Change User and Admin PIN <change-pins.html>`_."
msgstr ""
"打开预先安装的Nitrokey应用程序，更改你的Nitrokey的PIN码。要了解更多关于如何更改密码的信息，请参考`更改用户和管理员密码"
"<change-pins.html>`_章节。"

#: ../nitropad/ubuntu/index.rst:51
msgid ""
"Change the passphrase for disk encryption. To learn more about how to "
"change the passphrase for disk encryption, please refer to chapter "
"`Change Disk Encryption Passphrase <change-disk-encryption-"
"passphrase.html>`_. This passphrase is different from your user acount's "
"passphrase."
msgstr ""
"更改磁盘加密的口令。要了解更多关于如何改变磁盘加密的口令，请参考`改变磁盘加密口令<change-disk-encryption-"
"passphrase.html>`_章节。这个口令与你的用户账户的口令不同。"

#: ../nitropad/ubuntu/nitrokey-app.rst:4 ../nitropc/ubuntu/nitrokey-app.rst:4
msgid ""
"The Nitrokey App is included in Ubuntu's repositories since Ubuntu 18.04 "
"(codename 'bionic') on. You can just install it via Software Center or by"
" typing the following in a terminal:"
msgstr ""
"自Ubuntu "
"18.04（代号'bionic'）开始，Nitrokey应用程序就包含在Ubuntu'的资源库中。你可以通过软件中心或在终端键入以下内容来安装它。"

#: ../nitropad/ubuntu/nitrokey-app.rst:14 ../nitropc/ubuntu/nitrokey-app.rst:14
msgid ""
"Unfortunately, the App versions in the official Ubuntu repositories are "
"often not up-to-date."
msgstr "不幸的是，Ubuntu官方软件库中的应用程序版本往往不是最新的。"

#: ../nitropad/ubuntu/nitrokey-app.rst:17 ../nitropc/ubuntu/nitrokey-app.rst:17
msgid "More recent App versions"
msgstr "更多最新的应用程序版本"

#: ../nitropad/ubuntu/nitrokey-app.rst:19 ../nitropc/ubuntu/nitrokey-app.rst:19
msgid ""
"To get the most recent Nitrokey App you can add a separate repository "
"which is maintained by Nitrokey."
msgstr "要获得最新的Nitrokey应用程序，你可以添加一个由Nitrokey维护的单独的资料库。"

#: ../nitropad/ubuntu/nitrokey-app.rst:21 ../nitropc/ubuntu/nitrokey-app.rst:21
msgid ""
"Please execute the following in a terminal to add the repository and "
"install the Nitrokey App:"
msgstr "请在终端执行以下内容，添加软件库并安装Nitrokey应用程序。"

#: ../nitropad/ubuntu/nitrokey-app.rst:25 ../nitropc/ubuntu/nitrokey-app.rst:25
msgid ""
"The PPA is not necessary for Ubuntu 22.04 and later. The previous "
"versions of Ubuntu could still use it to update the app."
msgstr "对于Ubuntu 22.04及以后的版本来说，PPA是不必要的。以前版本的Ubuntu仍然可以用它来更新应用程序。"

#: ../nitropad/ubuntu/nitrokey-app.rst:36 ../nitropc/ubuntu/nitrokey-app.rst:36
msgid ""
"Alternatively, you can use the snap package. Please see `here "
"<https://www.nitrokey.com/download/snap-package>`__ for more information."
msgstr ""
"另外，你也可以使用snap包。请参阅`这里<https://www.nitrokey.com/download/snap-"
"package>`__了解更多信息。"

#: ../nitropc/debian/index.rst:2
msgid "NitroPC with Debian"
msgstr "使用Debian的NitroPC"

#: ../nitropc/debian/index.rst:16
msgid ""
"During boot, the system will prompt you to enter the passphrase to "
"decrypt the hard disk. Enter the default passphrase “PleaseChangeMe”."
msgstr "在启动过程中，系统会提示你输入密码来解密硬盘。输入默认的口令 \"PleaseChangeMe\"。"

#: ../nitropc/debian/index.rst:19
msgid ""
"The system has a user account setup already. Choose it and login with the"
" default passphrase \"PleaseChangeMe\". You may keep using the existing "
"user account or create you a new one, as you like."
msgstr "该系统已经设置了一个用户账户。选择它并使用默认的口令\"PleaseChangeMe\"登录。你可以继续使用现有的用户账户，或者根据你的意愿创建一个新的账户。"

#: ../nitropc/debian/index.rst:22 ../nitropc/ubuntu/index.rst:22
msgid ""
"Change the passphrase for disk encryption by opening a terminal and "
"execute:"
msgstr "通过打开一个终端并执行，改变磁盘加密的口令。"

#: ../nitropc/debian/index.rst:30
msgid "Using WIFI (with RTL8821ce chipset)"
msgstr "使用WIFI（使用RTL8821ce芯片组）"

#: ../nitropc/os-reinstallation.rst.inc:14
#, fuzzy
msgid ""
"Download one of the following operating system images: `Ubuntu Linux "
"<https://www.nitrokey.com/files/ci/ubuntu/>`__, `Qubes OS "
"<https://www.nitrokey.com/files/ci/qubes/>`__, `Debian "
"<https://www.nitrokey.com/files/ci/nitropc/debian-oem/>`__, `Linux Mint "
"<https://linuxmint.com/download.php>`__"
msgstr ""
"下载其中一个操作系统映像：`Ubuntu "
"Linux<https://www.nitrokey.com/files/ci/ubuntu/>`__,`Qubes "
"OS<https://www.nitrokey.com/files/ci/qubes/>`__,`Debian<https://www.nitrokey.com/files/ci/nitropc"
"/debian-oem/>`__,`Linux Mint<https://linuxmint.com/download.php>`__"

#: ../nitropc/os-reinstallation.rst.inc:30
msgid "Connect the USB drive to your NitroPC and start it."
msgstr "将 USB 驱动器连接到 NitroPC 并启动它。"

#: ../nitropc/os-reinstallation.rst.inc:33
msgid "If you are using a NitroPC with Heads:"
msgstr "如果您使用的是带有 Heads 的 NitroPC："

#: ../nitropc/os-reinstallation.rst.inc:33
msgid "Go to the Heads menu and select Boot Options -> USB Boot."
msgstr "进入 Heads（头部）菜单，选择 Boot Options（启动选项）-> USB Boot（USB 启动）。"

#: ../nitropc/os-reinstallation.rst.inc:36
msgid "If you are using a NitroPC with TitanCore:"
msgstr "如果您使用的是配备 TitanCore 的 NitroPC："

#: ../nitropc/os-reinstallation.rst.inc:36
msgid "Press ESC to enter the BIOS to select USB Boot."
msgstr "按 ESC 键进入 BIOS 选择 USB 启动。"

#: ../nitropc/os-reinstallation.rst.inc:38
#, fuzzy
msgid ""
"TEST3 Depending on the operating system you may need to confirm its "
"reinstallation."
msgstr "根据操作系统的不同，你可能需要确认其重新安装。"

#: ../nitropc/os-reinstallation.rst.inc:45
msgid ""
"Booting this USB drive entirely erases all data on the hard disk or SSD "
"of the NitroPC without further warning. Don’t boot this USB drive on any "
"computer which contains data you want to keep. Make sure to format the "
"USB drive after the intended use."
msgstr "启动这个USB驱动器会完全删除NitroPC的硬盘或固态硬盘上的所有数据，而没有进一步的警告。不要在任何含有你想保留的数据的电脑上启动这个USB驱动器。确保在预期使用后格式化该USB驱动器。"

#: ../nitropc/sealed-hardware.rst.inc:7
msgid ""
"If you ordered your NitroPC with sealed screws and in a sealed bag, it "
"allows you to check if the NitroPC has been tampered with during "
"shipping."
msgstr "如果你订购的NitroPC带有密封的螺丝并装在一个密封的袋子里，它可以让你检查NitroPC在运输过程中是否被篡改过。"

#: ../nitropc/sealed-hardware.rst.inc:9
msgid ""
"The bag and all screws of the device have been sealed. For the bag and "
"each of these screws you have received a photo by e-mail."
msgstr "袋子和设备的所有螺丝都已密封。对于袋子和每个螺丝，你已经通过电子邮件收到了一张照片。"

#: ../nitropc/sealed-hardware.rst.inc:11
msgid ""
"Check each screw individually to see if its individual appearance matches"
" the photo. It is best to use a magnifying glass or macro lens for this "
"purpose."
msgstr "逐一检查每颗螺丝，看其各自的外观是否与照片相符。为此，最好使用放大镜或微距镜头。"

#: ../nitropc/sealed-hardware.rst.inc:22
msgid ""
"If the bag or the screws do not match the photos sent, an unauthorized "
"opening of your NitroPC cannot be excluded. In this case please contact "
"us to arrange further action."
msgstr "如果袋子或螺丝与发送的照片不一致，不能排除你的NitroPC被擅自打开。在这种情况下，请联系我们以安排进一步的行动。"

#: ../nitropc/faq.rst:2
msgid "NitroPC FAQ"
msgstr "NitroPC常见问题"

#: ../nitropc/faq.rst:5
msgid ""
"The default NitroPC disk encryption password: \"12345678\". This was "
"change on the 15.01.2024 so if \"12345678\" is not working try the old "
"default: \"PleaseChangeMe\""
msgstr ""
"NitroPC 磁盘加密默认密码：\"12345678\"。该密码已于 15.01.2024 更改，因此如果 \"12345678 "
"\"无法使用，请尝试旧的默认密码：\"PleaseChangeMe\"。"

#: ../nitropc/index.rst:17 ../nitropc/qubes/gpu-install.rst:85
msgid "Debian"
msgstr "蝶变"

#: ../nitropc/index.rst:2
msgid "NitroPC"
msgstr "NitroPC"

#: ../nitropc/index.rst:27
msgid "Booting from USB drive"
msgstr "从USB驱动器启动"

#: ../nitropc/index.rst:28
msgid ""
"Connect the USB drive to a black USB 2.0 socket (blue USB 3.0 don't "
"work!), start the PC and keep pressing DEL until you see the firmware "
"menu. Choose Boot Menu and select your USB drive."
msgstr "将USB驱动器连接到一个黑色的USB2.0插座上（蓝色的USB3.0不起作用！），启动电脑并一直按DEL键，直到你看到固件菜单。选择启动菜单并选择你的USB驱动器。"

#: ../nitropc/qubes/gpu-install.rst:2
msgid "NitroPC Pro 2 With External GPU"
msgstr "配备外置图形处理器的 NitroPC Pro 2"

#: ../nitropc/qubes/gpu-install.rst:6
msgid ""
"This guide is only working if you use the Qubes OS OEM GPU image from "
"Nitrokey that you can build `here`_."
msgstr "本指南只有在使用 Nitrokey 提供的 Qubes OS OEM GPU 镜像时才有效，您可以在`here`_."

#: ../nitropc/qubes/gpu-install.rst:13
msgid ""
"This guide explains how to use your NitroPC with an external graphic card"
" (GPU) with Qubes OS."
msgstr "本指南介绍如何在 Qubes OS 中使用带有外置图形卡（GPU）的 NitroPC。"

#: ../nitropc/qubes/gpu-install.rst:16
msgid ""
"Following this guide may create some security issues within Qubes OS. "
"Follow it at your own risks."
msgstr "遵循本指南可能会在 Qubes OS 中产生一些安全问题。请自行承担风险。"

#: ../nitropc/qubes/gpu-install.rst:20
msgid "Create a Windows Qube"
msgstr "创建 Windows Qube"

#: ../nitropc/qubes/gpu-install.rst:23
msgid ""
"This will install a Windows Qube from the offical trial ISO. If you want "
"a full Windows experience then you will need to add a licence key."
msgstr "这将从正式试用版 ISO 安装 Windows Qube。如果您想要完整的 Windows 体验，则需要添加许可证密钥。"

#: ../nitropc/qubes/gpu-install.rst:25
msgid ""
"This part is using `ElliotKillick project "
"<https://github.com/elliotkillick/qvm-create-windows-qube>`__."
msgstr ""
"本部分使用`ElliotKillick 项目<https://github.com/elliotkillick/qvm-create-"
"windows-qube>`__。"

#: ../nitropc/qubes/gpu-install.rst:28
msgid ""
"Open a terminal in dom0 and make sure that you have the internet "
"connected."
msgstr "在 dom0 中打开终端，确保已连接互联网。"

#: ../nitropc/qubes/gpu-install.rst:30
msgid ""
"Install the Qubes Windows Tools, in dom0 : ``sudo qubes-dom0-update "
"qubes-windows-tools-4.1.69`` when asked press ``y`` and enter."
msgstr ""
"安装 Qubes Windows 工具，在 dom0 中：``sudo qubes-dom0-update qubes-windows-"
"tools-4.1.69`` 当要求安装时，按``y`` 并回车。"

#: ../nitropc/qubes/gpu-install.rst:33
msgid ""
"Please see the `security implication <https://github.com/QubesOS/qubes-"
"secpack/blob/master/QSBs/qsb-091-2023.txt>`__ of installing QWT."
msgstr ""
"请参阅`安全影响<https://github.com/QubesOS/qubes-"
"secpack/blob/master/QSBs/qsb-091-2023.txt>`__安装 QWT。"

#: ../nitropc/qubes/gpu-install.rst:35
msgid ""
"Make the install script executable, in dom0 : ``sudo chmod +x "
"/install.sh``"
msgstr "使安装脚本可执行，在 dom0 中：``sudo chmod +x /install.sh``"

#: ../nitropc/qubes/gpu-install.rst:37
msgid "Launch the install script, in dom0 : ``/install.sh``"
msgstr "在 dom0 中启动安装脚本：``/install.sh``"

#: ../nitropc/qubes/gpu-install.rst:39
msgid ""
"If you see this message : ``[+] Installation complete!`` then you can "
"continue."
msgstr "如果看到以下信息 :``[+] Installation complete!``，则可以继续。"

#: ../nitropc/qubes/gpu-install.rst:41
msgid ""
"At this point the script created a new Qube called windows-mgmt now we "
"will dowload the ISO to create the Windows Qube."
msgstr "此时，脚本会创建一个名为 windows-mgmt 的新 Qube，现在我们将下载 ISO 来创建 Windows Qube。"

#: ../nitropc/qubes/gpu-install.rst:43
msgid ""
"To do so we need to copy the ``~/qvm-create-windows-"
"qube/windows/isos/mido.sh`` script from the windows-mgmt Qube inside a "
"disposable Qube with internet connectivity."
msgstr ""
"为此，我们需要将``~/qvm-create-windows-qube/windows/isos/mido.sh`` 脚本从 windows-"
"mgmt Qube 复制到具有互联网连接的一次性 Qube 中。"

#: ../nitropc/qubes/gpu-install.rst:45
msgid ""
"Start a new DVM (disposable) Qube and give it at least 10 GB of private "
"storage."
msgstr "启动一个新的 DVM（一次性）Qube，并为其提供至少 10 GB 的私人存储空间。"

#: ../nitropc/qubes/gpu-install.rst:47
msgid ""
"Start the windows-mgmt Qube and copy the script, in windows-mgmt Qube : "
"``qvm-copy qvm-create-windows-qube/windows/isos/mido.sh`` then select the"
" DVM Qube (dispXXXX)."
msgstr ""
"启动 windows-mgmt Qube 并复制脚本，在 windows-mgmt Qube 中：``qvm-copy qvm-create-"
"windows-qube/windows/isos/mido.sh`` 然后选择 DVM Qube (dispXXXX)。"

#: ../nitropc/qubes/gpu-install.rst:49
msgid ""
"Once the script is copied launch it, in dispXXX : ``./QubesIncoming"
"/windows-mgmt/mido.sh win10x64``"
msgstr "复制脚本后，在 dispXXX 中启动它：``./QubesIncoming/windows-mgmt/mido.sh win10x64``"

#: ../nitropc/qubes/gpu-install.rst:52
msgid ""
"In this guide we install Windows 10 but other Windows versions are "
"available you can list them by using ``./QubesIncoming/windows-"
"mgmt/mido.sh``"
msgstr ""
"在本指南中，我们安装的是 Windows 10，但也有其他 Windows 版本，您可以使用``./QubesIncoming/windows-"
"mgmt/mido.sh`` 列出它们。"

#: ../nitropc/qubes/gpu-install.rst:55
msgid ""
"If you get a success message then you will need to copy the dowloaded ISO"
" from the DVM to the windows-mgmt Qube, in dispXXXX :  ``qvm-copy "
"QubesIncoming/windows-mgmt/win10x64.iso`` and choose the windows-mgmt "
"Qube."
msgstr ""
"如果收到成功消息，则需要将下载的 ISO 从 DVM 复制到 windows-mgmt Qube，在 dispXXXX :``qvm-copy "
"QubesIncoming/windows-mgmt/win10x64.iso`` 中选择 windows-mgmt Qube。"

#: ../nitropc/qubes/gpu-install.rst:57
msgid "Once copied you can close your DVM Qube."
msgstr "复制完成后，您就可以关闭 DVM Qube。"

#: ../nitropc/qubes/gpu-install.rst:59
msgid ""
"In the windows-mgmt Qube : ``mv QubesIncoming/dispXXXX/win10x64.iso qvm-"
"create-windows-qube/windows/isos/`` (replace 'dispXXXX' with the name of "
"the disposable Qube you created)."
msgstr ""
"在 windows-mgmt Qube 中：``mv QubesIncoming/dispXXXX/win10x64.iso qvm-"
"create-windows-qube/windows/isos/``（将 \"dispXXXX \"替换为您创建的一次性 Qube 的名称）。"

#: ../nitropc/qubes/gpu-install.rst:61
msgid ""
"Then in dom0 : ``qvm-create-windows-qube -n sys-firewall -oy -i "
"win10x64.iso -a win10x64-pro.xml work-win10``"
msgstr ""
"那么在 dom0 :``qvm-create-windows-qube -n sys-firewall -oy -i win10x64.iso "
"-a win10x64-pro.xml work-win10``中"

#: ../nitropc/qubes/gpu-install.rst:64
msgid ""
"You can pre-install any package from `this site "
"<https://community.chocolatey.org/packages>`__. E.g: ``qvm-create-"
"windows-qube -n sys-firewall -oyp "
"firefox,notepadplusplus,office365proplus -i win10x64.iso -a "
"win10x64-pro.xml work-win10``"
msgstr ""
"您可以从`这个网站<https://community.chocolatey.org/packages>`__预装任何软件包。例如：``qvm-"
"create-windows-qube -n sys-firewall -oyp "
"firefox,notepadplusplus,office365proplus -i win10x64.iso -a "
"win10x64-pro.xml work-win10``"

#: ../nitropc/qubes/gpu-install.rst:67
msgid ""
"If the script stops or if it get stuck retry until you see this message: "
"``[+] Completed successfully!``"
msgstr "如果脚本停止或卡住，请重试，直到看到以下信息：``[+] Completed successfully!``"

#: ../nitropc/qubes/gpu-install.rst:69
msgid ""
"Now you will need to attach your GPU to the Windows Qube, to do so go to "
"the Qube Manager and the Windows 10 Qube options (make sure that the Qube"
" is shut down), under the Devices tab select your graphic card and pass "
"it to the right then click on the ``Configure strict reset for PCI "
"devices`` then select your card and click ``OK``"
msgstr ""
"现在，您需要将 GPU 连接到 Windows Qube，为此请进入 Qube 管理器和 Windows 10 Qube 选项（确保 Qube "
"已关闭），在 \"设备 \"选项卡下选择显卡并将其传递到右侧，然后点击``Configure strict reset for PCI "
"devices``，然后选择显卡并点击``OK``。"

#: ../nitropc/qubes/gpu-install.rst:71
msgid ""
"Now that your graphic card is attached to your Windows Qube you will need"
" to install the drivers of your card. Search for ``Check for updates`` in"
" the search bar then click on ``Check for updates`` (you will need to "
"reboot several times)."
msgstr ""
"现在显卡已连接到 Windows Qube，您需要安装显卡的驱动程序。在搜索栏中搜索``Check for "
"updates``，然后点击``Check for updates``（需要重启几次）。"

#: ../nitropc/qubes/gpu-install.rst:73
msgid ""
"Now Windows will install all the drivers you will need to use your "
"external graphic card. If you're experiencing some problems make sure "
"that you have enought space in your Windows Qube while installing "
"updates."
msgstr "现在，Windows 将安装使用外置显卡所需的所有驱动程序。如果遇到问题，请确保在安装更新时 Windows Qube 有足够的空间。"

#: ../nitropc/qubes/gpu-install.rst:75
msgid "Once finished you can connect a secondary display to the graphic card."
msgstr "完成后，您就可以将辅助显示器连接到显卡。"

#: ../nitropc/qubes/gpu-install.rst:77
msgid ""
"If you want to use a dedicated mouse or keyboard for the Windows Qube "
"then you need to use sys-usb and attach the desired device to it."
msgstr "如果您想在 Windows Qube 上使用专用鼠标或键盘，则需要使用 sys-usb，并将所需设备连接到它。"

#: ../nitropc/qubes/gpu-install.rst:82
msgid "Create a Linux Qube"
msgstr "创建 Linux Qube"

#: ../nitropc/qubes/gpu-install.rst:88
msgid ""
"Go to the Qube manager and create a new standalone Qube and launch the "
"settings after creation."
msgstr "进入 Qube 管理器，创建一个新的独立 Qube，并在创建后启动设置。"

#: ../nitropc/qubes/gpu-install.rst:90
msgid ""
"In the advenced tab change the mode to HVM and disable memory balancing "
"and choose the amount of RAM you want."
msgstr "在 \"建议 \"选项卡中，将模式更改为 HVM，禁用内存均衡，并选择所需的内存大小。"

#: ../nitropc/qubes/gpu-install.rst:92
msgid ""
"In the devices tab select the GPU and pass it to the right then click on "
"the ``Configure strict reset for PCI devices`` then select your card and "
"click ``OK``"
msgstr ""
"在 \"设备 \"选项卡中选择 GPU 并将它移到右侧，然后点击``Configure strict reset for PCI "
"devices``，然后选择你的显卡并点击``OK``。"

#: ../nitropc/qubes/gpu-install.rst:94
msgid "Close the settings and start the Qube."
msgstr "关闭设置并启动 Qube。"

#: ../nitropc/qubes/gpu-install.rst:96
msgid ""
"Add non-free to your source list: ``sudo sed -i '1 s/.*/& non-free/' "
"/etc/apt/sources.list``"
msgstr ""
"将 non-free 添加到源代码列表：``sudo sed -i '1 s/.*/& non-free/' "
"/etc/apt/sources.list``"

#: ../nitropc/qubes/gpu-install.rst:98
msgid "``sudo apt update``"
msgstr "``sudo apt update``"

#: ../nitropc/qubes/gpu-install.rst:100
msgid "``sudo apt install nvidia-driver dbus-x11``"
msgstr "``sudo apt install nvidia-driver dbus-x11``"

#: ../nitropc/qubes/gpu-install.rst:102
msgid "Now you will need to create 3 differents files:"
msgstr "现在，您需要创建 3 个不同的文件："

#: ../nitropc/qubes/gpu-install.rst:105
msgid "screen.conf::"
msgstr "screen.conf:："

#: ../nitropc/qubes/gpu-install.rst:123
msgid "xorgX1.sh::"
msgstr "xorgX1.sh:："

#: ../nitropc/qubes/gpu-install.rst:137
msgid "xfce.sh::"
msgstr "xfce.sh:："

#: ../nitropc/qubes/gpu-install.rst:144
msgid "``sudo chmod +x xorgX1.sh xfce.sh``"
msgstr "``sudo chmod +x xorgX1.sh xfce.sh``"

#: ../nitropc/qubes/gpu-install.rst:146
msgid "``sudo ./xorgX1.sh ./xfce.sh``"
msgstr "``sudo ./xorgX1.sh ./xfce.sh``"

#: ../nitropc/qubes/gpu-install.rst:148
msgid "Now the secondary screen should turn on and show a Debian XFCE desktop."
msgstr "现在副屏幕应该会打开，并显示 Debian XFCE 桌面。"

#: ../nitropc/qubes/gpu-install.rst:150
msgid ""
"If you want to use a dedicated mouse or keyboard for the Linux Qube then "
"you need to use sys-usb and attach the desired device to it."
msgstr "如果要在 Linux Qube 上使用专用鼠标或键盘，则需要使用 sys-usb，并将所需设备连接到它。"

#: ../nitropc/qubes/index.rst:2
msgid "NitroPC with Qubes OS"
msgstr "带有Qubes操作系统的NitroPC"

#: ../nitropc/qubes/index.rst:16
msgid ""
"During boot, the system will prompt you to enter the passphrase to "
"decrypt the hard disk. Enter the default passphrase \"12345678\". This "
"was changed on the 15.01.2024 so if \"12345678\" is not working try the "
"old default: \"PleaseChangeMe\" The system will then guide you through "
"the process of creating a user account. After that you should have "
"successfully booted the system and could already use it normally."
msgstr ""
"在启动过程中，系统将提示您输入密码以解密硬盘。输入默认密码 \"12345678\"。该密码在 15.01.2024 版本中已更改，因此如果 "
"\"12345678 \"无法使用，请尝试使用旧的默认密码：\"PleaseChangeMe\"。之后，您就可以成功启动系统并正常使用了。"

#: ../nitropc/qubes/index.rst:22
msgid ""
"Change the passphrase for disk encryption by searching in the Qubes Menu "
"for \"Change Disk Password\""
msgstr "在 Qubes 菜单中选择 \"更改磁盘密码\"，更改磁盘加密口令"

#: ../nitropc/qubes/index.rst:30
msgid "Failed to start Load Kernel Modules"
msgstr "启动加载内核模块失败"

#: ../nitropc/qubes/index.rst:32
msgid ""
"During boot of the system the error \"Failed to start Load Kernel "
"Modules\" is displayed. `This is a known issue "
"<https://github.com/QubesOS/qubes-issues/issues/2638>`__ which is not "
"critical and can be ignored."
msgstr ""
"在系统启动时，显示错误\"Failed to start Load Kernel Modules\"。`这是一个已知的问题 "
"<https://github.com/QubesOS/qubes-issues/issues/2638>`__这不是关键问题，可以忽略不计。"

#: ../nitropc/ubuntu/index.rst:2
msgid "NitroPC with Ubuntu"
msgstr "带有Ubuntu的NitroPC"

#: ../nitropc/ubuntu/index.rst:16
msgid ""
"During boot, the system will prompt you to enter the passphrase to "
"decrypt the hard disk. Enter the default passphrase \"12345678\". This "
"was changed on the 10.04.2024 so if \"12345678\" is not working try the "
"old default: \"PleaseChangeMe\" The system will then guide you through "
"the process of creating a user account. After that you should have "
"successfully booted the system and could already use it normally."
msgstr ""
"在启动过程中，系统将提示您输入密码以解密硬盘。输入默认密码 \"12345678\"。10.04.2024 版本对该密码进行了更改，如果 "
"\"12345678 "
"\"无法使用，请尝试使用旧的默认密码：\"PleaseChangeMe\"，系统将引导你完成创建用户账户的过程。之后你就可以成功启动系统并正常使用了。"

#: ../nitrophone/apps.rst:2 ../nitrophone/index.rst:19
msgid "Apps"
msgstr "应用"

#: ../nitrophone/apps.rst:5
msgid "App Store"
msgstr "应用商店"

#: ../nitrophone/apps.rst:7
msgid ""
"For very high security requirements, you should use as few apps as "
"possible to provide a small attack surface. If instead you want to use "
"the NitroPhone as an everyday smartphone with more apps we recommend:"
msgstr "对于非常高的安全要求，你应该尽可能少地使用应用程序，以提供一个小的攻击面。如果你想把NitroPhone作为日常智能手机使用，我们建议使用更多的应用程序。"

#: ../nitrophone/apps.rst:11
msgid ""
"Install the `F-Droid <https://f-droid.org/F-Droid.apk>`__ App Store. This"
" has exclusively open source apps that do without drastic tracking and "
"without advertising. Here you will find thousands of apps from a wide "
"variety of fields. If you are looking for an app, check F-Droid first."
msgstr ""
"安装`F-Droid "
"<https://f-droid.org/F-Droid.apk>`__应用程序商店。这里有专门的开放源码应用程序，没有剧烈的跟踪，也没有广告。在这里，你会发现来自各种领域的成千上万的应用程序。如果你正在寻找一个应用程序"
"，请先查看F-Droid。"

#: ../nitrophone/apps.rst:16
msgid ""
"If the apps in F-Droid are not enough for you, open F-Droid and install "
"Aurora Store. In Aurora Store, you can install all apps from Google Play "
"Store."
msgstr ""
"如果F-Droid中的应用程序对你来说还不够，请打开F-Droid并安装Aurora商店。在Aurora商店中，你可以安装Google "
"Play商店的所有应用程序。"

#: ../nitrophone/apps.rst:19
msgid ""
"Many apps work without Google Play Services. However, if you want to use "
"apps that require Google Play Services, you can install `Google Play "
"Services in a sandbox <https://grapheneos.org/usage#sandboxed-google-"
"play>`__ as follows."
msgstr ""
"许多应用程序可以在没有Google Play服务的情况下运行。但是，如果你想使用需要Google "
"Play服务的应用程序，你可以在沙盒中安装`Google Play服务<https://grapheneos.org/usage"
"#sandboxed-google-play>`__，如下。"

#: ../nitrophone/apps.rst:22
msgid "Open Graphenes app repository client: *Home screen -> Apps*"
msgstr "打开Graphenes应用资源库客户端。*主屏幕 -> 应用*"

#: ../nitrophone/apps.rst:23
msgid ""
"Install the 3 core Google Play Apps (\"Google Play store\", \"Google Play"
" Services\", \"Google Services Framework\")."
msgstr "安装3个核心Google Play应用程序（\"Google Play商店\"，\"Google Play服务\"，\"Google服务框架\"）。"

#: ../nitrophone/apps.rst:24
msgid ""
"Disable batterie optimization for Google Play Services (for Push to work "
"properly). From the home screen, select: *Settings -> Apps -> Google Play"
" services > Battery > Unrestricted*"
msgstr ""
"禁用Google Play服务的电池优化（为了使推送正常工作）。在主屏幕上，选择。*设置 -> 应用程序 -> Google Play服务 > "
"电池 > 不受限制*。"

#: ../nitrophone/apps.rst:25
msgid ""
"Open the Google Play Store once and press \"Sign in\" to start the "
"initialization. You don't have to finish the sign in and a real login is "
"not necessary. This is solely to initialize the software."
msgstr "打开Google Play商店一次，按\"登录\"开始初始化。你不需要完成登录，也不需要真正登录。这仅仅是为了初始化软件。"

#: ../nitrophone/apps.rst:30
msgid ""
"To prevent some apps from accessing Google Play Services, install Google "
"Play Services in a separate profile. To do this, create a new dedicated "
"user profile and install the Google Play Services there. Using a work "
"profile together with *Shelter* is also possible, but without as much "
"isolation."
msgstr ""
"要防止一些应用程序访问Google Play服务，请在一个单独的配置文件中安装Google "
"Play服务。要做到这一点，创建一个新的专用用户配置文件，并在那里安装Google "
"Play服务。将工作配置文件与*Shelter*一起使用也是可能的，但没有那么多隔离。"

#: ../nitrophone/apps.rst:38
msgid ""
"The Google Play Store cannot install and update apps due to the sandbox. "
"Instead, always use F-Droid (for open source apps) or Aurora Store (for "
"apps from Google Play Store) to install apps."
msgstr ""
"由于沙盒的原因，Google Play商店不能安装和更新应用程序。相反，总是使用F-Droid（用于开源应用程序）或Aurora "
"Store（用于来自Google Play Store的应用程序）来安装应用程序。"

#: ../nitrophone/apps.rst:43
msgid "Recommended Apps"
msgstr "推荐的应用程序"

#: ../nitrophone/apps.rst:45
msgid ""
"Browser: The pre-installed browser Vanadium is hardened and therefore "
"recommended for high security. For ad-blocking, we recommend `DNS-based "
"ad-blocking <https://grapheneos.org/faq#ad-blocking>`__."
msgstr ""
"浏览器预装的浏览器 Vanadium 经过加固，因此建议使用安全性较高的浏览器。对于广告拦截，我们建议使用`基于 DNS "
"的广告拦截<https://grapheneos.org/faq#ad-blocking>`__。"

#: ../nitrophone/apps.rst:46
msgid "Email: K9-mail and OpenKeyChain (for OpenPGP encryption) or FairEmail."
msgstr "电子邮件。K9-mail和OpenKeyChain（用于OpenPGP加密）或FairEmail。"

#: ../nitrophone/apps.rst:47
msgid ""
"VPN: Orbot uses the free TOR network. Mullvad VPN and IVPN are paid VPN "
"services."
msgstr "VPN：Orbot使用免费的TOR网络。Mullvad VPN和IVPN是付费VPN服务。"

#: ../nitrophone/apps.rst:48
msgid ""
"Backup: The integrated backup (Seedvault) and Nextcloud. Choose Settings "
"-> System -> Backup."
msgstr "备份。集成备份（Seedvault）和Nextcloud。选择设置->；系统->；备份。"

#: ../nitrophone/apps.rst:51
msgid "Messenger:"
msgstr "信使。"

#: ../nitrophone/apps.rst:50
msgid ""
"`Signal <https://signal.org/android/apk/>`__ is secure and now widely "
"used. It can also be downloaded without an app store."
msgstr ""
"`Signal "
"<https://signal.org/android/apk/>`__是安全的，现在被广泛使用。它也可以在没有应用商店的情况下下载。"

#: ../nitrophone/apps.rst:51
msgid ""
"`Element <https://element.io/>`__ does not require a central "
"infrastructure and allows the use of own servers. An own account can be "
"registered for free at `NitroChat <https://nitro.chat>`__ for example."
msgstr ""
"`Element <https://element.io/>`__不需要一个中央基础设施，允许使用自己的服务器。例如，可以在`NitroChat "
"<https://nitro.chat>`__免费注册一个自己的账户。"

#: ../nitrophone/apps.rst:52
msgid ""
"`Briar <https://briarproject.org/>`__ is a peer-to-peer messenger without"
" any server at all, which can be used without internet with contacts "
"nearby."
msgstr ""
"`Briar "
"<https://briarproject.org/>`__是一个完全没有服务器的点对点信使，它可以在没有互联网的情况下与附近的联系人一起使用。"

#: ../nitrophone/apps.rst:53
msgid ""
"Contacts and calendar synchronization: DAVx5 supports CalDAV, CardDAV and"
" WebCAL."
msgstr "联系人和日历同步。DAVx5支持CalDAV、CardDAV和WebCAL。"

#: ../nitrophone/apps.rst:54
msgid ""
"One-time password generator (2FA, OTP): `Aegis Authenticator "
"<https://github.com/beemdevelopment/Aegis>`__."
msgstr ""
"一次性密码发生器（2FA，OTP）。`Aegis Authenticator "
"<https://github.com/beemdevelopment/Aegis>`__。"

#: ../nitrophone/apps.rst:55
msgid "Regarding camera app, see `here <https://grapheneos.org/usage#camera>`__."
msgstr "关于相机应用程序，见`这里<https://grapheneos.org/usage#camera>`__。"

#: ../nitrophone/apps.rst:58
msgid "Recommendation for Sensor-Less Devices"
msgstr "关于无传感器设备的建议"

#: ../nitrophone/apps.rst:60
msgid ""
"If you have a NitroPhone or NitroTablet without rotation sensor, you "
"could use `Rotation Control "
"<https://play.google.com/store/apps/details?id=org.crape.rotationcontrol>`__"
" to rotate your screen manually."
msgstr ""
"如果您的 NitroPhone 或 NitroTablet 没有旋转传感器，您可以使用`Rotation "
"Control<https://play.google.com/store/apps/details?id=org.crape.rotationcontrol>`__"
" 手动旋转屏幕。"

#: ../nitrophone/apps.rst:63
msgid "Permissions of Individual Apps"
msgstr "单个应用程序的权限"

#: ../nitrophone/apps.rst:65
msgid ""
"To check or change the permissions on network access and sensors for a "
"specific app:"
msgstr "要检查或改变一个特定应用程序的网络访问和传感器的权限。"

#: ../nitrophone/apps.rst:67
msgid "*Long press on the respective app icon -> app info -> permissions*"
msgstr "*长按相应的应用图标->应用信息->权限*。"

#: ../nitrophone/apps.rst:70
msgid "Car Sharing Apps"
msgstr "汽车共享应用程序"

#: ../nitrophone/apps.rst:72
msgid ""
"Some car sharing apps (such as SHARE NOW) use Bluetooth-based location "
"service to unlock a car in the proximity. To enable this choose: Settings"
" -> Location -> Location Services -> Bluetooth scanning -> on"
msgstr ""
"某些汽车共享应用程序（如 SHARE NOW）使用蓝牙定位服务来解锁附近的汽车。要启用此功能，请选择设置 -> 位置 -> 定位服务 -> "
"蓝牙扫描 -> 打开"

#: ../nitrophone/apps.rst:75
msgid "Banking Apps"
msgstr "银行应用程序"

#: ../nitrophone/apps.rst:77
msgid ""
"There is a `list of banking apps <https://privsec.dev/posts/android"
"/banking-applications-compatibility-with-grapheneos/>`__ stating which "
"are working or not."
msgstr ""
"`列出了银行应用程序<https://privsec.dev/posts/android/banking-applications-"
"compatibility-with-grapheneos/>`__说明哪些正在运行，哪些没有运行。"

#: ../nitrophone/background-images.rst:2 ../nitrophone/index.rst:19
msgid "Background Images"
msgstr "背景图片"

#: ../nitrophone/background-images.rst:4
msgid "You can use these nice background images:"
msgstr "你可以使用这些漂亮的背景图片。"

#: ../nitrophone/background-images.rst:-1
msgid "Background image 1"
msgstr "背景图片1"

#: ../nitrophone/background-images.rst:-1
msgid "Background image 2"
msgstr "背景图片2"

#: ../nitrophone/background-images.rst:-1
msgid "Background image 3"
msgstr "背景图片3"

#: ../nitrophone/faq.rst:2
msgid "NitroPhone FAQ"
msgstr "NitroPhone常见问题"

#: ../nitrophone/faq.rst:8
msgid "**Q:** Does the Nitrophone work with my carrier network?"
msgstr "**问：**Nitrophone可以在我的运营商网络中使用吗？"

#: ../nitrophone/faq.rst:5
msgid ""
"Google claims `all major carriers`_ should work with the Pixel phones. "
"Nevertheless there might be exceptions, obviously we cannot check `all` "
"carriers around the world. Best practice, is to check if you find some "
"tests/experience stories about the Pixel 4a together with your planned "
"carrier network."
msgstr ""
"谷歌声称`所有主要运营商`_都应该与Pixel手机合作。然而，可能会有例外，显然，我们无法检查世界各地的`所有`运营商。最好的做法是，检查你是否找到一些关于Pixel"
" 4a和你计划的运营商网络的测试/经验故事。"

#: ../nitrophone/faq.rst:14
msgid "**Q:** What is and how to activate *PIN Layout Scrambling*"
msgstr "**问：**什么是以及如何激活*PIN布局加扰*？"

#: ../nitrophone/faq.rst:11
msgid ""
"To make it difficult for strangers to read the PIN when typing it in, you"
" can display the PIN layout in a random order. Additionally, we recommend"
" a `privacy screen <https://shop.nitrokey.com/shop/category/smartphone-"
"tablet-4>`__. To enable, select: *Settings -> Security -> PIN scrambling "
"-> Scramble PIN*"
msgstr ""
"为了使陌生人在输入 PIN 码时难以读取，可以以随机顺序显示 PIN "
"码布局。此外，我们建议使用`隐私屏幕<https://shop.nitrokey.com/shop/category/smartphone-"
"tablet-4>`__。要启用，请选择*设置 -> 安全 -> 密码扰乱 -> 扰乱密码*"

#: ../nitrophone/faq.rst:22
msgid "**Q:** What is a *Kill Switch* and how to activate it?"
msgstr "**问：**什么是*杀戮开关，如何启动它？"

#: ../nitrophone/faq.rst:17
msgid ""
"Kill Switches, which erase all the phone's data when triggered, are very "
"risky in practice as they could be triggered unintentionally. Therefore, "
"the NitroPhone instead has the feature to automatically shut down and "
"restart when inactive for a set period of time. This puts the phone in a "
"secure state where all data is encrypted, no data is in RAM, and the "
"phone can only be unlocked with the legitimate PIN or password. To "
"enable, select: *Settings -> Security -> Auto reboot -> select the idle "
"time duration after which the phone should reboot*"
msgstr ""
"杀死开关在被触发后会清除手机的所有数据，在实践中是非常危险的，因为它们可能被无意中触发。因此，NitroPhone的功能是在设定的时间内不活动时自动关闭并重新启动。这使手机处于安全状态，所有数据都被加密，RAM中没有数据，手机只能用合法的PIN码或密码解锁。要启用，请选择。*设置"
" -> 安全性 -> 自动重启 -> 选择手机应重启的闲置时间*。"

#: ../nitrophone/faq.rst:30
msgid ""
"**Q:** Why do I get \"Warning: Your device is loading a different "
"operating system\"?"
msgstr "**问：**为什么我得到\"警告。你的设备正在加载一个不同的操作系统\"？"

#: ../nitrophone/faq.rst
msgid "Boot screen"
msgstr "启动屏幕"

#: ../nitrophone/faq.rst:29
msgid ""
"Shortly after the phone is turned on, the warning \"Your device is "
"loading a different operating system\" is displayed. This warning "
"indicates that no ordinary Google Android is running and can be ignored."
msgstr "手机开机后不久，就会显示警告\"你的设备正在加载一个不同的操作系统\"。这个警告表明没有运行普通的谷歌安卓系统，可以忽略不计。"

#: ../nitrophone/faq.rst:33
msgid "**Q:** How can I check, if my NitroPhone has been hacked/compromised?"
msgstr "**问：**如何检查我的NitroPhone是否已被黑客攻击/入侵？"

#: ../nitrophone/faq.rst:33
msgid ""
"If you want to check the integrity of the operating system, you can use "
"`remote verification <https://attestation.app/about>`_."
msgstr "如果你想检查操作系统的完整性，你可以使用`远程验证<https://attestation.app/about>`_。"

#: ../nitrophone/faq.rst:36
msgid "**Q:** Where can I get further information about GrapheneOS?"
msgstr "**问：**我在哪里可以得到有关GrapheneOS的进一步信息？"

#: ../nitrophone/faq.rst:36
msgid ""
"`Here <https://grapheneos.org/faq>`__ you can find further information on"
" GrapheneOS."
msgstr "`这里 <https://grapheneos.org/faq>`__你可以找到关于GrapheneOS的进一步信息。"

#: ../nitrophone/faq.rst:39
msgid "**Q:** Why is OEM unlocking enabled by default?"
msgstr "**问：**为什么默认启用OEM解锁功能？"

#: ../nitrophone/faq.rst:39
msgid ""
"The only real purpose of the OEM Unlocking setting is `anti-theft "
"protection <https://grapheneos.org/faq#anti-theft>`__ which is not "
"implemented by GrapheneOS. OEM unlocking controls whether the device can "
"be unlocked via boot loader. In the later case all user data is wiped. If"
" OEM Unlocking is disabled, someone can still boot up in recovery mode, "
"enter the menu, wipe data, then boot the OS and enable OEM unlocking. "
"Therefore it doesn't really increase the security but `disabling it "
"<index.html>`_ reduces the potential physical attack surface."
msgstr ""
"OEM解锁设置的唯一真正目的是`反盗窃保护<https://grapheneos.org/faq#anti-"
"theft>`__，GrapheneOS没有实现。OEM解锁控制设备是否可以通过启动加载器解锁。在后一种情况下，所有的用户数据都被抹去。如果OEM解锁被禁用，有人仍然可以在恢复模式下启动，进入菜单，擦除数据，然后启动操作系统并启用OEM解锁。因此，它并没有真正提高安全性，但`禁用它<index.html>`_减少潜在的物理攻击面。"

#: ../nitrophone/faq.rst:42
msgid "**Q:** Why do we offer to remove the microphones?"
msgstr "**问：** 为什么我们要提供移除麦克风的服务？"

#: ../nitrophone/faq.rst:42
msgid ""
"GrapheneOS informs about active access to the sensors and offers a "
"transparent way to monitor the device. However, physical removal is the "
"only way to completely exclude possible misuse. Especially in the case of"
" a microphone, which allows continuous eavesdropping."
msgstr "GrapheneOS会通知对传感器的主动访问，并提供一种透明的方式来监控设备。然而，物理移除是完全排除可能的滥用的唯一方法。特别是在麦克风的情况下，它允许连续窃听。"

#: ../nitrophone/faq.rst:45
msgid "**Q:** Why do we also offer to remove the gyroscope?"
msgstr "**问：** 为什么我们还提供移除陀螺仪的服务？"

#: ../nitrophone/faq.rst:45
msgid ""
"A gyroscope is a sensor that detects the orientation of a smartphone. It "
"not only stabilises the camera, but also tells the smartphone whether it "
"is held in portrait or landscape mode. Additionally the gyroscope can "
"also pick up mechanical vibrations, so it has the functionality of a "
"microphone."
msgstr "陀螺仪是一个检测智能手机方向的传感器。它不仅能稳定相机，还能告诉智能手机是以纵向还是横向模式持有。此外，陀螺仪还可以接收机械振动，因此它具有麦克风的功能。"

#: ../nitrophone/faq.rst:48
msgid "**Q:** Why don't we offer to remove the speakers?"
msgstr "**问：** 为什么我们不提出拆除扬声器？"

#: ../nitrophone/faq.rst:48
msgid ""
"Microphones are usually used to convert mechanical vibrations into "
"electrical signals. The mechanical construction of loudspeakers is "
"essentially the same as that of microphones, so that loudspeakers can "
"also be used as microphones. In loudspeakers, electrical signals cause "
"the diaphragm to vibrate, thus generating sound. Conversely, this process"
" can be used to transmit the electrical signal from the diaphragm to the "
"device, as with a microphone. However, this method is not possible if an "
"amplifier is installed, as this does not allow the signal to be "
"transmitted from the loudspeaker to the device. All Nitrophones only have"
" speakers with built-in amplifiers and are therefore harmless."
msgstr "传声器通常用于将机械振动转换成电信号。扬声器的机械结构与传声器基本相同，因此，扬声器也可以作为传声器使用。在扬声器中，电信号引起振膜的振动，从而产生声音。反之，这个过程可以用来将电信号从振膜传输到设备上，就像麦克风一样。然而，如果安装了放大器，这种方法是不可能的，因为这不允许将信号从扬声器传输到设备上。所有Nitrophones只有内置放大器的扬声器，因此是无害的。"

#: ../nitrophone/index.rst:2
msgid "NitroPhone, NitroTablet"
msgstr "NitroPhone, NitroTablet"

#: ../nitrophone/index.rst:9
msgid ""
"By default you have a secure smartphone, already pre-installed with all "
"the most necessary apps."
msgstr "默认情况下，你有一个安全的智能手机，已经预装了所有最必要的应用程序。"

#: ../nitrophone/index.rst:11
msgid ""
"Set up a six-digit PIN to protect the phone. In cooperation with the "
"security chip, this will ensure high security while maintaining good "
"usability."
msgstr "设置一个六位数的密码来保护手机。在与安全芯片的合作中，这将确保高度的安全性，同时保持良好的可用性。"

#: ../nitrophone/index.rst:13
msgid ""
"For extra hardening (optional): Go to Settings -> System -> Developer "
"Options and disable the \"OEM unlocking\" setting. Afterwards disable the"
" \"Developer Options\"."
msgstr "对于额外的加固（可选）。进入设置-> 系统-> 开发者选项，禁用\"OEM解锁\" 设置。之后，禁用\"开发者选项\"。"

#: ../nitrophone/index.rst:15
msgid ""
"Please familiarize yourself with `using your GrapheneOS "
"<https://grapheneos.org/usage>`__."
msgstr "请熟悉`使用你的GrapheneOS <https://grapheneos.org/usage>`__。"

#: ../nitrophone/index.rst:17
msgid "For more details, see the following pages:"
msgstr "更多细节，请见以下几页。"

#: ../nitrowall/backup-restore.rst:2
msgid "Backup & Restore"
msgstr "备份和恢复"

#: ../nitrowall/backup-restore.rst:4
msgid ""
"Before making any adjustments to the NitroWall configuration, you have "
"the option of backing up the configuration and restoring it if necessary."
" How to do this is described in the following instructions:"
msgstr "在对NitroWall配置进行任何调整之前，你可以选择备份配置，并在必要时将其恢复。如何做到这一点，在下面的说明中有所描述。"

#: ../nitrowall/backup-restore.rst:6
msgid "Go to System -> Configuration -> Backups"
msgstr "转到系统 -> 配置 -> 备份"

#: ../nitrowall/backup-restore.rst:7
msgid ""
"In this menu you can perform the desired operations. You can restore "
"specific areas of the configuration by selecting them via \"Restore "
"area\"."
msgstr "在这个菜单中，你可以执行所需的操作。你可以通过\"恢复区域\"选择配置的特定区域来恢复它们。"

#: ../nitrowall/backup-restore.rst:8
msgid ""
"If you can no longer access the web interface, it is also possible to "
"perform the recovery via the command line interface. To do this, connect "
"the NitroWall to a monitor and start it. After logging in, select item 13"
" \"Restore a backup\" and enter the number associated with the backup for"
" the restore."
msgstr "如果你不能再访问网页界面，也可以通过命令行界面进行恢复。要做到这一点，将NitroWall连接到显示器上并启动它。登录后，选择第13项\"恢复一个备份\"，并输入与备份相关的号码进行恢复。"

#: ../nitrowall/backup-restore.rst:-1
msgid "backup and restore"
msgstr "备份和恢复"

#: ../nitrowall/backup-restore.rst:-1
msgid "cli restore"
msgstr "脚本恢复"

#: ../nitrowall/dhcp.rst:2
msgid "Using NitroWall as combined DHCP-Client/DHCP-Server"
msgstr "将NitroWall作为组合式DHCP客户/DHCP服务器使用"

#: ../nitrowall/dhcp.rst:-1
msgid "Network with DHCP"
msgstr "使用DHCP的网络"

#: ../nitrowall/dhcp.rst:7
msgid ""
"Note the correct mapping of interfaces to physical ports: Interfaces → "
"Assignments"
msgstr "注意接口与物理端口的正确映射。接口→分配"

#: ../nitrowall/dhcp.rst:9
msgid ""
"In \"System → Wizard → Configure WAN Interface\" set the value for  IPv4 "
"Configuration Type to DHCP"
msgstr "在\"系统→向导→配置WAN接口\"中，将IPv4配置类型的值设为DHCP。"

#: ../nitrowall/dhcp.rst:10
msgid "Follow this guide to configure the LAN interface for DHCP:"
msgstr "按照本指南的要求，为DHCP配置LAN接口。"

#: ../nitrowall/dhcp.rst:12
msgid "https://docs.opnsense.org/manual/dhcp.html#using-dhcpv4"
msgstr "https://docs.opnsense.org/manual/dhcp.html#using-dhcpv4"

#: ../nitrowall/firmware-update-nw678.rst:2
msgid "Update OpenWrt Firmware"
msgstr "更新OpenWrt固件"

#: ../nitrowall/firmware-update-nw678.rst:5
msgid "OpenWrt is currently only available for the NitroWall NW678"
msgstr "OpenWrt目前只适用于NitroWall NW678。"

#: ../nitrowall/firmware-update-nw678.rst:9
msgid ""
"We recommend updating OpenWrt via the pre-installed `Attended Sysupgrade "
"<https://openwrt.org/docs/guide-"
"user/installation/attended.sysupgrade>`__. To be able to use this service"
" you need to configure it to ignore the \"nitrowall\" package, if it has "
"been installed before:"
msgstr ""
"我们建议通过预装的`Attended Sysupgrade<https://openwrt.org/docs/guide-"
"user/installation/attended.sysupgrade>`__ 来更新 "
"OpenWrt。要使用该服务，您需要对其进行配置，以忽略之前已安装的 \"nitrowall \"软件包："

#: ../nitrowall/firmware-update-nw678.rst:11
msgid ""
"Go to System -> Attended Sysupgrade -> Configuration and enable the "
"Advanced Mode -> Save & Apply"
msgstr "进入系统 -> 已参加的系统升级 -> 配置并启用高级模式 -> 保存并应用"

#: ../nitrowall/firmware-update-nw678.rst:15
msgid "Go back to overview and search for available updates"
msgstr "回到概览，搜索可用的更新"

#: ../nitrowall/firmware-update-nw678.rst:19
msgid ""
"Search through the list of installed packages and remove the "
"\"nitrowall\" package. Then Request Firmware Image"
msgstr "在已安装的软件包列表中搜索并删除 \"nitrowall \"软件包。然后申请固件镜像"

#: ../nitrowall/firmware-update-nw678.rst:23
msgid ""
"Wait for the image to be build. Then install it. Check if \"keep settings"
" and current configuration\" is set"
msgstr "等待镜像的建立。然后安装它。检查是否设置了 \"保持设置和当前配置\"。"

#: ../nitrowall/firmware-update-nw678.rst:27
msgid "The software will be installed and the NitroWall will restart."
msgstr "软件将被安装，NitroWall将重新启动。"

#: ../nitrowall/firmware-update-nw678.rst:29
msgid ""
"After the restart we need to reinstall the `nitrowall.ipk "
"<https://www.nitrokey.com/files/ci/nitrowall/nitrowall_1.0.0-0_x86_64.ipk>`_"
" package. This will resize your disk and add the kernel parameter "
"*pcie_aspm=off* to your */boot/grub/grub.cfg* which fixes a problem with "
"the *igb* driver `bug "
"<https://bugzilla.kernel.org/show_bug.cgi?id=205073>`_."
msgstr ""
"重启后，我们需要重新安装`nitrowall.ipk<https://www.nitrokey.com/files/ci/nitrowall/nitrowall_1.0.0-0_x86_64.ipk>`_"
" 包。* 这将调整你的磁盘大小，并在你的*/boot/grub/grub.cfg中添加内核参数*pcie_aspm=off* "
"，该参数修复了*igb* "
"驱动程序的问题`bug<https://bugzilla.kernel.org/show_bug.cgi?id=205073>`_ 。"

#: ../nitrowall/firmware-update-nw678.rst:31
msgid "Under System -> Software -> Upload Package, upload the package"
msgstr "在系统->软件->上传软件包下，上传软件包"

#: ../nitrowall/firmware-update-nw678.rst:37
msgid "Install it. Afterwards the NitroWall will restart."
msgstr "安装它。之后，NitroWall将重新启动。"

#: ../nitrowall/firmware-update-nw678.rst:41
msgid ""
"Update OpenWrt via `Attended Sysupgrade <https://openwrt.org/docs/guide-"
"user/installation/attended.sysupgrade>`__."
msgstr ""
"通过`更新 OpenWrt 出席 Sysupgrade<https://openwrt.org/docs/guide-"
"user/installation/attended.sysupgrade>`__。"

#: ../nitrowall/firmware-update-nw678.rst:43
msgid ""
"Alternatively to the above instructions, you can login via ssh and "
"execute this script::"
msgstr "除上述说明外，你还可以通过ssh登录并执行这个脚本：："

#: ../nitrowall/hardware.rst:2
msgid "Hardware Compatibility"
msgstr "硬件兼容性"

#: ../nitrowall/hardware.rst:4
msgid ""
"Whether a certain hardware can be operated under OPNSense or not depends "
"on whether the corresponding driver is available. Since OPNSense is "
"derived from FreeBSD, all drivers from FreeBSD are also available in "
"OPNSense. A list of supported hardware can be found at:"
msgstr "某一硬件是否能在OPNSense下运行，取决于相应的驱动程序是否可用。由于OPNSense是由FreeBSD派生出来的，所有来自FreeBSD的驱动在OPNSense中也是可用的。支持的硬件列表可以在以下网址找到。"

#: ../nitrowall/hardware.rst:6
msgid "https://www.freebsd.org/releases/13.0R/hardware/"
msgstr "https://www.freebsd.org/releases/13.0R/hardware/"

#: ../nitrowall/ids-ips.rst:2
msgid "How to set up IDS/IPS with Suricata"
msgstr "如何用Suricata设置IDS/IPS"

#: ../nitrowall/ids-ips.rst:4
msgid ""
"OPNSense uses Suricata to provide an IPS/IDS Service. Suricata is already"
" installed and running after initial configuration."
msgstr "OPNSense使用Suricata来提供一个IPS/IDS服务。Suricata在初始配置后已经安装并运行。"

#: ../nitrowall/ids-ips.rst:7
msgid ""
"You find the administration, monitoring and logging settings via "
"\"Services -> Intrusion Detection\"."
msgstr "你可以通过\"服务->入侵检测\"找到管理、监控和日志设置。"

#: ../nitrowall/ids-ips.rst:9
msgid "More information on how to configure IDS/IPS are available on:"
msgstr "关于如何配置IDS/IPS的更多信息，可在以下网站查询。"

#: ../nitrowall/ids-ips.rst:11
msgid "https://docs.opnsense.org/manual/ips.html"
msgstr "https://docs.opnsense.org/manual/ips.html"

#: ../nitrowall/index.rst:2
msgid "NitroWall NW678, NW4J3"
msgstr "NitroWall NW678、NW4J3"

#: ../nitrowall/index.rst:7
msgid ""
"Do **not** connect the NitroWall directly to your LAN as two DHCP servers"
" will be actively distributing IPs within the network, confusing and "
"disconnecting arbitrary devices in your network."
msgstr "不要***将NitroWall直接连接到你的局域网，因为两个DHCP服务器将在网络内积极分配IP，混淆和断开网络中任意设备的连接。"

#: ../nitrowall/index.rst:9
msgid ""
"Connect the NitroWalls LAN1 port by a patch cable with the Ethernet port "
"of your laptop or PC"
msgstr "用跳线将NitroWalls的LAN1端口与你的笔记本电脑或PC的以太网端口连接起来。"

#: ../nitrowall/index.rst:12
msgid ""
"Note that the standard configuration of OPNsense uses LAN2 as the WAN "
"port and LAN1,3,4 as LAN ports. By default LAN3 and LAN4 are disabled. So"
" you have to enable them (i.e. via bridging)."
msgstr "请注意，OPNsense的标准配置使用LAN2作为WAN端口，LAN1、3、4作为LAN端口。默认情况下，LAN3和LAN4被禁用。所以你必须启用它们（即通过桥接）。"

#: ../nitrowall/index.rst:14
msgid "Connect the NitroWall with power supply"
msgstr "将NitroWall与电源连接起来"

#: ../nitrowall/index.rst:15
msgid "Turn on the NitroWall by I/O switch on the front side"
msgstr "通过正面的I/O开关打开NitroWall。"

#: ../nitrowall/index.rst:16
msgid ""
"After booting (the NitroWall beeps accordingly) it is available via "
"https://192.168.1.1/. You'll get an IP address from NitroWalls DHCP-"
"Server automatically"
msgstr "开机后（NitroWall会发出相应的提示音），可以通过https://192.168.1.1/。"

#: ../nitrowall/index.rst:20
msgid "Confirm browser security warning"
msgstr "确认浏览器安全警告"

#: ../nitrowall/index.rst:21
msgid "After logging in you are at the admin dashboard of the NitroWall"
msgstr "登录后，你就进入了NitroWall的管理仪表板。"

#: ../nitrowall/index.rst:23
msgid "Login: root"
msgstr "登录：根"

#: ../nitrowall/index.rst:24
msgid "Password: opnsense"
msgstr "密码：opnsense"

#: ../nitrowall/index.rst:26
msgid ""
"Start the system wizard via the menu of the left-hand side: system →  "
"system wizard → setup. The wizard is going through the configuration with"
" you step-by-step."
msgstr "通过左手边的菜单启动系统向导：系统→系统向导→设置。向导会和你一起一步一步地进行配置。"

#: ../nitrowall/index.rst
msgid "NitroWall backside"
msgstr "NitroWall的背面"

#: ../nitrowall/index.rst:31
msgid "NitroWall back side"
msgstr "NitroWall后侧"

#: ../nitrowall/index.rst
msgid "NitroWall frontside"
msgstr "NitroWall的前侧"

#: ../nitrowall/index.rst:36
msgid "NitroWall front side"
msgstr "NitroWall前侧"

#: ../nitrowall/index.rst
msgid "dashboard"
msgstr "仪表板"

#: ../nitrowall/index.rst:42
msgid "NitroWall dashboard"
msgstr "NitroWall 仪表板"

#: ../nitrowall/index.rst
msgid "reload"
msgstr "重新加载"

#: ../nitrowall/index.rst:47
msgid "Reload the NitroWall"
msgstr "重新加载NitroWall"

#: ../nitrowall/index.rst:49
msgid ""
"After configuring your NitroWall reload it to make the changes "
"persistent. As soon as the process terminates, you are back again at the "
"dashboard."
msgstr "在配置完NitroWall后，重新加载它，以使变化持久化。一旦这个过程结束，你就会再次回到仪表盘上。"

#: ../nitrowall/index.rst:50
msgid ""
"After the installation is complete, install the necessary updates. To do "
"this, go to System → Firmware → Updates."
msgstr "安装完成后，安装必要的更新。要做到这一点，请进入系统→固件→更新。"

#: ../nitrowall/lan-bridge.rst:2
msgid "How to set up a LAN Bridge"
msgstr "如何建立一个局域网桥"

#: ../nitrowall/lan-bridge.rst:4
msgid "Details on how to set up a LAN bridge you can find on:"
msgstr "关于如何设置局域网桥的细节，你可以在上面找到。"

#: ../nitrowall/lan-bridge.rst:6
msgid "https://docs.opnsense.org/manual/how-tos/lan_bridge.html"
msgstr "https://docs.opnsense.org/manual/how-tos/lan_bridge.html"

#: ../nitrowall/ntp.rst:2
msgid "How to Fix NTP"
msgstr "如何修复NTP"

#: ../nitrowall/ntp.rst:4
msgid ""
"By default, the NitroWall arrives at your site with a pre-configured NTPd"
" server. The firewall blocks all access that does not occur via a LAN "
"interface. If you have large deviations in the system time, you can fix "
"them as follows:"
msgstr "默认情况下，NitroWall在到达你的现场时，已经预先配置了NTPd服务器。防火墙会阻止所有不通过LAN接口的访问。如果你的系统时间有较大的偏差，你可以按以下方法解决。"

#: ../nitrowall/ntp.rst:6
msgid ""
"Set the time to match your time zone via the cmdline interface (reboot "
"required) using `date`"
msgstr "通过cmdline界面（需要重新启动），使用`date`来设置时间，以符合你的时区。"

#: ../nitrowall/ntp.rst:7
msgid "Switch to the OPNsense GUI again"
msgstr "再次切换到OPNsense GUI"

#: ../nitrowall/ntp.rst:8
msgid "Go to Menu → Services → Network Time → General"
msgstr "进入菜单→服务→网络时间→常规"

#: ../nitrowall/ntp.rst:9
msgid ""
"Set \"Interfaces\" from \"All (recommended)\" to \"LAN\" (Or WAN if you "
"are connected via WAN interface)"
msgstr "将 \"接口 \"从 \"所有\"（推荐）设置为 \"局域网\"（或 \"广域网\"，如果你是通过广域网接口连接）。"

#: ../nitrowall/ntp.rst:10
msgid "Restart the service e.g. by the restart button in the top-right corner"
msgstr "重新启动服务，例如通过右上角的重新启动按钮。"

#: ../nitrowall/ntp.rst
msgid "Set Interface to LAN"
msgstr "将接口设置为LAN"

#: ../nitrowall/ntp.rst
msgid "NTP restart"
msgstr "NTP重启"

#: ../nitrowall/nw750/factory-reset.rst:6
msgid ""
"Make sure the NW750 is connected to a power source or has at least 50% "
"batterie left."
msgstr "确保 NW750 已连接到电源或电池电量至少剩余 50%。"

#: ../nitrowall/nw750/factory-reset.rst:7
msgid ""
"Press and hold the reset button (next to the microSD card slot) for 10 "
"seconds."
msgstr "按住重置按钮（microSD 卡插槽旁边）10 秒钟。"

#: ../nitrowall/nw750/factory-reset.rst:8
msgid "This will trigger a reboot which takes ca. 3 minutes."
msgstr "这将触发重启，耗时约 3 分钟。"

#: ../nitrowall/nw750/factory-reset.rst:9
msgid ""
"In order to be able to change your device's IMEI, `reinstall blue-merle "
"<https://github.com/srlabs/blue-merle/tree/main#installation>`_."
msgstr ""
"为了能够更改设备的 IMEI，`重新安装 blue-merle<https://github.com/srlabs/blue-"
"merle/tree/main#installation>`_ 。"

#: ../nitrowall/nw750/firmware-update.rst:5
msgid ""
"For the general firmware update follow `this guide <https://docs.gl-"
"inet.com/router/en/4/interface_guide/firmware_upgrade/>`_ . Afterwards we"
" need to reinstall blue-merle:"
msgstr ""
"一般固件更新请遵循`本指南<https://docs.gl-"
"inet.com/router/en/4/interface_guide/firmware_upgrade/>`_ 。之后，我们需要重新安装 "
"blue-merle："

#: ../nitrowall/nw750/firmware-update.rst:7
msgid "Make sure the NW750 has a working Internet connection"
msgstr "确保 NW750 的互联网连接正常"

#: ../nitrowall/nw750/firmware-update.rst:8
msgid ""
"Connect with the WiFi and login to the alternativ OpenWrt at "
"https://192.168.8.1/cgi-bin/luci/ using username root and the same "
"password used for the other web interface"
msgstr ""
"使用用户名 root 和其他网络界面使用的相同密码，连接 WiFi 并登录备用 OpenWrt（https://192.168.8.1/cgi-"
"bin/luci/）。"

#: ../nitrowall/nw750/firmware-update.rst:12
msgid "Go to \"System\" -> Software"
msgstr "转到 \"系统\" -> 软件"

#: ../nitrowall/nw750/firmware-update.rst:16
msgid ""
"Click \"update list\". This can take a while but if it fails it means you"
" have no Internet connection."
msgstr "点击 \"更新列表\"。这可能需要一些时间，但如果失败，则意味着您没有网络连接。"

#: ../nitrowall/nw750/firmware-update.rst:24
msgid ""
"click \"upload packackge\" and upload `blue-merle "
"<https://www.nitrokey.com/files/ci/nitrowall/latest_blue-merle.ipk>`_"
msgstr ""
"点击 \"上传 packackge \"并上传`blue-"
"merle<https://www.nitrokey.com/files/ci/nitrowall/latest_blue-"
"merle.ipk>`_"

#: ../nitrowall/nw750/firmware-update.rst:28
msgid "Click \"install\""
msgstr "点击 \"安装"

#: ../nitrowall/nw750/firmware-update.rst:34
msgid "Your firmware has been successfully updated."
msgstr "您的固件已成功更新。"

#: ../nitrowall/nw750/imei-change.rst:2
msgid "Changing IMEI"
msgstr "更改 IMEI"

#: ../nitrowall/nw750/imei-change.rst:4
msgid ""
"To be able to change the IMEI of your device, the software `blue merle "
"<https://github.com/srlabs/blue-merle>`_ is pre-installed."
msgstr "要更改设备的 IMEI，需要预装软件`blue merle<https://github.com/srlabs/blue-merle>`_ 。"

#: ../nitrowall/nw750/imei-change.rst:6
msgid ""
"After performing a factory reset, you need to `reinstall "
"<https://github.com/srlabs/blue-merle#installation>`_ blue-merle."
msgstr ""
"执行出厂重置后，您需要`重新安装<https://github.com/srlabs/blue-merle#installation>`_ "
"blue-merle。"

#: ../nitrowall/nw750/imei-change.rst:10
msgid ""
"There a different ways to change the IMEI. The simplest is to use the "
"toogle on the side of the NW750:"
msgstr "更改 IMEI 有多种方法。最简单的方法是使用 NW750 侧面的拨号器："

#: ../nitrowall/nw750/imei-change.rst:12
msgid "Switch the hardware toggle."
msgstr "切换硬件开关。"

#: ../nitrowall/nw750/imei-change.rst:13
msgid ""
"Follow the instructions on the display, which will prompt you to replace "
"the SIM card eventually."
msgstr "按照显示屏上的提示操作，最终将提示您更换 SIM 卡。"

#: ../nitrowall/nw750/imei-change.rst:14
msgid ""
"After replacing the SIM card, flip the toggle again. This changes the "
"IMEI and powers off your device."
msgstr "更换 SIM 卡后，再次翻转拨动器。这将更改 IMEI 并关闭设备电源。"

#: ../nitrowall/nw750/imei-change.rst:15
msgid "You should change your geographical location before booting again."
msgstr "再次启动前，您应该更改地理位置。"

#: ../nitrowall/nw750/imei-change.rst:17
msgid ""
"For more details see `this documentation <https://github.com/srlabs/blue-"
"merle/blob/main/Documentation.pdf>`_."
msgstr ""
"更多详情，请参阅`本文档<https://github.com/srlabs/blue-"
"merle/blob/main/Documentation.pdf>`_ 。"

#: ../nitrowall/nw750/imei-change.rst:19
msgid ""
"Occasionally, commands executed on the device may take longer than "
"expected. This can result in the display switching off (standby) for a "
"few seconds before displaying the expected final message (e.g. "
"instructions to replace the SIM card). Wait for the final message to "
"appear before pulling the switch again. If no message is displayed after "
"a minute, the script might have exited or you might have missed the "
"message. In this case, pull the switch to continue / restart the process."
msgstr ""
"有时，在设备上执行命令所需的时间可能比预期的要长。这可能导致显示屏在显示预期的最终信息（例如更换 SIM "
"卡的说明）之前关闭（待机）几秒钟。请等待最终信息出现后再拉动开关。如果一分钟后仍未显示信息，则可能是脚本已退出或您错过了信息。在这种情况下，拉动开关继续/重新启动程序。"

#: ../nitrowall/nw750/index.rst:2
msgid "Nitrowall NW750"
msgstr "Nitrowall NW750"

#: ../nitrowall/nw750/index.rst:9
msgid "Connect to the Wifi network **GL-E750-XXX** with password: **goodlife**."
msgstr "连接到 Wifi 网络**GL-E750-XXX** ，密码：**goodlife** 。"

#: ../nitrowall/nw750/index.rst:10
msgid "Open the webinterface at http://192.168.8.1"
msgstr "打开 http://192.168.8.1 的网络界面"

#: ../nitrowall/nw750/index.rst:11
msgid ""
"For more help see `this documentation <https://docs.gl-"
"inet.com/router/en/4/interface_guide/>`_"
msgstr "如需更多帮助，请参阅`本文档<https://docs.gl-inet.com/router/en/4/interface_guide/>`_"

#: ../nitrowall/sealed-hardware.rst:4
msgid ""
"Your NitroWall has been delivered in a sealed packaging and with sealed "
"screws. We will send you a picture of your NitroWall before shipping. "
"Please compare the image to your packaged NitroWall. If you notice any "
"changes, please contact us to arrange further action."
msgstr "您的NitroWall已被密封包装，并配有密封螺丝。我们会在发货前给你发一张NitroWall的图片。请将该图片与你的包装上的NitroWall进行比较。如果你发现有任何变化，请联系我们以安排进一步的行动。"

#: ../nitrowall/sealed-hardware.rst:-1
msgid "sealing number one"
msgstr "一号密封"

#: ../nitrowall/sealed-hardware.rst:-1
msgid "sealing number two"
msgstr "二号密封圈"

#: ../nitrowall/sealed-hardware.rst:-1
msgid "sealing number three"
msgstr "三号封条"

#: ../nkpk/index.rst:2
msgid "Nitrokey Passkey"
msgstr "密码钥匙"

#: ../nkpk/index.rst:6
msgid ""
"The Nitrokey Passkey is the successor to the Nitrokey FIDO2. It is build "
"on top of the technologies and framework used within the Nitrokey 3. Find"
" the latest `release notes`_ on GitHub."
msgstr ""
"Nitrokey Passkey 是 Nitrokey FIDO2 的后续产品。它建立在 Nitrokey 3 所使用的技术和框架之上。请在 "
"GitHub 上查找最新的`发布说明。"

#: ../nkpk/index.rst:9
msgid ""
"Please see the :doc:`FIDO2 <../fido2/index>` pages for more FIDO2 related"
" documentation."
msgstr "请参阅 :doc:`FIDO2 <../fido2/index>` 页面获取更多 FIDO2 相关文档。"

#: ../nkpk/index.rst:11
msgid ""
"Currently there is only one firmware version, so no firmware update is "
"necessary."
msgstr "目前只有一个固件版本，因此无需进行固件升级。"

#: ../pro/faq.rst:2
msgid "Nitrokey Pro 2 FAQ"
msgstr "Nitrokey Pro 2常见问题"

#: ../pro/faq.rst:12 ../start/faq.rst:11 ../storage/faq.rst:16
msgid "**Q:** What are the default PINs?"
msgstr "**问：**默认的PIN码是什么？"

#: ../pro/faq.rst:8 ../start/faq.rst:7 ../storage/faq.rst:10
msgid "**User PIN:** \"123456\""
msgstr "**用户密码：**\"123456\"。"

#: ../pro/faq.rst:9 ../start/faq.rst:8 ../storage/faq.rst:11
msgid "**Administrator PIN:** \"12345678\""
msgstr "**管理员密码：** \"12345678\"。"

#: ../pro/faq.rst:11 ../start/faq.rst:10 ../storage/faq.rst:14
msgid ""
"We strongly recommend to change these PINs/password to user-chosen values"
" before using the Nitrokey."
msgstr "我们强烈建议在使用Nitrokey之前，将这些PIN码/密码改为用户选择的值。"

#: ../shared-faqs/pins.rst.inc:8
msgid ""
"Nitrokey Storage's PINs can be up to 20 digits long and can consist of "
"numbers, characters and special characters. Note: When using GnuPG or "
"OpenSC, 32 character long PINs can be used but aren't supported by "
"Nitrokey App."
msgstr ""
"Nitrokey "
"Storage的PIN码可长达20位，可由数字、字符和特殊字符组成。注意：当使用GnuPG或OpenSC时，可以使用32个字符的PIN码，但不被Nitrokey"
" App支持。"

#: ../shared-faqs/pins.rst.inc:14
msgid ""
"The user PIN is at least 6-digits long and is used to get access to the "
"contect of the Nitrokey. This is the PIN you will use a lot in every day "
"use e.g. for decrypting messages, for unlocking your encrypted storage "
"(NK Storage only) etc."
msgstr "用户PIN码至少有6位数，用于进入Nitrokey的保护范围。这是你在日常使用中经常用到的密码，例如解密信息、解锁加密的存储空间（仅限NK存储）等。"

#: ../shared-faqs/pins.rst.inc:19
msgid ""
"The user PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the user PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have a 6 digits PIN. The default PIN is 123456."
msgstr "用户密码可以有多达20位数字和其他字符（如字母和特殊字符）。但是，由于用户的PIN码在尝试了三次错误的PIN码后就会被阻止，所以只有6位数的PIN码就足够安全了。默认的PIN码是123456。"

#: ../shared-faqs/pins.rst.inc:34
msgid "**Q:** What is the Admin PIN for?"
msgstr "**问：**管理密码是用来做什么的？"

#: ../shared-faqs/pins.rst.inc:25
msgid ""
"The admin PIN is at least 8-digits long and is used to change "
"contents/settings of the Nitrokey. That is to say after initializing the "
"Nitrokey you probably won't need this PIN too often (e.g. if you want to "
"add another password to the password safe of the Nitrokey Pro or Nitrokey"
" Storage)."
msgstr ""
"管理密码至少有8位数，用于改变硝基钥匙的内容/设置。也就是说，在初始化Nitrokey后，你可能不会经常需要这个PIN码（例如，如果你想在Nitrokey"
" Pro或Nitrokey Storage的密码箱中添加另一个密码）。"

#: ../shared-faqs/pins.rst.inc:31
msgid ""
"The admin PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the admin PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have 8 digits PIN. The default PIN is 12345678."
msgstr "管理密码最多可以有20位数字和其他字符（如字母和特殊字符）。但是，由于只要有三次错误的PIN尝试，管理PIN就会被阻止，所以只有8位数的PIN就足够安全了。默认的PIN码是12345678。"

#: ../pro/faq.rst:19
msgid ""
"**Q:** Why does my Nitrokey Pro hang when switching between nitrokey-app "
"and GnuPG?"
msgstr "**问：**为什么我的Nitrokey Pro在nitrokey-app和GnuPG之间切换时挂起？"

#: ../pro/faq.rst:17 ../storage/faq.rst:32
msgid ""
"GnuPG and nitrokey-app sometimes tend to hand each other. This is a known"
" problem and it can be fixed by re-inserting the Nitrokey into the USB "
"slot."
msgstr "GnuPG和nitrokey-app有时会互相牵制。这是一个已知的问题，它可以通过将硝基钥匙重新插入USB插槽来解决。"

#: ../pro/faq.rst:33 ../start/faq.rst:27
msgid "**Q:** Which drivers/tools can be used?"
msgstr "**问：**可以使用哪些驱动程序/工具？"

#: ../pro/faq.rst:22 ../start/faq.rst:16
msgid ""
"GnuPG is required for many use cases. It is a command line tool but "
"usually you don't need to invoke it directly but use another application "
"with user interface."
msgstr "GnuPG在许多使用情况下都是必需的。它是一个命令行工具，但通常你不需要直接调用它，而是使用另一个具有用户接口的应用程序。"

#: ../pro/faq.rst:26 ../start/faq.rst:20
msgid ""
"Don't use GnuPG in parallel with OpenSC or another PKCS#11 driver because"
" both may interfere and unexpected issues may result."
msgstr "不要将GnuPG与OpenSC或其他PKCS#11驱动并行使用，因为两者可能会相互干扰，并可能导致意外问题。"

#: ../pro/faq.rst:28 ../start/faq.rst:22
msgid ""
"Install GPG4Win which contains Gnu Privacy Assistant (GPA) and GnuPG "
"(GPG). Start Gnu Privacy Assistant (GPA) or another application such as "
"your email client to use GnuPG. Advanced users could use GnuPG directly "
"(command line). Please note: The Fellowship smart card is similar to the "
"Nitrokey Pro so that this instructions work Nitrokey as well. In general "
"the official documentation is recommended."
msgstr ""
"安装GPG4Win，其中包含Gnu Privacy Assistant（GPA）和GnuPG（GPG）。启动Gnu Privacy "
"Assistant "
"(GPA)或其他应用程序，如你的电子邮件客户端，以使用GnuPG。高级用户可以直接使用GnuPG（命令行）。请注意：联谊会的智能卡与Nitrokey"
" Pro类似，因此本说明也适用于Nitrokey。一般情况下，建议使用官方文档。"

#: ../pro/faq.rst:36 ../storage/faq.rst:53
msgid "Encryption of 50kiB of data:"
msgstr "对50kiB的数据进行加密。"

#: ../pro/faq.rst:38 ../storage/faq.rst:55
msgid "256 bit AES, 2048 bytes per command -> 880 bytes per second"
msgstr "256位AES，每条命令2048字节 -> 每秒880字节"

#: ../pro/faq.rst:39 ../storage/faq.rst:56
msgid "128 bit AES, 2048 bytes per command -> 893 bytes per second"
msgstr "128位AES，每条命令2048字节 -> 每秒893字节"

#: ../pro/faq.rst:40 ../storage/faq.rst:57
msgid "256 bit AES, 240 bytes per command -> 910 bytes per second"
msgstr "256位AES，每个命令240字节 -> 每秒910字节"

#: ../pro/faq.rst:41 ../storage/faq.rst:58
msgid "128 bit AES, 240 bytes per command -> 930 bytes per second"
msgstr "128位AES，每条命令240字节 -> 每秒930字节"

#: ../pro/faq.rst:48
msgid ""
"**Q:** Does the Nitrokey Pro contain a secure chip or just a normal "
"microcontroller?"
msgstr "**问：**Nitrokey Pro是否包含安全芯片或只是一个普通的微控制器？"

#: ../pro/faq.rst:48
msgid "Nitrokey Pro contains a tamper resistant smart card."
msgstr "Nitrokey Pro包含一个防篡改的智能卡。"

#: ../pro/faq.rst:54
msgid "**Q:** Is the Nitrokey Pro Common Criteria or FIPS certified?"
msgstr "**问：** Nitrokey Pro是否经过通用标准或FIPS认证？"

#: ../pro/faq.rst:51
msgid ""
"The security controller (NXP Smart Card Controller P5CD081V1A and its "
"major configurations P5CC081V1A, P5CN081V1A, P5CD041V1A, P5CD021V1A and "
"P5CD016V1A each with IC dedicated Software) is Common Criteria EAL 5+ "
"certified up to the OS level (`Certification Report "
"<https://commoncriteriaportal.org/files/epfiles/0555a_pdf.pdf>`__, "
"`Security Target "
"<https://commoncriteriaportal.org/files/epfiles/0555b_pdf.pdf>`__, "
"`Maintenance Report "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1a_pdf.pdf>`__, "
"`Maintenance ST "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1b_pdf.pdf>`__)."
msgstr ""
"安全控制器（恩智浦智能卡控制器 P5CD081V1A 及其主要配置 "
"P5CC081V1A、P5CN081V1A、P5CD041V1A、P5CD021V1A 和 P5CD016V1A 均带有 IC "
"专用软件）已通过通用标准 EAL 5+ 认证，最高达到操作系统级别 (`Certification "
"Report<https://commoncriteriaportal.org/files/epfiles/0555a_pdf.pdf>`__,`Security"
" "
"Target<https://commoncriteriaportal.org/files/epfiles/0555b_pdf.pdf>`__,`Maintenance"
" "
"Report<https://commoncriteriaportal.org/files/epfiles/0555_ma1a_pdf.pdf>`__,`Maintenance"
" ST<https://commoncriteriaportal.org/files/epfiles/0555_ma1b_pdf.pdf>`__)"
" 。"

#: ../pro/faq.rst:58
msgid ""
"**Q:** How can I use the True Random Number Generator (TRNG) of the "
"Nitrokey Pro for my applications?"
msgstr "**问：**我怎样才能在我的应用中使用Nitrokey Pro的真随机数发生器（TRNG）？"

#: ../pro/faq.rst:57 ../storage/faq.rst:73
msgid ""
"Both devices are compatible to the OpenPGP Card, so that `scdrand`_ "
"should work. `This script`_ may be useful. The user comio `created a "
"systemd file`_ to use scdrand and thus the TRNG more generally. He "
"created an `ebuild for Gentoo`_, too."
msgstr ""
"这两种设备都与OpenPGP卡兼容，因此，`scdrand`_应该可以工作。`这个脚本`_可能有用。用户comio "
"`创建了一个systemd文件`_来使用scdrand，从而更普遍地使用TRNG。他还为Gentoo创建了一个`ebuild`_。"

#: ../pro/faq.rst:61 ../storage/faq.rst:77
msgid ""
"Nitrokey Pro and Nitrokey Storage use a True Random Number Generator "
"(TRNG) for generating keys on the device. The entropy generated by the "
"TRNG is used for the entire key length. Therefore the TRNG is compliant "
"to `BSI TR-03116`_."
msgstr ""
"Nitrokey Pro和Nitrokey "
"Storage使用真随机数发生器（TRNG）来生成设备上的密钥。TRNG产生的熵被用于整个密钥长度。因此，TRNG符合`BSI "
"TR-03116`_的规定。"

#: ../pro/faq.rst:65 ../storage/faq.rst:81
msgid "The TRNG provides about 40 kbit/s."
msgstr "TRNG提供约40 kbit/s。"

#: ../pro/faq.rst:68
msgid ""
"The Nitrokey Pro doesn't contain storage capability for ordinary data (it"
" can only store cryptographic keys and certificates)."
msgstr "Nitrokey Pro不包含普通数据的存储能力（它只能存储加密密钥和证书）。"

#: ../pro/index.rst:2
msgid "Nitrokey Pro 2"
msgstr "Nitrokey Pro 2"

#: ../pro/2fa-google.rst.inc:2
msgid "Two-factor Authentication for Google"
msgstr "谷歌的双因素认证"

#: ../pro/2fa-google.rst.inc:6
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Google account:"
msgstr "这些是注册Nitrokey Pro或Nitrokey Storage作为谷歌账户第二要素的基本步骤。"

#: ../pro/2fa-google.rst.inc:8
msgid ""
"Go to `https://myaccount.google.com/security#signin "
"<https://myaccount.google.com/intro/security>`__"
msgstr ""
"转到`https://myaccount.google.com/security#signin "
"<https://myaccount.google.com/intro/security>`__"

#: ../pro/2fa-google.rst.inc:11
msgid "Click “2-Step Verification” on the right side"
msgstr "点击右侧的 \"2步验证\"。"

#: ../pro/2fa-google.rst.inc:13
msgid ""
"You need to define a first 2-Step Verfication (e.g. your phone number) "
"method to have access to the alternative second step option (the first "
"2-Step Verification can’t be the security key)"
msgstr "你需要定义第一个2步验证（例如你的电话号码）方法，以便能够访问替代的第二步选项（第一个2步验证不能是安全密钥）。"

#: ../pro/2fa-google.rst.inc:17
msgid ""
"Choose “Authenticator App” as second step (though you won’t actually need"
" the app)"
msgstr "第二步选择 \"认证器应用程序\"（尽管你实际上不需要这个应用程序）。"

#: ../pro/2fa-google.rst.inc:20
msgid ""
"Choose Android -> press on “Can’t scan it” below the qrcode to see the "
"secret key"
msgstr "选择安卓->；按qrcode下面的 \"无法扫描 \"查看密匙。"

#: ../pro/2fa-google.rst.inc:23
msgid ""
"Copy the key (you can ignore the whitespaces, they do not get copied "
"anyway!) and paste the key into the corresponding field in the Nitrokey "
"App"
msgstr "复制钥匙（你可以忽略空白处，反正它们不会被复制！）并将钥匙粘贴到Nitrokey应用程序的相应区域。"

#: ../pro/2fa-google.rst.inc:27
msgid ""
"Click “Next” and follow the instructions (but you use the Nitrokey App "
"instead of the Google Authenticator app to generate the keys)"
msgstr "点击 \"下一步 \"并按照指示操作（但你要使用Nitrokey应用程序而不是Google Authenticator应用程序来生成密钥）。"

#: ../pro/2fa-google.rst.inc:30
msgid ""
"It is possible to use the same secret key for the Google Autenticator app"
" and the Nitrokey App as well. Just make sure to follow the above "
"procedure and use the qrcode for the Authenticator app afterwards before "
"clicking “Next”. Now you can use either the Google Authenticator app or "
"the Nitrokey App."
msgstr ""
"在谷歌Autenticator应用程序和Nitrokey应用程序中也可以使用相同的秘密密钥。只要确保遵循上述程序，并在点击 \"下一步 "
"\"之前使用认证器应用程序的qrcode。现在你可以使用谷歌认证器应用程序或Nitrokey应用程序。"

#: ../pro/2fa-nextcloud.rst.inc:2
msgid "Two-factor Authentication for Nextcloud accounts"
msgstr "Nextcloud账户的双因素认证"

#: ../pro/2fa-nextcloud.rst.inc:6
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Nextcloud account."
msgstr "这些是注册Nitrokey Pro或Nitrokey Storage作为Nextcloud账户第二要素的基本步骤。"

#: ../pro/2fa-nextcloud.rst.inc:8
msgid ""
"At first, log in to your Nextcloud account, click on the top right symbol"
" of your account and open the settings menu."
msgstr "首先，登录您的Nextcloud账户，点击您账户的右上方符号，打开设置菜单。"

#: ../pro/2fa-nextcloud.rst.inc:15
msgid "Now choose “Security” on the left hand side."
msgstr "现在，在左手边选择 \"安全\"。"

#: ../pro/2fa-nextcloud.rst.inc:22
msgid ""
"Now you can tick the box reading “Enable TOTP”. There is shown the TOTP "
"secret which we need to add to our Nitrokey via the Nitrokey App."
msgstr "现在你可以勾选 \"启用TOTP \"的方框。这里显示了TOTP的秘密，我们需要通过Nitrokey应用程序将其添加到我们的Nitrokey中。"

#: ../pro/2fa-nextcloud.rst.inc:29
msgid "Copy and save secret code into the Nitrokey App."
msgstr "复制并保存秘密代码到Nitrokey应用程序。"

#: ../pro/2fa-nextcloud.rst.inc:41
msgid ""
"Now we request a one-time password for the Nextcloud to verify the "
"process by inserting the password on the website and pressing “verify”."
msgstr "现在我们要求Nextcloud的一次性密码，通过在网站上插入密码并按下 \"验证 \"来验证这一过程。"

#: ../pro/2fa-nextcloud.rst.inc:53
msgid ""
"From now on, when signing in you need an OTP additionally to your "
"password. Get one by the Nitrokey App like before and insert it in when "
"logging in."
msgstr "从现在开始，当你登录时，除了你的密码之外，还需要一个OTP。像以前一样通过Nitrokey应用程序获得一个，并在登录时插入。"

#: ../pro/2fa-nextcloud.rst.inc:60
msgid ""
"Nextcloud provides you with backup codes, in case you lost your Nitrokey."
" It is recommended to print out these codes and store them somewhere save"
" otherwise you might not be able to log in to your account anymore!"
msgstr "Nextcloud为您提供了备份代码，以防您丢失您的Nitrokey。建议您打印出这些代码，并将其保存在某个地方，否则您可能无法再登录您的账户了。"

#: ../pro/2fa-odoo.rst.inc:21
msgid "Video: Two-Factor Authentication With The Nitrokey Pro in Odoo"
msgstr "视频：在 Odoo 中使用 Nitrokey Pro 进行双因素身份验证"

#: ../pro/linux/disk-encryption-luks.rst:2
msgid "Full-Disk Encryption With cryptsetup/LUKS"
msgstr "用cryptsetup/LUKS进行全盘加密"

#: ../pro/linux/disk-encryption-luks.rst:6
msgid ""
"This guide shows how to configure LUKS-encrypted volumes, to authenticate"
" at boot with `Nitrokey Pro <https://shop.nitrokey.com/shop/product/nk-"
"pro-2-nitrokey-pro-2-3>`__ or `Nitrokey Storage "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`__."
msgstr ""
"本指南展示了如何配置LUKS加密卷，在启动时用`Nitrokey Pro "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-"
"pro-2-3>`__或`Nitrokey Storage <https://shop.nitrokey.com/shop/product"
"/nitrokey-storage-2-56>`__验证。"

#: ../pro/linux/disk-encryption-luks.rst:8
msgid ""
"To provide some background, cryptsetup-initramfs now has support for "
"using OpenPGP smart cards like the Nitrokey Pro and Nitrokey Storage to "
"unlock LUKS-encrypted volumes. Once you finish the setup, you will just "
"need to insert your Nitrokey at boot and enter your User PIN, instead of "
"typing in your regular disk encryption passphrase."
msgstr ""
"为了提供一些背景资料，cryptsetup-initramfs现在支持使用Nitrokey Pro和Nitrokey "
"Storage等OpenPGP智能卡来解锁LUKS加密的卷。一旦你完成设置，你只需要在启动时插入Nitrokey并输入用户密码，而不是输入常规的磁盘加密口令。"

#: ../pro/linux/disk-encryption-luks.rst:14
msgid "These instructions have been tested on Ubuntu 20.04 and Debian 10."
msgstr "这些说明已经在Ubuntu 20.04和Debian 10上进行了测试。"

#: ../pro/linux/disk-encryption-luks.rst:18
msgid ""
"The following guide can potentially lock you out of your computer. You "
"should be aware of these risks, and we recommend you use the script below"
" on a secondary computer, or after a full backup as you might lose your "
"data."
msgstr "下面的指南有可能会把你的电脑锁住。你应该意识到这些风险，我们建议你在第二台电脑上使用下面的脚本，或者在完全备份后使用，因为你可能会丢失你的数据。"

#: ../pro/linux/disk-encryption-luks.rst:26
msgid "An Ubuntu or Debian computer with at least one LUKS-encrypted volume."
msgstr "一台至少有一个LUKS加密卷的Ubuntu或Debian电脑。"

#: ../pro/linux/disk-encryption-luks.rst:28
msgid ""
"See the section below to determine which method is compatible with this "
"guide."
msgstr "请参阅下面的章节，以确定哪种方法与本指南兼容。"

#: ../pro/linux/disk-encryption-luks.rst:30
msgid ""
"A Nitrokey Pro 2 or Nitrokey Storage 2 `initialized <openpgp.html>`_ with"
" keys."
msgstr "一个Nitrokey Pro 2或Nitrokey Storage 2 `初始化<openpgp.html>`_的键。"

#: ../pro/linux/disk-encryption-luks.rst:35
#: ../software/nitropy/windows/installation.rst:31
msgid "Known Issues"
msgstr "已知问题"

#: ../pro/linux/disk-encryption-luks.rst:37
msgid ""
"So far, the script works only with manually-partitioned volumes, that are"
" composed of an unencrypted ``/boot`` partition, and an encrypted root "
"``/`` partition."
msgstr "到目前为止，该脚本只适用于手动分区的卷，即由未加密的``/boot``分区和加密的根``/`` 分区组成。"

#: ../pro/linux/disk-encryption-luks.rst:41
msgid ""
"Please do not select the automatic full-disk encryption provided by the "
"operating system you are using for this guide. You will face recurrent "
"errors when the partitioning is done automatically, using the "
"installation interface on Ubuntu and Debian."
msgstr "请不要选择你所使用的操作系统为本指南提供的自动全盘加密功能。在Ubuntu和Debian上使用安装界面自动进行分区时，你将面临反复的错误。"

#: ../pro/linux/disk-encryption-luks.rst:49
msgid "Install dependencies"
msgstr "安装依赖项"

#: ../pro/linux/disk-encryption-luks.rst:56
msgid "Create smartcard-luks directory"
msgstr "创建智能卡-鲁克斯目录"

#: ../pro/linux/disk-encryption-luks.rst:63
msgid "Download the smartcard-luks-script"
msgstr "下载智能卡-鲁克斯-脚本"

#: ../pro/linux/disk-encryption-luks.rst:71
msgid "Export the public key"
msgstr "导出公钥"

#: ../pro/linux/disk-encryption-luks.rst:73
msgid "To export your public key from GnuPG’s keyring:"
msgstr "要从GnuPG的钥匙圈中导出你的公钥。"

#: ../pro/linux/disk-encryption-luks.rst:80
msgid ""
"If you already have uploaded a public key to a keyserver (or have it "
"stored somewhere else), you should retrieve it in the way you are most "
"comfortable with, and proceed to step 5."
msgstr "如果你已经将公钥上传到钥匙服务器（或将其储存在其他地方），你应该以你最习惯的方式检索它，并继续进行第5步。"

#: ../pro/linux/disk-encryption-luks.rst:84
msgid "Determine and verify the correct LUKS device name for your root-partition:"
msgstr "为你的根分区确定并验证正确的LUKS设备名称。"

#: ../pro/linux/disk-encryption-luks.rst:92
msgid ""
"Usually this should be something like `nvme0n1p3_crypt` (for NitroPC) or "
"`sda3_crypt` (for NitroPads).  You can and should crosscheck that the "
"UUID referred inside `/etc/crypttab` is the designated partition by "
"checking the symbolic link inside `/dev/disks/by-uuid/`."
msgstr ""
"通常这应该是`nvme0n1p3_crypt`（用于NitroPC）或`sda3_crypt`（用于NitroPads）。  "
"你可以而且应该通过检查`/etc/crypttab`中提到的UUID是指定的分区，即`/dev/disks/by-uuid/`中的符号链接。"

#: ../pro/linux/disk-encryption-luks.rst:97
msgid ""
"Execute the script with the luks device name (e.g., `nvme0n1p3_crypt`) "
"and `pubkey.asc` as arguments."
msgstr "以luks设备名称（例如：`nvme0n1p3_crypt`）和`pubkey.asc`为参数执行脚本。"

#: ../pro/linux/disk-encryption-luks.rst:104
msgid ""
"Once, you run the script with the OpenPGP public key as argument, it "
"automatically sets up a new LUKS secret, encrypts it against that public "
"key, and sets up crypttab, LUKS, initramfs, and GRUB."
msgstr "一旦你用OpenPGP公钥作为参数运行该脚本，它就会自动设置一个新的LUKS秘密，用该公钥进行加密，并设置crypttab、LUKS、initramfs和GRUB。"

#: ../pro/linux/disk-encryption-luks.rst:108
msgid "First you will be prompted for the ``User PIN``"
msgstr "首先，你会被提示``User PIN``。"

#: ../pro/linux/disk-encryption-luks.rst:113
msgid ""
"Once you unlock the Nitrokey, you will be prompted for your ``OLD "
"passphrase``. It is the passphrase you entered to encrypt your volume at "
"installation."
msgstr "一旦你解锁了Nitrokey，你会被提示你的``OLD passphrase``。这是你在安装时输入的加密卷的口令。"

#: ../pro/linux/disk-encryption-luks.rst:119
msgid ""
"This is a fall-back alternative in case you lose your Nitrokey, or if "
"it’s unavailable. So far, it was not tested, and users must be aware of "
"the risk of getting locked out of their computer, if the fall-back method"
" does not work."
msgstr "这是在你丢失Nitrokey或无法使用的情况下的一种后备选择。到目前为止，它还没有经过测试，用户必须意识到，如果后备方法不奏效，就有可能被锁在电脑外。"

#: ../pro/linux/disk-encryption-luks.rst:124
msgid ""
"Once you enter the passphrase, the script finishes the setup in about one"
" minute. Do not interrupt the script, or you might get locked out of your"
" computer after reboot."
msgstr "一旦你输入了口令，脚本就会在大约一分钟内完成设置。不要打断脚本，否则你可能会在重启后被锁定在你的电脑之外。"

#: ../pro/linux/disk-encryption-luks.rst:131
msgid "Done!"
msgstr "完成了!"

#: ../pro/linux/disk-encryption-luks.rst:133
msgid ""
"By now you must reboot, and you should be able to use your Nitrokey to "
"unlock your encrypted drive."
msgstr "现在你必须重新启动，你应该能够使用你的Nitrokey来解锁你的加密驱动器。"

#: ../pro/linux/disk-encryption-luks.rst:139
msgid "After reboot you should be prompted for your User PIN"
msgstr "重新启动后，系统会提示你输入用户密码。"

#: ../pro/linux/disk-encryption-luks.rst:144
msgid "Enter your User PIN to unlock the drive"
msgstr "输入你的用户密码以解锁硬盘"

#: ../pro/linux/disk-encryption-luks.rst:151
msgid "Further Hints"
msgstr "进一步提示"

#: ../pro/linux/disk-encryption-luks.rst:154
msgid "Change Passphrase"
msgstr "更改密码锁"

#: ../pro/linux/disk-encryption-luks.rst:156
msgid ""
"Once this setup is done, you should not use the (gnome) *disks* utility "
"anymore to change the (fallback) passphrase. The proper way to do this is"
" to call *cryptsetup* directly like this:"
msgstr "一旦完成这个设置，你就不应该再使用（gnome）*disks*工具来改变（后备）密码。正确的方法是像这样直接调用*cryptsetup*。"

#: ../pro/linux/disk-encryption-luks.rst:164
msgid "With `nvme0n1p3` being the partition you set up the keys for."
msgstr "`nvme0n1p3`是你为之设置钥匙的分区。"

#: ../pro/linux/disk-encryption-luks.rst:167
msgid "Use Multiple Keys"
msgstr "使用多个键"

#: ../pro/linux/disk-encryption-luks.rst:169
msgid ""
"It is easy to use multiple (hardware) security keys so that each of them "
"is able to unlock the LUKS drive independently. Just export multiple "
"public keys and also *pass multiple keys* to the setup script like this:"
msgstr "使用多个（硬件）安全密钥是很容易的，这样每个密钥都能独立解锁LUKS驱动器。只要导出多个公钥，同时*将多个密钥*传给设置脚本，像这样。"

#: ../pro/linux/disk-encryption-luks.rst:179
msgid "Set Cardholder Name"
msgstr "设置持卡人姓名"

#: ../pro/linux/disk-encryption-luks.rst:181
msgid ""
"During the PIN entry on boot for decryption of the LUKS root partition a "
"cardholder is presented to the user, to set this please use ``$ gpg "
"--edit-card`` and inside the prompt type ``admin`` and ``name`` to set "
"the cardholder for the OpenPGP Card (Nitrokey Storage 2 or Nitrokey Pro "
"2)."
msgstr ""
"在启动时输入PIN码以解密LUKS根分区时，会向用户展示一个持卡人。请使用``$ gpg --edit-card``并在提示中输入 "
"``admin<xid=\"189\"></x>`和``name``来设置OpenPGP卡（Nitrokey Storage 2或Nitrokey"
" Pro 2）的持卡人。"

#: ../pro/linux/disk-encryption-luks.rst:187
msgid "Replace/Delete Keys"
msgstr "替换/删除钥匙"

#: ../pro/linux/disk-encryption-luks.rst:189
msgid ""
"It is not possible to add/remove keys directly. Therefore you need to "
"delete/remove the old setup and re-run the setup with the designated "
"key(s):"
msgstr "不可能直接添加/删除钥匙。因此，你需要删除/删除旧的设置，然后用指定的钥匙重新运行设置。"

#: ../pro/linux/disk-encryption-luks.rst:193
msgid ""
"Remove the keyfile (path, if you used the script above) from luks-device "
"(*nvme0n1p3*):"
msgstr "从luks-device（*nvme0n1p3*）中删除密钥文件（路径，如果你使用了上面的脚本）。"

#: ../pro/linux/disk-encryption-luks.rst:199
msgid "Remove the keyfile itself:"
msgstr "删除密钥文件本身。"

#: ../pro/linux/disk-encryption-luks.rst:205
msgid "Re-run setup above."
msgstr "重新运行上述设置。"

#: ../pro/linux/disk-encryption-luks.rst:208
msgid "Unlocking LUKS2 with X509 certificate"
msgstr "用X509证书解锁LUKS2"

#: ../pro/linux/disk-encryption-luks.rst:210
msgid ""
"SystemD supports unlocking a LUKS2 partition using a X509 certificate, "
"find a great blog entry on how to realize this at the `Personal blog of "
"Vladimir Timofeenko`_"
msgstr ""
"SystemD支持使用X509证书解锁LUKS2分区，在`Vladimir "
"Timofeenko的个人博客上有一篇关于如何实现这一功能的精彩博客文章。"

#: ../pro/ecc.rst.inc:2
msgid "Elliptic Curves (ECC) Support"
msgstr "椭圆曲线（ECC）支持"

#: ../pro/ecc.rst.inc:7
msgid "RSA-2048 Becomes Increasingly Insecure"
msgstr "RSA-2048变得越来越不安全了"

#: ../pro/ecc.rst.inc:9
msgid ""
"For security reasons, the German Federal Office for Information Security "
"(Bundesamt für Sicherheit in der Informationstechnik, BSI) no longer "
"recommends RSA keys with a length of 2048 bit `to be used after 2023 "
"<https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102"
"/BSI-TR-02102-1.pdf>`__. This means that longer keys will need to come "
"into use in the foreseeable future. Assuming a usage period of five "
"years, is is already necessary to generate longer keys. However, longer "
"RSA keys with 3072 bit or 4096 bit are significantly slower. For this "
"reason the new Nitrokey Storage 2 and Pro 2 (resp. the integrated OpenPGP"
" Card version 3.3) supports encryption by means of `elliptic-curve "
"cryptography (ECC) <https://en.wikipedia.org/wiki/Elliptic-"
"curve_cryptography>`__. This method is considered to be just as secure "
"with smaller ECC keys as longer RSA keys and is also considerably faster."
msgstr ""
"出于安全考虑，德国联邦信息安全办公室（Bundesamt für Sicherheit in der Informationstechnik, "
"BSI）不再建议在2023年之后使用长度为2048位的RSA密钥` "
"<https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102"
"/BSI-"
"TR-02102-1.pdf>`__。这意味着在可预见的未来，更长的密钥将需要投入使用。假设使用期为5年，已经有必要产生更长的密钥了。然而，3072位或4096位的较长RSA密钥的速度明显较慢。由于这个原因，新的Nitrokey"
" Storage 2和Pro "
"2（即集成的OpenPGP卡3.3版）支持通过`椭圆曲线加密法（ECC）<https://en.wikipedia.org/wiki"
"/Elliptic-"
"curve_cryptography>`__加密。这种方法被认为是用较小的ECC密钥和较长的RSA密钥一样安全，而且速度也相当快。"

#: ../pro/ecc.rst.inc:14
msgid "Basics of Elliptic-Curve Cryptography"
msgstr "椭圆曲线加密法的基础知识"

#: ../pro/ecc.rst.inc:16
msgid ""
"In contrast to RSA, there are many different forms (so-called curves) of "
"elliptic-curve cryptography. Notably, the `NSA was involved "
"<https://www.schneier.com/essays/archives/2007/11/did_nsa_put_a_secret.html>`__"
" in the development of the NIST curves. Even if there is no evidence of "
"back doors in the curves, using a certain curve can pose a question of "
"trust. Fortunately the new Nitrokey Storage 2 and Pro 2 support two kind "
"of curves, namely NIST and Brainpool. In what follows we will use "
"Brainpool curves. `This article <https://arstechnica.com/information-"
"technology/2013/10/a-relatively-easy-to-understand-primer-on-elliptic-"
"curve-cryptography/>`__ provides a good entry point for gaining a general"
" understanding of elliptic-curve cryptography."
msgstr ""
"与RSA相比，椭圆曲线加密法有许多不同的形式（所谓的曲线）。值得注意的是，`NSA参与了<https://www.schneier.com/essays/archives/2007/11/did_nsa_put_a_secret.html>`__在NIST曲线的开发。即使没有证据表明曲线中存在后门，使用某种曲线也会带来信任问题。幸运的是，新的Nitrokey"
" Storage 2和Pro 2支持两种曲线，即NIST和Brainpool。在下面的内容中，我们将使用Brainpool "
"曲线。`这篇文章<https://arstechnica.com/information-technology/2013/10/a"
"-relatively-easy-to-understand-primer-on-elliptic-curve-"
"cryptography/>`__为获得对椭圆曲线加密法的一般理解提供了一个很好的切入点。"

#: ../pro/ecc.rst.inc:19
msgid "System Requirements"
msgstr "系统要求"

#: ../pro/ecc.rst.inc:21
msgid ""
"In order to create keys based on elliptic curves a Nitrokey Storage 2 / "
"Pro 2 and GnuPG version 2.1.17 or higher are required."
msgstr "为了创建基于椭圆曲线的钥匙，需要Nitrokey Storage 2 / Pro 2和GnuPG 2.1.17版或更高版本。"

#: ../pro/ecc.rst.inc:24
msgid "You can read Nitrokey’s OpenPGP Card version via ``gpg2 --card-status``:"
msgstr "你可以通过``gpg2 --card-status``读取Nitrokey的OpenPGP卡版本。"

#: ../pro/ecc.rst.inc:34
msgid ""
"The ‘Version’ field represents the version of the OpenPGP Card integrated"
" in the Nitrokey — in this case it is 3.3 as needed for Elliptic-curve "
"cryptography. OpenPGP Card version 2.2 doesn’t support ECC."
msgstr ""
"版本 \"字段表示集成在Nitrokey中的OpenPGP卡的版本--"
"在这种情况下，它是3.3，因为椭圆曲线加密法需要。OpenPGP卡2.2版本不支持ECC。"

#: ../pro/ecc.rst.inc:36
msgid ""
"You can learn about the installed version of GnuPG via ``gpg2  "
"--version``. At least version 2.1.16 is required. The newest GnuPG "
"version for Windows can be found `here <https://www.gpg4win.org/>`__ and "
"the newest version for MacOS can be found `here "
"<https://gpgtools.org/>`__. A suitable version of GnuPG is included in "
"the GNU/Linux distributions Ubuntu (since 18.04), Debian (from Stretch "
"onwards), Arch Linux, Fedora (from Release 26 onwards) and openSUSE "
"Tumbleweed. At the end of this articles are instructions how to manually "
"update GnuPG on older Ubuntu versions."
msgstr ""
"你可以通过``gpg2  "
"--version``了解GnuPG的安装版本。至少需要2.1.16版本。最新的Windows版GnuPG可以在`这里<https://www.gpg4win.org/>`__，最新的MacOS版可以在`这里<https://gpgtools.org/>`__找到。GNU/Linux发行版Ubuntu（从18.04开始）、Debian（从Stretch开始）、Arch"
" Linux、Fedora（从26版开始）和openSUSE "
"Tumbleweed中都包含了合适的GnuPG版本。在这篇文章的末尾，有如何在旧版Ubuntu上手动更新GnuPG的说明。"

#: ../pro/ecc.rst.inc:40
msgid ""
"GnuPG 2.0 is still being used, but support for it has been discontinuied "
"in 2017. All communication partners must use GnuPG 2.1 or newer for email"
" encryption by means of ECC, otherwise incompatibility issues might "
"arise. Therefore you should only use ECC if you are sure you will be able"
" to circumvent this problem."
msgstr ""
"GnuPG 2.0仍在使用，但对它的支持已在2017年停止。所有通信伙伴必须使用GnuPG "
"2.1或更新版本，通过ECC进行电子邮件加密，否则可能出现不兼容问题。因此，你应该只使用ECC，如果你确定你将能够规避这个问题。"

#: ../pro/ecc.rst.inc:47
msgid "Key Generation on the Nitrokey Storage 2 / Pro 2"
msgstr "在Nitrokey Storage 2 / Pro 2上生成钥匙"

#: ../pro/ecc.rst.inc:49
msgid ""
"Once these requirements are fulfilled, you can get started. (Warning: "
"existing keys will be overwritten in the process!) You now have two "
"options. The first option is to create the key directly on the Nitrokey "
"Storage 2 / Pro 2. The benefit here is that the key will never be outside"
" the device and as such can never be read out. The second option is to "
"import a previously locally generated key. The advantage in this case is "
"that you can securely store a backup of the key, which can then be "
"restored in case the Nitrokey is lost. Only the first option is described"
" below. In order to create a key with backup, you can access `the "
"following instructions "
"<https://www.gniibe.org/memo/software/gpg/keygen-25519.html>`__ and use "
"this `general information "
"<https://wiki.fsfe.org/TechDocs/CardHowtos/CardWithSubkeysUsingBackups>`__"
" to transfer the key to the Nitrokey."
msgstr ""
"一旦这些要求得到满足，你就可以开始了。(警告：现有的钥匙在这个过程中会被覆盖！）你现在有两个选择。第一个选择是直接在Nitrokey "
"Storage 2 / Pro "
"2上创建钥匙。这样做的好处是，钥匙将永远不会在设备之外，因此永远不会被读出。第二个选择是导入以前在本地生成的密钥。这种情况的好处是，你可以安全地存储钥匙的备份，一旦硝基钥匙丢失，就可以恢复。下面只介绍第一个选项。为了创建一个带备份的钥匙，你可以访问`下面的说明<https://www.gniibe.org/memo/software/gpg/keygen-25519.html>`__并使用这个`一般信息<https://wiki.fsfe.org/TechDocs/CardHowtos/CardWithSubkeysUsingBackups>`__将钥匙转移到Nitrokey上。"

#: ../pro/ecc.rst.inc:51
msgid ""
"Within GnuPG there is already a “generate” command, which can be used to "
"easily create keys on the device. However it is not as yet possible to "
"select the type of key directly, so the key must first be prepared. We "
"use the following commands for this:"
msgstr ""
"在GnuPG中，已经有一个 \"生成 "
"\"命令，可以用来在设备上轻松地创建钥匙。但是，目前还不能直接选择钥匙的类型，所以必须首先准备好钥匙。我们使用以下命令来实现这一点。"

#: ../pro/ecc.rst.inc:59
msgid ""
"Alternatively, other curves could be selected, as described in the next "
"section."
msgstr "另外，也可以选择其他曲线，如下一节所述。"

#: ../pro/ecc.rst.inc:61
msgid ""
"Now we enter ``gpg2 --card-edit`` and see that brainpoolP256r1 is under "
"“key attributes” instead of rsa2048."
msgstr "现在我们输入``gpg2 --card-edit``，看到brainpoolP256r1在 \"密钥属性 \"下而不是rsa2048。"

#: ../pro/ecc.rst.inc:87
msgid "Then we create the key."
msgstr "然后我们创建密钥。"

#: ../pro/ecc.rst.inc:119
msgid ""
"The Nitrokey now incorporates elliptic-curve cryptography instead of RSA "
"keys and can be used as usual."
msgstr "Nitrokey现在采用了椭圆曲线加密法，而不是RSA密钥，可以照常使用。"

#: ../pro/ecc.rst.inc:122
msgid "Available Curves"
msgstr "可用的曲线"

#: ../pro/ecc.rst.inc:124
msgid ""
"In the above procedure we chose the Brainpool curves. Alternatively, NIST"
" curves can be used. The configuration is carried out as follows:"
msgstr "在上述程序中，我们选择了Brainpool的曲线。另外，也可以使用NIST曲线。配置工作按以下方式进行。"

#: ../pro/ecc.rst.inc:133
msgid "Update of GnuPG on Ubuntu"
msgstr "Ubuntu上GnuPG的更新"

#: ../pro/ecc.rst.inc:135
msgid ""
"The following steps are needed only if you are running a Ubuntu version "
"older than 18.04. You can install GnuPG 2.1.18 on such system with the "
"commands below. This involves newer Debian packages, which is the easiest"
" option. This approach has been tested successfully on Ubuntu 17.10 and "
"propbably works on 16.04 as well. However, the occurence of problems "
"during usage can‘t be excluded."
msgstr ""
"只有当你运行的Ubuntu版本超过18.04时才需要以下步骤。你可以用下面的命令在这种系统上安装GnuPG "
"2.1.18。这涉及到较新的Debian软件包，这是最简单的选择。这种方法已经在Ubuntu "
"17.10上测试成功，可能在16.04上也适用。然而，不能排除在使用过程中出现问题的可能性。"

#: ../pro/ecc.rst.inc:150
msgid ""
"In case you want to undo the installation, you have to execute the "
"following commands:"
msgstr "如果你想撤消安装，你必须执行以下命令。"

#: ../pro/factory-reset.rst.inc:6
msgid "There are two types of factory resets for Nitrokey Pro devices:"
msgstr "Nitrokey Pro设备的出厂重置有两种类型。"

#: ../pro/factory-reset.rst.inc:8 ../storage/factory-reset.rst:5
msgid ""
"a factory reset of the OpenPGP smart card, for example using ``gpg "
"--card-edit``, followed by ``admin`` and finally: ``factory-reset``"
msgstr ""
"对OpenPGP智能卡进行出厂重置，例如使用``gpg --card-edit`，然后是``admin```，最后。``factory-"
"reset``。"

#: ../pro/factory-reset.rst.inc:10 ../storage/factory-reset.rst:7
msgid "a factory reset of the entire Nitrokey device using the Nitrokey App."
msgstr "使用Nitrokey应用程序对整个Nitrokey设备进行出厂重置。"

#: ../pro/factory-reset.rst.inc:12
msgid ""
"Also, it is possible to generate a new AES key that is used to encrypt "
"the Password Safe without performing a factory reset."
msgstr "此外，还可以生成一个新的AES密钥，用于加密密码保险箱，而无需执行出厂重置。"

#: ../pro/factory-reset.rst.inc:17 ../storage/factory-reset.rst:14
msgid ""
"The Nitrokey App always generates a new AES key after performing a "
"factory reset."
msgstr "Nitrokey应用程序在执行出厂重置后总是会生成一个新的AES密钥。"

#: ../pro/factory-reset.rst.inc:20 ../storage/factory-reset.rst:28
msgid ""
"The following table describes the differences between these three "
"operations:"
msgstr "下表描述了这三种操作之间的区别。"

#: ../pro/factory-reset.rst.inc:23 ../storage/factory-reset.rst:31
msgid "Property"
msgstr "财产"

#: ../pro/factory-reset.rst.inc:23 ../storage/factory-reset.rst:31
msgid "OpenPGP factory reset"
msgstr "OpenPGP工厂重置"

#: ../pro/factory-reset.rst.inc:23 ../storage/factory-reset.rst:31
msgid "Nitrokey factory reset"
msgstr "硝基钥匙工厂重置"

#: ../pro/factory-reset.rst.inc:23 ../storage/factory-reset.rst:31
msgid "Generate AES key"
msgstr "生成AES密钥"

#: ../pro/factory-reset.rst.inc:25 ../storage/factory-reset.rst:33
msgid "Requires admin PIN"
msgstr "需要管理员密码"

#: ../pro/factory-reset.rst.inc:26 ../storage/factory-reset.rst:34
msgid "Destroys OpenPGP keys"
msgstr "销毁OpenPGP密钥"

#: ../pro/factory-reset.rst.inc:27 ../storage/factory-reset.rst:35
msgid "Destroys Password Safe"
msgstr "破坏密码保险箱"

#: ../pro/factory-reset.rst.inc:27 ../storage/factory-reset.rst:35
#: ../storage/factory-reset.rst:37
msgid "yes [1]_"
msgstr "是[2]_"

#: ../pro/factory-reset.rst.inc:28 ../storage/factory-reset.rst:36
msgid "Destroys One-Time Passwords"
msgstr "破坏一次性密码"

#: ../pro/factory-reset.rst.inc:31 ../storage/factory-reset.rst:40
msgid "Clears the encryption key without overwriting the encrypted data."
msgstr "清除加密密钥而不覆盖加密数据。"

#: ../pro/firmware-update.rst.inc:4
msgid "This guide describes how to update the firmware on the Nitrokey Pro."
msgstr "本指南介绍了如何更新Nitrokey 3的固件。"

#: ../pro/firmware-update.rst.inc:7
msgid "This guide is still in an experimental state!"
msgstr "本指南仍处于实验状态!"

#: ../pro/firmware-update.rst.inc:10
msgid ""
"Updating could lead to data loss, so make sure you have proper backup "
"login methods enabled and/or ensure that the Nitrokey Pro is not the only"
" way to authenticate/2FA for your applications/services."
msgstr "更新可能导致数据丢失，所以要确保你启用了适当的备份登录方法，并/或确保Nitrokey Pro不是你的应用程序/服务的唯一认证/2FA方式。"

#: ../pro/firmware-update.rst.inc:18
msgid ""
"Never disconnect the Nitrokey Pro or abort the process while updating, "
"this will likely render your device useless!"
msgstr "在更新过程中，千万不要断开Nitrokey 3的连接或中止进程，这很可能会使你的设备失去作用。"

#: ../pro/firmware-update.rst.inc:21
msgid ""
"Make sure you have the latest `pynitrokey` version installed, please "
"check the `installation instructions <../../software/nitropy/all-"
"platforms/installation.html>`__ for your OS."
msgstr ""
"确保你已经安装了最新的`pynitrokey`版本，请查看<../../software/nitropy/all-"
"platforms/installation.html>`__针对你的操作系统的安装说明。"

#: ../pro/firmware-update.rst.inc:22
msgid ""
"Download the latest stable `firmware image <https://github.com/Nitrokey"
"/nitrokey-pro-firmware/releases>`__."
msgstr ""
"下载最新的稳定`固件镜像<https://github.com/Nitrokey/nitrokey-pro-"
"firmware/releases>`__。"

#: ../pro/firmware-update.rst.inc:25
msgid ""
"For production use you should choose the latest stable version (so only "
"versions, that don’t contain i.e. “pre-release” or “RC”)."
msgstr "对于生产使用，你应该选择最新的稳定版本（所以只有不包含 \"预发布 \"或 \"RC \"的版本）。"

#: ../pro/firmware-update.rst.inc:27
msgid "To apply the update run:"
msgstr "要应用该更新，请运行。"

#: ../pro/firmware-update.rst.inc:36
msgid "Alternative Update Method"
msgstr "替代更新方法"

#: ../pro/firmware-update.rst.inc:38
msgid "Alternatively `dfu-util` can be used for the firmware update:"
msgstr "或者可以使用 `dfu-util` 来进行固件更新。"

#: ../pro/firmware-update.rst.inc:40
msgid "Install dfu-util"
msgstr "安装dfu-util"

#: ../pro/firmware-update.rst.inc:43
msgid "Binaries for Windows are available at:"
msgstr "用于Windows的二进制文件可在以下网站获得。"

#: ../pro/firmware-update.rst.inc:43
msgid "http://dfu-util.sourceforge.net/releases/"
msgstr "http://dfu-util.sourceforge.net/releases/"

#: ../pro/firmware-update.rst.inc:46
msgid "For macOS binaries are available via Homebrew:"
msgstr "对于macOS，二进制文件可通过Homebrew获得。"

#: ../pro/firmware-update.rst.inc:46
msgid "https://formulae.brew.sh/formula/dfu-util"
msgstr "https://formulae.brew.sh/formula/dfu-util"

#: ../pro/firmware-update.rst.inc:48
msgid "*macOS only:* Install `dfu-util` via Homebrew"
msgstr "*只限于macOS：*通过Homebrew安装`dfu-util`。"

#: ../pro/firmware-update.rst.inc:54
msgid ""
"Use Nitrokey App v1.5-RC7 or higher to change the boot mode of the "
"Nitrokey Pro to update mode."
msgstr "使用Nitrokey App v1.5-RC7或更高版本，将Nitrokey Pro的启动模式改为更新模式。"

#: ../pro/firmware-update.rst.inc:56
msgid "Now the following command to apply the update"
msgstr "现在用以下命令来应用更新"

#: ../pro/firmware-update.rst.inc:62
msgid "The boot mode can now be changed back again with the Nitrokey App."
msgstr "现在可以通过Nitrokey应用程序再次改变启动模式。"

#: ../pro/firmware-update.rst.inc:79
msgid "**Issue:** ``libnitrokey`` could not be found."
msgstr "**问题：** ``libnitrokey``不能被发现。"

#: ../pro/firmware-update.rst.inc:68
msgid ""
"In case the libnitrokey could not be found automatically, the path to it "
"can be provided with env. variable:"
msgstr "如果不能自动找到libnitrokey，可以用环境变量提供它的路径。"

#: ../pro/firmware-update.rst.inc:74
msgid "To find libnitrokey on your system use:"
msgstr "要在你的系统上找到libnitrokey，请使用。"

#: ../pro/linux/firmware-update.rst:4
msgid ""
"This likely means your user has not the needed permissions to read/write "
"the device. Please make sure you have set up the correct `udev-rules`_. "
"Download this `udev-rules`_ set and place it in your udev rules directory"
" (e.g., ``/etc/udev/rules.d``). Then remove your Nitrokey Pro from the "
"USB slot and run: ``udevadm control --reload-rules && udevadm trigger`` "
"or reboot your machine. Afterwards the update should work without the "
"permission issue."
msgstr ""
"这可能意味着你的用户没有必要的权限来读写设备。请确认你已经设置了正确的`udev-rules`_。下载这个`udev-"
"rules`_集，并把它放在你的udev规则目录中（例如，``/etc/udev/rules.d``）。然后从USB插槽中取出你的Nitrokey"
" 3并运行。``udevadm control --reload-rules && udevadm "
"trigger``或者重新启动你的机器。之后，更新应该可以工作，没有权限问题。"

#: ../pro/linux/index.rst:2
msgid "Nitrokey Pro, Linux"
msgstr "Nitrokey Pro, Linux"

#: ../pro/linux/index.rst:13 ../storage/linux/index.rst:13
msgid ""
"To access the OpenPGP smart card of the Nitrokey, install the package "
"libccid. On Debian/Ubuntu based Distributions type in terminal: *sudo "
"apt-get update && sudo apt-get install libccid*"
msgstr ""
"要访问Nitrokey的OpenPGP智能卡，请安装libccid软件包。在基于Debian/Ubuntu的发行版上，在终端键入。*sudo "
"apt-get update && sudo apt-get install libccid*。"

#: ../pro/linux/index.rst:17
msgid ""
"If your distribution has a rather old version of libccid (<1.4.21) you "
"have to add the device information by yourself (for example if you are "
"using Ubuntu 14.04 or older). In this case please follow these "
"`instructions <https://www.nitrokey.com/documentation/frequently-asked-"
"questions-faq#latest-device-driver-missing-on-older-linux-"
"distribution>`__."
msgstr ""
"如果你的发行版有一个相当老的libccid（<1.4.21）版本，你必须自己添加设备信息（例如，如果你使用的是Ubuntu "
"14.04或更老版本）。在这种情况下，请遵循这些`说明 <https://www.nitrokey.com/documentation"
"/frequently-asked-questions-faq#latest-device-driver-missing-on-older-"
"linux-distribution>`__。"

#: ../pro/linux/index.rst:23 ../pro/mac/index.rst:16
msgid ""
"Download and start the `Nitrokey App "
"<https://www.nitrokey.com/download>`__. Follow the `instructions <change-"
"pins.html>`_ to change the default User PIN (default: 123456) and Admin "
"PIN (default: 12345678) to your own choices."
msgstr ""
"下载并启动`Nitrokey应用程序 <https://www.nitrokey.com/download>`__。按照`的指示<change-"
"pins.html>`_，将默认的用户密码（默认：123456）和管理密码（默认：12345678）改为你自己的选择。"

#: ../pro/linux/index.rst:37
msgid ""
"Note: For many use cases described, it is necessary to have either "
"OpenPGP or S/MIME keys installed on the device (see below)."
msgstr "注意：对于所述的许多用例，有必要在设备上安装OpenPGP或S/MIME密钥（见下文）。"

#: ../pro/linux/index.rst:41 ../pro/mac/index.rst:40
#: ../pro/windows/index.rst:35 ../start/linux/index.rst:44
#: ../start/mac/index.rst:45 ../start/windows/index.rst:44
#: ../storage/linux/index.rst:37 ../storage/mac/index.rst:41
#: ../storage/windows/index.rst:38
msgid "Key Creation with OpenPGP or S/MIME"
msgstr "用OpenPGP或S/MIME创建密钥"

#: ../pro/linux/index.rst:43 ../pro/mac/index.rst:42
#: ../pro/windows/index.rst:37 ../start/linux/index.rst:46
#: ../start/mac/index.rst:47 ../start/windows/index.rst:46
#: ../storage/linux/index.rst:39 ../storage/mac/index.rst:43
#: ../storage/windows/index.rst:40
msgid ""
"There are two widely used standards for email encryption. While "
"OpenPGP/GnuPG is popular among individuals, S/MIME/x.509 is mostly used "
"by enterprises. If you are in doubt which one to choose, you should use "
"OpenPGP."
msgstr "目前有两种广泛使用的电子邮件加密标准。OpenPGP/GnuPG在个人中很受欢迎，而S/MIME/x.509则大多被企业使用。如果你对选择哪一个有疑问，你应该使用OpenPGP。"

#: ../pro/linux/index.rst:48 ../pro/mac/index.rst:47
#: ../pro/windows/index.rst:42 ../start/linux/index.rst:51
#: ../start/mac/index.rst:52 ../start/windows/index.rst:51
#: ../storage/linux/index.rst:44 ../storage/mac/index.rst:48
#: ../storage/windows/index.rst:42
msgid ""
"To learn more about how to use OpenPGP for email encryption with the "
"Nitrokey, please refer to chapter `OpenPGP Email Encryption "
"<openpgp.html>`_."
msgstr "要了解更多关于如何使用OpenPGP与Nitrokey进行电子邮件加密，请参考`OpenPGP电子邮件加密<openpgp.html>`_一章。"

#: ../pro/linux/index.rst:51 ../pro/mac/index.rst:50
#: ../pro/windows/index.rst:45 ../start/linux/index.rst:54
#: ../start/mac/index.rst:55 ../start/windows/index.rst:54
#: ../storage/linux/index.rst:47 ../storage/mac/index.rst:51
#: ../storage/windows/index.rst:45
msgid ""
"To learn more about how to use S/MIME for email encryption with the "
"Nitrokey, please refer to chapter `S/MIME Email Encryption "
"<smime.html>`_."
msgstr "要了解更多关于如何使用S/MIME与Nitrokey进行电子邮件加密，请参考`S/MIME电子邮件加密<smime.html>`_章节。"

#: ../pro/linux/login-with-pam.rst:2 ../start/linux/login-with-pam.rst:2
#: ../storage/linux/login-with-pam.rst:2
msgid "Login With PAM"
msgstr "用PAM登录"

#: ../pro/login-with-pam.rst.inc:4
msgid "How to Setup The Login"
msgstr "如何设置登录"

#: ../pro/login-with-pam.rst.inc:6
msgid ""
"You have two options: `pam_p11 <https://github.com/OpenSC/pam_pkcs11>`__ "
"or `PAM Poldi "
"<https://wiki.ubuntuusers.de/Archiv/Authentifizierung_OpenPGP_SmartCard/>`__."
msgstr ""
"你有两个选择：`pam_p11<https://github.com/OpenSC/pam_pkcs11>`__或`PAM "
"Poldi<https://wiki.ubuntuusers.de/Archiv/Authentifizierung_OpenPGP_SmartCard/>`__。"

#: ../pro/login-with-pam.rst.inc:8
msgid ""
"The solution with pam_p11 is more difficult to achieve and is based on "
"S/MIME certificates. Please have a look at `the documentation "
"<https://opensc.github.io/pam_pkcs11/doc/pam_pkcs11.html>`__ for more "
"information."
msgstr "使用pam_p11的解决方案更难实现，它是基于S/MIME证书的。请看看`文档<https://opensc.github.io/pam_pkcs11/doc/pam_pkcs11.html>`__以了解更多信息。"

#: ../pro/login-with-pam.rst.inc:10
msgid ""
"PAM Poldi 0.4.1 works flawlessly with Nitrokey for PAM authentication "
"with RSA keys (see Troubleshooting for information on ECC keys). Besides "
"the installation of Poldi (e.g. ``sudo apt-get install libpam-poldi`` on "
"Ubuntu) the following steps are needed to get it working."
msgstr ""
"PAM Poldi "
"0.4.1与Nitrokey配合使用RSA密钥进行PAM认证，效果完美无缺（关于ECC密钥的信息，请参见故障排除）。除了安装Poldi（例如``sudo"
" apt-get install libpam-poldi``在Ubuntu上），还需要以下步骤来让它工作。"

#: ../pro/login-with-pam.rst.inc:12
msgid ""
"It is necessary to already have keys generated on the Nitrokey, as the "
"authentication key is used by PAM."
msgstr "有必要在Nitrokey上已经生成密钥，因为认证密钥是由PAM使用的。"

#: ../pro/login-with-pam.rst.inc:14
msgid ""
"At first you need to find out the Application ID of your Nitrokey. It "
"looks like or similar to ``D00600012401020000000000xxxxxxxx``."
msgstr "首先，你需要找出你的Nitrokey的应用ID。它看起来像或类似于``D00600012401020000000000xxxxxxxx``。"

#: ../pro/login-with-pam.rst.inc:20
msgid ""
"Now you have to add a line to ``/etc/poldi/localdb/users`` which contains"
" the following information ``<YourApplicationID> <YourUsername>``."
msgstr ""
"现在你必须在``/etc/poldi/localdb/users``中添加一行，其中包含以下信息``<YourApplicationID> "
"<YourUsername>``。"

#: ../pro/login-with-pam.rst.inc:22
msgid ""
"This could look like ``D00600012401020000000000xxxxxxxx nitrokeyuser``. "
"Now dump the public key from the Nitrokey into Poldis local db:"
msgstr ""
"这可能看起来像``D00600012401020000000000xxxxxxxx "
"nitrokeyuser``。现在，将公钥从Nitrokey转入Poldis本地数据库。"

#: ../pro/login-with-pam.rst.inc:28
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your Nitrokey!"
msgstr "请注意，你必须在上面的一行中插入你的应用ID和你的Nitrokey的ID!"

#: ../pro/login-with-pam.rst.inc:30
msgid ""
"Then you have to configure PAM. Just add ``auth sufficient pam_poldi.so``"
" to PAM configuration files according to your needs:"
msgstr "然后你必须配置PAM。只要根据你的需要在PAM配置文件中添加``auth sufficient pam_poldi.so``。"

#: ../pro/login-with-pam.rst.inc:33
msgid "``/etc/pam.d/common-auth`` for graphical user login"
msgstr "``/etc/pam.d/common-auth``用于图形化用户登录"

#: ../pro/login-with-pam.rst.inc:34
msgid "``/etc/pam.d/login`` for console login"
msgstr "``/etc/pam.d/login``用于控制台登录"

#: ../pro/login-with-pam.rst.inc:35
msgid "``/etc/pam.d/sudo`` for sudo authentication"
msgstr "``/etc/pam.d/sudo``用于sudo认证"

#: ../pro/login-with-pam.rst.inc:36
msgid "``/etc/pam.d/gnome-screensaver`` for login back from a locked screen"
msgstr "``/etc/pam.d/gnome-screensaver``用于从锁定的屏幕上重新登录。"

#: ../pro/login-with-pam.rst.inc:37
msgid "and other files in ``/etc/pam.d``"
msgstr "和其他文件在``/etc/pam.d``"

#: ../pro/login-with-pam.rst.inc:39
msgid ""
"PAM is dangerous to play around with, so make sure you have a way of "
"accessing the machine if you break authentication completely. Remember "
"that booting into rescue mode from GRUB requires a root password, so keep"
" that or a live CD which can read your filesystems to hand."
msgstr "玩PAM是很危险的，所以要确保你有办法在完全破坏认证的情况下访问机器。记住，从GRUB启动到救援模式需要一个root密码，所以要保留这个密码或一张可以读取文件系统的活CD。"

#: ../pro/login-with-pam.rst.inc:41
msgid ""
"Here you find `further instructions "
"<https://wiki.ubuntuusers.de/Archiv/Authentifizierung_OpenPGP_SmartCard>`__"
" (in German, partially outdated)."
msgstr "在这里你可以找到`进一步的说明<https://wiki.ubuntuusers.de/Archiv/Authentifizierung_OpenPGP_SmartCard>`__（德语，部分已经过时）。"

#: ../pro/login-with-pam.rst.inc:46
msgid ""
"If you get an error similar to ``ERR 100663414 Invalid ID <SCD>`` you "
"should try instead"
msgstr "如果你得到一个类似于``ERR 100663414 Invalid ID <SCD>``的错误，你应该尝试代替一下"

#: ../pro/login-with-pam.rst.inc:52
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick!"
msgstr "请注意，你必须在上面的一行中插入你的申请ID和你的棍子的ID!"

#: ../pro/login-with-pam.rst.inc:55
msgid "ECC Keys"
msgstr "ECC钥匙"

#: ../pro/login-with-pam.rst.inc:56
msgid ""
"Unfortunately, Poldi has no support for ECC keys yet. But there is a "
"`patch for ECC keys used with Nitrokey Start "
"<https://dev.gnupg.org/T4009>`__. This is already included in the master "
"branch of the Poldi development repository and thus will be released in a"
" newer version eventually. In the meantime the only option is to build "
"Poldi from source."
msgstr ""
"不幸的是，Poldi还没有对ECC钥匙的支持。但有一个`，用于与Nitrokey "
"Start<https://dev.gnupg.org/T4009>`__一起使用的ECC钥匙的补丁。这已经包含在Poldi开发库的主分支中，因此最终会在一个较新的版本中发布。在这期间，唯一的选择是从源码构建Poldi。"

#: ../pro/linux/openvpn-easyrsa.rst:2 ../pro/windows/openvpn-easyrsa.rst:2
#: ../storage/linux/openvpn-easyrsa.rst:2
msgid "OpenVPN Configuration with Easy-RSA"
msgstr "用Easy-RSA配置OpenVPN"

#: ../pro/linux/openvpn-easyrsa.rst:9 ../pro/windows/openvpn-easyrsa.rst:9
#: ../storage/linux/openvpn-easyrsa.rst:9
msgid ""
"This guide is work-in-progress, and will be updated accordinlgy. Please "
"take this status into consideration."
msgstr "本指南是正在进行的工作，并将根据情况进行更新。请考虑到这一状况。"

#: ../pro/linux/openvpn-easyrsa.rst:11 ../pro/windows/openvpn-easyrsa.rst:11
#: ../storage/linux/openvpn-easyrsa.rst:11
msgid ""
"This guide shows how to configure OpenVPN clients to login using a "
"`Nitrokey Pro 2 <https://shop.nitrokey.com/shop/product/nk-pro-2"
"-nitrokey-pro-2-3>`__ or a `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/de_DE/shop/product/nitrokey-storage-2-56>`__. "
"For software key management we will be using `Easy-RSA "
"<https://github.com/OpenVPN/easy-rsa>`__, a utility that has been "
"evolving alongside OpenVPN."
msgstr ""
"本指南展示了如何配置OpenVPN客户端使用`Nitrokey Pro 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-"
"pro-2-3>`__或`Nitrokey Storage 2 "
"<https://shop.nitrokey.com/de_DE/shop/product/nitrokey-"
"storage-2-56>`__登陆。对于软件密钥管理，我们将使用`Easy-RSA <https://github.com/OpenVPN"
"/easy-rsa>`__，一个与OpenVPN一起发展的工具。"

#: ../pro/linux/openvpn-easyrsa.rst:15
msgid ""
"To sign the certificates, we will use a `Nitrokey HSM 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__ set"
" up as `Certificate Authority <certificate-authority.html#creating-the-"
"intermediate-certificate-authority>`_, however this guide does not cover "
"the set up of the CA itself (it is clear and `well documented here "
"<certificate-authority.html#sign-a-server-certificate>`_)."
msgstr ""
"为了签署证书，我们将使用`Nitrokey HSM 2 <https://shop.nitrokey.com/shop/product/nk-"
"pro-2-nitrokey-pro-2-3>`__设置为`认证机构 <certificate-authority.html#creating-"
"the-intermediate-certificate-"
"authority>`_。然而，本指南并不包括CA本身的设置（它很清楚，并且`这里有很好的记录<certificate-"
"authority.html#sign-a-server-certificate>`_）。"

#: ../pro/linux/openvpn-easyrsa.rst:18 ../pro/windows/openvpn-easyrsa.rst:18
#: ../storage/linux/openvpn-easyrsa.rst:18
msgid ""
"We will use Easy-RSA, because it seems to provide some flexibility, and "
"allows key management via external PKIs. We will use it on the server to "
"issue the signing request, and repeat the same process on the client. The"
" Certificate Signing Requests will be signed by the CA on the Nitorkey "
"HSM, and re-transmitted to the server and the client."
msgstr ""
"我们将使用Easy-"
"RSA，因为它似乎提供了一些灵活性，并允许通过外部PKI进行密钥管理。我们将在服务器上使用它来发出签名请求，并在客户端重复同样的过程。证书签名请求将由Nitorkey"
" HSM上的CA签名，并重新传送到服务器和客户端。"

#: ../pro/linux/openvpn-easyrsa.rst:24 ../pro/windows/openvpn-easyrsa.rst:24
#: ../storage/linux/openvpn-easyrsa.rst:24
msgid ""
"In the following documentation we will require 3 different machines as "
"following:"
msgstr "在下面的文件中，我们将需要3台不同的机器，如下。"

#: ../pro/linux/openvpn-easyrsa.rst:26 ../pro/windows/openvpn-easyrsa.rst:26
#: ../storage/linux/openvpn-easyrsa.rst:26
msgid "OpenVPN server (v. 2.5) on Debian 10 (EC2 virtual machine - AWS)"
msgstr "OpenVPN服务器（2.5版）在Debian 10上（EC2虚拟机-AWS）。"

#: ../pro/linux/openvpn-easyrsa.rst:28 ../pro/windows/openvpn-easyrsa.rst:28
#: ../storage/linux/openvpn-easyrsa.rst:28
msgid "OpenVPN client (v. 2.4.9) on Fedora 30 (local machine)"
msgstr "Fedora 30上的OpenVPN客户端（2.4.9版）（本地机）。"

#: ../pro/linux/openvpn-easyrsa.rst:30 ../pro/windows/openvpn-easyrsa.rst:30
#: ../storage/linux/openvpn-easyrsa.rst:30
msgid ""
"The Certificate Authority will be accessible from a standalone machine "
"with Fedora 30 (local machine)"
msgstr "证书颁发机构将可以从一台装有Fedora 30的独立机器上访问（本地机器）。"

#: ../pro/linux/openvpn-easyrsa.rst:33 ../pro/windows/openvpn-easyrsa.rst:33
#: ../storage/linux/openvpn-easyrsa.rst:33
msgid ""
"To interact with the devices we will require `OpenSC 0.20 "
"<https://github.com/OpenSC/OpenSC/wiki>`__ installed on the client and CA"
" machine (the local machines). You can follow the instructions to set it "
"up in `this link (*Unix) <https://github.com/OpenSC/OpenSC/wiki"
"/Compiling-and-Installing-on-Unix-flavors>`__."
msgstr ""
"为了与设备进行交互，我们需要在客户端和CA机器（本地机器）上安装`OpenSC 0.20 "
"<https://github.com/OpenSC/OpenSC/wiki>`__。你可以按照`这个链接（*Unix）<https://github.com/OpenSC/OpenSC/wiki"
"/Compiling-and-Installing-on-Unix-flavors>`__中的说明来设置它。"

#: ../pro/linux/openvpn-easyrsa.rst:36 ../pro/windows/openvpn-easyrsa.rst:36
#: ../storage/linux/openvpn-easyrsa.rst:36
msgid "To download the dependencies on Fedora machines we can this instruction:"
msgstr "要在Fedora机器上下载依赖项，我们可以用这个指令。"

#: ../pro/linux/openvpn-easyrsa.rst:42 ../pro/windows/openvpn-easyrsa.rst:42
#: ../storage/linux/openvpn-easyrsa.rst:42
msgid ""
"For Debian Linux, more recent OpenSC packages are available `here "
"<https://github.com/Nitrokey/opensc-build>`__."
msgstr ""
"对于Debian Linux，更多最新的OpenSC软件包可以在`这里获得 <https://github.com/Nitrokey"
"/opensc-build>`__。"

#: ../pro/linux/openvpn-easyrsa.rst:44 ../pro/windows/openvpn-easyrsa.rst:44
#: ../storage/linux/openvpn-easyrsa.rst:44
msgid "We will use the following Nitrokeys for physical key management:"
msgstr "我们将使用以下硝基钥匙进行物理钥匙管理。"

#: ../pro/linux/openvpn-easyrsa.rst:46 ../pro/windows/openvpn-easyrsa.rst:46
#: ../storage/linux/openvpn-easyrsa.rst:46
msgid ""
"An authentication key using the `Nitrokey Pro 2 (pdf) "
"<https://www.nitrokey.com/files/doc/Nitrokey_Pro_factsheet.pdf>`__"
msgstr ""
"一个使用`Nitrokey Pro 2 (pdf)的认证密钥 "
"<https://www.nitrokey.com/files/doc/Nitrokey_Pro_factsheet.pdf>`__。"

#: ../pro/linux/openvpn-easyrsa.rst:49 ../pro/windows/openvpn-easyrsa.rst:49
#: ../storage/linux/openvpn-easyrsa.rst:49
msgid ""
"A Certificate Authority (CA) using the `Nitrokey HSM 2 (pdf) "
"<https://www.nitrokey.com/files/doc/Nitrokey_HSM_factsheet.pdf>`__"
msgstr ""
"一个使用`Nitrokey HSM 2 (pdf) "
"<https://www.nitrokey.com/files/doc/Nitrokey_HSM_factsheet.pdf>`__的证书机构（CA）。"

#: ../pro/linux/openvpn-easyrsa.rst:52 ../pro/windows/openvpn-easyrsa.rst:52
#: ../storage/linux/openvpn-easyrsa.rst:52
msgid ""
"As a reminder, to build a Certificate Authority on Nitrokey HSM 2, you "
"may follow the instructions available `in the documentation <certificate-"
"authority.html#sign-a-server-certificate>`_."
msgstr ""
"作为提醒，要在Nitrokey HSM 2上建立一个证书颁发机构，你可以按照文档`中提供的说明<certificate-"
"authority.html#sign-a-server-certificate>`_。"

#: ../pro/linux/openvpn-easyrsa.rst:54 ../pro/windows/openvpn-easyrsa.rst:54
#: ../storage/linux/openvpn-easyrsa.rst:54
msgid ""
"Alternatively you may set up your own CA on a `on a separate machine "
"<https://www.digitalocean.com/community/tutorials/how-to-set-up-and-"
"configure-a-certificate-authority-ca-on-ubuntu-20-04>`__, or use the "
"OpenVPN tutorial which also relies on `Easy-RSA <https://openvpn.net"
"/community-resources/setting-up-your-own-certificate-authority-ca/>`__. "
"The last 2 options rely on software solutions for key management."
msgstr ""
"另外，你可以在`上设置你自己的CA，在单独的机器上<https://www.digitalocean.com/community/tutorials"
"/how-to-set-up-and-configure-a-certificate-authority-ca-on-"
"ubuntu-20-04>`__，或者使用OpenVPN教程，该教程也依赖于`Easy-RSA<https://openvpn.net"
"/community-resources/setting-up-your-own-certificate-authority-"
"ca/>`__。后面两个选项依靠软件解决方案进行密钥管理。"

#: ../pro/linux/openvpn-easyrsa.rst:59 ../pro/windows/openvpn-easyrsa.rst:59
#: ../storage/linux/openvpn-easyrsa.rst:57
msgid "Server side"
msgstr "服务器端"

#: ../pro/linux/openvpn-easyrsa.rst:62 ../pro/windows/openvpn-easyrsa.rst:62
msgid "1. Install OpenVPN"
msgstr "1.安装OpenVPN"

#: ../pro/linux/openvpn-easyrsa.rst:64 ../pro/windows/openvpn-easyrsa.rst:64
#: ../storage/linux/openvpn-easyrsa.rst:62
msgid "First we need to enable IP Forwarding by editing ``/etc/sysctl.conf`` file"
msgstr "首先，我们需要通过编辑``/etc/sysctl.conf``文件启用IP转发功能。"

#: ../pro/linux/openvpn-easyrsa.rst:70 ../pro/windows/openvpn-easyrsa.rst:70
#: ../storage/linux/openvpn-easyrsa.rst:68
msgid "Uncomment or edit accordingly the following line"
msgstr "取消注释或相应地编辑以下一行"

#: ../pro/linux/openvpn-easyrsa.rst:76 ../pro/windows/openvpn-easyrsa.rst:76
#: ../storage/linux/openvpn-easyrsa.rst:74
msgid "Close after saving it, and enter this command"
msgstr "保存后关闭，并输入以下命令"

#: ../pro/linux/openvpn-easyrsa.rst:82 ../pro/windows/openvpn-easyrsa.rst:82
#: ../storage/linux/openvpn-easyrsa.rst:80
msgid ""
"Once IP forwarding is done, we will need to download the latest release "
"of OpenvPN for our Debian 10 server, according to `these instructions "
"<https://community.openvpn.net/openvpn/wiki/OpenvpnSoftwareRepos>`__:"
msgstr ""
"一旦IP转发完成，我们将需要为我们的Debian "
"10服务器下载最新版本的OpenvPN，根据`这些说明<https://community.openvpn.net/openvpn/wiki/OpenvpnSoftwareRepos>`__。"

#: ../pro/linux/openvpn-easyrsa.rst:84 ../pro/windows/openvpn-easyrsa.rst:84
#: ../storage/linux/openvpn-easyrsa.rst:82
msgid "Change to root and download the GPG key that signed the package"
msgstr "改为根目录，下载签署软件包的GPG密钥。"

#: ../pro/linux/openvpn-easyrsa.rst:91 ../pro/windows/openvpn-easyrsa.rst:91
#: ../storage/linux/openvpn-easyrsa.rst:89
msgid "Add the URL of the adequate OpenVPN packages to the ``sources.list`` file"
msgstr "在``sources.list``文件中添加足够的OpenVPN包的URL。"

#: ../pro/linux/openvpn-easyrsa.rst:98 ../pro/windows/openvpn-easyrsa.rst:98
#: ../storage/linux/openvpn-easyrsa.rst:96
msgid ""
"We downloaded OpenVPN 2.5 as “password prompt” requires at least OpenVPN "
"`version 2.4.8 <https://community.openvpn.net/openvpn/ticket/1215>`__ to "
"login."
msgstr ""
"我们下载了OpenVPN 2.5，因为 \"密码提示 \"至少需要OpenVPN `版本2.4.8 "
"<https://community.openvpn.net/openvpn/ticket/1215>`__才能登录。"

#: ../pro/linux/openvpn-easyrsa.rst:101 ../pro/windows/openvpn-easyrsa.rst:101
#: ../storage/linux/openvpn-easyrsa.rst:99
msgid "Next we download OpenVPN"
msgstr "接下来我们下载OpenVPN"

#: ../pro/linux/openvpn-easyrsa.rst:107 ../pro/windows/openvpn-easyrsa.rst:107
#: ../storage/linux/openvpn-easyrsa.rst:105
msgid ""
"If you want to check the version, it possible by calling ``--version`` "
"and print the following:"
msgstr "如果你想检查版本，可以通过调用``--version``并打印如下。"

#: ../pro/linux/openvpn-easyrsa.rst:120 ../pro/windows/openvpn-easyrsa.rst:120
msgid "2. Install Easy-RSA"
msgstr "2.安装Easy-RSA"

#: ../pro/linux/openvpn-easyrsa.rst:122 ../pro/windows/openvpn-easyrsa.rst:122
#: ../storage/linux/openvpn-easyrsa.rst:121
msgid ""
"To build the PKI, we will download the latest version of Easy-RSA on the "
"server and client machines. To get the latest release, go to the "
"`Releases page on the official EasyRSA GitHub project "
"<https://github.com/OpenVPN/easy-rsa/releases>`__, copy the download link"
" for the file ending in ``.tgz``, and then paste it into the following "
"command:"
msgstr ""
"为了构建PKI，我们将在服务器和客户机上下载最新版本的Easy-"
"RSA。要获得最新版本，请到EasyRSA官方GitHub项目的`Releases页面<https://github.com/OpenVPN"
"/easy-rsa/releases>`__，复制以``.tgz``结尾的文件下载链接，然后粘贴到以下命令。"

#: ../pro/linux/openvpn-easyrsa.rst:124 ../pro/windows/openvpn-easyrsa.rst:124
#: ../storage/linux/openvpn-easyrsa.rst:123
msgid "Download the latest release"
msgstr "下载最新版本"

#: ../pro/linux/openvpn-easyrsa.rst:131 ../pro/windows/openvpn-easyrsa.rst:131
#: ../storage/linux/openvpn-easyrsa.rst:130
msgid "Extract the tarball"
msgstr "提取tarball文件"

#: ../pro/linux/openvpn-easyrsa.rst:140 ../pro/windows/openvpn-easyrsa.rst:140
msgid "3. Create a PKI for OpenVPN server"
msgstr "3.为OpenVPN服务器创建一个PKI"

#: ../pro/linux/openvpn-easyrsa.rst:142 ../pro/windows/openvpn-easyrsa.rst:142
#: ../storage/linux/openvpn-easyrsa.rst:141
msgid ""
"Before you can create your OpenVPN server’s private key and certificate, "
"you need to create a local Public Key Infrastructure directory on your "
"OpenVPN server. You will use this directory to manage the server and "
"clients’ certificate requests, instead of making them directly on your CA"
" server."
msgstr "在创建OpenVPN服务器的私钥和证书之前，你需要在OpenVPN服务器上创建一个本地公钥基础设施目录。你将使用这个目录来管理服务器和客户的证书请求，而不是直接在你的CA服务器上提出。"

#: ../pro/linux/openvpn-easyrsa.rst:144 ../pro/windows/openvpn-easyrsa.rst:144
#: ../storage/linux/openvpn-easyrsa.rst:143
msgid ""
"To build a PKI directory on your OpenVPN server, you’ll need to populate "
"a file called ``vars`` with some default values."
msgstr "要在你的OpenVPN服务器上建立一个PKI目录，你需要在一个名为``vars``的文件中填充一些默认值。"

#: ../pro/linux/openvpn-easyrsa.rst:146 ../pro/windows/openvpn-easyrsa.rst:146
#: ../storage/linux/openvpn-easyrsa.rst:145
msgid "Create a ``vars`` file"
msgstr "创建一个``vars``文件"

#: ../pro/linux/openvpn-easyrsa.rst:154 ../pro/windows/openvpn-easyrsa.rst:154
#: ../storage/linux/openvpn-easyrsa.rst:153
msgid "Once the file is opened, paste in the following two lines"
msgstr "一旦文件被打开，粘贴以下两行内容"

#: ../pro/linux/openvpn-easyrsa.rst:161 ../pro/windows/openvpn-easyrsa.rst:161
#: ../storage/linux/openvpn-easyrsa.rst:160
msgid ""
"These are the only two lines that you need in this ``vars`` file on your "
"OpenVPN server since it will not be used as a Certificate Authority. They"
" will ensure that your private keys and certificate requests are "
"configured to use Elliptic Curve Cryptography (ECC) to generate keys, and"
" secure signatures for your clients and OpenVPN server."
msgstr "这是你在OpenVPN服务器上的``vars``文件中唯一需要的两行，因为它不会被用作证书授权。他们将确保你的私钥和证书请求被配置为使用椭圆曲线加密法（ECC）来生成密钥，并为你的客户和OpenVPN服务器提供安全签名。"

#: ../pro/linux/openvpn-easyrsa.rst:163 ../pro/windows/openvpn-easyrsa.rst:163
#: ../storage/linux/openvpn-easyrsa.rst:163
msgid ""
"In regards to the choice of the cryptographic algorithms, I follow the "
"model in `this tutorial <https://www.digitalocean.com/community/tutorials"
"/how-to-set-up-and-configure-an-openvpn-server-on-centos-8>`__, and you "
"can customize these according to your specific needs."
msgstr ""
"关于加密算法的选择，我遵循`本教程<https://www.digitalocean.com/community/tutorials/how-"
"to-set-up-and-configure-an-openvpn-server-on-"
"centos-8>`__中的模式，你可以根据自己的具体需要定制这些算法。"

#: ../pro/linux/openvpn-easyrsa.rst:165 ../pro/windows/openvpn-easyrsa.rst:165
#: ../storage/linux/openvpn-easyrsa.rst:165
msgid "Initialize the PKI"
msgstr "初始化PKI"

#: ../pro/linux/openvpn-easyrsa.rst:167 ../pro/windows/openvpn-easyrsa.rst:167
#: ../storage/linux/openvpn-easyrsa.rst:167
msgid ""
"Once you have populated the ``vars`` file you can proceed with creating "
"the PKI directory. To do so, run the easyrsa script with the init-pki "
"option:"
msgstr "一旦你填充了``vars``文件，就可以继续创建PKI目录。要做到这一点，请使用init-pki选项运行easyrsa脚本。"

#: ../pro/linux/openvpn-easyrsa.rst:173 ../pro/windows/openvpn-easyrsa.rst:173
#: ../storage/linux/openvpn-easyrsa.rst:174
msgid ""
"After you’ve initialized your PKI on the OpenVPN server, you are ready to"
" move on to the next step, which is creating an OpenVPN server "
"certificate request and private key."
msgstr "在你初始化了OpenVPN服务器上的PKI后，你就可以进入下一步了，也就是创建OpenVPN服务器证书请求和私钥。"

#: ../pro/linux/openvpn-easyrsa.rst:176 ../pro/windows/openvpn-easyrsa.rst:176
msgid "4. Create ``server.req`` and ``server.key``"
msgstr "4.创建``server.req`和``server.key``。"

#: ../pro/linux/openvpn-easyrsa.rst:178 ../pro/windows/openvpn-easyrsa.rst:178
#: ../storage/linux/openvpn-easyrsa.rst:179
msgid ""
"Now that your OpenVPN server has all the prerequisites installed, the "
"next step is to generate a key pair composed of a private key (to keep "
"secret), and a Certificate Signing Request (``.csr``) on your OpenVPN "
"server."
msgstr "现在你的OpenVPN服务器已经安装了所有先决条件，下一步是在你的OpenVPN服务器上生成一个由私钥（保密）和证书签名请求（``.csr``）组成的密钥对。"

#: ../pro/linux/openvpn-easyrsa.rst:180 ../pro/windows/openvpn-easyrsa.rst:180
#: ../storage/linux/openvpn-easyrsa.rst:181
msgid ""
"In general terms, on systems where we generate a key and request, these "
"files are left unencrypted by using the ``nopass`` argument, since "
"servers usually need to start up without any password input. This "
"generates an *unencrypted key*, so mind *protect its access and file "
"permissions* carefully."
msgstr "一般来说，在我们生成密钥和请求的系统上，这些文件通过使用``nopass``参数而不被加密，因为服务器通常需要在没有任何密码输入的情况下启动。这就产生了一个*未加密的密钥，所以要注意*保护其访问和文件权限*。"

#: ../pro/linux/openvpn-easyrsa.rst:184 ../pro/windows/openvpn-easyrsa.rst:184
#: ../storage/linux/openvpn-easyrsa.rst:185
msgid "Configuration notes from OpenVPN:"
msgstr "来自OpenVPN的配置说明。"

#: ../pro/linux/openvpn-easyrsa.rst:186 ../pro/windows/openvpn-easyrsa.rst:186
#: ../storage/linux/openvpn-easyrsa.rst:187
msgid ""
"The server, and each client, must have their own cert and key file. The "
"server and all clients will use the same CA file."
msgstr "服务器和每个客户都必须有自己的证书和密钥文件。服务器和所有客户将使用同一个CA文件。"

#: ../pro/linux/openvpn-easyrsa.rst:188 ../pro/windows/openvpn-easyrsa.rst:188
#: ../storage/linux/openvpn-easyrsa.rst:189
msgid "Server certificate should have the following:"
msgstr "服务器证书应具有以下内容。"

#: ../pro/linux/openvpn-easyrsa.rst:190 ../pro/windows/openvpn-easyrsa.rst:190
#: ../storage/linux/openvpn-easyrsa.rst:191
msgid "``keyUsage:  digitalSignature, keyEncipherment``"
msgstr "``keyUsage:  digitalSignature, keyEncipherment``"

#: ../pro/linux/openvpn-easyrsa.rst:192 ../pro/windows/openvpn-easyrsa.rst:192
#: ../storage/linux/openvpn-easyrsa.rst:193
msgid "``extendedKeyUsage: serverAuth``"
msgstr "``extendedKeyUsage: serverAuth``"

#: ../pro/linux/openvpn-easyrsa.rst:194 ../pro/windows/openvpn-easyrsa.rst:194
#: ../storage/linux/openvpn-easyrsa.rst:195
msgid "Create the signing request for the server"
msgstr "为服务器创建签名请求"

#: ../pro/linux/openvpn-easyrsa.rst:196 ../pro/windows/openvpn-easyrsa.rst:196
#: ../storage/linux/openvpn-easyrsa.rst:197
msgid ""
"Navigate to the ``~/easyrsa`` directory on your OpenVPN Server as your "
"non-root user, and enter the following commands:"
msgstr "以非root用户身份导航到OpenVPN服务器上的``~/easyrsa`目录，并输入以下命令。"

#: ../pro/linux/openvpn-easyrsa.rst:203 ../pro/windows/openvpn-easyrsa.rst:203
#: ../storage/linux/openvpn-easyrsa.rst:204
msgid ""
"This will create a private key for the server and a certificate request "
"file called ``server.req``."
msgstr "这将为服务器创建一个私钥和一个名为``的证书请求文件，server.req``。"

#: ../pro/linux/openvpn-easyrsa.rst:205 ../pro/windows/openvpn-easyrsa.rst:205
#: ../storage/linux/openvpn-easyrsa.rst:206
msgid ""
"Once you have a signed certificate, you’ll transfer it back to the "
"OpenVPN server."
msgstr "一旦你有了签名的证书，你就把它转回OpenVPN服务器。"

#: ../pro/linux/openvpn-easyrsa.rst:207 ../pro/windows/openvpn-easyrsa.rst:207
#: ../storage/linux/openvpn-easyrsa.rst:208
msgid "Copy the key to the OpenVPN server directory"
msgstr "复制密钥到OpenVPN服务器目录"

#: ../pro/linux/openvpn-easyrsa.rst:213 ../pro/windows/openvpn-easyrsa.rst:213
#: ../storage/linux/openvpn-easyrsa.rst:214
msgid ""
"After completing these steps, you have successfully created a private key"
" for your OpenVPN server. You have also generated a Certificate Signing "
"Request for the OpenVPN server."
msgstr "完成这些步骤后，你已经成功为你的OpenVPN服务器创建了一个私钥。你还为OpenVPN服务器生成了一个证书签名请求。"

#: ../pro/linux/openvpn-easyrsa.rst:217 ../pro/windows/openvpn-easyrsa.rst:217
#: ../storage/linux/openvpn-easyrsa.rst:218
msgid "File extensions for certificate signing requests"
msgstr "证书签署请求的文件扩展名"

#: ../pro/linux/openvpn-easyrsa.rst:219 ../pro/windows/openvpn-easyrsa.rst:219
#: ../storage/linux/openvpn-easyrsa.rst:220
msgid ""
"The file extension that is adopted by the CA and HSM tutorial indicates "
"the creation of a ``.csr`` file, however Easy-RSA creates certificate "
"signing requests with a ``.req`` extension."
msgstr "CA和HSM教程采用的文件扩展名表示创建``.csr``文件，然而Easy-RSA创建的证书签署请求是``.req``扩展名。"

#: ../pro/linux/openvpn-easyrsa.rst:223 ../pro/windows/openvpn-easyrsa.rst:223
#: ../storage/linux/openvpn-easyrsa.rst:224
msgid ""
"We will use interchangeably both extensions, while making sure that we "
"transfer the right files to the Certificate Authority, and generate a "
"final certificate with a ``.crt`` extension."
msgstr "我们将交替使用这两个扩展名，同时确保将正确的文件传输给证书颁发机构，并生成一个带有``.crt``扩展名的最终证书。"

#: ../pro/linux/openvpn-easyrsa.rst:227 ../pro/windows/openvpn-easyrsa.rst:227
#: ../storage/linux/openvpn-easyrsa.rst:228
msgid ""
"In the next section of this guide, we will sign a ``.req`` file with our "
"CA on deployed on the HSM 2 device. For this purpose, I will use a "
"dedicated machine to sign the requests."
msgstr "在本指南的下一节，我们将用我们部署在HSM 2设备上的CA签署一个``.req``文件。为此，我将使用一台专用机器来签署请求。"

#: ../pro/linux/openvpn-easyrsa.rst:230 ../pro/windows/openvpn-easyrsa.rst:230
msgid "5. Sign and retrieve ``server.crt``"
msgstr "5.签署和检索``server.crt``。"

#: ../pro/linux/openvpn-easyrsa.rst:232 ../pro/windows/openvpn-easyrsa.rst:232
#: ../storage/linux/openvpn-easyrsa.rst:233
msgid ""
"The following instructions require the transfer of the ``server.req`` (or"
" ``server.csr``) file to the CA system."
msgstr "以下指令要求将``server.req``（或``server.csr``）文件传输到CA系统。"

#: ../pro/linux/openvpn-easyrsa.rst:235 ../pro/windows/openvpn-easyrsa.rst:235
#: ../storage/linux/openvpn-easyrsa.rst:236
msgid ""
"The transfer itself is not security sensitive, though it is wise to "
"verify if the received file matches the sender’s copy, if the transport "
"is untrusted."
msgstr "传输本身并不具有安全敏感性，不过，如果传输不受信任，验证收到的文件是否与发送者的副本相符是明智的。"

#: ../pro/linux/openvpn-easyrsa.rst:237 ../pro/windows/openvpn-easyrsa.rst:237
#: ../storage/linux/openvpn-easyrsa.rst:238
msgid ""
"In order to go through these steps, I will extensively rely on `these "
"instructions <certificate-authority.html#creating-the-intermediate-"
"certificate-authority>`_, to sign the certificate signing requests, once "
"we generated them with Easy-RSA."
msgstr ""
"为了完成这些步骤，我将广泛依靠`这些说明<certificate-authority.html#creating-the-"
"intermediate-certificate-authority>`_，来签署证书签署请求，一旦我们用Easy-RSA生成它们。"

#: ../pro/linux/openvpn-easyrsa.rst:239 ../pro/windows/openvpn-easyrsa.rst:239
#: ../storage/linux/openvpn-easyrsa.rst:241
msgid "Sign the ``server.req`` file"
msgstr "签署``server.req`` 文件"

#: ../pro/linux/openvpn-easyrsa.rst:241 ../pro/windows/openvpn-easyrsa.rst:241
#: ../storage/linux/openvpn-easyrsa.rst:243
msgid ""
"On the local machine dedicated to access the HSM, we will use the tools "
"provided by Opensc 0.20 in order to sign the ``.req`` file, and send it "
"back to the OpenVPN server. We assume we have transferred the file from "
"the server machine to the CA machine."
msgstr ""
"在专用于访问HSM的本地机器上，我们将使用Opensc "
"0.20提供的工具来签署``.req``文件，并把它送回OpenVPN服务器。我们假设我们已经将文件从服务器机器传输到CA机器。"

#: ../pro/linux/openvpn-easyrsa.rst:243 ../pro/windows/openvpn-easyrsa.rst:243
#: ../storage/linux/openvpn-easyrsa.rst:245
msgid ""
"First we start by plugging the HSM Nitrokey, and enter this instruction "
"for listing the keys available."
msgstr "首先，我们先插上HSM Nitrokey，并输入这个指令，列出可用的按键。"

#: ../pro/linux/openvpn-easyrsa.rst:245 ../pro/windows/openvpn-easyrsa.rst:245
#: ../storage/linux/openvpn-easyrsa.rst:247
msgid "Query the list of available devices"
msgstr "查询可用设备的列表"

#: ../pro/linux/openvpn-easyrsa.rst:251
#: ../storage/linux/openvpn-easyrsa.rst:253
msgid ""
"**(Required step)** If this is the first time you sign a certificate with"
" the CA, you might want to retrieve the URI of the CA’s private key from "
"the HSM, and include it in the config file."
msgstr "**(必要步骤）** 如果这是您第一次与 CA 签发证书，您可能需要从 HSM 获取 CA 私钥的 URI，并将其包含在配置文件中。"

#: ../pro/linux/openvpn-easyrsa.rst:254 ../pro/windows/openvpn-easyrsa.rst:253
#: ../storage/linux/openvpn-easyrsa.rst:255
msgid "The key’s URI should be in this format:"
msgstr "该钥匙的URI应该是这种格式。"

#: ../pro/linux/openvpn-easyrsa.rst:260 ../pro/windows/openvpn-easyrsa.rst:259
#: ../storage/linux/openvpn-easyrsa.rst:261
msgid "Create ``openvpn/`` directory under ``certificate-authority/``"
msgstr "在``openvpn/``目录下创建``certificate-authority/``。"

#: ../pro/linux/openvpn-easyrsa.rst:267 ../pro/windows/openvpn-easyrsa.rst:266
#: ../storage/linux/openvpn-easyrsa.rst:268
msgid "Sign the ``server.req``"
msgstr "签署``server.req``。"

#: ../pro/linux/openvpn-easyrsa.rst:273 ../pro/windows/openvpn-easyrsa.rst:272
#: ../storage/linux/openvpn-easyrsa.rst:275
msgid "Retrieve the ``server.crt`` file to the server machine"
msgstr "将``server.crt`` 文件读取到服务器机器上"

#: ../pro/linux/openvpn-easyrsa.rst:275 ../pro/windows/openvpn-easyrsa.rst:274
#: ../storage/linux/openvpn-easyrsa.rst:277
msgid "Transfer the signed certificates to the server"
msgstr "将签名的证书转移到服务器上"

#: ../pro/linux/openvpn-easyrsa.rst:277 ../pro/windows/openvpn-easyrsa.rst:276
#: ../storage/linux/openvpn-easyrsa.rst:279
msgid ""
"From the CA machine, copy the files ``server.crt`` and ``chain.crt`` to "
"the OpenVPN server. In this example we will use the ``scp`` command as "
"following:"
msgstr "从CA机器上复制文件``server.crt`和``chain.crt``到OpenVPN服务器。在这个例子中，我们将使用``scp``命令，如下所示。"

#: ../pro/linux/openvpn-easyrsa.rst:283 ../pro/windows/openvpn-easyrsa.rst:282
#: ../storage/linux/openvpn-easyrsa.rst:285
msgid "Place the certificates on the server’s directory"
msgstr "将证书放在服务器的目录上"

#: ../pro/linux/openvpn-easyrsa.rst:291 ../pro/windows/openvpn-easyrsa.rst:290
#: ../storage/linux/openvpn-easyrsa.rst:293
msgid "CA Certificate and ``chain.crt``"
msgstr "CA证书和``chain.crt``。"

#: ../pro/linux/openvpn-easyrsa.rst:293 ../pro/windows/openvpn-easyrsa.rst:292
#: ../storage/linux/openvpn-easyrsa.rst:295
msgid ""
"In the above, the CA returns the signed sever certificate, and includes "
"the CA certificate ``CA.crt`` which is the ``chain.crt`` file. This can "
"be done over an insecure channel, though the client is encouraged to "
"confirm if the received ``chain.crt`` is valid, if the transport is "
"untrusted."
msgstr ""
"在上面，CA返回已签名的sever证书，并包括CA证书``CA.crt``，这是``chain.crt`` "
"文件。这可以通过不安全的通道进行，尽管鼓励客户端确认收到的``chain.crt``是否有效，如果传输是不信任的。"

#: ../pro/linux/openvpn-easyrsa.rst:299 ../pro/windows/openvpn-easyrsa.rst:298
#: ../storage/linux/openvpn-easyrsa.rst:301
msgid ""
"It is possible to rename the file ``chain.crt`` file to ``CA.crt`` on the"
" target machine, however we will use ``chain.crt`` in the next "
"instructions."
msgstr "可以在目标机上将``chain.crt``文件重命名为``CA.crt`。但是我们将在接下来的说明中使用``chain.crt``。"

#: ../pro/linux/openvpn-easyrsa.rst:304 ../pro/windows/openvpn-easyrsa.rst:303
msgid "6. Configure the OpenVPN server"
msgstr "6.配置OpenVPN服务器"

#: ../pro/linux/openvpn-easyrsa.rst:306 ../pro/windows/openvpn-easyrsa.rst:305
#: ../storage/linux/openvpn-easyrsa.rst:308
msgid ""
"A connection that uses TLS requires multiple `certificates and keys for "
"authentication <https://wiki.teltonika-"
"networks.com/view/OpenVPN_configuration_examples>`__. Now that we issued "
"and signed those, we can place them in the right directories. The "
"breakdown of the certificates and keys that must be located at the root "
"directory are the following:"
msgstr ""
"一个使用TLS的连接需要多个`证书和密钥进行认证<https://wiki.teltonika-"
"networks.com/view/OpenVPN_configuration_examples>`__。现在，我们发布并签署了这些证书，我们可以把它们放在正确的目录中。必须位于根目录下的证书和密钥的分类如下。"

#: ../pro/linux/openvpn-easyrsa.rst:317 ../pro/windows/openvpn-easyrsa.rst:316
#: ../storage/linux/openvpn-easyrsa.rst:315
msgid ""
"On your OpenVPN server, now you can create the configuration file "
"``server.conf`` with your favorite text editor. The file can be "
"configured according to your needs, while we make sure to change the "
"server certificate and key sections according the names you chose for the"
" your the files we signed:"
msgstr "在你的OpenVPN服务器上，现在你可以用你喜欢的文本编辑器创建配置文件``server.conf``。该文件可以根据你的需要进行配置，同时我们确保根据你为我们签署的文件选择的名称来改变服务器证书和密钥部分。"

#: ../pro/linux/openvpn-easyrsa.rst:326 ../pro/windows/openvpn-easyrsa.rst:325
#: ../storage/linux/openvpn-easyrsa.rst:324
msgid "Here is the configuration file we can use for testing these instructions:"
msgstr "这里是我们可以用来测试这些指令的配置文件。"

#: ../pro/linux/openvpn-easyrsa.rst:356 ../pro/windows/openvpn-easyrsa.rst:355
#: ../storage/linux/openvpn-easyrsa.rst:354
msgid "To test if the configuration functions properly, we can use this command:"
msgstr "为了测试配置的功能是否正常，我们可以使用这个命令。"

#: ../pro/linux/openvpn-easyrsa.rst:363 ../pro/windows/openvpn-easyrsa.rst:362
msgid "7. Start the OpenVPN service on the server"
msgstr "7.在服务器上启动OpenVPN服务"

#: ../pro/linux/openvpn-easyrsa.rst:365 ../pro/windows/openvpn-easyrsa.rst:364
#: ../storage/linux/openvpn-easyrsa.rst:363
msgid ""
"Enable the OpenVPN service by adding it to systemctl, and start it using "
"these commands:"
msgstr "将OpenVPN服务添加到systemctl中启用，并使用这些命令启动它。"

#: ../pro/linux/openvpn-easyrsa.rst:372 ../pro/windows/openvpn-easyrsa.rst:371
#: ../storage/linux/openvpn-easyrsa.rst:370
msgid "To Double check if the OpenVPN service is active use this command:"
msgstr "要重复检查OpenVPN服务是否激活，请使用此命令。"

#: ../pro/linux/openvpn-easyrsa.rst:378 ../pro/windows/openvpn-easyrsa.rst:377
#: ../storage/linux/openvpn-easyrsa.rst:376
msgid "The OpenVPN should be running at this point."
msgstr "这时，OpenVPN应该正在运行。"

#: ../pro/linux/openvpn-easyrsa.rst:383 ../pro/windows/openvpn-easyrsa.rst:382
#: ../storage/linux/openvpn-easyrsa.rst:379
msgid "Client side configuration"
msgstr "客户端配置"

#: ../pro/linux/openvpn-easyrsa.rst:386 ../pro/windows/openvpn-easyrsa.rst:385
msgid "1. Install OpenVPN and Easy-RSA"
msgstr "1.安装OpenVPN和Easy-RSA"

#: ../pro/linux/openvpn-easyrsa.rst:388 ../pro/windows/openvpn-easyrsa.rst:387
#: ../storage/linux/openvpn-easyrsa.rst:384
msgid "Install the software"
msgstr "安装软件"

#: ../pro/linux/openvpn-easyrsa.rst:390 ../pro/windows/openvpn-easyrsa.rst:389
#: ../storage/linux/openvpn-easyrsa.rst:386
msgid ""
"We can use directly ``dnf install`` to install OpenVPN 2.4.9 and Easy-RSA"
" 3.0.7"
msgstr "我们可以直接使用``dnf install``来安装OpenVPN 2.4.9 和 Easy-RSA 3.0.7"

#: ../pro/linux/openvpn-easyrsa.rst:396 ../pro/windows/openvpn-easyrsa.rst:395
#: ../storage/linux/openvpn-easyrsa.rst:392
msgid "Then we create as non-root a directory for Easy RSA called ``Easy-RSA``"
msgstr "然后我们为Easy RSA创建一个非根目录，名为``Easy-RSA``。"

#: ../pro/linux/openvpn-easyrsa.rst:402 ../pro/windows/openvpn-easyrsa.rst:401
#: ../storage/linux/openvpn-easyrsa.rst:398
msgid "And link it to the Easy RSA package we just installed"
msgstr "并将其链接到我们刚刚安装的Easy RSA软件包上"

#: ../pro/linux/openvpn-easyrsa.rst:409 ../pro/windows/openvpn-easyrsa.rst:408
msgid "2. Create a PKI for the OpenVPN client"
msgstr "2.为OpenVPN客户端创建一个PKI"

#: ../pro/linux/openvpn-easyrsa.rst:411 ../pro/windows/openvpn-easyrsa.rst:410
#: ../storage/linux/openvpn-easyrsa.rst:407
msgid ""
"In the same manner we created a PKI on the OpenVPN server, we will create"
" a PKI using Easy-RSA on the client side."
msgstr "按照我们在OpenVPN服务器上创建PKI的方式，我们将在客户端使用Easy-RSA创建一个PKI。"

#: ../pro/linux/openvpn-easyrsa.rst:414 ../pro/windows/openvpn-easyrsa.rst:413
msgid "3. Create a ``client.req`` and ``client.key``"
msgstr "3.创建一个``client.req`和``client.key``。"

#: ../pro/linux/openvpn-easyrsa.rst:416 ../pro/windows/openvpn-easyrsa.rst:415
#: ../storage/linux/openvpn-easyrsa.rst:412
msgid ""
"In the same manner we issued the key pair on the sever, we generate a key"
" pair for the client which will be composed of the ``client.req`` file "
"and the ``client.key`` file. The latter must be kept secret on the client"
" machine."
msgstr "以我们在服务器上发布密钥对的同样方式，我们为客户机生成一个密钥对，它将由``client.req`文件和``client.key`文件组成。后者必须在客户机上保持秘密。"

#: ../pro/linux/openvpn-easyrsa.rst:420 ../pro/windows/openvpn-easyrsa.rst:419
msgid "4. Sign ``client.req`` and issue the ``client.crt`` file"
msgstr "4.签署``client.req``并发布``client.crt``文件"

#: ../pro/linux/openvpn-easyrsa.rst:422 ../pro/windows/openvpn-easyrsa.rst:421
#: ../storage/linux/openvpn-easyrsa.rst:418
msgid ""
"To transfer the ``client.req`` file to the CA machine, we will use the "
"same method as we did for the ``server.req`` file."
msgstr "要把``client.req``文件传输到CA机器，我们将使用与``server.req``文件同样的方法。"

#: ../pro/linux/openvpn-easyrsa.rst:424 ../pro/windows/openvpn-easyrsa.rst:423
#: ../storage/linux/openvpn-easyrsa.rst:420
msgid ""
"Once transferred, on the CA machine we sign the certificate signing "
"request file with this command"
msgstr "一旦转移，在CA机器上我们用这个命令签署证书签署请求文件"

#: ../pro/linux/openvpn-easyrsa.rst:431 ../pro/windows/openvpn-easyrsa.rst:430
msgid "5. Import ``client.crt`` on the Nitrokey from the CA machine"
msgstr "5.从CA机器上导入``client.crt``在Nitrokey上。"

#: ../pro/linux/openvpn-easyrsa.rst:433 ../pro/windows/openvpn-easyrsa.rst:432
#: ../storage/linux/openvpn-easyrsa.rst:429
msgid ""
"After creating the ``client.crt`` file, we plug the Nitrokey Pro 2 device"
" in the CA machine, and import the ``.crt`` to the Pro 2 device using "
"this command:"
msgstr ""
"在创建了``client.crt``文件后，我们将Nitrokey Pro 2设备插入CA机器，并使用这个命令将``.crt``导入到Pro "
"2设备。"

#: ../pro/linux/openvpn-easyrsa.rst:439 ../pro/windows/openvpn-easyrsa.rst:438
#: ../storage/linux/openvpn-easyrsa.rst:435
msgid ""
"You can see if the key is effectively stored on the Nitrokey using this "
"command:"
msgstr "你可以用这个命令查看钥匙是否有效地存储在Nitrokey上。"

#: ../pro/linux/openvpn-easyrsa.rst:445 ../pro/windows/openvpn-easyrsa.rst:444
#: ../storage/linux/openvpn-easyrsa.rst:441
msgid "Or alternatively"
msgstr "或者说是"

#: ../pro/linux/openvpn-easyrsa.rst:451 ../pro/windows/openvpn-easyrsa.rst:450
#: ../storage/linux/openvpn-easyrsa.rst:447
msgid ""
"Fore more commands you can refer to the `OpenSC wiki "
"<https://github.com/OpenSC/OpenSC/wiki/OpenPGP-card>`__."
msgstr ""
"更多的命令你可以参考`OpenSC wiki <https://github.com/OpenSC/OpenSC/wiki/OpenPGP-"
"card>`__。"

#: ../pro/linux/openvpn-easyrsa.rst:454 ../pro/windows/openvpn-easyrsa.rst:453
msgid "6. Retrieve the ``chain.crt`` file from the CA machine"
msgstr "6.从CA机器上获取``chain.crt``文件"

#: ../pro/linux/openvpn-easyrsa.rst:456 ../pro/windows/openvpn-easyrsa.rst:455
#: ../storage/linux/openvpn-easyrsa.rst:452
msgid ""
"While we keep the ``client.crt``\\ stored on the nitrokey Pro 2 device, "
"we must retrieve the ``chain.crt`` file on the client machine, and store "
"it in the adequate directory. We may use ``scp`` as in the method "
"explained in the server section of this guide."
msgstr ""
"虽然我们把``client.crt``\\ stored on the nitrokey Pro 2 device, we must "
"retrieve the "
"``chain.crt``文件保存在客户端机器上，并把它存放在足够的目录中。我们可以使用``scp``，正如本指南的服务器部分所解释的方法。"

#: ../pro/linux/openvpn-easyrsa.rst:459 ../pro/windows/openvpn-easyrsa.rst:458
msgid "7. Configure the client to interact with the Nitrokey"
msgstr "7.配置客户端以与Nitrokey进行交互。"

#: ../pro/linux/openvpn-easyrsa.rst:461 ../pro/windows/openvpn-easyrsa.rst:460
#: ../storage/linux/openvpn-easyrsa.rst:457
msgid ""
"Now back on the client machine, we will plug the Nitrokey Pro and use it "
"to establish the VPN connection with the server. In general terms, a "
"connection that uses TLS requires multiple certificates and keys for "
"authentication:"
msgstr "现在回到客户机上，我们将插入Nitrokey Pro，用它来建立与服务器的VPN连接。一般来说，使用TLS的连接需要多个证书和密钥进行认证。"

#: ../pro/linux/openvpn-easyrsa.rst:470 ../pro/windows/openvpn-easyrsa.rst:469
#: ../storage/linux/openvpn-easyrsa.rst:463
msgid ""
"For this guide we can the following ``client.conf`` file, and add the "
"required options to it accordingly:"
msgstr "对于这个指南，我们可以在下面的``client.conf``文件中，相应地添加需要的选项。"

#: ../pro/linux/openvpn-easyrsa.rst:492 ../pro/windows/openvpn-easyrsa.rst:491
#: ../storage/linux/openvpn-easyrsa.rst:485
msgid "Determine the correct object"
msgstr "确定正确的对象"

#: ../pro/linux/openvpn-easyrsa.rst:494 ../pro/windows/openvpn-easyrsa.rst:493
#: ../storage/linux/openvpn-easyrsa.rst:487
msgid ""
"Each PKCS#11 provider can support multiple devices. In order to view the "
"available object list you can use the following command:"
msgstr "每个PKCS#11提供者可以支持多个设备。为了查看可用的对象列表，你可以使用以下命令。"

#: ../pro/linux/openvpn-easyrsa.rst:510 ../pro/windows/openvpn-easyrsa.rst:509
#: ../storage/linux/openvpn-easyrsa.rst:503
msgid ""
"Each certificate/private key pair have unique ``Serialized id`` string. "
"The serialized id string of the requested certificate should be "
"specified, in the configuration file. We can do this by adding the "
"``pkcs11-id`` option using single quote marks."
msgstr ""
"每个证书/私钥对都有唯一的``Serialized "
"id``字符串。应在配置文件中指定请求的证书的序列化id字符串。我们可以通过添加``pkcs11-id``选项，使用单引号来实现这一点。"

#: ../pro/linux/openvpn-easyrsa.rst:516 ../pro/windows/openvpn-easyrsa.rst:515
#: ../storage/linux/openvpn-easyrsa.rst:509
msgid "Add retrieved Serialized ID to the configuration file"
msgstr "将检索到的序列化ID添加到配置文件中"

#: ../pro/linux/openvpn-easyrsa.rst:518 ../pro/windows/openvpn-easyrsa.rst:517
#: ../storage/linux/openvpn-easyrsa.rst:511
msgid ""
"Using your favorite text editor, open the server.conf file, and add the "
"following lines, while taking care to insert your own ``Serialized id``:"
msgstr "使用你喜欢的文本编辑器，打开server.conf文件，并添加以下几行，同时注意插入你自己的``Serialized id``。"

#: ../pro/linux/openvpn-easyrsa.rst:525 ../pro/windows/openvpn-easyrsa.rst:524
#: ../storage/linux/openvpn-easyrsa.rst:518
msgid ""
"For additional `settings related to OpenVPN <https://openvpn.net"
"/community-resources/how-to/>`__ authentication, you may also add few "
"lines to handle key maganagement, although it is optional."
msgstr ""
"对于与OpenVPN <https://openvpn.net/community-resources/how-"
"to/>`__认证有关的额外`设置，你也可以添加几行来处理密钥管理，尽管它是可选的。"

#: ../pro/linux/openvpn-easyrsa.rst:529 ../pro/linux/openvpn-easyrsa.rst:553
#: ../pro/windows/openvpn-easyrsa.rst:528
#: ../pro/windows/openvpn-easyrsa.rst:552
#: ../storage/linux/openvpn-easyrsa.rst:522
#: ../storage/linux/openvpn-easyrsa.rst:546
msgid "Click to view the code"
msgstr "点击查看代码"

#: ../pro/linux/openvpn-easyrsa.rst:546 ../pro/windows/openvpn-easyrsa.rst:545
#: ../storage/linux/openvpn-easyrsa.rst:539
msgid "Optional step"
msgstr "可选步骤"

#: ../pro/linux/openvpn-easyrsa.rst:549 ../pro/windows/openvpn-easyrsa.rst:548
#: ../storage/linux/openvpn-easyrsa.rst:542
msgid ""
"If you need to test the configuration, with and without the token on the "
"Nitrokey, you may add lines to the same ``client.conf`` and "
"comment/uncomment the relevant lines according to your needs:"
msgstr "如果你需要测试配置，在有和没有Nitrokey的情况下，你可以在同一个``client.conf``中添加行，并根据你的需要注释/取消注释相关行。"

#: ../pro/linux/openvpn-easyrsa.rst:563 ../pro/windows/openvpn-easyrsa.rst:562
#: ../storage/linux/openvpn-easyrsa.rst:556
msgid "Configure the OpenVPN client"
msgstr "配置OpenVPN客户端"

#: ../pro/linux/openvpn-easyrsa.rst:565 ../pro/windows/openvpn-easyrsa.rst:564
#: ../storage/linux/openvpn-easyrsa.rst:558
msgid "The final configuration file ``client.conf`` should look like this one:"
msgstr "最终的配置文件``client.conf``应该看起来像这样的文件。"

#: ../pro/linux/openvpn-easyrsa.rst:608 ../pro/windows/openvpn-easyrsa.rst:631
#: ../storage/linux/openvpn-easyrsa.rst:601
msgid "Known issues"
msgstr "已知问题"

#: ../pro/linux/openvpn-easyrsa.rst:610 ../pro/windows/openvpn-easyrsa.rst:633
#: ../storage/linux/openvpn-easyrsa.rst:603
msgid ""
"There are some known issues related to OpenVPN login with OpenSC. Please "
"consult these issues `here <https://github.com/Nitrokey/wiki/wiki/3rd-"
"Party-Issues>`__."
msgstr ""
"有一些与OpenVPN登录OpenSC有关的已知问题。请参考这些问题 `这里 "
"<https://github.com/Nitrokey/wiki/wiki/3rd-Party-Issues>`__。"

#: ../pro/linux/openvpn-easyrsa.rst:613 ../pro/windows/openvpn-easyrsa.rst:636
msgid "8. Start the OpenVPN client"
msgstr "8.启动OpenVPN客户端"

#: ../pro/linux/openvpn-easyrsa.rst:615 ../pro/windows/openvpn-easyrsa.rst:638
#: ../storage/linux/openvpn-easyrsa.rst:608
msgid "Start the OpenVPN service on the client"
msgstr "在客户端启动OpenVPN服务"

#: ../pro/linux/openvpn-easyrsa.rst:617 ../pro/windows/openvpn-easyrsa.rst:640
#: ../storage/linux/openvpn-easyrsa.rst:610
msgid "Enable the OpenVPN service, and start it using these commands:"
msgstr "启用OpenVPN服务，并使用这些命令启动它。"

#: ../pro/linux/openvpn-easyrsa.rst:624 ../pro/windows/openvpn-easyrsa.rst:647
#: ../storage/linux/openvpn-easyrsa.rst:617
msgid "To double check if the OpenVPN service is active use this command:"
msgstr "要仔细检查OpenVPN服务是否激活，请使用此命令。"

#: ../pro/linux/openvpn-easyrsa.rst:630 ../pro/windows/openvpn-easyrsa.rst:653
#: ../storage/linux/openvpn-easyrsa.rst:623
msgid "Enter your User PIN"
msgstr "输入你的用户密码"

#: ../pro/linux/openvpn-easyrsa.rst:632 ../pro/windows/openvpn-easyrsa.rst:655
#: ../storage/linux/openvpn-easyrsa.rst:625
msgid "When executing OpenVPN client, Nitrokey’s PIN needs to be entered:"
msgstr "在执行OpenVPN客户端时，需要输入Nitrokey的PIN。"

#: ../pro/linux/openvpn-easyrsa.rst:644
#: ../storage/linux/openvpn-easyrsa.rst:638
msgid ""
"Unfortunately OpenVPN doesn’t seem to be able to establish a handshake "
"and stops at an error as reported `here <https://support.nitrokey.com/t"
"/nitrokey-pro-with-openssl-1-1-1-tls-1-3-and-rsa-based-"
"certificates/2180/2>`__, `here <https://support.nitrokey.com/t/openvpn-"
"openssl-error-141f0006/2637>`__ and `here "
"<https://community.openvpn.net/openvpn/ticket/1215>`__"
msgstr ""
"不幸的是，OpenVPN似乎无法建立握手，并停在一个错误上，如报告的那样 `here "
"<https://support.nitrokey.com/t/nitrokey-pro-with-openssl-1-1-1-tls-1-3"
"-and-rsa-based-certificates/2180/2>`__。`这里 "
"<https://support.nitrokey.com/t/openvpn-openssl-error-141f0006/2637>`__和 "
"`这里 <https://community.openvpn.net/openvpn/ticket/1215>`__"

#: ../pro/linux/openvpn-easyrsa.rst:674 ../pro/windows/openvpn-easyrsa.rst:666
#: ../storage/linux/openvpn-easyrsa.rst:669
msgid ""
"In some reported cases it does not prompt for a PIN on the terminal. One "
"workaround would be to use to use this command to login with the PIN:"
msgstr "在一些报告的案例中，它没有在终端上提示密码。一个变通的办法是使用这个命令用PIN码来登录。"

#: ../pro/linux/openvpn-easyrsa.rst:680 ../pro/windows/openvpn-easyrsa.rst:672
#: ../storage/linux/openvpn-easyrsa.rst:676
msgid ""
"Alternatively, you could `recompile OpenVPN "
"<https://forums.openvpn.net/viewtopic.php?f=4&t=23318>`__ client with "
"systemd support disabled, and it will prompt you for the PIN as expected."
msgstr ""
"另外，你可以`重新编译OpenVPN "
"<https://forums.openvpn.net/viewtopic.php?f=4&t=23318>`__客户端，禁用systemd支持，它将如期提示你输入密码。"

#: ../pro/linux/openvpn-easyrsa.rst:682 ../pro/windows/openvpn-easyrsa.rst:674
#: ../storage/linux/openvpn-easyrsa.rst:678
msgid ""
"Another option, would be to login to your OpenVPN instance with the "
"Viscosity client which provides a better user experience especially for "
"entering the PIN."
msgstr "另一个选择是用Viscosity客户端登录OpenVPN实例，它提供了更好的用户体验，特别是在输入PIN时。"

#: ../pro/otp.rst.inc:2
msgid "Two-factor Authentication with One-Time Passwords (OTP)"
msgstr "使用一次性密码（OTP）的双因素认证"

#: ../pro/otp.rst.inc:6
msgid ""
"The use of One-time Passwords (OTP) is called very differently on the "
"various services supporting it. Sometimes it is referred to as Multi-"
"factor Authentication (MFA), sometimes it is Two-factor Authentication "
"(2FA) or just “authentication via authenticator app” like Google "
"Authenticator. Most of these services are compatible for usage with the "
"Nitrokey Pro and Nitrokey Storage. The following instructions show how to"
" enable OTP on our `support forum <https://support.nitrokey.com/>`__. The"
" procedure is quite similar on most services. For a list of websites "
"supporting OTP have a look at `dongleauth.com "
"<https://www.dongleauth.com/>`__."
msgstr ""
"一次性密码（OTP）的使用在支持它的各种服务中的称呼非常不同。有时它被称为多因素认证（MFA），有时是双因素认证（2FA），或者只是 "
"\"通过认证器应用程序认证\"，如谷歌认证器。这些服务大多与硝基钥匙专业版和硝基钥匙存储版兼容使用。下面的说明显示了如何在我们的`支持论坛<https://support.nitrokey.com/>`__启用OTP。这个过程在大多数服务上都很相似。关于支持OTP的网站列表，请看`dongleauth.com"
" <https://www.dongleauth.com/>`__。"

#: ../pro/otp.rst.inc:8
msgid ""
"You need to have the `Nitrokey App <https://www.nitrokey.com/download>`__"
" installed to use the OTP feature of the Nitrokey Pro and Nitrokey "
"Storage."
msgstr ""
"你需要安装`Nitrokey应用程序<https://www.nitrokey.com/download>`__来使用Nitrokey "
"Pro和Nitrokey Storage的OTP功能。"

#: ../pro/otp.rst.inc:11
msgid "Configure a Website/Application to Use OTP"
msgstr "配置一个网站/应用程序以使用OTP"

#: ../pro/otp.rst.inc:13
msgid ""
"Login to the website which supports OTP (in this example, the `support "
"forum <https://support.nitrokey.com/>`__). Usually you find the option to"
" enable two-factor-authentication under your profile or in the settings."
msgstr "登录支持OTP的网站（本例中，`支持论坛<https://support.nitrokey.com/>`__）。通常情况下，你可以在你的个人资料或设置中找到启用双因素认证的选项。"

#: ../pro/otp.rst.inc:20
msgid ""
"Most of the time, you will get a QR-Code as seen below. There should be "
"an option, to show the secret key directly."
msgstr "大多数时候，你会得到一个QR码，如下图所示。应该有一个选项，可以直接显示密匙。"

#: ../pro/otp.rst.inc:27
msgid "We need to copy the secret code."
msgstr "我们需要复制秘密代码。"

#: ../pro/otp.rst.inc:29
msgid ""
"This is what the Nitrokey is actually protecting. You may create a backup"
" of it now (in case the Nitrokey get lost or breaks) by writing it down "
"on a sheet of paper and storing it securely. But be aware that anybody "
"who is in possession of this secret code, can create one-time passwords "
"for your account! *Please note that you won’t be able to backup this "
"code, once it is stored in the Nitrokey!*"
msgstr "这就是Nitrokey的实际保护内容。你现在可以把它写在一张纸上并安全地保存起来，以建立一个备份（以防硝基钥匙丢失或损坏）。但请注意，任何拥有这个秘密代码的人都可以为你的账户创建一次性密码。*请注意，一旦这个密码被储存在Nitrokey中，你将无法备份！*。"

#: ../pro/otp.rst.inc:36
msgid "Now start the Nitrokey App and open the “OTP Slot Configuration”."
msgstr "现在启动Nitrokey应用程序并打开 \"OTP插槽配置\"。"

#: ../pro/otp.rst.inc:43
msgid ""
"Paste in the secret key in the corresponding field and choose an "
"appropiate slot name. Click on “Save” and type in your admin PIN if "
"requested."
msgstr "在相应的字段中粘贴秘密密钥，并选择一个合适的插槽名称。点击 \"保存 \"并按要求输入管理密码。"

#: ../pro/otp.rst.inc:50
msgid ""
"After saving the slot you can go to “Menu” -> “Passwords” -> YourSlotName"
" to get your very first one-time password."
msgstr "保存插槽后，你可以到 \"菜单\"-> \"密码\"->YourSlotName获得你的第一个一次性密码。"

#: ../pro/otp.rst.inc:58
msgid ""
"The one-time password is copied to your clipboard automatically. You just"
" need to paste it to the field on the website to confirm the correct "
"setup and thus to activate the two-factor authentication."
msgstr "一次性密码会自动复制到你的剪贴板上。你只需要把它粘贴到网站上的字段，以确认正确的设置，从而激活双因素认证。"

#: ../pro/otp.rst.inc:66
msgid "Securely Login to Website/Application"
msgstr "安全登录到网站/应用程序"

#: ../pro/otp.rst.inc:68
msgid ""
"From now on you will get asked for a one-time password additionally to "
"your other credentials if you try to login the the website. You just need"
" to open the Nitrokey App and go to “Menu” -> “Passwords” -> YourSlotName"
" again to get the one-time password."
msgstr ""
"从现在开始，如果你试图登录网站，除了其他证书外，你还会被要求提供一个一次性密码。你只需打开Nitrokey应用程序，进入 \"菜单\"-> "
"\"密码\"-> YourSlotName，即可获得一次性密码。"

#: ../pro/linux/ssh.rst:2 ../start/linux/ssh.rst:2 ../storage/linux/ssh.rst:2
msgid "SSH For Server Administration"
msgstr "用于服务器管理的SSH"

#: ../pro/ssh.rst:1
msgid ""
"This guide explains how to prepare your SSH server and client for use "
"with the Nitrokey."
msgstr "本指南解释了如何准备你的SSH服务器和客户端，以便与Nitrokey一起使用。"

#: ../pro/ssh.rst:3
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should know the keys."
msgstr "Nitrokey应该已经安装了PGP密钥，本地的GnuPG钥匙圈应该知道这些密钥。"

#: ../pro/ssh.rst:6
msgid "Preparation on client"
msgstr "关于客户的准备工作"

#: ../pro/ssh.rst:8
msgid "Make sure ~/.gnupg/gpg.conf contains 'use-agent'"
msgstr "确保 ~/.gnupg/gpg.conf 包含 'use-agent'。"

#: ../pro/ssh.rst:9
msgid ""
"Add ssh support to gnupg-agent by adding 'enable-ssh-support' to ~/.gnupg"
"/gpg-agent.conf"
msgstr ""
"在 ~/.gnupg/gpg-agent.conf 中加入 'enable-ssh-support'，为 gnupg-agent 增加 ssh "
"支持。"

#: ../pro/ssh.rst:10
msgid "If the file does not exist yet, you can just create it."
msgstr "如果该文件还不存在，你可以直接创建它。"

#: ../pro/ssh.rst:11
msgid ""
"Add the following code somewhere into your ~/.bashrc (for fish shell, "
"look `here <https://support.nitrokey.com/t/ssh-auth-with-fish-instead-of-"
"bash/2206>`__)"
msgstr ""
"在你的~/.bashrc中的某处添加以下代码（对于鱼壳，请看`这里 <https://support.nitrokey.com/t/ssh-"
"auth-with-fish-instead-of-bash/2206>`__）。"

#: ../pro/ssh.rst:20
msgid ""
"Simply restart your system or try ``pkill gpg-agent`` and open a new "
"commandline to make sure everything is set"
msgstr "只需重新启动你的系统或尝试``pkill gpg-agent``并打开一个新的命令行以确保一切都已设置好"

#: ../pro/ssh.rst:21
msgid ""
"In case of problems, please try ``gpg2 --card-status`` on first usage to "
"make sure the gpg-agent gets started"
msgstr "如果出现问题，请在第一次使用时尝试``gpg2 --card-status``，以确保 gpg-agent 得到启动。"

#: ../pro/ssh.rst:24
msgid "Preparation for the server"
msgstr "为服务器做准备"

#: ../pro/ssh.rst:26
msgid "You can generate an authorized_keys file by running either"
msgstr "你可以通过运行以下命令之一来生成一个authorized_keys文件"

#: ../pro/ssh.rst:32
msgid "where"
msgstr "其中"

#: ../pro/ssh.rst:38
msgid ""
"is the subkey id being used for authentication on your Nitrokey. The "
"Nitrokey must already be known to the local GnuPG keyring. You can now "
"append that file to a remote server's authorized_keys and when you ssh to"
" the server you'll be asked for a pin rather than a passphrase."
msgstr "是在你的Nitrokey上用于认证的子键ID。Nitrokey必须已经被本地的GnuPG钥匙圈所知。你现在可以将该文件添加到远程服务器的authorized_keys中，当你ssh到该服务器时，就会要求你输入密码而不是口令。"

#: ../pro/ssh.rst:44
msgid "If you are still being asked for a password please make sure that"
msgstr "如果你仍然被要求提供密码，请确保"

#: ../pro/ssh.rst:50
msgid ""
"returns something like '/run/user/1000/gnupg/S.gpg-agent.ssh' or "
"'/home/username/.gnupg/.S.gpg-agent.ssh'. Unfortunately there were some "
"changes in GnuPG in the past so that the actual content can differ from "
"system and GnuPG version. On some systems there may are even multiple "
"folders in this variable saved. You have to adapt the above given code in"
" .bashrc so that the variable SSH_AUTH_SOCK is correct. In doubt look for"
" 'SSH_AUTH_SOCK' in"
msgstr ""
"返回类似'/run/user/1000/gnupg/S.gpg-agent.ssh'或'/home/username/.gnupg/.S.gpg-"
"agent.ssh'。不幸的是，GnuPG在过去有一些变化，所以实际内容可能因系统和GnuPG版本而异。在一些系统中，这个变量中甚至可能保存有多个文件夹。你必须调整上述.bashrc中的代码，使SSH_AUTH_SOCK这个变量正确。如有疑问，请在.bashrc中查找'SSH_AUTH_SOCK'。"

#: ../pro/ssh.rst:56
msgid "to find the actual code for your version/system."
msgstr "来找到你的版本/系统的实际代码。"

#: ../pro/ssh.rst:58
msgid ""
"You may check if you have a 'pinentry' program installed via your package"
" manager. You may need to `set it in the gpg-agent.conf "
"<https://wiki.archlinux.org/index.php/GnuPG#pinentry>`__ as well. You may"
" need to `point gpg-agent to the correct TTY "
"<https://wiki.archlinux.org/index.php/GnuPG#Configure_pinentry_to_use_the_correct_TTY>`__."
msgstr ""
"你可以通过你的软件包管理器检查你是否安装了'pinentry'程序。你可能需要`在 gpg-agent.conf "
"<https://wiki.archlinux.org/index.php/GnuPG#pinentry>`__中也设置它。你可能需要 `将 "
"gpg-agent 指向正确的 TTY "
"<https://wiki.archlinux.org/index.php/GnuPG#Configure_pinentry_to_use_the_correct_TTY>`__。"

#: ../pro/mac/index.rst:2
msgid "Nitrokey Pro, Mac"
msgstr "Nitrokey Pro, Mac"

#: ../pro/mac/index.rst:13
msgid ""
"Once you plug in the Nitrokey, your computer will start the Keyboard "
"Setup Assistant. **Don’t run through this assistant but exit it right "
"away.**"
msgstr "一旦你插上Nitrokey，你的电脑就会启动键盘设置助手。**不要跑完这个助手，要马上退出。"

#: ../pro/mac/index.rst:30 ../storage/mac/index.rst:31
msgid ""
"For some Versions of MacOS it is necessary to install custom `ccid driver"
" <https://github.com/martinpaljak/osx-ccid-installer>`__ (for information"
" see `here <https://ludovicrousseau.blogspot.com/2016/04/os-x-el-capitan-"
"and-ccid-driver-upgrades.html>`__), but in general MacOS should have the "
"driver onboard."
msgstr ""
"对于某些版本的MacOS来说，有必要安装自定义的`ccid驱动<https://github.com/martinpaljak/osx-ccid-"
"installer>`__（信息见`这里<https://ludovicrousseau.blogspot.com/2016/04/os-x"
"-el-capitan-and-ccid-driver-upgrades.html>`__），但一般来说MacOS应该有板载驱动。"

#: ../pro/mac/index.rst:36 ../pro/windows/index.rst:32
#: ../storage/linux/index.rst:33 ../storage/mac/index.rst:37
#: ../storage/windows/index.rst:35
msgid ""
"For many use cases described, it is necessary to have either OpenPGP or "
"S/MIME keys installed on the device (see below)."
msgstr "对于所述的许多用例，有必要在设备上安装OpenPGP或S/MIME密钥（见下文）。"

#: ../pro/windows/2fa-microsoft.rst:2
msgid "Two-factor Authentication for Microsoft Account"
msgstr "微软账户的双因素认证"

#: ../pro/windows/2fa-microsoft.rst:6
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Microsoft account."
msgstr "这些是注册Nitrokey Pro或Nitrokey Storage作为微软账户第二要素的基本步骤。"

#: ../pro/windows/2fa-microsoft.rst:8
msgid ""
"Visit https://account.live.com/proofs/Manage/additional and log in to "
"your Microsoft account if prompted."
msgstr "访问https://account.live.com/proofs/Manage/additional，如果有提示，请登录你的微软账户。"

#: ../pro/windows/2fa-microsoft.rst:20
msgid "Click on “Set up two-step verification”."
msgstr "点击 \"设置两步验证\"。"

#: ../pro/windows/2fa-microsoft.rst:27
msgid "Click on “Next”."
msgstr "点击 \"下一步\"。"

#: ../pro/windows/2fa-microsoft.rst:34
msgid "Now it is important to click on “set up a different Authenticator app”."
msgstr "现在必须点击 \"设置不同的认证器应用程序\"。"

#: ../pro/windows/2fa-microsoft.rst:41
msgid "Click on “I can’t scan the bar code”."
msgstr "点击 \"我无法扫描条形码\"。"

#: ../pro/windows/2fa-microsoft.rst:48
msgid "Insert and save secret code into the Nitrokey App."
msgstr "在Nitrokey应用程序中插入并保存秘密代码。"

#: ../pro/windows/2fa-microsoft.rst:65
msgid "Enter code generated by Nitrokey App to confirm."
msgstr "输入由Nitrokey应用程序生成的代码进行确认。"

#: ../pro/windows/2fa-microsoft.rst:77
msgid "Click “Next” and then “Finish”."
msgstr "点击 \"下一步\"，然后点击 \"完成\"。"

#: ../pro/windows/2fa-microsoft.rst:89
msgid ""
"From now on, when signing in you need an OTP additionally to your "
"password."
msgstr "从现在开始，当你登录时，除了你的密码外，还需要一个OTP。"

#: ../pro/eidauthenticate.rst.inc:2
msgid "Login With EIDAuthenticate on Stand Alone Windows Computers"
msgstr "在独立的Windows电脑上用EIDAuthenticate登录"

#: ../pro/eidauthenticate.rst.inc:6
msgid ""
"Download and install the latest version of `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__. Please install the `OpenPGP-"
"CSP <https://github.com/vletoux/OpenPGP-CSP/releases/tag/1.3>`__ driver "
"**instead** if using Nitrokey Storage 2 or Nitrokey Pro 2."
msgstr ""
"下载并安装最新版本的`OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__。如果使用Nitrokey"
" Storage 2或Nitrokey Pro 2，请安装`OpenPGP-CSP <https://github.com/vletoux"
"/OpenPGP-CSP/releases/tag/1.3>`__驱动**代替。"

#: ../pro/eidauthenticate.rst.inc:7
msgid ""
"Download and install `EIDAuthenticate "
"<https://www.mysmartlogon.com/eidauthenticate/>`__."
msgstr "下载并安装`EIDAuthenticate <https://www.mysmartlogon.com/eidauthenticate/>`__。"

#: ../pro/eidauthenticate.rst.inc:10
msgid ""
"The free community edition is disabled. You may test the enterprise "
"edition instead."
msgstr "免费的社区版已被禁用。你可以测试企业版。"

#: ../pro/eidauthenticate.rst.inc:12
msgid "Start EIDConfigurationWizard.exe"
msgstr "启动EIDConfigurationWizard.exe"

#: ../pro/eidauthenticate.rst.inc:13
msgid "Select “Associate a new certificate”"
msgstr "选择 \"关联一个新的证书\""

#: ../pro/eidauthenticate.rst.inc:20
msgid ""
"Select or generate a Certificate Authority which should issue the user’s "
"certificate on the Nitrokey."
msgstr "选择或生成一个证书颁发机构，该机构应在Nitrokey上颁发用户的证书。"

#: ../pro/eidauthenticate.rst.inc:28
msgid ""
"Enter the user PIN which you defined previously in step 4. Wait a moment "
"until a new keypair and certificate are generated. In case your Nitrokey "
"is not detected you may want to execute “certutil -scinfo” for "
"troubleshooting."
msgstr ""
"输入你之前在第4步定义的用户密码。稍等片刻，新的密钥对和证书就会生成。如果你的Nitrokey没有被检测到，你可能要执行 \"certutil "
"-scinfo \"来排除故障。"

#: ../pro/eidauthenticate.rst.inc:38
msgid "Select the newly generated certificate and press continue."
msgstr "选择新生成的证书并按继续。"

#: ../pro/eidauthenticate.rst.inc:45
msgid "All checks should succeed. Press continue."
msgstr "所有检查都应该成功。按继续。"

#: ../pro/eidauthenticate.rst.inc:52
msgid "Enter the password of your user account."
msgstr "输入你的用户账户的密码。"

#: ../pro/eidauthenticate.rst.inc:59
msgid "Enter the user PIN which you defined previously in step 4."
msgstr "输入你之前在步骤4中定义的用户密码。"

#: ../pro/eidauthenticate.rst.inc:66
msgid "The final screen may look like this."
msgstr "最后的屏幕可能看起来像这样。"

#: ../pro/eidauthenticate.rst.inc:73
msgid ""
"You may perform further configurations such as activate the force smart "
"card policy or automatically lock the computer when removing the Nitrokey"
" (by using EIDConfigurationWizardElevated.exe)."
msgstr "你可以进行进一步的配置，如激活强制智能卡策略或在移除Nitrokey时自动锁定电脑（通过使用EIDConfigurationWizardElevated.exe）。"

#: ../pro/windows/index.rst:2
msgid "Nitrokey Pro, Windows"
msgstr "Nitrokey Pro, Windows"

#: ../pro/windows/index.rst:16
msgid ""
"Connect your Nitrokey to your computer and confirm all dialogs so that "
"the USB smart card device driver gets installed almost automatically. "
"Windows may fail to install an additional device driver for the smart "
"card. Its safe to ignore this warning."
msgstr "将你的Nitrokey连接到电脑上，并确认所有的对话框，这样USB智能卡设备驱动程序就几乎自动安装了。Windows可能无法为智能卡安装一个额外的设备驱动程序。忽略这个警告是安全的。"

#: ../pro/windows/index.rst:20 ../storage/linux/index.rst:17
msgid ""
"Download and start the `Nitrokey App "
"<https://www.nitrokey.com/download>`__."
msgstr "下载并启动`Nitrokey App <https://www.nitrokey.com/download>`__。"

#: ../pro/windows/index.rst:22
msgid ""
"Go to “Menu” -> “Configure” to change the User PIN (default: 123456) and "
"Admin PIN (default: 12345678) to your own choices."
msgstr "进入 \"菜单\"-> \"配置\"，将用户密码（默认：123456）和管理员密码（默认：12345678）改为自己的选择。"

#: ../pro/windows/openvpn-easyrsa.rst:15
msgid ""
"To sign the certificates, we will use a `Nitrokey HSM 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__ set"
" up as `Certificate Authority <../../hsm/windows/certificate-"
"authority.html#creating-the-intermediate-certificate-authority>`_, "
"however this guide does not cover the set up of the CA itself (it is "
"clear and `well documented here <../../hsm/windows/certificate-"
"authority.html#sign-a-server-certificate>`_)."
msgstr ""
"为了签署证书，我们将使用`Nitrokey HSM 2 <https://shop.nitrokey.com/shop/product/nk-"
"pro-2-nitrokey-pro-2-3>`__设置为`认证机构 <../../hsm/windows/certificate-"
"authority.html#creating-the-intermediate-certificate-"
"authority>`_。然而，本指南并不包括CA本身的设置（它很清楚，并且`这里有很好的记录<../../hsm/windows"
"/certificate-authority.html#sign-a-server-certificate>`_）。"

#: ../pro/windows/openvpn-easyrsa.rst:607
msgid "Configure OpenVPN"
msgstr "配置 OpenVPN"

#: ../pro/windows/openvpn-easyrsa.rst:609
msgid ""
"In order to establish a handshake, you must configure OpenSSL included in"
" OpenVPN."
msgstr "要建立握手，必须配置 OpenVPN 中的 OpenSSL。"

#: ../pro/windows/openvpn-easyrsa.rst:611
msgid ""
"Create the directory ``ssl`` in ``C:\\Program Files\\OpenVPN`` and create"
" file ``openssl.cnf`` with the following content :"
msgstr "在``C:\\Program Files\\OpenVPN`` 中创建``ssl`` 目录，并创建内容如下的文件``openssl.cnf`` ："

#: ../pro/windows/openvpn-easyrsa.rst:613
msgid "openssl_conf = default_conf"
msgstr "openssl_conf = default_conf"

#: ../pro/windows/openvpn-easyrsa.rst:615
msgid "[ default_conf ] ssl_conf = ssl_sect"
msgstr "[ 默认配置 ] ssl_conf = ssl_sect"

#: ../pro/windows/openvpn-easyrsa.rst:618
msgid "[ ssl_sect ] system_default = ssl_default_sect"
msgstr "[ ssl_sect ] system_default = ssl_default_sect"

#: ../pro/windows/openvpn-easyrsa.rst:621
msgid ""
"[ ssl_default_sect ] SignatureAlgorithms = "
"RSA+SHA512:ECDSA+SHA512:RSA+SHA384:ECDSA+SHA384:RSA+SHA256:ECDSA+SHA256 "
"MaxProtocol = TLSv1.2 MinProtocol = TLSv1.2"
msgstr ""
"[ ssl_default_sect ] SignatureAlgorithms = "
"RSA+SHA512:ECDSA+SHA512:RSA+SHA384:ECDSA+SHA384:RSA+SHA256:ECDSA+SHA256 "
"MaxProtocol = TLSv1.2 MinProtocol = TLSv1.2"

#: ../pro/windows/openvpn-easyrsa.rst:627
msgid ""
"With this modification, you will not have error as reported `here "
"<https://support.nitrokey.com/t/nitrokey-pro-with-openssl-1-1-1-tls-1-3"
"-and-rsa-based-certificates/2180/2>`__, `here "
"<https://support.nitrokey.com/t/openvpn-openssl-error-141f0006/2637>`__ "
"and `here <https://community.openvpn.net/openvpn/ticket/1215>`__"
msgstr ""
"作此修改后，就不会出现`here<https://support.nitrokey.com/t/nitrokey-pro-with-"
"openssl-1-1-1-tls-1-3-and-rsa-based-"
"certificates/2180/2>`__、`here<https://support.nitrokey.com/t/openvpn-"
"openssl-error-"
"141f0006/2637>`__和`here<https://community.openvpn.net/openvpn/ticket/1215>`__报告的错误。"

#: ../pro/windows/openvpn-viscosity.rst:6
msgid "Viscosity Client Configuration with OpenVPN"
msgstr "使用OpenVPN的Viscosity客户端配置"

#: ../pro/windows/openvpn-viscosity.rst:10
msgid ""
"This guide will show to configure `Viscosity client "
"<https://www.sparklabs.com/viscosity/>`__ to connect to an OpenVPN "
"instance, using a `Nitrokey Pro 2 <https://shop.nitrokey.com/shop/product"
"/nk-pro-2-nitrokey-pro-2-3>`__ (or `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`__), and "
"`PKCS#11 authentication <https://openvpn.net/community-resources/how-to"
"/#what-is-pkcs11>`__."
msgstr ""
"本指南将展示如何配置`Viscosity客户端<https://www.sparklabs.com/viscosity/>`__以连接到OpenVPN实例。使用`Nitrokey"
" Pro 2 <https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-"
"pro-2-3>`__（或 `Nitrokey Storage 2 <https://shop.nitrokey.com/shop/product"
"/nitrokey-storage-2-56>`__）。和`PKCS#11认证<https://openvpn.net/community-"
"resources/how-to/#what-is-pkcs11>`__。"

#: ../pro/windows/openvpn-viscosity.rst:17
msgid ""
"For this guide, you will need an OpenVPN remote server installed and "
"configured for clients. For the purpose of this document, we have used "
"OpenVPN 2.49 installed on a Debian 10 server."
msgstr ""
"在本指南中，你将需要一个为客户安装和配置的OpenVPN远程服务器。在本文件中，我们使用了安装在Debian 10服务器上的OpenVPN "
"2.49。"

#: ../pro/windows/openvpn-viscosity.rst:19
msgid ""
"To read about how to configure OpenVPN to authenticate with Nitrokey Pro,"
" you might consult the following `documentation <openvpn-easyrsa.html>`_,"
" as we will just cover the way to configure the Viscosity client in this "
"guide."
msgstr ""
"要阅读关于如何配置OpenVPN来验证Nitrokey Pro，你可以参考以下`文档<openvpn-"
"easyrsa.html>`_，因为我们在本指南中只涉及配置Visuality客户端的方法。"

#: ../pro/windows/openvpn-viscosity.rst:21
msgid "You will also need the following:"
msgstr "你还将需要以下东西。"

#: ../pro/windows/openvpn-viscosity.rst:23
msgid "A Nitrokey Pro 2 or Nitrokey Storage 2"
msgstr "一个Nitrokey Pro 2或Nitrokey Storage 2"

#: ../pro/windows/openvpn-viscosity.rst:25
msgid "Client’s private key ``client.key`` loaded on the Nitrokey"
msgstr "客户的私钥 ``client.key``加载在Nitrokey上。"

#: ../pro/windows/openvpn-viscosity.rst:27
msgid "Client’s certificate ``client.crt`` loaded on the Nitrokey"
msgstr "客户的证书 ``client.crt``加载到Nitrokey上。"

#: ../pro/windows/openvpn-viscosity.rst:29
msgid ""
"The Certificate Authority file, i.e. ``CA.crt`` file used for your "
"OpenVPN setup"
msgstr "证书授权文件，即``CA.crt``文件用于你的OpenVPN设置。"

#: ../pro/windows/openvpn-viscosity.rst:32
msgid "Optional: The shared secret key file, i.e. ``ta.key``"
msgstr "可选的。共享秘钥文件，即``ta.key``。"

#: ../pro/windows/openvpn-viscosity.rst:34
msgid ""
"For more information on ``PKCS#11`` key management with OpenVPN, please "
"consult OpenVPN’s `documentation. <https://openvpn.net/community-"
"resources/how-to/>`__"
msgstr ""
"关于``PKCS#11``用OpenVPN进行密钥管理的更多信息，请参考OpenVPN的`文档。<https://openvpn.net"
"/community-resources/how-to/>`__。"

#: ../pro/windows/openvpn-viscosity.rst:39
msgid ""
"Start Viscosity and create a new connection “openVPN” (you can name it as"
" you wish)"
msgstr "启动Viscosity并创建一个新的连接 \"openVPN\"（你可以随心所欲地命名它）"

#: ../pro/windows/openvpn-viscosity.rst:46
msgid "Right click on the connection and click edit"
msgstr "在连接上点击右键并点击编辑"

#: ../pro/windows/openvpn-viscosity.rst:52
msgid ""
"Add your server’s IP address and configure the port according to your "
"configuration."
msgstr "添加你的服务器的IP地址，并根据你的配置来配置端口。"

#: ../pro/windows/openvpn-viscosity.rst:55
msgid ""
"Under authentication, In ``Type`` scroll down to ``SSL/TLS Client "
"(PKCS11)``"
msgstr "在认证下，在``Type`向下滚动到``SSL/TLS Client (PKCS11)``。"

#: ../pro/windows/openvpn-viscosity.rst:58
msgid "Select the CA file for your connection"
msgstr "为你的连接选择CA文件"

#: ../pro/windows/openvpn-viscosity.rst:60
msgid "Optional: Select the ``ta.key`` in the ``TLS-Auth`` section"
msgstr "可选的。选择``ta.key``在``TLS-Auth``部分。"

#: ../pro/windows/openvpn-viscosity.rst:66
msgid ""
"Click the Add button next to the Providers field and select the "
"``PKCS#11`` module for your Nitrokey. Multiple providers can be "
"specified, and for instance we will use ``OpenSC``."
msgstr "点击供应商字段旁边的添加按钮，选择``PKCS#11``模块作为你的Nitrokey。可以指定多个供应商，例如，我们将使用``OpenSC``。"

#: ../pro/windows/openvpn-viscosity.rst:70
msgid ""
"On macOS, the most common location for modules to be found is in the "
"/usr/lib directory. Please refer to the documentation included with your "
"driver software for the location to use. OpenSC’s module can be found at "
"``/Library/OpenSC/lib/opensc-pkcs11.so``"
msgstr ""
"在macOS上，找到模块的最常见位置是/usr/lib目录。关于使用的位置，请参考你的驱动软件附带的文档。OpenSC的模块可以在``/Library/OpenSC/lib"
"/opensc-pkcs11.so``找到。"

#: ../pro/windows/openvpn-viscosity.rst:73
msgid ""
"On Windows, the most common location for libraries is either in "
"``C:\\Program Files`` or ``C:\\Windows\\System32``. OpenSC libraries are "
"generally located at ``C:\\Program Files\\OpenSC "
"Project\\OpenSC\\pkcs11``. There may be more than one library available "
"here, you can try each one or simply add both."
msgstr ""
"在Windows上，库的最常见位置是在``C:\\Program "
"Files`或者``C:\\Windows\\System32```。OpenSC库通常位于``C:\\Program Files\\OpenSC"
" Project\\OpenSC\\pkcs11``。这里可能有不止一个库可用，你可以尝试每一个，或者干脆把两个库都加进去。"

#: ../pro/windows/openvpn-viscosity.rst:75
msgid "Choose a retrieval method from the Retrieval drop down menu"
msgstr "从检索的下拉菜单中选择一种检索方法"

#: ../pro/windows/openvpn-viscosity.rst:80
msgid ""
"If only one Nitrokey will ever be used on this computer, select ``Use "
"certificate name below``. If the Nitrokey is currently connected to the "
"computer, click the ``Detect`` button for Viscosity to automatically fill"
" in the Name field. Otherwise this field can be completed manually."
msgstr ""
"如果这台电脑上只使用一个硝基钥匙，请选择``Use certificate name "
"below``。如果硝基钥匙目前已经连接到电脑上，点击``Detect``按钮，让粘度自动填入名称栏。否则这个字段可以手动完成。"

#: ../pro/windows/openvpn-viscosity.rst:86
msgid ""
"If in doubt, or if more than one Nitrokey may be used (i.e. multiple "
"users), then select ``Prompt for certificate name``."
msgstr "如果有疑问，或者如果可能使用一个以上的硝基钥匙（即多个用户），那么选择``Prompt for certificate name``。"

#: ../pro/windows/openvpn-viscosity.rst:89
msgid ""
"If ``Prompt for certificate name`` was selected, Viscosity will "
"automatically detect the required key on the Nitrokey, using the "
"specified PKCS#11 module/s. Select from any of the found devices, or "
"enter the name of the ``serialized id`` to use manually. Again, the user "
"should be prompted for a password/PIN if required."
msgstr ""
"如果``Prompt for certificate "
"name``被选中，Viscosity将自动检测Nitrokey上所需的密钥，使用指定的PKCS#11模块/s。从发现的任何设备中选择，或者输入``serialized"
" id``的名称来手动使用。同样，如果需要，应该提示用户输入密码/PIN。"

#: ../pro/windows/openvpn-viscosity.rst:91
msgid "Click the Save button and connect from your the main interface"
msgstr "点击 \"保存 \"按钮，从主界面连接。"

#: ../pro/windows/openvpn-viscosity.rst:96
msgid ""
"`Using Tokens/Smartcards (PKCS#11) "
"<https://www.sparklabs.com/support/kb/article/using-tokens-smartcards-"
"pkcs-11/>`__"
msgstr ""
"`使用令牌/智能卡（PKCS#11） <https://www.sparklabs.com/support/kb/article/using-"
"tokens-smartcards-pkcs-11/>`__。"

#: ../pro/windows/openvpn-viscosity.rst:99
msgid "`OpenVPN How-To <https://openvpn.net/community-resources/how-to/>`__"
msgstr "`OpenVPN How-To <https://openvpn.net/community-resources/how-to/>`__。"

#: ../pro/windows/openvpn-viscosity.rst:102
msgid "Notes"
msgstr "笔记"

#: ../pro/windows/openvpn-viscosity.rst:104
msgid ""
"Viscosity is not free, and thus you might run into issues in using the "
"free version."
msgstr "Viscosity不是免费的，因此你在使用免费版本时可能会遇到问题。"

#: ../pro/windows/openvpn-viscosity.rst:107
msgid ""
"We are considering the usage of `Pritunl <https://client.pritunl.com/>`__"
" as a free and open alternative."
msgstr "我们正在考虑使用`Pritunl <https://client.pritunl.com/>`__作为一个免费和开放的替代方案。"

#: ../pro/putty.rst.inc:2
msgid "PuTTY"
msgstr "浦发银行"

#: ../pro/putty.rst.inc:6
msgid ""
"This mini-howto assumes that the Nitrokey has been initialized and "
"contains cryptographic keys."
msgstr "本小手册假设Nitrokey已经被初始化并包含了加密密钥。"

#: ../pro/putty.rst.inc:8
msgid "**Required on the client side:**"
msgstr "**在客户端需要：**。"

#: ../pro/putty.rst.inc:10
msgid ""
"`PuTTY "
"<https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html>`__ or a "
"variant of it"
msgstr ""
"`PuTTY "
"<https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html>`__或它的一个变体"

#: ../pro/putty.rst.inc:13
msgid ""
"`GPG4Win <https://gpg4win.org/>`__ or `pageant.exe <https://smartcard-"
"auth.de/download-de.html>`__ with Smartcard support from Dr. Peter Koch"
msgstr ""
"`GPG4Win <https://gpg4win.org/>`__或 `pageant.exe <https://smartcard-"
"auth.de/download-de.html>`__，Peter Koch博士提供智能卡支持。"

#: ../pro/putty.rst.inc:17
msgid ""
"Optional: `OpenPGP Minidriver "
"<https://wald.intevation.org/frs/?group_id=49&release_id=353>`__"
msgstr ""
"可选的。`OpenPGP Minidriver "
"<https://wald.intevation.org/frs/?group_id=49&release_id=353>`__。"

#: ../pro/putty.rst.inc:20
msgid "**1) Pageant**"
msgstr "**1)选美**"

#: ../pro/putty.rst.inc:22
msgid ""
"start pageant.exe. That this is running is shown in the notification area"
" of the taskbar."
msgstr "启动pageant.exe。该程序正在运行，并显示在任务栏的通知区域。"

#: ../pro/putty.rst.inc:29
msgid "A double click opens the view of the current keys."
msgstr "双击可以打开当前按键的视图。"

#: ../pro/putty.rst.inc:36
msgid "After inserting the key it looks like this."
msgstr "插入钥匙后，它看起来像这样。"

#: ../pro/putty.rst.inc:43
msgid ""
"If nothing is displayed here, pageant may have to be restarted or another"
" application is already using the stick. A possibly running pgp-agent "
"must be terminated! Now we only need the public key we want to store in "
"the ssh configuration of the server. Therefore we press CTRL while "
"inserting the stick…"
msgstr ""
"如果这里没有显示，pageant可能需要重新启动，或者其他应用程序已经在使用这个棍子。一个可能正在运行的pgp-"
"agent必须被终止!现在我们只需要将公钥储存在服务器的ssh配置中。因此，我们在插入棍子的同时按CTRL键…"

#: ../pro/putty.rst.inc:50
msgid "and then view the Pageant-PublicKeys.txt."
msgstr "然后查看Pageant-PublicKeys.txt。"

#: ../pro/putty.rst.inc:57
msgid ""
"I searched for the ssh-rsa entry of the auth key and added the line on "
"the server to the authorized_keys."
msgstr "我搜索了auth钥匙的ssh-rsa条目，并在服务器上把这一行添加到authorized_keys中。"

#: ../pro/putty.rst.inc:59
msgid "**2) PuTTY**"
msgstr "**2)PuTTY**"

#: ../pro/putty.rst.inc:61
msgid "There is surprisingly little to say about PuTTY itself."
msgstr "关于PuTTY本身，令人惊讶的是没有什么可说的。"

#: ../pro/putty.rst.inc:68
msgid ""
"“Attempt authentication using Pageant” must be set, which is the default "
"anyway."
msgstr "必须设置 \"尝试使用Pageant认证\"，反正这是默认的。"

#: ../pro/putty.rst.inc:70
msgid ""
"That’s it, as soon as you connect to the server while pageant is running "
"and you have the keys, you will be asked for the password of the Crypto-"
"Stick and can log in."
msgstr "就这样，只要你在选美比赛进行时连接到服务器，并且你有钥匙，你就会被要求提供Crypto-Stick的密码并可以登录。"

#: ../pro/putty.rst.inc:72
msgid "**3) openpgp-minidriver (optional)**"
msgstr "**3) openpgp-minidriver（可选）**"

#: ../pro/putty.rst.inc:74
msgid ""
"If you are annoyed that Windows reports every time you plug in the stick "
"that no driver could be found for “Smartcard”, you can get rid of it. You"
" just have to install the x86 or x64 version of the above mentioned "
"driver and the smartcard looks like this:"
msgstr ""
"如果你对Windows在你每次插入记忆棒时报告说找不到 \"智能卡 "
"\"的驱动程序感到恼火，你可以摆脱它。你只需安装上述驱动程序的x86或x64版本，智能卡就会变成这样。"

#: ../software/nitropy/all-platforms/index.rst:2
msgid "nitropy Documentation For All Platforms"
msgstr "适用于所有平台的Nitropy文档"

#: ../software/nitropy/all-platforms/installation.rst:2
msgid "Installing nitropy With pipx"
msgstr "用pipx安装nitropy"

#: ../software/nitropy/all-platforms/installation.rst:4
msgid ""
"This guide explains how to install nitropy with `pipx "
"<https://pypa.github.io/pipx/>`__. pipx creates a virtual environment for"
" nitropy. This means that nitropy and its dependencies don’t conflict "
"with other packages installed on your system."
msgstr ""
"本指南解释了如何用`pipx <https://pypa.github.io/pipx/>`__安装nitropy。 "
"pipx为nitropy创建一个虚拟环境。这意味着nitropy和它的依赖项不会与你系统上安装的其他软件包冲突。"

#: ../software/nitropy/all-platforms/installation.rst:8
msgid ""
"**For Windows users:** Windows support is still experimental -- please "
"use with caution. You can also use pre-compiled binaries or a MSI "
"installer, see :doc:`../windows/installation`."
msgstr ""
"**对于Windows用户：**Windows支持仍然是试验性的 -- "
"请谨慎使用。你也可以使用预编译的二进制文件或MSI安装程序，见:doc:`./windows/installation`。"

#: ../software/nitropy/all-platforms/installation.rst:11
msgid "Installation on Linux"
msgstr "在 Linux 上安装"

#: ../software/nitropy/all-platforms/installation.rst:14
msgid "Ubuntu, Debian"
msgstr "Ubuntu, Debian"

#: ../software/nitropy/all-platforms/installation.rst:15
#: ../software/nitropy/all-platforms/installation.rst:23
msgid ""
"You can install nitropy along with all other required dependencies by "
"using::"
msgstr "您可以使用: 来安装 nitropy 和所有其他所需的依赖项："

#: ../software/nitropy/all-platforms/installation.rst:19
#: ../software/nitropy/all-platforms/installation.rst:31
msgid ""
"After logging out or restarting your system, nitropy will now be "
"available."
msgstr "注销或重启系统后，即可使用硝化甘油。"

#: ../software/nitropy/all-platforms/installation.rst:22
msgid "Arch"
msgstr "拱门"

#: ../software/nitropy/all-platforms/installation.rst:27
msgid "If you have already installed Python on your system, you can simply run::"
msgstr "如果系统中已经安装了 Python，则只需运行：："

#: ../software/nitropy/all-platforms/installation.rst:35
msgid "Installation on other distributions/operating systems"
msgstr "安装在其他配电/操作系统上"

#: ../software/nitropy/all-platforms/installation.rst:41
msgid "Python 3.9, 3.10 or 3.11"
msgstr "Python 3.9、3.10 或 3.11"

#: ../software/nitropy/all-platforms/installation.rst:42
msgid ""
"Python is already installed on most macOS and Linux systems or can be "
"downloaded from `python.org <https://python.org>`__. See the `Downloading"
" Python Guide <https://wiki.python.org/moin/BeginnersGuide/Download>`__ "
"for more information."
msgstr ""
"Python 已经安装在大多数 macOS 和 Linux 系统上，或者可以从 `python.org "
"<https://python.org>`__下载。请参阅 `下载 Python 指南 "
"<https://wiki.python.org/moin/BeginnersGuide/Download>`__ 了解更多信息。"

#: ../software/nitropy/all-platforms/installation.rst:45
msgid "pip"
msgstr "琵琶"

#: ../software/nitropy/all-platforms/installation.rst:46
msgid ""
"You can install pip with your system package manager or with ``python3 -m"
" ensurepip``. See the `pip Installation Guide "
"<https://pip.pypa.io/en/stable/installation/>`__ for more information."
msgstr ""
"你可以用你的系统软件包管理器或用``python3 -m "
"ensurepip``安装pip。请参阅`pip安装指南<https://pip.pypa.io/en/stable/installation/>`__了解更多信息。"

#: ../software/nitropy/all-platforms/installation.rst:49
msgid "pipx"
msgstr "琵琶网"

#: ../software/nitropy/all-platforms/installation.rst:50
msgid "Before installing nitropy, you have to install and configure pipx::"
msgstr "在安装nitropy之前，你必须安装和配置pipx：。"

#: ../software/nitropy/all-platforms/installation.rst:55
msgid ""
"See the `pipx Installation Guide <https://pipx.pypa.io/stable/>`__ for "
"more information."
msgstr "更多信息，请参见`pipx 安装指南<https://pipx.pypa.io/stable/>`__。"

#: ../software/nitropy/all-platforms/installation.rst:58
msgid ""
"**For Linux Users** - currently a transient dependency (``oscrypto``) is "
"generating issues on some Linux distrubutions. The respective `GitHub "
"issue "
"<https://github.com/Nitrokey/pynitrokey/issues/431#issuecomment-1937704327>`__"
" documents the currently needed workaround::"
msgstr ""
"**对于 Linux 用户** - 目前，一个短暂的依赖关系 (``oscrypto``) 在某些 Linux 发行版上产生了问题。`GitHub"
" "
"issue<https://github.com/Nitrokey/pynitrokey/issues/431#issuecomment-1937704327>`__"
" 记录了当前需要的解决方法：："

#: ../software/nitropy/all-platforms/installation.rst:68
msgid "Now you can install nitropy from the pynitrokey package::"
msgstr "现在你可以从pynitrokey软件包中安装nitropy：。"

#: ../software/nitropy/all-platforms/installation.rst:73
msgid "nitropy is now available in your path::"
msgstr "nitropy现在可以在你的路径：。"

#: ../software/nitropy/all-platforms/installation.rst:78
msgid "Upgrade"
msgstr "升级"

#: ../software/nitropy/all-platforms/installation.rst:80
msgid "You can upgrade the package with the following command::"
msgstr "你可以用以下命令升级该软件包：。"

#: ../software/nitropy/all-platforms/installation.rst:87
msgid ""
"If you encounter problems, please make sure that you use the latest "
"version by comparing the output of ``nitropy version`` with the `release "
"list <https://github.com/Nitrokey/pynitrokey/releases>`_ on GitHub.  If "
"an upgrade does not install the latest version, you might be running into"
" one of the following problems."
msgstr ""
"如果你遇到问题，请通过比较``nitropy version``和GitHub上的`release list "
"<https://github.com/Nitrokey/pynitrokey/releases>`_的输出来确保你使用了最新版本。  "
"如果升级没有安装最新版本，你可能遇到了以下问题。"

#: ../software/nitropy/all-platforms/installation.rst:90
msgid "Wrong Python Version"
msgstr "错误的Python版本"

#: ../software/nitropy/all-platforms/installation.rst:92
msgid ""
"nitropy requires Python 3.9 or 3.10.  If your default Python installation"
" is older or newer than that and cannot be updated, you have to "
"additionally install Python 3.9 and specify the name of its Python "
"executable when calling pipx, for example::"
msgstr ""
"nitropy需要Python 3.9或3.10。  如果你的默认Python安装是旧的或新的，无法更新，你必须额外安装Python "
"3.9，并在调用pipx时指定其Python可执行文件的名称，例如：。"

#: ../software/nitropy/all-platforms/installation.rst:97
msgid "Arm Not Supported"
msgstr "不支持手臂"

#: ../software/nitropy/all-platforms/installation.rst:99
msgid ""
"Currently, recent nitropy versions cannot be installed on Arm platforms "
"due to a dependency issue (`GitHub issue "
"<https://github.com/Nitrokey/pynitrokey/issues/265>`__).  As a "
"workaround, you can use an x86 Python installation in a Rosetta terminal "
"as described in `this discussion "
"<https://stackoverflow.com/questions/71691598/how-to-run-python-as-x86"
"-with-rosetta2-on-arm-macos-machine>`_)."
msgstr ""
"目前，由于依赖性问题，最近的 nitropy 版本无法在 Arm 平台上安装 (`GitHub "
"issue<https://github.com/Nitrokey/pynitrokey/issues/265>`__)。  "
"作为一种变通办法，您可以在 Rosetta 终端中使用 x86 Python "
"安装，如`本讨论<https://stackoverflow.com/questions/71691598/how-to-run-python-"
"as-x86-with-rosetta2-on-arm-macos-machine>`_ 中所述。）"

#: ../software/nitropy/all-platforms/installation.rst:102
msgid "libusb-1.0.dylib not found"
msgstr "未找到 libusb-1.0.dylib"

#: ../software/nitropy/all-platforms/installation.rst:104
msgid ""
"When running nitropy on macOS, you might see an error message indicating "
"a missing libusb-1.0.dylib file.  This can be fixed by manually "
"installing libusb, e. g. with homebrew::"
msgstr ""
"在macOS上运行nitropy时，你可能会看到一个错误信息，表明缺少libusb-1.0.dylib文件。  "
"这可以通过手动安装libusb来解决，比如用homebrew::"

#: ../software/nitropy/all-platforms/installation.rst:109
msgid "Usage Notes"
msgstr "使用说明"

#: ../software/nitropy/all-platforms/installation.rst:112
#: ../software/nitropy/index.rst:6
msgid "All Platforms"
msgstr "所有平台"

#: ../software/nitropy/all-platforms/installation.rst:114
msgid ""
"If you want to use nitropy with a Nitrokey Pro or Nitrokey Storage "
"device, you also have to install `libnitrokey "
"<https://github.com/Nitrokey/libnitrokey>`__."
msgstr ""
"如果你想用Nitrokey Pro或Nitrokey存储设备使用nitropy，你还必须安装`libnitrokey "
"<https://github.com/Nitrokey/libnitrokey>`__。"

#: ../software/nitropy/all-platforms/installation.rst:119
msgid "Windows support is still experimental -- please use with caution."
msgstr "对Windows的支持仍然是试验性的 -- 请谨慎使用。"

#: ../software/nitropy/all-platforms/installation.rst:121
msgid ""
"You might have to run nitropy with administrator rights to be able to "
"connect to a device."
msgstr "你可能必须以管理员权限运行nitropy，才能连接到设备。"

#: ../software/nitropy/all-platforms/installation.rst:126
msgid ""
"On Linux systems, you also need the Nitrokey udev rules. These are "
"shipped with `libnitrokey <https://github.com/Nitrokey/libnitrokey>`__. "
"Alternatively, you can install them manually::"
msgstr ""
"在Linux系统上，你还需要Nitrokey的udev规则。这些规则与`libnitrokey "
"<https://github.com/Nitrokey/libnitrokey>`__一起提供。另外，你也可以手动安装它们：。"

#: ../software/nitropy/all-platforms/installation.rst:131
msgid "See :doc:`../linux/udev` for more information."
msgstr "更多信息见:doc:`.../linux/udev`。"

#: ../software/nitropy/all-platforms/installation.rst:134
msgid "Next Steps"
msgstr "接下来的步骤"

#: ../software/nitropy/all-platforms/installation.rst:136
msgid "You can find more information on using nitropy in these guides:"
msgstr "你可以在这些指南中找到更多关于使用nitropy的信息。"

#: ../software/nitropy/all-platforms/installation.rst:138
msgid "For Linux: :doc:`../../../nitrokey3/linux/firmware-update`"
msgstr "对于Linux： :doc:`./././nitrokey3/linux/firmware-update`。"

#: ../software/nitropy/all-platforms/installation.rst:139
msgid "For Mac: :doc:`../../../nitrokey3/mac/firmware-update`"
msgstr "对于Mac： :doc:`./././nitrokey3/mac/firmware-update`。"

#: ../software/nitropy/all-platforms/installation.rst:140
msgid "For Windows: :doc:`../../../nitrokey3/windows/firmware-update`"
msgstr "对于Windows： :doc:`./././nitrokey3/windows/firmware-update`。"

#: ../software/nitropy/all-platforms/test.rst:2
msgid "Test Nitrokey 3"
msgstr "测试 Nitrokey 3"

#: ../software/nitropy/all-platforms/test.rst:4
msgid "This guide describes how to test the Nitrokey 3."
msgstr "本指南介绍如何测试 Nitrokey 3。"

#: ../software/nitropy/all-platforms/test.rst:8
msgid "Run ``nitropy nk3 test`` this will launch several tests over your key."
msgstr "运行``nitropy nk3 test``，这将在你的密钥上启动多个测试。"

#: ../software/nitropy/all-platforms/test.rst:9
msgid "During the test, when asked touch the key."
msgstr "在测试过程中，如有要求，请触摸按键。"

#: ../software/nitropy/all-platforms/test.rst:11
msgid "This is an example of a working key::"
msgstr "这是一个工作密钥的示例：："

#: ../software/nitropy/index.rst:4
msgid ""
"**nitropy** is a command-line interface for the Nitrokey FIDO2, Nitrokey "
"Start, Nitrokey 3 and NetHSM."
msgstr "**nitropy**是一个用于Nitrokey FIDO2、Nitrokey Start、Nitrokey 3和NetHSM的命令行接口。"

#: ../software/nitropy/linux/index.rst:2
msgid "nitropy Documentation For Linux"
msgstr "nitropy的Linux文档"

#: ../software/nitropy/linux/udev.rst:2
msgid "Setting up The udev Rules"
msgstr "设置 udev 规则"

#: ../software/nitropy/linux/udev.rst:4
msgid ""
"To be able to access your devices without root privileges, nitropy "
"requires the Nitrokey udev rules. If they are not shipped with your "
"distribution, you can install the rules manually::"
msgstr "要在没有 root 权限的情况下访问设备，nitropy 需要 Nitrokey udev 规则。如果您的发行版中没有这些规则，可以手动安装：："

#: ../software/nitropy/linux/udev.rst:11
msgid ""
"The legacy rules are also shipped with `libnitrokey "
"<https://github.com/Nitrokey/libnitrokey>`__."
msgstr "传统规则也随`libnitrokey<https://github.com/Nitrokey/libnitrokey>`__一起发布。"

#: ../software/nitropy/linux/udev.rst:14
msgid ""
"You most likely want to change the owner and the permissions of this "
"file::"
msgstr "您很可能需要更改该文件的所有者和权限：："

#: ../software/nitropy/linux/udev.rst:19
msgid "After installing the rules, you need to reload them::"
msgstr "安装完规则后，你需要重新加载它们：。"

#: ../software/nitropy/linux/udev.rst:23
msgid ""
"If you still cannot access your device, try again after rebooting your "
"system. If you encouter issues, look at this `github comment "
"<https://github.com/Nitrokey/pynitrokey/issues/167#issuecomment-1024921046>`__"
" for some debugging hints."
msgstr ""
"如果仍无法访问设备，请重启系统后再试一次。如果遇到问题，请查看`github "
"评论<https://github.com/Nitrokey/pynitrokey/issues/167#issuecomment-1024921046>`__"
" 以获得一些调试提示。"

#: ../software/nitropy/windows/index.rst:2
msgid "nitropy Documentation For Windows"
msgstr "硝烟弥漫的Windows文档"

#: ../software/nitropy/windows/installation.rst:2
msgid "Installing nitropy on Windows"
msgstr "在Windows上安装nitropy"

#: ../software/nitropy/windows/installation.rst:5
msgid ""
"Generally Windows support and the installer are experimental - please use"
" with caution."
msgstr "一般来说，Windows支持和安装程序是实验性的--请谨慎使用。"

#: ../software/nitropy/windows/installation.rst:8
msgid ""
"If you already use Python on your system and are familiar with the "
"command prompt, you can alternatively install nitropy with pipx, see :doc"
":`../all-platforms/installation`."
msgstr ""
"如果你已经在你的系统上使用了Python并且熟悉命令提示符，你也可以用pipx来安装nitropy，参见:doc:`.../all-"
"platforms/installation`。"

#: ../software/nitropy/windows/installation.rst:11
msgid "How to Install"
msgstr "如何安装"

#: ../software/nitropy/windows/installation.rst:13
msgid ""
"Download the latest ``.exe`` file from `releases "
"<https://github.com/Nitrokey/pynitrokey/releases/>`__."
msgstr ""
"从`releases "
"<https://github.com/Nitrokey/pynitrokey/releases/>`__下载最新的``.exe`` 文件。"

#: ../software/nitropy/windows/installation.rst:14
msgid ""
"Open the command console in the administrator mode (Windows 10: press the"
" right mouse button on the Menu Start and select \"Windows PowerShell "
"(Admin)\" from the menu)."
msgstr "在管理员模式下打开命令控制台（Windows 10：在开始菜单上按下鼠标右键，从菜单中选择\"Windows PowerShell（管理员）\"）。"

#: ../software/nitropy/windows/installation.rst:15
msgid ""
"Change to the directoy of the ``.exe`` (something like ``cd "
"C:\\Users\\YOURUSER\\Downloads``)"
msgstr "改为``.exe``（类似``cd C:\\Users\\YOURUSER\\Downloads``）的指令。"

#: ../software/nitropy/windows/installation.rst:16
msgid "Execute ``nitropy-VERSION.exe``"
msgstr "执行 ``nitropy-VERSION.exe``"

#: ../software/nitropy/windows/installation.rst:19
msgid ""
"If you're using Microsoft Edge, the downloaded ``.exe`` might be marked "
"as \"untrused\" by Windows. To mark it as trusted anyway, click the three"
" dot on the right of the warning, then \"keep\", then \"show more\" and "
"finally \"keep anyway\"."
msgstr ""
"如果你使用Microsoft Edge，下载的``.exe``可能被Windows标记为\"untrused\" "
"。要把它标记为可信任的，点击警告右边的三个点，然后是\"保留\"，然后是\"显示更多\"，最后是\"保留\"。"

#: ../software/nitropy/windows/installation.rst
msgid "The warning displayed by Edge"
msgstr "Edge所显示的警告"

#: ../software/nitropy/windows/installation.rst
msgid "The keep anyway button"
msgstr "无论如何都要保持的按钮"

#: ../software/nitropy/windows/installation.rst:28
msgid ""
"Without administrator privileges nitropy might not be able to communicate"
" to the device."
msgstr "没有管理员权限，nitropy可能无法与设备通信。"

#: ../software/nitropy/windows/installation.rst:33
msgid ""
"Support for Nitrokey Start under Windows 10 is not working without "
"installing libusb libraries (to be described)"
msgstr "在不安装libusb库的情况下，对Windows 10下的Nitrokey Start的支持无法正常工作（待说明）。"

#: ../software/nitropy/windows/installation.rst:34
msgid ""
"The installer does not remove a previous installation (manually remove it"
" using settings -> programs and apps)"
msgstr "安装程序没有删除之前的安装（使用设置->程序和应用程序手动删除）。"

#: ../software/nk-app2/index.rst:2
msgid "Nitrokey App 2"
msgstr "硝基钥匙应用程序2"

#: ../software/nk-app2/index.rst:3
msgid ""
"Nitrokey App 2 is the graphical application for Nitrokey 3 devices. For "
"Nitrokey Pro and Nitrokey Storage, use `Nitrokey App 1 "
"<https://www.nitrokey.com/download>`__ instead."
msgstr ""
"Nitrokey App 2是Nitrokey 3设备的图形应用程序。对于Nitrokey Pro和Nitrokey "
"Storage，请使用`Nitrokey App 1<https://www.nitrokey.com/download>`__代替。"

#: ../software/nk-app2/index.rst:7
msgid ""
"Download it for `Linux <installation_linux>`__ or `Windows "
"<installation_windows>`__."
msgstr "将其下载至`Linux<installation_linux>`__或`Windows<installation_windows>`__。"

#: ../software/nk-app2/index.rst:10
msgid "Supported Features"
msgstr "支持的功能"

#: ../software/nk-app2/index.rst:12
msgid "Updating the firmware"
msgstr "更新固件"

#: ../software/nk-app2/index.rst:13
msgid "One-Time Passwords (OTP)"
msgstr "一次性密码 (OTP)"

#: ../software/nk-app2/index.rst:14
msgid "Password Storage"
msgstr "密码存储"

#: ../software/nk-app2/index.rst:17
msgid "Planned Features"
msgstr "计划中的功能"

#: ../software/nk-app2/index.rst:19
msgid "PIN management"
msgstr "密码管理"

#: ../software/nk-app2/index.rst:20
msgid "macOS support"
msgstr "支持MacOS"

#: ../software/nk-app2/installation_linux.rst:2
msgid "Linux Install"
msgstr "Linux 安装"

#: ../software/nk-app2/installation_linux.rst:5
msgid "Flathub / Flatpak"
msgstr "Flathub / Flatpak"

#: ../software/nk-app2/installation_linux.rst:7
msgid ""
"The preferred installation method for Linux is through `Flathub "
"<https://flathub.org/>`_:"
msgstr "Linux 的首选安装方法是通过`Flathub<https://flathub.org/>`_ ："

#: ../software/nk-app2/installation_linux.rst:9
msgid "`Setup <https://flathub.org/setup>`_  flathub / flatpak"
msgstr "`设置<https://flathub.org/setup>`_ flathub / flatpak"

#: ../software/nk-app2/installation_linux.rst:10
msgid ""
"Execute ``flatpak install flathub com.nitrokey.nitrokey-app2`` to install"
" (or use the native Flathub integration of your Operating System i.e., "
"\"Software\" on Ubuntu systems)"
msgstr ""
"执行``flatpak install flathub com.nitrokey.nitrokey-app2`` 安装（或使用操作系统的本地 "
"Flathub 集成，即 Ubuntu 系统中的 \"软件\"）。"

#: ../software/nk-app2/installation_linux.rst:11
#: ../software/nk-app2/installation_linux.rst:25
msgid ":doc:`Set up the udev rules for nitropy <../nitropy/linux/udev>`"
msgstr ":doc:`Set up the udev rules for nitropy <.../nitropy/linux/udev>`"

#: ../software/nk-app2/installation_linux.rst:12
msgid ""
"Start Nitrokey App2 using either ``flatpak run com.nitrokey.nitrokey-"
"app2`` or use the created entry in your start-menu"
msgstr ""
"使用``flatpak run com.nitrokey.nitrokey-app2`` 或在开始菜单中使用创建的条目启动 Nitrokey "
"App2"

#: ../software/nk-app2/installation_linux.rst:16
msgid ""
"Currently updating a Nitrokey 3 Mini is not supported through the flatpak"
" package. This will be fixed in one of the next releases."
msgstr "目前不支持通过 flatpak 软件包更新 Nitrokey 3 Mini。这将在下一个版本中修复。"

#: ../software/nk-app2/installation_linux.rst:21
msgid "Manual Installation"
msgstr "手动安装"

#: ../software/nk-app2/installation_linux.rst:23
msgid ""
"`Download <https://github.com/Nitrokey/nitrokey-app2/releases>`__ the "
"binary for Linux Nitrokey App 2"
msgstr ""
"`下载<https://github.com/Nitrokey/nitrokey-"
"app2/releases>`__Linux版Nitrokey应用程序2的二进制文件"

#: ../software/nk-app2/installation_linux.rst:24
msgid "Extract the archive and set the binary as executable"
msgstr "解压压缩包并将二进制文件设置为可执行文件"

#: ../software/nk-app2/installation_linux.rst:26
msgid "Execute the binary"
msgstr "执行二进制文件"

#: ../software/nk-app2/installation_windows.rst:2
msgid "Windows Install"
msgstr "Windows 安装"

#: ../software/nk-app2/installation_windows.rst:4
msgid ""
"`Download <https://github.com/Nitrokey/nitrokey-app2/releases>`__ the "
"Windows installer (MSI file)."
msgstr ""
"`下载<https://github.com/Nitrokey/nitrokey-"
"app2/releases>`__Windows安装程序（MSI文件）。"

#: ../software/nk-app2/installation_windows.rst:5
msgid "Execute the Windows installer to install Nitrokey App 2 to your system."
msgstr "执行Windows安装程序，将Nitrokey App 2安装到你的系统中。"

#: ../software/nk-app2/installation_windows.rst:6
msgid "Start Nitrokey App 2 from your applications."
msgstr "从你的应用程序中启动Nitrokey App 2。"

#: ../software/nk-app2/installation_windows.rst:8
msgid ""
"Alternatively, you can download and execute the portable Windows binary "
"without installation."
msgstr "另外，你也可以下载并执行可移植的Windows二进制文件，而无需安装。"

#: ../software/nk-app2/installation_windows.rst:10
msgid "Silent installations are possible with the parameter **/qn**."
msgstr "可通过参数**/qn** 进行静音安装。"

#: ../software/nk-app2/installation_windows.rst:12
msgid "Example for a silent/mass installation"
msgstr "静音/大规模安装示例"

#: ../software/nk-app2/passwords.rst:4
msgid "Password entries may consist of:"
msgstr "密码条目可包括"

#: ../software/nk-app2/passwords.rst:6
msgid "Login"
msgstr "登录"

#: ../software/nk-app2/passwords.rst:7
msgid "Password"
msgstr "密码"

#: ../software/nk-app2/passwords.rst:8
msgid "Comment (for e.g. a website reference)"
msgstr "评论（例如网站参考资料）"

#: ../software/nk-app2/passwords.rst:9
msgid "OTP (HOTP or TOTP)"
msgstr "OTP（HOTP 或 TOTP）"

#: ../software/nk-app2/passwords.rst:11
msgid ""
"All fields are optional and can be edited and added at any time using the"
" \"Edit\" button."
msgstr "所有字段均为可选字段，可随时使用 \"编辑 \"按钮进行编辑和添加。"

#: ../software/nk-app2/passwords.rst:13
msgid ""
"For a list of websites supporting OTP have a look at `dongleauth.com "
"<https://www.dongleauth.com/>`__."
msgstr "有关支持 OTP 的网站列表，请访问`dongleauth.com<https://www.dongleauth.com/>`__。"

#: ../software/nk-app2/passwords.rst:18
msgid ""
"Entries are divided into two categories: unprotected (shown as an open "
"lock) and protected (shown as a closed lock). Unprotected entries can be "
"accessed directly. Protected entries can only be accessed with the PIN."
msgstr "条目分为两类：未受保护（显示为打开的锁）和受保护（显示为关闭的锁）。不受保护的条目可以直接访问。受保护的条目只能通过密码访问。"

#: ../software/nk-app2/passwords.rst:20
msgid ""
"You can choose to create a protected entry by checking the \"Protect with"
" PIN\" box when adding a new entry."
msgstr "在添加新条目时，您可以选中 \"用 PIN 码保护 \"复选框来创建受保护的条目。"

#: ../software/nk-app2/passwords.rst:22
msgid ""
"You also have the option to require user presence in the form of a "
"required touch on the Nitrokey 3 to access the entry by checking the "
"\"Require User Presence\" box."
msgstr "您还可以选中 \"要求用户在场 \"复选框，以要求用户在场的形式触摸 Nitrokey 3 访问条目。"

#: ../software/nk-app2/pin.rst:2
msgid "PIN Settings for FIDO2 and OTP in the Nitrokey App 2"
msgstr "Nitrokey App 2 中的 FIDO2 和 OTP 密码设置"

#: ../software/nk-app2/pin.rst:4
msgid ""
"These instructions describe how to set or change the PINs for FIDO2 and "
"OTP in the `Nitrokey App 2 </software/nk-app2/>`__."
msgstr "本说明介绍如何在`Nitrokey App 2</software/nk-app2/>`__ 中设置或更改 FIDO2 和 OTP 的 PIN 码。"

#: ../software/nk-app2/pin.rst:8
msgid ""
"This function is not yet available in the current release of the "
"`Nitrokey App 2 </software/nk-app2/>`__ version 2.3.0"
msgstr "`Nitrokey App 2</software/nk-app2/>`__版本 2.3.0 的当前版本尚未提供此功能。"

#: ../software/nk-app2/pin.rst:9
msgid ""
"The function is expected to be available in the release of the `Nitrokey "
"App 2 </software/nk-app2/>`__  version 2.3.1"
msgstr "该功能预计将在`Nitrokey App 2</software/nk-app2/>`__2.3.1版本中发布。"

#: ../software/nk-app2/pin.rst:13
msgid ""
"Each function FIDO2, OTP or OpenPGP Card is assigned a separate PIN, "
"which is managed separately."
msgstr "每个功能的 FIDO2 卡、OTP 卡或 OpenPGP 卡都有一个单独的 PIN 码，可单独管理。"

#: ../software/nk-app2/pin.rst:16
msgid "First Steps:"
msgstr "第一步："

#: ../software/nk-app2/pin.rst:18
msgid "Open the `Nitrokey App 2 </software/nk-app2/>`__."
msgstr "打开`Nitrokey App 2</software/nk-app2/>`__。"

#: ../software/nk-app2/pin.rst:19
msgid "Select the Nitrokey 3."
msgstr "选择 Nitrokey 3。"

#: ../software/nk-app2/pin.rst:20
msgid "Select the ``SETTINGS`` tab."
msgstr "选择``SETTINGS`` 选项卡。"

#: ../software/nk-app2/pin.rst:21
msgid ""
"On the left-hand side of the ``SETTINGS`` tab, a tree structure with "
"various options is available."
msgstr "在``SETTINGS`` 选项卡的左侧，有一个包含各种选项的树形结构。"

#: ../software/nk-app2/pin.rst:25
msgid "FIDO2 PIN Settings"
msgstr "FIDO2 PIN 设置"

#: ../software/nk-app2/pin.rst:27
msgid "Select ``FIDO2``."
msgstr "选择``FIDO2``。"

#: ../software/nk-app2/pin.rst:28
msgid ""
"A branch with ``FIDO2 PIN SETTINGS`` opens below ``FIDO2``. The status of"
" the FIDO2 PIN is now available on the left-hand side of the ``SETTINGS``"
" tab, including a short description."
msgstr ""
"``FIDO2 PIN SETTINGS`` 分支在``FIDO2`` 下方打开。``SETTINGS`` 标签的左侧现在可以看到 FIDO2 "
"PIN 的状态，包括简短说明。"

#: ../software/nk-app2/pin.rst:29
msgid "Select ``FIDO2 PIN SETTINGS`` to set or change the PIN."
msgstr "选择``FIDO2 PIN SETTINGS`` 设置或更改 PIN 码。"

#: ../software/nk-app2/pin.rst:30
msgid ""
"Depending on the status of the Fido2 PIN, the input mask for setting or "
"changing the PIN is now displayed."
msgstr "根据 Fido2 PIN 的状态，现在将显示用于设置或更改 PIN 的输入掩码。"

#: ../software/nk-app2/pin.rst:32
msgid ""
"To set the FIDO2 PIN, enter the new PIN and repeat it in the provided "
"boxes. To change the PIN, enter the current PIN in the box provided."
msgstr "要设置 FIDO2 PIN 码，请输入新 PIN 码并在提供的方框中重复输入。要更改 PIN 码，请在提供的方框中输入当前 PIN 码。"

#: ../software/nk-app2/pin.rst:32 ../software/nk-app2/pin.rst:48
msgid "PIN length minimum 4 characters"
msgstr "密码长度至少为 4 个字符"

#: ../software/nk-app2/pin.rst:33 ../software/nk-app2/pin.rst:49
msgid "If the repetition of the new PIN is not correct, it will not be accepted."
msgstr "如果重复的新 PIN 码不正确，将不予接受。"

#: ../software/nk-app2/pin.rst:37 ../software/nk-app2/pin.rst:52
msgid "Select the ``SAVE`` button."
msgstr "选择``SAVE`` 按钮。"

#: ../software/nk-app2/pin.rst:35 ../software/nk-app2/pin.rst:51
msgid "If the ``SAVE`` button is greyed out, the entries are not correct."
msgstr "如果``SAVE`` 按钮显示为灰色，说明输入不正确。"

#: ../software/nk-app2/pin.rst:36 ../software/nk-app2/pin.rst:52
msgid "When you hover over the ``SAVE`` button, a list of reasons is displayed."
msgstr "将鼠标悬停在``SAVE`` 按钮上时，会显示原因列表。"

#: ../software/nk-app2/pin.rst:37 ../software/nk-app2/pin.rst:53
msgid ""
"The ``PIN_INVALID`` error message, when changing the PIN, indicates that "
"the current PIN is incorrect."
msgstr "更改 PIN 码时，``PIN_INVALID`` 错误信息表示当前 PIN 码不正确。"

#: ../software/nk-app2/pin.rst:40
msgid "OTP PIN Settings"
msgstr "OTP 密码设置"

#: ../software/nk-app2/pin.rst:43
msgid "Select ``OTP``."
msgstr "选择``OTP``。"

#: ../software/nk-app2/pin.rst:43
msgid ""
"A branch with ``OTP PIN SETTINGS`` opens below ``OTP``. The status of the"
" OTP PIN is now available on the left-hand side of the ``SETTINGS`` tab, "
"including a short description."
msgstr ""
"在``OTP`` 下方打开``OTP PIN SETTINGS`` 分支。在``SETTINGS`` 标签的左侧，现在可以看到 OTP PIN "
"的状态，包括一个简短的说明。"

#: ../software/nk-app2/pin.rst:44
msgid ""
"Information about the version, serial number and PIN attempt counter is "
"also available."
msgstr "还提供有关版本、序列号和 PIN 尝试计数器的信息。"

#: ../software/nk-app2/pin.rst:45
msgid "Select ``OTP PIN SETTINGS`` to set or change the PIN."
msgstr "选择``OTP PIN SETTINGS`` 设置或更改 PIN 码。"

#: ../software/nk-app2/pin.rst:46
msgid ""
"Depending on the status of the OTP PIN, the input mask for setting or "
"changing the PIN is now displayed."
msgstr "根据 OTP PIN 的状态，现在会显示用于设置或更改 PIN 的输入掩码。"

#: ../software/nk-app2/pin.rst:48
msgid ""
"To set the OTP PIN, enter the new PIN and repeat it in the provided "
"boxes. To change the PIN, enter the current PIN in the box provided."
msgstr "要设置 OTP PIN 码，请在提供的框中输入新 PIN 码并重复。要更改 PIN 码，请在提供的方框中输入当前 PIN 码。"

#: ../start/factory-reset.rst:5 ../start/multiple-identities.rst.inc:6
msgid ""
"The multiple identites feature allows to use 3 virtual smart cards in "
"place of one, giving bigger flexibility in the every day use, as well as "
"separation between user identities (business, personal etc.) or even "
"allowing usage of it for more than one user (PINs are separate)."
msgstr "多重身份功能允许使用3张虚拟智能卡代替一张，在日常使用中提供更大的灵活性，以及区分用户身份（商业、个人等），甚至允许多个用户使用它（密码是独立的）。"

#: ../start/factory-reset.rst:7 ../start/multiple-identities.rst.inc:8
msgid ""
"All of the smart cards have separate data objects, meaning they all could"
" have different keys, certificates stored, and PINs set. Identities do "
"not intereact between each other."
msgstr "所有的智能卡都有独立的数据对象，这意味着它们都可以有不同的密钥、存储的证书和设置的PIN。身份信息之间不相互影响。"

#: ../start/factory-reset.rst:9
msgid "This means each identity needs to be resetted on its own."
msgstr "这意味着每个身份都需要自行重置。"

#: ../start/factory-reset.rst:11
msgid ""
"Old versions (below 1.2.5) of the firmware might need special treatment "
"(see below). Usage -----"
msgstr "旧版本（低于1.2.5）的固件可能需要特殊处理（见下文）。用法 -----"

#: ../start/factory-reset.rst:15 ../start/multiple-identities.rst.inc:15
msgid ""
"To change the identity it suffices to send a custom CCID command. This "
"could be achieved with ``pynitrokey`` tool:"
msgstr "要改变身份，只需发送一个自定义的CCID命令。这可以通过``pynitrokey``工具实现。"

#: ../start/factory-reset.rst:17 ../start/multiple-identities.rst.inc:17
msgid ""
"`Install pynitrokey "
"<https://github.com/Nitrokey/pynitrokey#installation>`__."
msgstr "`安装pynitrokey <https://github.com/Nitrokey/pynitrokey#installation>`__。"

#: ../start/factory-reset.rst:19 ../start/multiple-identities.rst.inc:20
msgid "Connect your Nitrokey Start and verify that it got recognized."
msgstr "连接你的Nitrokey Start并验证它是否被识别。"

#: ../start/factory-reset.rst:29 ../start/multiple-identities.rst.inc:29
msgid "Change the identity, by replacing ``<ID>`` with ``0``, ``1``, or ``2``."
msgstr "改变身份，将``<ID>``替换为``0``。``1``，或 ``2``。"

#: ../start/factory-reset.rst:40
msgid "Reset"
msgstr "复位"

#: ../start/factory-reset.rst:46
msgid "In the menu enter `admin` and then `factory-reset`"
msgstr "在菜单中输入 \"admin\"，然后输入 \"factory-reset\"。"

#: ../start/factory-reset.rst:48
msgid ""
"This will reset the current identity. To reset  all identitites the "
"following needs to be done:"
msgstr "这将重置当前的身份。要重置所有身份，需要做以下工作。"

#: ../start/factory-reset.rst:59
msgid ""
"It deletes all keys, pins, configurations and meta data associated with "
"the respective identity."
msgstr "它删除了与各自身份相关的所有密钥、引脚、配置和元数据。"

#: ../start/factory-reset.rst:63
msgid "Reset code"
msgstr "重置代码"

#: ../start/factory-reset.rst:65
msgid ""
"This step is optional with new firmware.. You can add a reset code which "
"enable the reset of the User PIN (not the Admin PIN). For older Firmware "
"it is recommended since it is needed to reset the device (see below)"
msgstr "这一步对于新的固件来说是可选的。你可以添加一个重置代码，使用户PIN码（而不是管理PIN码）得到重置。对于旧的固件，建议使用该代码，因为需要重置设备（见下文）。"

#: ../start/factory-reset.rst:68
msgid ""
"`Checkout the documentation here <https://www.fsij.org/doc-gnuk/gnuk-"
"passphrase-setting.html#set-up-pw1-pw3-and-reset-code>`__."
msgstr ""
"`查看这里的文档 <https://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html#set-"
"up-pw1-pw3-and-reset-code>`__。"

#: ../start/factory-reset.rst:74
msgid "Firmware below 1.2.5"
msgstr "固件低于1.2.5"

#: ../start/factory-reset.rst:76
msgid "Nitrokey Start firmware 1.2.2 to 1.2.5:"
msgstr "Nitrokey启动固件1.2.2至1.2.5。"

#: ../start/factory-reset.rst:78
msgid ""
"If and only if the device is not blocked (PIN wasn't typed in wrong too "
"often) you can use the same procedure as in newer firmware (see above). "
"You need the reset code to unblock device or you can not use the device "
"anymore!"
msgstr "如果而且只有在设备没有被封锁的情况下（PIN码没有经常输入错误），您可以使用与较新固件相同的程序（见上文）。你需要重置代码来解锁设备，否则你就不能再使用该设备了。"

#: ../start/factory-reset.rst:81
msgid "Nitrokey Start firmware 1.0:"
msgstr "Nitrokey Start固件1.0。"

#: ../start/factory-reset.rst:82
msgid ""
"In order to reset a Nitrokey Start 1.0, you need to define a public key "
"for `firmware updates <http://no-passwd.net/askbot/question/34/how-gnuk-"
"supports-firmware-upgrade/>`__ beforehand! In case of a blocked device it"
" enables you to perform a firmware update which resets the device."
msgstr ""
"为了重置Nitrokey Start 1.0，你需要为`固件更新<http://no-passwd.net/askbot/question/34"
"/how-gnuk-supports-firmware-"
"upgrade/>`__事先定义一个公钥！如果你的设备被封锁了，你就可以进行固件更新。在设备被封锁的情况下，它使你能够执行固件更新，从而重置设备。"

#: ../start/faq.rst:2
msgid "Nitrokey Start FAQ"
msgstr "Nitrokey Start 常见问题"

#: ../start/faq.rst:33
msgid ""
"**Q:** Does the Nitrokey Start contain a secure chip or just a normal "
"microcontroller?"
msgstr "**问：**Nitrokey Start是否包含一个安全芯片或只是一个普通的微控制器？"

#: ../start/faq.rst:33
msgid "Nitrokey Start is implemented in the microprocessor."
msgstr "Nitrokey Start是在微处理器中实现的。"

#: ../start/faq.rst:36
msgid ""
"The Nitrokey Start doesn't contain storage capability for ordinary data "
"(it can only store cryptographic keys and certificates)."
msgstr "Nitrokey Start不包含普通数据的存储能力（它只能存储加密密钥和证书）。"

#: ../start/index.rst:2
msgid "Nitrokey Start"
msgstr "Nitrokey Start"

#: ../start/linux/firmware-update.rst:5
msgid ""
"Updating could lead to data loss, so make sure you have proper backup "
"login methods enabled and/or ensure that the Nitrokey Start is not the "
"only way to authenticate/2FA for your applications/services."
msgstr "更新可能导致数据丢失，所以要确保你启用了适当的备份登录方法，并/或确保Nitrokey Start不是你的应用程序/服务的唯一认证/2FA方式。"

#: ../start/linux/firmware-update.rst:10
#: ../storage/linux/firmware-update.rst:13
#: ../storage/windows/firmware-update.rst:13
msgid ""
"Never disconnect the Nitrokey Start or abort the process while updating, "
"this will likely render your device useless"
msgstr "在更新过程中，千万不要断开Nitrokey 3的连接或中止进程，这很可能会使你的设备失去作用。"

#: ../start/linux/firmware-update.rst:15
msgid "To update the firmware of your Nitrokey Start, proceed as follows."
msgstr "更新Nitrokey Start固件的步骤如下。"

#: ../start/linux/firmware-update.rst:17
msgid "Install pip3."
msgstr "安装pip3。"

#: ../start/linux/firmware-update.rst:23
msgid "Install pynitrokey. For this you need an Internet connection."
msgstr "安装pynitrokey。为此，你需要一个互联网连接。"

#: ../start/linux/firmware-update.rst:29
msgid "Connect your Nitrokey Start and verify its recognition."
msgstr "连接你的Nitrokey Start并验证其识别。"

#: ../start/linux/firmware-update.rst:39
msgid "Start the update process. For this you need an Internet connection."
msgstr "开始更新过程。为此，你需要一个互联网连接。"

#: ../start/linux/firmware-update.rst:45
msgid ""
"You will then be asked to enter the Admin PIN of your Nitrokey Start. "
"(Default PIN: 12345678)"
msgstr "然后你将被要求输入你的Nitrokey启动的管理密码。(默认密码：12345678)"

#: ../start/linux/firmware-update.rst:58
msgid ""
"Under “Device” you will find information about the current version of "
"your Nitrokey Start. In the first item under “Please note” you can see "
"the latest firmware version available. Now you have to confirm the update"
" with “yes”."
msgstr ""
"在 \"设备 \"下，你可以找到关于你的Nitrokey Start当前版本的信息。在 \"请注意 "
"\"下的第一项中，你可以看到现有的最新固件版本。现在你必须用 \"是 \"来确认更新。"

#: ../start/linux/firmware-update.rst:91
msgid ""
"You can check the firmware version after the upgrade process has "
"completed."
msgstr "你可以在升级过程完成后检查固件版本。"

#: ../start/linux/index.rst:2
msgid "Nitrokey Start, Linux"
msgstr "Nitrokey Start, Linux"

#: ../start/linux/index.rst:13
msgid ""
"Install ``scdaemon`` and GnuPG 2.1 or higher by using your package "
"manager (e.g. ``apt update && apt install scdaemon gnupg2`` on Ubuntu)."
msgstr ""
"使用你的软件包管理器安装``scdaemon``和GnuPG 2.1或更高版本（例如，``apt update && apt install "
"scdaemon gnupg2``在 Ubuntu 上）。"

#: ../start/linux/index.rst:15
msgid "Connect your Nitrokey to your computer."
msgstr "将你的Nitrokey连接到你的电脑。"

#: ../start/linux/index.rst:16 ../start/mac/index.rst:17
#: ../start/windows/index.rst:21
msgid "Use GnuPG to `generate new keys or import existing ones <openpgp.html>`_."
msgstr "使用GnuPG来`生成新的密钥或导入现有的密钥<openpgp.html>`_。"

#: ../start/linux/index.rst:20 ../start/mac/index.rst:21
msgid ""
"It is indeed necessary to first import or create new keys and change the "
"PINs afterwards. Otherwise changing User PIN will fail! Furthermore "
"overriding keys results in PIN reset (default values), please keep this "
"in mind!"
msgstr "确实有必要先导入或创建新的密钥，然后再更改PIN。否则更改用户PIN码将会失败!此外，覆盖钥匙会导致PIN码重置（默认值），请牢记这一点。"

#: ../start/linux/index.rst:25 ../start/mac/index.rst:26
#: ../start/windows/index.rst:26
msgid ""
"Change the Admin PIN (default: ``12345678``) and then the User PIN "
"(default: ``123456``) to your own choices."
msgstr "改变管理密码（默认：``12345678`），然后改变用户密码（默认：``123456``）到你自己的选择。"

#: ../start/linux/index.rst:27 ../start/mac/index.rst:28
#: ../start/windows/index.rst:28
msgid ""
"The PIN must consist of at least 14 characters (starting from RTM.8), can"
" contain any character (not only numbers). Do not select only numbers. If"
" your environment allows that, use emoticons or national characters."
msgstr "密码必须由至少14个字符组成（从RTM.8开始），可以包含任何字符（不仅是数字）。不要只选择数字。如果你的环境允许，请使用表情符号或国家字符。"

#: ../start/linux/index.rst:28 ../start/mac/index.rst:29
#: ../start/windows/index.rst:29
msgid ""
"The longer the PIN the better. It is possible to use 6 randomly selected "
"words instead as well for the same or better security than random "
"character string."
msgstr "密码越长越好。也可以用6个随机选择的单词代替，以获得与随机字符串相同或更好的安全性。"

#: ../start/linux/index.rst:29 ../start/mac/index.rst:30
msgid ""
"Use ‘gpg –card-edit’ -> ‘admin’ -> ‘passwd’ to achieve this (for Admin "
"PIN case)."
msgstr "使用'gpg -card-edit' -> 'admin' -> 'passwd'来实现这个目标（对于Admin PIN情况）。"

#: ../start/linux/index.rst:30 ../start/mac/index.rst:31
msgid ""
"Please be careful to change Admin PIN first and User PIN second! "
"Otherwise the admin-less mode got activated, see `this instructions "
"<https://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html#>`__ for "
"further information."
msgstr ""
"请注意先修改管理员密码，再修改用户密码!否则，无管理模式就会被激活，更多信息见`本说明<https://www.fsij.org/doc-gnuk"
"/gnuk-passphrase-setting.html#>`__。"

#: ../start/linux/index.rst:31 ../start/mac/index.rst:32
#: ../start/windows/index.rst:31
msgid ""
"Optionally Reset code can be set up (`guide <https://www.fsij.org/doc-"
"gnuk/gnuk-passphrase-setting.html>`__). The minimum length accepted is 8 "
"characters, however it should be as long as User PIN."
msgstr ""
"可选择设置重置代码（`指南 <https://www.fsij.org/doc-gnuk/gnuk-passphrase-"
"setting.html>`__）。接受的最小长度为8个字符，但它应该和用户PIN码一样长。"

#: ../start/linux/index.rst:32 ../start/mac/index.rst:33
#: ../start/windows/index.rst:32
msgid ""
"KDF-DO allows for a shorter PIN of 8 characters minimum, by executing "
"part of the calculations on the PC."
msgstr "KDF-DO通过在PC上执行部分计算，允许较短的PIN码，最少为8个字符。"

#: ../start/linux/index.rst:34 ../start/mac/index.rst:35
#: ../start/windows/index.rst:34
msgid ""
"**Firmware version 1.2.5 or below: In case you forget a PIN or enter it "
"wrongly three times you need the reset code to unblock the PIN. Otherwise"
" the device wouldn’t be usable anymore! Therefore please** `set the reset"
" code <https://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html>`__ "
"**as well when initialising the key!**"
msgstr ""
"**固件版本1.2.5或以下。如果你忘记了PIN码或输入错误的PIN码三次，你需要重置码来解除PIN码的限制。否则设备将无法使用因此，请** "
"`设置重置代码 <https://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html>`__ "
"**在初始化密钥时也要设置重置代码！**"

#: ../start/linux/index.rst:57 ../start/mac/index.rst:58
#: ../start/windows/index.rst:57
msgid "Please note that the Nitrokey App can not be used for this device!"
msgstr "请注意，Nitrokey应用程序不能用于该设备！请注意。"

#: ../start/linux/index.rst:62
msgid ""
"On some GNU/Linux systems it is necessary to insert the UDEV rules for "
"the Nitrokey device manually. If you followed the above instructions and "
"get the message:"
msgstr "在某些GNU/Linux系统中，有必要手动插入Nitrokey设备的UDEV规则。如果你按照上面的说明，得到了这样的信息。"

#: ../start/linux/index.rst:70
msgid ""
"please install the `Nitrokey App <https://www.nitrokey.com/download>`__ "
"or type the following commands in the terminal to download and install "
"the UDEV rules:"
msgstr ""
"请安装`Nitrokey App "
"<https://www.nitrokey.com/download>`__或在终端输入以下命令，下载并安装UDEV规则。"

#: ../start/multiple-identities.rst.inc:2
msgid "Multiple Identities"
msgstr "多重身份"

#: ../start/multiple-identities.rst.inc:10
msgid ""
"The virtual smart cards are identifyable by the first digit of the serial"
" number, which is replaced by identity number for second (“1”) and third "
"one (“2”). Serial number is not changed for the first identity."
msgstr "虚拟智能卡可通过序列号的第一个数字来识别，第二个（\"1\"）和第三个（\"2\"）的身份号码取代了该数字。对于第一个身份，序列号不改变。"

#: ../start/multiple-identities.rst.inc:40
msgid "Limitations"
msgstr "限制条件"

#: ../start/multiple-identities.rst.inc:42
msgid ""
"As of version RTM.10 there is only one limitation - the third identity "
"can store a certificate not longer than 1024 bytes. The other two "
"identities have standard limit of 2048 bytes per certificate."
msgstr "从RTM.10版本开始，只有一个限制--第三个身份可以存储不超过1024字节的证书。其他两个身份的标准限制是每个证书2048字节。"

#: ../start/setting-kdf-do.rst.inc:2
msgid "Setting KDF-DO"
msgstr "设置KDF-DO"

#: ../start/setting-kdf-do.rst.inc:9
msgid ""
"KDF-DO stands for Key Derived Function - Data Object. With this data "
"object the card can inform clients that it supports derived keys. (For "
"details see section 4.3.2 of the `OpenPGP Smart Card 3.4 specification "
"<https://gnupg.org/ftp/specs/OpenPGP-smart-card-application-3.4.pdf>`__) "
"The benefit of using derived keys is, that instead of transmitting "
"passwords in clear text only hashes are transmitted to the card and "
"therefore only hashes are stored on the card. Since a derived key will be"
" longer than the original password it will also be harder to successfully"
" run a brute force attack."
msgstr ""
"KDF-"
"DO代表钥匙派生功能-数据对象。通过这个数据对象，卡片可以通知客户它支持衍生钥匙。(详见`OpenPGP智能卡3.4规范的4.3.2节<https://gnupg.org/ftp/specs"
"/OpenPGP-smart-card-"
"application-3.4.pdf>`__)使用派生密钥的好处是，不需要以明文形式传输密码，只需要将哈希值传输给卡片，因此卡片上只存储哈希值。由于派生密钥会比原始密码长，因此也更难成功地进行暴力攻击。"

#: ../start/setting-kdf-do.rst.inc:17
msgid ""
"At the moment it is only possible to set the KDF-DO, when the Nitrokey "
"Start is empty (just after a factory reset)."
msgstr "目前，只有在Nitrokey Start为空的情况下，才有可能设置KDF-DO（刚刚在出厂前复位）。"

#: ../start/setting-kdf-do.rst.inc:20
msgid "Steps to Configure KDF-DO"
msgstr "配置KDF-DO的步骤"

#: ../start/setting-kdf-do.rst.inc:22
msgid "Run factory reset"
msgstr "运行工厂重置"

#: ../start/setting-kdf-do.rst.inc:23
msgid "Set up KDF-DO using GnuPG"
msgstr "使用GnuPG设置KDF-DO"

#: ../start/setting-kdf-do.rst.inc:24
msgid ""
"Change Admin PIN (optional; without keys only Admin PIN change is "
"possible)"
msgstr "更改管理员PIN码（可选；没有钥匙的话，只能更改管理员PIN码）。"

#: ../start/setting-kdf-do.rst.inc:25
msgid "Import / generate keys"
msgstr "导入/生成密钥"

#: ../start/setting-kdf-do.rst.inc:30
msgid "Setting KDF-DO using GnuPG"
msgstr "使用GnuPG设置KDF-DO"

#: ../start/setting-kdf-do.rst.inc:32
msgid "Run ``gpg2 --card-edit``"
msgstr "运行``gpg2 --card-edit``"

#: ../start/setting-kdf-do.rst.inc:33
msgid "``$ admin``"
msgstr "``$ admin``"

#: ../start/setting-kdf-do.rst.inc:34
msgid "``$ kdf-setup``"
msgstr "``$ kdf-setup``"

#: ../start/setting-kdf-do.rst.inc:35
msgid "Enter Admin PIN"
msgstr "输入管理密码"

#: ../start/setting-kdf-do.rst.inc:36
msgid ""
"Verify current state state by looking at the card details (``gpg2 --card-"
"status``), where ``KDF setting ......: on`` should be visible, e.g.:"
msgstr ""
"通过查看卡的细节(``gpg2 --card-status``)，验证当前的状态状态，其中``KDF setting ......: "
"on``应该是可见的，例如。"

#: ../start/setting-kdf-do.rst.inc:48
msgid "Tested with"
msgstr "测试对象为"

#: ../start/setting-kdf-do.rst.inc:50
msgid "gpg (GnuPG) 2.2.20 / 2.2.25"
msgstr "gpg (GnuPG) 2.2.20 / 2.2.25"

#: ../start/setting-kdf-do.rst.inc:51
msgid "Nitrokey Start RTM.10"
msgstr "Nitrokey Start RTM.10"

#: ../start/setting-kdf-do.rst.inc:52
msgid "Curve 25519 keys"
msgstr "曲线25519键"

#: ../start/mac/index.rst:2
msgid "Nitrokey Start, Mac"
msgstr "Nitrokey Start, Mac"

#: ../start/mac/index.rst:13
msgid "Install `GnuPG 2.1 <https://gpgtools.org/>`__ or higher."
msgstr "安装`GnuPG 2.1 <https://gpgtools.org/>`__或者更高。"

#: ../start/mac/index.rst:14 ../start/windows/index.rst:14
#: ../storage/windows/index.rst:13
msgid ""
"Connect your Nitrokey to your computer and confirm all dialogs so that "
"the USB smart card device driver gets installed almost automatically."
msgstr "将你的Nitrokey连接到电脑上，并确认所有的对话框，这样USB智能卡设备的驱动程序就会几乎自动安装。"

#: ../start/windows/index.rst:2
msgid "Nitrokey Start, Windows"
msgstr "Nitrokey Start, Windows"

#: ../start/windows/index.rst:13
msgid "Install `Gpg4win <https://www.gpg4win.org/>`__ on your Computer."
msgstr "在你的电脑上安装`Gpg4win <https://www.gpg4win.org/>`__。"

#: ../start/windows/index.rst:19 ../storage/windows/index.rst:17
msgid ""
"Windows may fail to install an additional device driver for the smart "
"card. Its safe to ignore this warning."
msgstr "Windows可能无法为智能卡安装一个额外的设备驱动程序。忽略这个警告是安全的。"

#: ../start/windows/index.rst:24
msgid ""
"It is indeed necessary to first import or create new keys and change the "
"PINs afterwards. Otherwise changing User PIN will fail! Furthermore "
"overriding keys results in PIN reset (default values),  please keep this "
"in mind!"
msgstr "确实有必要先导入或创建新的密钥，然后再更改PIN。否则更改用户PIN码将会失败!此外，覆盖钥匙会导致PIN码重置（默认值），请牢记这一点。"

#: ../start/windows/index.rst:30
msgid ""
"Use ‘gpg –card-edit’ -> ‘admin’ -> ‘passwd’ to achieve this (for Admin "
"PIN case). - Please be careful to change Admin PIN first and User PIN "
"second! Otherwise the admin-less mode got activated, see `this "
"instructions <https://www.fsij.org/doc-gnuk/gnuk-passphrase-"
"setting.html#>`__ for further information."
msgstr ""
"使用'gpg -card-edit' -> 'admin' -> 'passwd'来实现这个目标（对于管理员PIN码的情况）。- "
"请注意先改管理员密码，后改用户密码!否则，无管理模式就会被激活，详情请见`本说明<https://www.fsij.org/doc-gnuk"
"/gnuk-passphrase-setting.html#>`__。"

#: ../storage/encrypted-mobile-storage.rst:1
msgid ""
"Prior of using the encrypted mobile storage you need to install and "
"initialize the Nitrokey Storage and download the latest `Nitrokey App "
"<https://www.nitrokey.com/download>`__."
msgstr "在使用加密的移动存储之前，你需要安装和初始化Nitrokey存储，并下载最新的`Nitrokey应用程序<https://www.nitrokey.com/download>`__。"

#: ../storage/encrypted-mobile-storage.rst:3 ../storage/faq.rst:86
msgid "Start the Nitrokey App."
msgstr "启动Nitrokey应用程序。"

#: ../storage/encrypted-mobile-storage.rst:4 ../storage/faq.rst:87
msgid "Press its tray icon and select \"unlock encrypted volume\" in the menu."
msgstr "按其托盘图标，在菜单中选择\"解锁加密卷\"。"

#: ../storage/encrypted-mobile-storage.rst:5 ../storage/faq.rst:88
msgid "Enter your User PIN in the appearing popup window."
msgstr "在出现的弹出窗口中输入你的用户密码。"

#: ../storage/encrypted-mobile-storage.rst:6
msgid ""
"If this is the first time you may need to create a partition on the "
"encrypted volume. Windows will open an appropriate window and ask you to "
"do so. On GNU+Linux and Mac you may need to open a partition manager and "
"create a partition manually. You can create as many partitions as you "
"want. We recommend FAT(32) if you want to access the partition from "
"various operating systems."
msgstr "如果这是第一次，您可能需要在加密的卷上创建一个分区。Windows会打开一个适当的窗口并要求你这样做。在GNU+Linux和Mac上，您可能需要打开一个分区管理器并手动创建一个分区。您可以根据您的需要创建任意多的分区。如果你想从不同的操作系统访问该分区，我们推荐使用FAT(32)。"

#: ../storage/encrypted-mobile-storage.rst:7 ../storage/faq.rst:90
msgid ""
"Now you can use the encrypted volume as you would use any other ordinary "
"USB drive. But all data stored on it will be encrypted in the Nitrokey "
"hardware automatically."
msgstr "现在你可以像使用其他普通USB驱动器一样使用加密的卷。但是，存储在上面的所有数据都将在Nitrokey硬件中自动加密。"

#: ../storage/encrypted-mobile-storage.rst:8 ../storage/faq.rst:91
msgid "To remove or lock the encrypted volume you should unmount/eject it first."
msgstr "要删除或锁定加密的卷，你应该先卸载/弹出它。"

#: ../storage/encrypted-mobile-storage.rst:9 ../storage/faq.rst:92
msgid ""
"Afterwards you can disconnect the Nitrokey or select \"lock encrypted "
"volume\" from the Nitrokey App menu."
msgstr "之后，你可以断开Nitrokey的连接，或从Nitrokey应用程序菜单中选择\"锁定加密卷\"。"

#: ../storage/encrypted-mobile-storage.rst:11
msgid ""
"The Nitrokey Storage is able to create hidden volumes as well. Please "
"have a look at the corresponding instructions for `hidden volumes "
"<hidden.html>`_."
msgstr "Nitrokey Storage也能够创建隐藏卷。请看看`隐藏卷的相应说明<hidden.html>`_。"

#: ../storage/factory-reset.rst:3
msgid "There are two types of factory resets for Nitrokey Storage devices:"
msgstr "Nitrokey存储设备有两种类型的出厂重置。"

#: ../storage/factory-reset.rst:9
msgid ""
"Also, it is possible to generate a new AES key that is used to encrypt "
"the Password Safe and the Encrypted Volume without performing a factory "
"reset."
msgstr "此外，还可以生成一个新的AES密钥，用于加密密码保险箱和加密卷，而无需执行出厂重置。"

#: ../storage/factory-reset.rst:17
msgid ""
"The factory reset can be triggered in the Nitrokey App with the menu "
"entry ``Configure->Special Configure->Factory reset``."
msgstr ""
"出厂重置可以在Nitrokey应用程序中通过``Configure->Special Configure->Factory "
"reset``菜单项来触发。"

#: ../storage/factory-reset.rst:-1
msgid "factory-reset-menu-item"
msgstr "工厂-重置-菜单-项目"

#: ../storage/factory-reset.rst:25
msgid ""
"The factory reset is an administrative function and is only available "
"after starting the Nitrokey App with the parameter ``--admin``."
msgstr "出厂重置是一项管理功能，只有在用参数``--admin``启动Nitrokey应用程序后才能使用。"

#: ../storage/factory-reset.rst:36
msgid "yes [2]_"
msgstr "是[2]_"

#: ../storage/factory-reset.rst:37
msgid "Destroys Encrypted Volume"
msgstr "销毁加密卷"

#: ../storage/factory-reset.rst:41
msgid "This is expected to change in new Nitrokey Storage firmware versions."
msgstr "预计这将在新的Nitrokey存储固件版本中发生变化。"

#: ../storage/faq.rst:2
msgid "Nitrokey Storage FAQ"
msgstr "尼特罗基存储常见问题"

#: ../storage/faq.rst:4
msgid ""
"As the Nitrokey Storage 2 is essentially a Nitrokey Pro 2 including a "
"non-volatile (encrypted) storage, the :doc:`Nitrokey Pro 2 FAQ "
"<../pro/faq>` also partly applies."
msgstr ""
"由于Nitrokey Storage 2本质上是一个包括非易失性（加密）存储的Nitrokey Pro 2，所以:doc:`Nitrokey "
"Pro 2 FAQ <./pro/faq>`也部分适用。"

#: ../storage/faq.rst:12
msgid "**Firmware Password**: \"12345678\""
msgstr "**固件密码**：\"12345678\"。"

#: ../storage/faq.rst:19
msgid ""
"Nitrokey Storage can store and encrypt 8, 32, or 64 GB of data (depending"
" on particular model)."
msgstr "Nitrokey存储系统可以存储和加密8、32或64GB的数据（取决于特定型号）。"

#: ../storage/faq.rst:26
msgid "**Q:** Why can't I access the encrypted storage on a new Nitrokey Storage?"
msgstr "**问：**为什么我不能访问新的Nitrokey存储器上的加密存储？"

#: ../storage/faq.rst:24
msgid ""
"On a new Nitrokey Storage device, before you can access the encrypted "
"volume make sure you first \"Destroy encrypted data\" inside the Nitrokey"
" App."
msgstr "在一个新的Nitrokey存储设备上，在访问加密卷之前，请确保你首先在Nitrokey应用程序中\"销毁加密的数据\"。"

#: ../storage/faq.rst:34
msgid ""
"**Q:** Why does my Nitrokey Storage hang when switching between nitrokey-"
"app and GnuPG?"
msgstr "**问：**为什么在nitrokey-app和GnuPG之间切换时，我的Nitrokey存储会挂起？"

#: ../storage/faq.rst:45
msgid "**Q:** What is the firmware PIN for?"
msgstr "**问：**固件的PIN码是什么？"

#: ../storage/faq.rst:37
msgid ""
"The firmware password should meet general password recommandations (e.g. "
"use alphabetic characters, digits and special characters or use a "
"usfficiently long password). The firmware password is needed to update "
"the firmware of the Nitrokey Storage. See further instructions for update"
" process here."
msgstr "固件密码应符合一般的密码建议（例如，使用字母、数字和特殊字符或使用足够长的密码）。更新Nitrokey存储器的固件时需要固件密码。请参阅更新过程的进一步说明。"

#: ../storage/faq.rst:43
msgid ""
"The firmware password is never blocked. An attacker could try to guess "
"the password and would have unlimited attempts. Therefore you must choose"
" a strong password. The default password is 12345678."
msgstr "固件密码永远不会被封锁。攻击者可以尝试猜测密码，而且会有无限次的尝试。因此，你必须选择一个强大的密码。默认的密码是12345678。"

#: ../storage/faq.rst:48
msgid ""
"The Nitrokey Storage can store three RSA key pairs. All keys use the same"
" identity but are used for different purposes: authentication, encryption"
" and signing."
msgstr "Nitrokey存储器可以存储三个RSA密钥对。所有的钥匙都使用相同的身份，但用于不同的目的：认证、加密和签名。"

#: ../storage/faq.rst:63
msgid ""
"**Q:** Does the Nitrokey Storage contain a secure chip or just a normal "
"microcontroller?"
msgstr "**问：**尼特罗基存储器是否包含安全芯片或只是一个普通的微控制器？"

#: ../storage/faq.rst:63
msgid "Nitrokey Storage contains a tamper resistant smart card."
msgstr "Nitrokey存储器包含一个防篡改的智能卡。"

#: ../storage/faq.rst:70
msgid "**Q:** Is the Nitrokey Storage Common Criteria or FIPS certified?"
msgstr "**问：**Nitrokey存储系统是否经过通用标准或FIPS认证？"

#: ../storage/faq.rst:66
msgid ""
"The security controller (NXP Smart Card Controller P5CD081V1A and its "
"major configurations P5CC081V1A, P5CN081V1A, P5CD041V1A, P5CD021V1A and "
"P5CD016V1A each with IC dedicated Software) is Common Criteria EAL 5+ "
"certified up to the OS level (`Certification Report "
"<https://commoncriteriaportal.org/files/epfiles/0555a_pdf.pdf>`__, "
"`Security Target "
"<https://commoncriteriaportal.org/files/epfiles/0555b_pdf.pdf>`__, "
"`Maintenance Report "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1a_pdf.pdf>`__, "
"`Maintenance ST "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1b_pdf.pdf>`__`). "
"Additionally `Cure53 <https://cure53.de>`__ has performed an `independent"
" security audit <https://www.nitrokey.com/news/2015/nitrokey-storage-got-"
"great-results-3rd-party-security-audit>`__ of the hardware, firmware, and"
" Nitrokey App."
msgstr ""
"安全控制器（恩智浦智能卡控制器 P5CD081V1A 及其主要配置 "
"P5CC081V1A、P5CN081V1A、P5CD041V1A、P5CD021V1A 和 P5CD016V1A 均带有 IC "
"专用软件）已通过通用标准 EAL 5+ 认证，最高达到操作系统级别 (`Certification "
"Report<https://commoncriteriaportal.org/files/epfiles/0555a_pdf.pdf>`__,`Security"
" "
"Target<https://commoncriteriaportal.org/files/epfiles/0555b_pdf.pdf>`__,`Maintenance"
" "
"Report<https://commoncriteriaportal.org/files/epfiles/0555_ma1a_pdf.pdf>`__,`Maintenance"
" "
"ST<https://commoncriteriaportal.org/files/epfiles/0555_ma1b_pdf.pdf>`__`)。此外，`Cure53<https://cure53.de>`__"
" 对硬件、固件和 Nitrokey App 进行了`独立安全审计<https://www.nitrokey.com/news/2015"
"/nitrokey-storage-got-great-results-3rd-party-security-audit>`__ 。"

#: ../storage/faq.rst:74
msgid ""
"**Q:** How can I use the True Random Number Generator (TRNG) of the "
"Nitrokey Storage for my applications?"
msgstr "**问：**如何在我的应用中使用Nitrokey存储的真随机数发生器（TRNG）？"

#: ../storage/faq.rst:94
msgid "**Q:** How can I use the encrypted mobile Storage?"
msgstr "**问：**我如何使用加密的移动存储？"

#: ../storage/faq.rst:84
msgid ""
"Prior of using the encrypted mobile storage you need to install and "
"initialize the Nitrokey Storage and download the latest Nitrokey App."
msgstr "在使用加密的移动存储之前，你需要安装和初始化Nitrokey存储并下载最新的Nitrokey应用程序。"

#: ../storage/faq.rst:89
msgid ""
"If this is the first time you may need to create a partition on the "
"encrypted volume. Windows will open an appropriate window and ask you to "
"do so. On Linux and Mac you may need to open a partition manager and "
"create a partition manually. You can create as many partitions as you "
"want. We recommend FAT(32) if you want to access the partition from "
"various operating systems."
msgstr "如果这是第一次，您可能需要在加密的卷上创建一个分区。Windows会打开一个适当的窗口并要求你这样做。在Linux和Mac上，您可能需要打开一个分区管理器并手动创建一个分区。您可以根据您的需要创建任意多的分区。如果你想从不同的操作系统访问该分区，我们建议使用FAT(32)。"

#: ../storage/faq.rst:94
msgid ""
"The Nitrokey Storage is able to create hidden volumes as well. Please "
"have a look at the corresponding instructions for hidden volumes."
msgstr "Nitrokey Storage也能够创建隐藏卷。请看一下隐藏卷的相应说明。"

#: ../storage/faq.rst:116
msgid "**Q:** How can I use the hidden volume?"
msgstr "**问：**如何使用隐藏卷？"

#: ../storage/faq.rst:97
msgid ""
"Hidden volumes allow to hide data in the encrypted volume. The data is "
"protected with an additional password. Without the password the data "
"existence's can't be proven. Hidden volumes are not setup by default so "
"that their existence can be denied plausibly. The concept is similar to "
"VeraCrypt's/TrueCrypt's hidden volume but with Nitrokey Storage the "
"entire functionality of hidden volumes is implemented in hardware."
msgstr ""
"隐藏卷允许在加密卷中隐藏数据。这些数据受到额外密码的保护。没有密码，数据的存在就不能被证明。默认情况下，隐藏卷不会被设置，因此它们的存在可以被合理地否认。这个概念类似于VeraCrypt/TrueCrypt的隐藏卷，但在Nitrokey"
" Storage中，隐藏卷的整个功能是在硬件中实现的。"

#: ../storage/faq.rst:104 ../storage/hidden.rst:8
msgid ""
"You can configure up to four hidden volumes. Once unlocked, hidden "
"volumes behave like ordinary storage where you can create various "
"partitions, filesystems and store files as you like."
msgstr "你最多可以配置四个隐藏卷。一旦解锁，隐藏卷的行为与普通存储一样，你可以创建各种分区、文件系统，并按你的意愿存储文件。"

#: ../storage/faq.rst:108
msgid ""
"If you decide to configure Hidden Volumes, you can not use the encrypted "
"storage anymore. Because the Hidden Volume is situated on the free space "
"of the encrypted storage, there is the potential of overwriting data in "
"the Hidden Volume. You can say, even the encrypted storage \"does not "
"know\" that there is a hidden volumes. The general structure is shown in "
"the diagram below. Therefore, please do not write anything in the "
"encrypted storage after creating a hidden volume (you have to unlock it "
"first though)."
msgstr "如果您决定配置隐藏卷，您就不能再使用加密的存储。因为隐藏卷位于加密存储的自由空间上，有可能会覆盖隐藏卷中的数据。你可以说，即使是加密存储也不知道有一个隐藏卷。一般的结构如下图所示。因此，在创建了隐藏卷之后，请不要在加密存储中写入任何东西（虽然你必须先解锁它）。"

#: ../storage/faq.rst:116
msgid ""
"Hidden volumes are like containers inside of a container, the encrypted "
"volume."
msgstr "隐藏卷就像一个容器中的容器，即加密卷。"

#: ../storage/firmware-update-manually.rst:5
msgid ""
"The following steps are only necessary if you are using Windows 10 Build "
"1809 (or higher) and Nitrokey Storage with firmware 0.52 or older. In all"
" other cases, or if you have access to another system, the regular update"
" as described `here <firmware-update.html>`__ is sufficient and easier."
msgstr ""
"只有在使用 Windows 10 Build 1809（或更高版本）和固件为 0.52 或更早版本的 Nitrokey Storage "
"时，才有必要执行以下步骤。在所有其他情况下，或者如果您可以访问其他系统，如`here<firmware-update.html>`__ "
"所述的定期更新就足够了，而且更简单。"

#: ../storage/firmware-update-manually.rst:8
msgid "What is needed"
msgstr "需要什么"

#: ../storage/firmware-update-manually.rst:10
msgid ""
"To put the Nitrokey Storage manually into Update Mode (without using the "
"Nitrokey App), the following is required:"
msgstr "要将硝基钥匙存储器手动放入更新模式（不使用硝基钥匙应用程序），需要以下条件。"

#: ../storage/firmware-update-manually.rst:12
msgid ""
"A USB stick (**All data on the USB stick will be lost! Please make a "
"backup of the creation before!**)"
msgstr "一个U盘（**U盘上的所有数据都会丢失！请在创建前做好备份！**）。请在创建之前做一个备份！**)"

#: ../storage/firmware-update-manually.rst:15
msgid "The `Balena Etcher <https://www.balena.io/etcher/>`__ software"
msgstr "`Balena Etcher <https://www.balena.io/etcher/>`__软件"

#: ../storage/firmware-update-manually.rst:17
msgid ""
"The `USB Image <https://github.com/Nitrokey/nitrokey-storage-update-"
"boot/releases/latest>`__ we created for this purpose. Please download "
"only the file ending with “.img.zip”."
msgstr ""
"`USB图像<https://github.com/Nitrokey/nitrokey-storage-update-"
"boot/releases/latest>`__我们为此目的而创建。请只下载以\".img.zip \"结尾的文件。"

#: ../storage/firmware-update-manually.rst:23
msgid "Install Balena Etcher"
msgstr "安装Balena Etcher"

#: ../storage/firmware-update-manually.rst:25
msgid ""
"Balena Etcher helps us to install the USB image on the USB stick. Please "
"double click on the `previously downloaded installation file "
"<https://www.balena.io/etcher/>`__ and follow the instructions."
msgstr ""
"Balena "
"Etcher帮助我们在U盘上安装USB镜像。请双击`之前下载的安装文件<https://www.balena.io/etcher/>`__并按照指示操作。"

#: ../storage/firmware-update-manually.rst:38
msgid "Installing the USB image with Balena Etcher"
msgstr "用Balena Etcher安装USB镜像"

#: ../storage/firmware-update-manually.rst:40
msgid ""
"The program usually opens immediately after installation. If not, you "
"will find a shortcut on the desktop. Using the application, select the "
"`previously downloaded image file <https://github.com/Nitrokey/nitrokey-"
"storage-update-boot/releases>`__, which ends with “.img.zip”. Now insert "
"the USB stick. It should be recognized automatically. Press “Flash!” to "
"proceed."
msgstr ""
"该程序通常在安装后立即打开。如果没有，你会在桌面上找到一个快捷方式。使用该程序，选择`之前下载的图像文件<https://github.com/Nitrokey"
"/nitrokey-storage-update-boot/releases>`__，它以\".img.zip "
"\"结尾。现在插入U盘。它应该被自动识别。按 \"Flash！\"继续。"

#: ../storage/firmware-update-manually.rst:50
msgid "You must allow the application to make changes."
msgstr "你必须允许应用程序进行更改。"

#: ../storage/firmware-update-manually.rst:62
msgid ""
"After the image has been successfully transferred, Windows may ask if the"
" device should be formatted. It is important that you click “Cancel”, "
"otherwise the USB stick will be overwritten by Windows."
msgstr "镜像成功传输后，Windows可能会问是否应该格式化设备。重要的是，你要点击 \"取消\"，否则U盘将被Windows覆盖。"

#: ../storage/firmware-update-manually.rst:70
msgid "Booting from the USB stick"
msgstr "从U盘启动"

#: ../storage/firmware-update-manually.rst:72
msgid ""
"Now the system must be restarted. The USB stick must remain in the USB "
"port so that the system can be started on the USB stick. Some devices are"
" configured to start automatically from USB stick if it contains a "
"system. If Windows instead of the USB image is booting right after the "
"restart, you have to set your BIOS to boot from USB. On many systems this"
" can be done with the Escape key, the F10, F11 or F12 key. Often, when "
"starting the device there is also a hint which key to use the so-called "
"“boot menu”."
msgstr ""
"现在必须重新启动系统。U盘必须保持在USB端口中，这样才能从U盘上启动系统。一些设备被配置为如果它包含一个系统，就会自动从U盘启动。如果重启后马上启动的是Windows而不是USB镜像，你必须将BIOS设置为从USB启动。在许多系统上，这可以通过Escape键、F10、F11或F12键完成。通常，在启动设备时，也会有一个提示，即使用所谓的"
" \"启动菜单 \"的哪个键。"

#: ../storage/firmware-update-manually.rst:74
msgid ""
"After the system has started, please choose the language by typing 1 "
"(English) and hit Enter."
msgstr "系统启动后，请选择语言，输入1（英语）并点击回车键。"

#: ../storage/firmware-update-manually.rst:81
msgid "Please insert the Nitrokey Storage when asked to."
msgstr "请在要求时插入Nitrokey存储。"

#: ../storage/firmware-update-manually.rst:88
msgid ""
"The Firmware Update Mode will be started automatically if the standard "
"password is set. Otherwise you need to input your password and hit enter."
msgstr "如果设置了标准密码，固件更新模式就会自动启动。否则你需要输入密码并点击回车。"

#: ../storage/firmware-update-manually.rst:95
msgid ""
"After the system has activated the firmware update on the Nitrokey "
"Storage, a restart is issued after 60 seconds. Please remove the USB "
"Stick. Afterwards you can use the Nitrokey Update Tool in Windows as "
"described `here <firmware-update.html>`__."
msgstr ""
"系统激活 Nitrokey 存储器上的固件更新后，将在 60 秒后重新启动。请取出 USB 记忆棒。之后，您可以使用 Windows 中的 "
"Nitrokey 更新工具，如`这里所述<firmware-update.html>`__。"

#: ../storage/firmware-update-manually.rst:98
msgid "Restoring the USB Stick"
msgstr "恢复U盘"

#: ../storage/firmware-update-manually.rst:100
msgid ""
"Windows should automatically ask to format your USB Stick as soon as you "
"insert the USB Stick the first time again in Windows. Just accept the "
"request for being able to use the USB Stick as previously."
msgstr "当你第一次在Windows中插入U盘时，Windows会自动要求你格式化U盘。只要接受要求就可以像以前一样使用U盘。"

#: ../storage/hidden.rst:2
msgid "Hidden Volumes"
msgstr "隐藏的卷轴"

#: ../storage/hidden.rst:4
msgid ""
"Hidden volumes allow hiding data inside of the encrypted volume. This "
"data is protected by an additional passphrase. Without the passphrase, it"
" is impossible to know whether hidden volumes are present. They are not "
"configured with a default password so that their existence can be `denied"
" plausibly <https://en.wikipedia.org/wiki/Plausible_deniability>`__. The "
"concept is similar to `VeraCrypt's/TrueCrypt's hidden volume "
"<https://veracrypt.eu/en/docs/hidden-volume/>`__ but with Nitrokey "
"Storage the entire functionality of hidden volumes is implemented in "
"hardware."
msgstr ""
"隐藏卷允许在加密卷中隐藏数据。这些数据是由一个额外的口令保护的。没有口令，就不可能知道隐藏卷是否存在。它们没有配置默认密码，所以它们的存在可以被`合理地否认<https://en.wikipedia.org/wiki/Plausible_deniability>`__。这个概念类似于`VeraCrypt's/TrueCrypt'的隐藏卷<https://veracrypt.eu/en/docs"
"/hidden-volume/>`__，但在Nitrokey Storage中，隐藏卷的整个功能是通过硬件实现的。"

#: ../storage/hidden.rst:11
msgid ""
"If you chose to use hidden volumes, you must not write any data to the "
"encrypted volume, or you risk loosing data in the hidden volume."
msgstr "如果您选择使用隐藏卷，您必须不向加密卷写入任何数据，否则您有可能丢失隐藏卷中的数据。"

#: ../storage/hidden.rst:14
msgid ""
"Hidden volumes are hidden within the free space of the encrypted volume, "
"which will be overwritten when writing data to the encrypted volume. "
"There are no mechanisms to prevent accidental overwritting of hidden "
"data, as they would reveal the existence of hidden volumes. Data written "
"to the encrypted volume before the creation of the hidden volume can "
"still be read."
msgstr "隐藏卷隐藏在加密卷的自由空间内，当向加密卷写入数据时，会被覆盖。没有任何机制可以防止隐藏数据被意外覆盖，因为它们会暴露隐藏卷的存在。在创建隐藏卷之前写入加密卷的数据仍然可以被读取。"

#: ../storage/hidden.rst:-1
msgid ""
"Hidden volume description. The hidden volumes are within the free space "
"of the encrypted volume."
msgstr "隐藏卷的描述。隐藏卷是在加密卷的自由空间内。"

#: ../storage/hidden.rst:23
msgid "Configuring hidden volumes"
msgstr "配置隐藏卷"

#: ../storage/hidden.rst:26
msgid ""
"Copy some files to the encrypted volume prior to creating the hidden "
"volume."
msgstr "在创建隐藏卷之前，将一些文件复制到加密卷中。"

#: ../storage/hidden.rst:29
msgid ""
"Using a journaling filesystem may risk overwriting the hidden data. The "
"encrypted filesystem is formated to FAT32 by default, and it is "
"recommended to leave it that way when using hidden volumes."
msgstr "使用日记文件系统可能有覆盖隐藏数据的风险。加密文件系统的格式默认为FAT32，建议在使用隐藏卷时保持这种格式。"

#: ../storage/hidden.rst:32
msgid "Unlock the encrypted volume using the Nitrokey App."
msgstr "使用Nitrokey应用程序解锁加密的卷。"

#: ../storage/hidden.rst:33
msgid "In the menu, select \"setup hidden volume\"."
msgstr "在菜单中，选择\"设置隐藏音量\"。"

#: ../storage/hidden.rst
msgid "menu containing the hidden volume setup utility."
msgstr "菜单，其中包含隐藏的音量设置工具。"

#: ../storage/hidden.rst:38
msgid ""
"Enter a strong passphrase twice. Unlike the encrypted volume PIN, there "
"are no limit to the number of attempts at opening hidden volumes, so the "
"strength of the passphrase is extremely important."
msgstr "输入两次强大的口令。与加密卷的PIN码不同，打开隐藏卷的尝试次数是没有限制的，所以口令的强度是非常重要的。"

#: ../storage/hidden.rst:39
msgid ""
"Define the storage area to be used. Hidden volumes are stored in the free"
" areas of the encrypted volume. When creating multiple hidden volume, you"
" need to allocate a part of the free area for each volume, making sure "
"they do not overlap."
msgstr "定义要使用的存储区域。隐藏卷被存储在加密卷的空闲区域。当创建多个隐藏卷时，您需要为每个卷分配一部分空闲区域，确保它们不重叠。"

#: ../storage/hidden.rst
msgid "Hidden volume dialog box"
msgstr "隐藏的体积对话框"

#: ../storage/index.rst:2
msgid "Nitrokey Storage 2"
msgstr "Nitrokey Storage 2"

#: ../storage/linux/encrypted-mobile-storage.rst:2
#: ../storage/mac/encrypted-mobile-storage.rst:2
#: ../storage/windows/encrypted-mobile-storage.rst:2
msgid "Encrypted Mobile Storage"
msgstr "加密的移动存储"

#: ../storage/linux/firmware-update.rst:8
#: ../storage/windows/firmware-update.rst:8
msgid ""
"You should backup all data from the device before upgrading, as firmware "
"upgrades may destroy all data on the device (especially coming from "
"firmware version <0.45)!"
msgstr "在升级之前，你应该备份设备上的所有数据，因为固件升级可能会破坏设备上的所有数据（特别是来自固件版本<0.45的数据）!"

#: ../storage/linux/firmware-update.rst:17
msgid ""
"Download the `Nitrokey App <https://www.nitrokey.com/download>`__ and the"
" program “dfu-programmer” which should be available through your package-"
"manager, e.g. ``apt-get update && apt-get install dfu-programmer`` on "
"Debian-based systems."
msgstr ""
"下载`Nitrokey应用程序<https://www.nitrokey.com/download>`__和程序 \"dfu-"
"programmer\"，这应该可以通过你的软件包管理器获得，例如``apt-get update && apt-get install dfu-"
"programmer``在基于 Debian 的系统上。"

#: ../storage/linux/firmware-update.rst:19
msgid ""
"Download the latest firmware \".hex\" file from `here "
"<https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases/latest>`__ and store it as \"firmware.hex\" in your "
"home folder. Older releases are `here <https://github.com/Nitrokey"
"/nitrokey-storage-firmware/releases>`__."
msgstr ""
"从`这里<https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases/latest>`__下载最新的固件\".hex\"文件，并将其作为\"firmware.hex\"保存在你的主文件夹中。较早的版本是"
" `这里 <https://github.com/Nitrokey/nitrokey-storage-firmware/releases>`__。"

#: ../storage/linux/firmware-update.rst:21
#: ../storage/windows/firmware-update.rst:21
msgid ""
"Right click on the icon of the Nitrokey App and go to “Configure” -> "
"“Enable Firmware Update”. The default firmware password is ‘12345678’."
msgstr "右击Nitrokey应用程序的图标，进入 \"配置\"-> \"启用固件更新\"。默认的固件密码是 \"12345678\"。"

#: ../storage/linux/firmware-update.rst ../storage/windows/firmware-update.rst
msgid "Enable firmware update"
msgstr "启用固件更新"

#: ../storage/linux/firmware-update.rst:28
#: ../storage/windows/firmware-update.rst:28
msgid ""
"The Nitrokey Storage is not detected by Nitrokey App anymore once update "
"mode got activated. You have to proceed with the instructions described "
"below to make it work again."
msgstr "一旦更新模式被激活，Nitrokey应用程序就无法检测到Nitrokey存储。你必须按照下面的说明进行操作，使其重新工作。"

#: ../storage/linux/firmware-update.rst:33
msgid "Open a terminal and execute:"
msgstr "打开一个终端并执行。"

#: ../storage/linux/firmware-update.rst:42
msgid ""
"whereas “firmware.hex” needs to be the path and file name of the firmware"
" which you downloaded in step 2."
msgstr "而 \"firmware.hex \"需要是你在步骤2中下载的固件的路径和文件名。"

#: ../storage/linux/firmware-update-manually.rst:2
#: ../storage/mac/firmware-update-manually.rst:2
#: ../storage/windows/firmware-update-manually.rst:2
msgid "Activate Update Mode Manually"
msgstr "手动激活更新模式"

#: ../storage/linux/hidden.rst:4 ../storage/mac/hidden.rst:4
#: ../storage/windows/hidden.rst:4
msgid "Using hidden volumes"
msgstr "使用隐藏卷"

#: ../storage/linux/hidden.rst:6 ../storage/mac/hidden.rst:6
#: ../storage/windows/hidden.rst:6
msgid "Unlock the encrypted volume."
msgstr "解除对加密卷的锁定。"

#: ../storage/linux/hidden.rst:8 ../storage/mac/hidden.rst:8
#: ../storage/windows/hidden.rst:8
msgid ""
"Select \"unlock hidden volume\" and enter any of the hidden volume's "
"passwords."
msgstr "选择\"解锁隐藏卷\"，并输入任何一个隐藏卷的密码'。"

#: ../storage/linux/hidden.rst:10
msgid ""
"If this is the first time you unlock the hidden volume, you may need to "
"create a partition on the hidden volume. You will need to open a "
"partition manager such as `GParted <https://gparted.org/>`__ and create "
"one or more partitions manually. Make sure to create the partitions on "
"the device that appeared when unlocking the hidden volume."
msgstr "如果这是您第一次解锁隐藏卷，您可能需要在隐藏卷上创建一个分区。您将需要打开一个分区管理器，如`GParted<https://gparted.org/>`__，并手动创建一个或多个分区。请确保在解锁隐藏卷时出现的设备上创建分区。"

#: ../storage/linux/hidden.rst:-1
msgid "Hidden volume partitioning"
msgstr "隐藏卷的分区"

#: ../storage/linux/hidden.rst:15 ../storage/mac/hidden.rst:12
#: ../storage/windows/hidden.rst:19
msgid ""
"Make sure to unmount/eject all partitions on the hidden volumes before "
"locking or disconnecting the Nitrokey."
msgstr "在锁定或断开Nitrokey之前，请确保卸载/弹出隐藏卷上的所有分区。"

#: ../storage/linux/index.rst:2
msgid "Nitrokey Storage, Linux"
msgstr "Nitrokey Storage, Linux"

#: ../storage/linux/index.rst:20 ../storage/mac/index.rst:19
#: ../storage/windows/index.rst:25
msgid ""
"Open the About window from Nitrokey App’s menu and check if you have the "
"`latest firmware <https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases>`__ installed. If it’s not the latest, please `update "
"<firmware-update.html>`_."
msgstr ""
"从Nitrokey应用程序的菜单中打开 \"关于 \"窗口，检查你是否安装了`最新的固件<https://github.com/Nitrokey"
"/nitrokey-storage-firmware/releases>`__。如果它不是最新的，请`更新<firmware-"
"update.html>`_。"

#: ../storage/linux/index.rst:26 ../storage/mac/index.rst:24
#: ../storage/windows/index.rst:28
msgid ""
"Use the Nitrokey App to change the default User PIN (default: 123456) and"
" Admin PIN (default: 12345678) to your own choices."
msgstr "使用Nitrokey应用程序，将默认的用户密码（默认：123456）和管理密码（默认：12345678）改为您自己的选择。"

#: ../storage/linux/openvpn-easyrsa.rst:15
msgid ""
"To sign the certificates, we will use a `Nitrokey HSM 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__ set"
" up as `Certificate Authority <../../hsm/linux/certificate-authority.html"
"#creating-the-intermediate-certificate-authority>`_, however this guide "
"does not cover the set up of the CA itself (it is clear and `well "
"documented here <../../hsm/linux/certificate-authority.html#sign-a"
"-server-certificate>`_)."
msgstr ""
"为了签署证书，我们将使用`Nitrokey HSM 2 <https://shop.nitrokey.com/shop/product/nk-"
"pro-2-nitrokey-pro-2-3>`__设置为`认证机构<../../hsm/linux/certificate-"
"authority.html#creating-the-intermediate-certificate-"
"authority>`_。然而，本指南并不包括CA本身的设置（它很清楚，并且`这里有很好的记录<../../hsm/linux"
"/certificate-authority.html#sign-a-server-certificate>`_）。"

#: ../storage/linux/openvpn-easyrsa.rst:60
msgid "Install OpenVPN"
msgstr "安装 OpenVPN"

#: ../storage/linux/openvpn-easyrsa.rst:119
msgid "Install Easy-RSA"
msgstr "安装 Easy-RSA"

#: ../storage/linux/openvpn-easyrsa.rst:139
msgid "Create a PKI for OpenVPN server"
msgstr "为 OpenVPN 服务器创建 PKI"

#: ../storage/linux/openvpn-easyrsa.rst:177
msgid "Create ``server.req`` and ``server.key``"
msgstr "创建``server.req`` 和``server.key``"

#: ../storage/linux/openvpn-easyrsa.rst:231
msgid "Sign and retrieve ``server.crt``"
msgstr "签署和检索``server.crt``"

#: ../storage/linux/openvpn-easyrsa.rst:306
msgid "Configure the OpenVPN server"
msgstr "配置 OpenVPN 服务器"

#: ../storage/linux/openvpn-easyrsa.rst:310
msgid "The root certificate file (CA.crt or chain.crt in our setup)"
msgstr "根证书文件（在我们的设置中为 CA.crt 或 chain.crt）"

#: ../storage/linux/openvpn-easyrsa.rst:311
msgid "Server certificate"
msgstr "服务器证书"

#: ../storage/linux/openvpn-easyrsa.rst:312
msgid "Server key"
msgstr "服务器密钥"

#: ../storage/linux/openvpn-easyrsa.rst:313
msgid "Diffie Hellman Parameters (optional)"
msgstr "Diffie Hellman 参数（可选）"

#: ../storage/linux/openvpn-easyrsa.rst:361
msgid "Start the OpenVPN service on the server"
msgstr "在服务器上启动 OpenVPN 服务"

#: ../storage/linux/openvpn-easyrsa.rst:382
msgid "Install OpenVPN and Easy-RSA"
msgstr "安装 OpenVPN 和 Easy-RSA"

#: ../storage/linux/openvpn-easyrsa.rst:390
msgid "$ sudo dnf install openvpn easy-rsa"
msgstr "$ sudo dnf install openvpn easy-rsa"

#: ../storage/linux/openvpn-easyrsa.rst:405
msgid "Create a PKI for the OpenVPN client"
msgstr "为 OpenVPN 客户端创建 PKI"

#: ../storage/linux/openvpn-easyrsa.rst:410
msgid "Create a ``client.req`` and ``client.key``"
msgstr "创建``client.req`` 和``client.key``"

#: ../storage/linux/openvpn-easyrsa.rst:416
msgid "Sign ``client.req`` and issue the ``client.crt`` file"
msgstr "签署``client.req`` 并发布``client.crt`` 文件"

#: ../storage/linux/openvpn-easyrsa.rst:427
msgid "Import ``client.crt`` on the Nitrokey from the CA machine"
msgstr "从 CA 机器在 Nitrokey 上导入``client.crt``"

#: ../storage/linux/openvpn-easyrsa.rst:450
msgid "Retrieve the ``chain.crt`` file from the CA machine"
msgstr "从 CA 机器读取``chain.crt`` 文件"

#: ../storage/linux/openvpn-easyrsa.rst:455
msgid "Configure the client to interact with the Nitrokey"
msgstr "配置客户端与 Nitrokey 交互"

#: ../storage/linux/openvpn-easyrsa.rst:459
msgid "The root certificate file (`chain.crt`)"
msgstr "根证书文件 (`chain.crt`)"

#: ../storage/linux/openvpn-easyrsa.rst:460
msgid "Client certificate"
msgstr "客户证书"

#: ../storage/linux/openvpn-easyrsa.rst:461
msgid "Client key"
msgstr "客户密钥"

#: ../storage/linux/openvpn-easyrsa.rst:606
msgid "Start the OpenVPN client"
msgstr "启动 OpenVPN 客户端"

#: ../storage/windows/firmware-update.rst:17
msgid ""
"Download the `Nitrokey App <https://www.nitrokey.com/download>`__ and the"
" `Nitrokey Update Tool <https://github.com/Nitrokey/nitrokey-update-"
"tool/releases/latest>`__. The Nitrokey Update Tool is currently available"
" for macOS and Windows only."
msgstr ""
"下载`Nitrokey应用程序<https://www.nitrokey.com/download>`__和`Nitrokey更新工具<https://github.com/Nitrokey"
"/nitrokey-update-"
"tool/releases/latest>`__。Nitrokey更新工具目前仅适用于macOS和Windows。"

#: ../storage/windows/firmware-update.rst:19
msgid ""
"Download the latest firmware \".hex\" file from `here "
"<https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases/latest>`__. Older releases are `here "
"<https://github.com/Nitrokey/nitrokey-storage-firmware/releases>`__."
msgstr ""
"从`这里<https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases/latest>`__下载最新的固件\" .hex\" 文件。较早的版本是`here "
"<https://github.com/Nitrokey/nitrokey-storage-firmware/releases>`__。"

#: ../storage/windows/firmware-update.rst:34
msgid ""
"If you are using Microsoft Windows Build 1809 and Nitrokey Storage "
"Firmware 0.52 or lower, you need to use another system or if this is not "
"feasible use `these instructions <firmware-update-manually.html>`_ to "
"enable the Firmware Update mode."
msgstr ""
"如果你使用的是微软Windows Build 1809和Nitrokey Storage Firmware "
"0.52或更低版本，你需要使用其他系统，如果这不可行，请使用`这些说明<firmware-update-"
"manually.html>`_来启用固件更新模式。"

#: ../storage/windows/firmware-update.rst:40
msgid ""
"Start the Nitrokey Update Tool and click “Select firmware file”. Select "
"the previously downloaded firmware \".hex\" file. Click on “Update "
"firmware” to start the update process. Your device should get detected by"
" the Nitrokey App again as soon as the update is finished."
msgstr ""
"启动Nitrokey更新工具并点击 \"选择固件文件\"。选择先前下载的固件\".hex\"文件。点击 "
"\"更新固件\"，开始更新过程。更新完成后，你的设备应该会被Nitrokey应用程序再次检测到。"

#: ../storage/windows/firmware-update.rst
msgid "Nitrokey Update Tool"
msgstr "硝基钥匙更新工具"

#: ../storage/mac/hidden.rst:10
msgid ""
"If this is the first time you unlock the hidden volume, you may need to "
"create a partition on the hidden volume. You will need to use `Disk "
"Utility <https://support.apple.com/en-gb/guide/disk-"
"utility/dskutl14027/mac>`__. Make sure to create the partitions on the "
"device that appeared when unlocking the hidden volume."
msgstr ""
"如果这是您第一次解锁隐藏卷，您可能需要在隐藏卷上创建一个分区。您将需要使用`Disk "
"Utility<https://support.apple.com/en-gb/guide/disk-"
"utility/dskutl14027/mac>`__。请确保在解锁隐藏卷时出现的设备上创建分区。"

#: ../storage/mac/index.rst:2
msgid "Nitrokey Storage, Mac"
msgstr "Nitrokey Storage, Mac"

#: ../storage/mac/index.rst:13
msgid ""
"Important: Once you plug in the Nitrokey, your computer will start the "
"Keyboard Setup Assistant. **Don’t run through this assistant but exit it "
"right away.**"
msgstr "重要的是。一旦你插入Nitrokey，你的电脑将启动键盘设置助手。**不要运行这个助手，而是立即退出。"

#: ../storage/mac/index.rst:16
msgid ""
"Download and start the `Nitrokey App "
"<https://www.nitrokey.com/download>`__. Perhaps you want to store it on "
"the unencrypted partition of your Nitrokey Storage"
msgstr ""
"下载并启动`Nitrokey App "
"<https://www.nitrokey.com/download>`__。也许你想把它储存在你的Nitrokey存储器的未加密分区上"

#: ../storage/windows/hidden.rst:10
msgid ""
"If this is the first time you unlock the hidden volume, you may need to "
"create a partition on the hidden volume. In this case, Windows will "
"prompt you to do so. You can then format the hidden volume using FAT32, "
"for compatibility with most operating systems."
msgstr "如果这是您第一次解锁隐藏卷，您可能需要在隐藏卷上创建一个分区。在这种情况下，Windows会提示您这样做。然后，您可以使用FAT32格式化隐藏卷，以便与大多数操作系统兼容。"

#: ../storage/windows/hidden.rst:-1
msgid "Windows formating prompt"
msgstr "Windows格式化提示"

#: ../storage/windows/hidden.rst:-1
msgid "Windows formating tool"
msgstr "Windows格式化工具"

#: ../storage/windows/index.rst:2
msgid "Nitrokey Storage, Windows"
msgstr "Nitrokey Storage, Windows"

#: ../storage/windows/index.rst:19
msgid ""
"Download and start the `Nitrokey App "
"<https://www.nitrokey.com/download>`__. Perhaps you want to store it on "
"the unencrypted partition of your Nitrokey Storage. There won’t open a "
"window, but an icon appears in the system tray (see screenshot below). "
"Please right-click on this icon to use all the options of the App."
msgstr "下载并启动`Nitrokey应用程序<https://www.nitrokey.com/download>`__。也许你想把它储存在你的Nitrokey存储的未加密分区。那里不会打开一个窗口，但在系统托盘上会出现一个图标（见下面的截图）。请右击这个图标，以使用该应用程序的所有选项。"

#: ../syntax.rst:4
msgid "Nitrokey Documentation - Syntax"
msgstr "Nitrokey文档 - 语法"

#: ../syntax.rst:9
msgid "Code Blocks Syntax Highlighting"
msgstr "代码块的语法高亮"

#: ../syntax.rst:11
msgid ""
"Syntax Highlighting is disabled by default. To enable it for a specific "
"code snippet use the following:"
msgstr "语法高亮在默认情况下是禁用的。要为一个特定的代码片断启用它，请使用以下方法。"

#: ../syntax.rst:19
msgid "H2 Heading"
msgstr "H2标题"

#: ../syntax.rst:22
msgid "Some text with ``inline.code();``"
msgstr "一些带有``inline.code();``的文字。"

#: ../syntax.rst:24
msgid "This is a bulleted list."
msgstr "这是一个列举式清单。"

#: ../syntax.rst:25
msgid "It has two items, the second item uses two lines."
msgstr "它有两个项目，第二个项目使用两行。"

#: ../syntax.rst:28 ../syntax.rst:33
msgid "This is a numbered list."
msgstr "这是一份编号的清单。"

#: ../syntax.rst:29 ../syntax.rst:34
msgid "It has two items too."
msgstr "它也有两个项目。"

#: ../syntax.rst:31
msgid "Normal text again."
msgstr "又是正常的文字。"

#: ../syntax.rst:36
msgid "this is"
msgstr "这就是"

#: ../syntax.rst:37
msgid "a list"
msgstr "一览表"

#: ../syntax.rst:39
msgid "with a nested list"
msgstr "用一个嵌套的列表"

#: ../syntax.rst:40
msgid "and some subitems"
msgstr "和一些子项目"

#: ../syntax.rst:42
msgid "and here the parent list continues"
msgstr "而在这里，父母的名单还在继续"

#: ../syntax.rst:44
msgid "These lines are"
msgstr "这些线是"

#: ../syntax.rst:45
msgid "broken exactly like in"
msgstr "破碎，就像在"

#: ../syntax.rst:46
msgid "the source file."
msgstr "的源文件。"

#: ../syntax.rst:49
msgid "H3 Heading"
msgstr "H3标题"

#: ../syntax.rst:52
msgid "Only the following message boxes should be used:"
msgstr "只应使用以下信息框。"

#: ../syntax.rst:56
msgid "Warning text."
msgstr "警告文字。"

#: ../syntax.rst:60
msgid "Note text."
msgstr "注释文本。"

#: ../syntax.rst:64
msgid "Important text."
msgstr "重要文本。"

#: ../syntax.rst:68
msgid "Tip text."
msgstr "提示文本。"

#: ../syntax.rst:77
msgid "Grid Table"
msgstr "网格表"

#: ../syntax.rst:80
msgid "Header 1"
msgstr "页首1"

#: ../syntax.rst:80
msgid "Header 2"
msgstr "标题2"

#: ../syntax.rst:80
msgid "Header 3"
msgstr "标题3"

#: ../syntax.rst:82
msgid "body row 1"
msgstr "身体第1行"

#: ../syntax.rst:82
msgid "column 2"
msgstr "第2栏"

#: ../syntax.rst:82
msgid "column 3"
msgstr "第3栏"

#: ../syntax.rst:84
msgid "body row 2"
msgstr "身体第2行"

#: ../syntax.rst:84
msgid "Cells may span columns."
msgstr "单元格可以跨越列。"

#: ../syntax.rst:86
msgid "body row 3"
msgstr "身体第3行"

#: ../syntax.rst:86
msgid "Cells may span rows."
msgstr "单元格可以横跨行。"

#: ../syntax.rst:86
msgid "Cells"
msgstr "细胞"

#: ../syntax.rst:87
msgid "contain"
msgstr "含有"

#: ../syntax.rst:88
msgid "blocks."
msgstr "块。"

#: ../syntax.rst:88
msgid "body row 4"
msgstr "身体第4行"

#: ../syntax.rst:92
msgid "Simple Table"
msgstr "简单的桌子"

#: ../syntax.rst:95
msgid "Inputs"
msgstr "输入"

#: ../syntax.rst:95
msgid "Output"
msgstr "输出"

#: ../syntax.rst:97
msgid "A"
msgstr "A"

#: ../syntax.rst:97
msgid "B"
msgstr "B"

#: ../syntax.rst:97
msgid "A or B"
msgstr "A或B"

#: ../syntax.rst:99 ../syntax.rst:100 ../syntax.rst:101
msgid "False"
msgstr "假的"

#: ../syntax.rst:100 ../syntax.rst:101 ../syntax.rst:102
msgid "True"
msgstr "真"

#: ../syntax.rst:105
msgid ""
"This is a text that needs to be translated automatically. This is another"
" Line to be translated."
msgstr "这是一个需要自动翻译的文本。这是另一条需要翻译的线路。"

#: ../syntax.rst:108
msgid ""
"This line is one of the tests for the automated translation workflow with"
" weblate."
msgstr "这一行是对weblate的自动翻译工作流程的测试之一。"

#: ../syntax.rst:109
msgid "Adding this text should trigger the complete workflow of translation."
msgstr "添加此文本应触发完整的翻译工作流程。"

#: ../syntax.rst:111
msgid ""
"This is `a Link  <https://f-droid.org/F-Droid.apk>`_ with the definition "
"of the url inline."
msgstr "这是`一个链接<https://f-droid.org/F-Droid.apk>`_，内嵌有url的定义。"

#: ../syntax.rst:113
msgid ""
"This is another thest for `a URL  <https://f-droid.org/F-Droid.apk>`_ to "
"test translation."
msgstr "这是对`一个URL <https://f-droid.org/F-Droid.apk>`_的另一个测试翻译。"

#: ../syntax.rst:116
msgid "This is a plain link https://foobar.bas/slug1/slug2"
msgstr "这是一个普通的链接https://foobar.bas/slug1/slug2"

#: ../syntax.rst:118
msgid ""
"This line contains the product name Nitrokey Start an should not be "
"altered by the translation."
msgstr "这一行包含产品名称Nitrokey Start，不应该被翻译所改变。"

#: ../syntax.rst:121
msgid ""
"This command automatically inserts the title of an internal doc page you "
"link to ::doc:: /link/to/doc"
msgstr "这个命令会自动插入你链接到的内部文档页的标题：:doc:。/link/to/doc"

#: ../syntax.rst:125
msgid "Mark cropped Output"
msgstr "标记裁剪的输出"

#: ../u2f/index.rst:2
msgid "Nitrokey FIDO U2F"
msgstr "Nitrokey FIDO U2F"

#: ../u2f/index.rst:6
msgid "Choose your operating system:"
msgstr "选择你的操作系统。"

#: ../u2f/linux/index.rst:2
msgid "Nitrokey FIDO U2F With Linux"
msgstr "Nitrokey FIDO U2F与Linux"

#: ../u2f/shared/index-content1.rst:1
msgid ""
"The Nitrokey FIDO U2F supports **two-factor authentication (2FA)**. With "
"two-factor authentication (2FA), the Nitrokey FIDO U2F is checked in "
"addition to the password."
msgstr ""
"Nitrokey FIDO U2F支持**双因素认证（2FA）**。在双因素认证（2FA）下，除了密码外，还要检查Nitrokey FIDO "
"U2F的情况。"

#: ../u2f/shared/index-content1.rst:5
msgid "The Nitrokey FIDO U2F can be used with any current browser."
msgstr "Nitrokey FIDO U2F可与当前任何浏览器一起使用。"

#: ../u2f/shared/index-content1.rst:16
msgid ""
"Register your Nitrokey FIDO U2F in the account settings by touching the "
"button to activate the Nitrokey FIDO U2F. After you have successfully "
"configured the device, you must activate the Nitrokey FIDO U2F this way "
"each time you log in."
msgstr ""
"在账户设置中通过触摸激活Nitrokey FIDO U2F的按钮来注册你的Nitrokey FIDO "
"U2F。在你成功配置设备后，你必须在每次登录时以这种方式激活Nitrokey FIDO U2F。"

#: ../u2f/shared/index-content1.rst:25
msgid "The Nitrokey App can not be used for the Nitrokey FIDO U2F."
msgstr "Nitrokey应用程序不能用于Nitrokey FIDO U2F。"

#: ../u2f/linux/index.rst:18
msgid ""
"If the Nitrokey is not accepted immediately, you may need to copy this "
"file `41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__ to "
"``etc/udev/rules.d/``. In very rare cases, the system will need the "
"`older version "
"<https://raw.githubusercontent.com/Nitrokey/libnitrokey/master/data/41-nitrokey_old.rules>`__"
" of this file."
msgstr ""
"如果硝基钥匙没有立即被接受，你可能需要复制这个文件`41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__到``etc/udev/rules.d/`__。在非常罕见的情况下，系统将需要这个文件的`较旧版本<https://raw.githubusercontent.com/Nitrokey/libnitrokey/master/data/41-nitrokey_old.rules>`__。"

#: ../u2f/linux/index.rst:26
msgid "After copying the file, restart udev via ``sudo service udev restart``."
msgstr "复制文件后，通过``sudo service udev restart``重新启动udev。"

#: ../u2f/mac/index.rst:2
msgid "Nitrokey FIDO U2F With macOS"
msgstr "Nitrokey FIDO U2F与macOS的关系"

#: ../u2f/windows/index.rst:2
msgid "Nitrokey FIDO U2F With Windows"
msgstr "Nitrokey FIDO U2F与Windows"

#: ../u2f/windows/index.rst:13
msgid ""
"The first time you plug in the Nitrokey FIDO U2F Windows may need some "
"time to configure the device."
msgstr "第一次插入Nitrokey FIDO U2F时，Windows可能需要一些时间来配置设备。"

#~ msgid ""
#~ "Checkout the `various use cases and "
#~ "supported applications "
#~ "<https://www.nitrokey.com/documentation/applications#p:nitrokey-"
#~ "fido-u2f&os:all>`__."
#~ msgstr ""
#~ "查看`各种使用案例和支持的应用 "
#~ "<https://www.nitrokey.com/documentation/applications#p:nitrokey-"
#~ "fido-u2f&os:all>`__。"

#~ msgid ""
#~ "Install `OpenSC "
#~ "<https://github.com/OpenSC/OpenSC/wiki>`__. You need "
#~ "at least version 0.19. You can "
#~ "find recent builds for debian-based "
#~ "systems like Ubuntu `here "
#~ "<https://github.com/Nitrokey/opensc-build>`__ if "
#~ "your system does not have the "
#~ "newest version of OpenSC. Alternatively, "
#~ "install `this <https://www.cardcontact.de/download/sc-"
#~ "hsm-starterkit.zip>`__ driver (`source "
#~ "<https://github.com/CardContact/sc-hsm-embedded>`__)."
#~ msgstr ""
#~ "安装`OpenSC "
#~ "<https://github.com/OpenSC/OpenSC/wiki>`__。你至少需要0.19版本。你可以在`这里找到基于debian的系统的最新构建，如Ubuntu"
#~ " <https://github.com/Nitrokey/opensc-"
#~ "build>`__，如果你的系统没有OpenSC的最新版本。或者，安装`这个<https://www.cardcontact.de/download"
#~ "/sc-hsm-starterkit.zip>`__驱动程序（`source "
#~ "<https://github.com/CardContact/sc-hsm-embedded>`__）。"

#~ msgid ""
#~ "Define SO-PIN and PIN of your "
#~ "own choices. See `these instructions "
#~ "<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#initialize-"
#~ "the-device>`__. Afterwards you can begin"
#~ " to `generate new keys "
#~ "<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#generate-"
#~ "key-pair>`__."
#~ msgstr ""
#~ "定义你自己选择的SO-"
#~ "PIN和PIN。见`这些说明<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM"
#~ "#initialize-the-"
#~ "device>`__。之后你可以开始`生成新的钥匙<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM"
#~ "#generate-key-pair>`__。"

#~ msgid ""
#~ "Nitrokey Storage 2: You need to "
#~ "install OpenSC in version 0.18 or "
#~ "higher. You can find the files on"
#~ " the `OpenSC website "
#~ "<https://github.com/OpenSC/OpenSC/releases>`__ for Windows"
#~ " and macOS user or `here "
#~ "<https://github.com/Nitrokey/opensc-build>`__ for "
#~ "Debian/Ubuntu users."
#~ msgstr ""
#~ "Nitrokey Storage "
#~ "2：你需要安装0.18或更高版本的OpenSC。你可以在`OpenSC网站<https://github.com/OpenSC/OpenSC/releases>`__为Windows和macOS用户找到这些文件，或者`这里<https://github.com/Nitrokey"
#~ "/opensc-build>`__为 Debian/Ubuntu用户找到。"

#~ msgid "nitropy command line tool"
#~ msgstr "nitropy命令行工具"

#~ msgid "REST API"
#~ msgstr "REST API"

#~ msgid "Accessing a NetHSM instance"
#~ msgstr "访问一个NetHSM实例"

#~ msgid ""
#~ "These guides explain how to access "
#~ "a NetHSM using three three different "
#~ "methods:"
#~ msgstr "这些指南解释了如何使用三种不同的方法来访问网络安全管理系统。"

#~ msgid ""
#~ "Modify the configuration file ``p11nethsm-"
#~ "config.yaml`` according to your setup "
#~ "(e.g. address, operator name) and store"
#~ " it in ``$HOME/.nitrokey``, ``/etc/nitrokey/``,"
#~ " or in the folder where your "
#~ "application is executed."
#~ msgstr ""
#~ "根据你的设置（例如，地址）修改配置文件``p11nethsm-"
#~ "config.yaml``，并将其存储在``$HOME/.nitrokey`中。地址、操作员名称），并将其存储在``$HOME/.nitrokey`，``/etc/nitrokey/``，或在执行你的应用程序的文件夹中。"

#~ msgid ""
#~ "Download the `latest firmware "
#~ "<https://www.nitrokey.com/files/ci/nitropad/heads>`__ and "
#~ "store it on a USB drive. For "
#~ "the NitroPad T430 use "
#~ "``heads-t430-[version].rom`` and for the "
#~ "NitroPad X230 use ``heads-x230-hotp-"
#~ "verification-[version].rom``."
#~ msgstr ""
#~ "下载`最新的固件<https://www.nitrokey.com/files/ci/nitropad/heads>`__并将其存储在一个USB驱动器上。对于NitroPad"
#~ " T430，使用``heads-t430-[version].rom``，对于NitroPad "
#~ "X230，使用``heads-x230-hotp-verification-[version].rom`。"

#~ msgid "Qubes OS"
#~ msgstr "Qubes操作系统"

#~ msgid "Ubuntu Linux"
#~ msgstr "乌班图Linux"

#~ msgid ""
#~ "Optional: Download hash sum and `verify"
#~ " <https://proprivacy.com/guides/how-why-and-"
#~ "when-you-should-hash-check#how-to-"
#~ "hash-check>`__ the downloaded operating "
#~ "system image: `Ubuntu Linux "
#~ "<https://www.nitrokey.com/files/ci/nitropad/ubuntu-oem/>`__, "
#~ "`Qubes OS <https://www.nitrokey.com/files/ci/nitropad"
#~ "/qubes-oem/>`__, `Debian "
#~ "<https://www.nitrokey.com/files/ci/nitropad/debian-oem/>`__, "
#~ "`Linux Mint "
#~ "<https://www.nitrokey.com/files/linuxmint/latest.iso.sha256sum>`__"
#~ msgstr ""
#~ "可选的。下载哈希值并`验证<https://proprivacy.com/guides/how-why-"
#~ "and-when-you-should-hash-check#how-"
#~ "to-hash-check>`__下载的操作系统镜像。`Ubuntu Linux "
#~ "<https://www.nitrokey.com/files/ci/nitropad/ubuntu-oem/>`__, "
#~ "`Qubes OS <https://www.nitrokey.com/files/ci/nitropad"
#~ "/qubes-oem/>`__。`Debian "
#~ "<https://www.nitrokey.com/files/ci/nitropad/debian-oem/>`__, "
#~ "`Linux Mint "
#~ "<https://www.nitrokey.com/files/linuxmint/latest.iso.sha256sum>`__"

#~ msgid ""
#~ "You can change the user PIN with"
#~ " the Nitrokey App if using a "
#~ "Nitrokey Pro or Nitrokey Storage. In "
#~ "the `Nitrokey <https://www.nitrokey.com/download>`__ "
#~ "App open ‘Menu -> Configure -> "
#~ "Change User PIN’ to open the "
#~ "dialog to change the PIN."
#~ msgstr ""
#~ "如果使用Nitrokey Pro或Nitrokey Storage，你可以通过Nitrokey "
#~ "App更改用户密码。在`Nitrokey "
#~ "<https://www.nitrokey.com/download>`__应用程序中，打开'菜单-> 配置-> "
#~ "更改用户密码'，以打开更改密码的对话框。"

#~ msgid ""
#~ "You can change the admin PIN with"
#~ " the Nitrokey App if using a "
#~ "Nitrokey Pro or Nitrokey Storage. In "
#~ "the `Nitrokey App "
#~ "<https://www.nitrokey.com/download>`__ open ‘Menu ->"
#~ " Configure -> Change Admin PIN’ to"
#~ " open the dialog to change the "
#~ "PIN."
#~ msgstr ""
#~ "如果使用Nitrokey Pro或Nitrokey Storage，你可以通过Nitrokey "
#~ "App更改管理密码。在`Nitrokey应用程序<https://www.nitrokey.com/download>`__中，打开'菜单->"
#~ " 配置-> 更改管理密码'，以打开更改密码的对话框。"

#~ msgid ""
#~ "Download one of the operating system "
#~ "images: `Ubuntu Linux "
#~ "<https://www.nitrokey.com/files/ubuntu/latest-nitropc.iso>`__,"
#~ " Qubes OS (`English "
#~ "<https://www.nitrokey.com/files/qubes/latest-nitropc-"
#~ "en.iso>`__, `German <https://www.nitrokey.com/files/qubes"
#~ "/latest-nitropc-de.iso>`__), `Debian "
#~ "<https://www.nitrokey.com/files/debian/latest-nitropc.iso>`__,"
#~ " `Linux Mint "
#~ "<https://www.nitrokey.com/files/linuxmint/latest.iso>`__"
#~ msgstr ""
#~ "下载其中一个操作系统图像。`Ubuntu Linux "
#~ "<https://www.nitrokey.com/files/ubuntu/latest-nitropc.iso>`__,"
#~ " Qubes OS (`English "
#~ "<https://www.nitrokey.com/files/qubes/latest-nitropc-"
#~ "en.iso>`__,`德语 <https://www.nitrokey.com/files/qubes/latest-"
#~ "nitropc-de.iso>`__）, `Debian "
#~ "<https://www.nitrokey.com/files/debian/latest-nitropc.iso>`__,"
#~ " `Linux Mint "
#~ "<https://www.nitrokey.com/files/linuxmint/latest.iso>`__"

#~ msgid ""
#~ "Optional: Download hash sum and `verify"
#~ " <https://proprivacy.com/guides/how-why-and-"
#~ "when-you-should-hash-check#how-to-"
#~ "hash-check>`__ the downloaded operating "
#~ "system image: `Ubuntu Linux "
#~ "<https://www.nitrokey.com/files/ubuntu/latest-"
#~ "nitropc.iso.sha256sum>`__, Qubes OS (`English "
#~ "<https://www.nitrokey.com/files/qubes/latest-nitropc-"
#~ "en.iso.sha256sum>`__, `German "
#~ "<https://www.nitrokey.com/files/qubes/latest-nitropc-"
#~ "de.iso.sha256sum>`__), `Debian "
#~ "<https://www.nitrokey.com/files/debian/latest-"
#~ "nitropc.iso.sha256sum>`__, `Linux Mint "
#~ "<https://www.nitrokey.com/files/linuxmint/latest.iso.sha256sum>`__"
#~ msgstr ""
#~ "可选的。下载哈希值并`验证<https://proprivacy.com/guides/how-why-"
#~ "and-when-you-should-hash-check#how-"
#~ "to-hash-check>`__下载的操作系统镜像。`Ubuntu Linux "
#~ "<https://www.nitrokey.com/files/ubuntu/latest-"
#~ "nitropc.iso.sha256sum>`__，Qubes OS（`English "
#~ "<https://www.nitrokey.com/files/qubes/latest-nitropc-"
#~ "en.iso.sha256sum>`__。`德语 <https://www.nitrokey.com/files/qubes"
#~ "/latest-nitropc-de.iso.sha256sum>`__）, `Debian "
#~ "<https://www.nitrokey.com/files/debian/latest-"
#~ "nitropc.iso.sha256sum>`__, `Linux Mint "
#~ "<https://www.nitrokey.com/files/linuxmint/latest.iso.sha256sum>`__"

#~ msgid ""
#~ "Many apps work without Google Play "
#~ "Services. However, if you want to "
#~ "use apps that require Google Play "
#~ "Services, you can install `Google Play"
#~ " Services in a sandbox "
#~ "<https://grapheneos.org/usage#sandboxed-play-services>`__"
#~ " as follows. In the future, an "
#~ "installer will be provided to simplify"
#~ " the installation process. **Optional**: To"
#~ " prevent some apps from accessing "
#~ "Google Play Services, install Google "
#~ "Play Services in a separate profile. "
#~ "To do this, install Shelter from "
#~ "the F-Droid store beforehand. Then, "
#~ "perform the following installation steps "
#~ "in the working profile."
#~ msgstr ""
#~ "许多应用程序可以在没有Google Play服务的情况下运行。但是，如果你想使用需要Google "
#~ "Play服务的应用程序，你可以在沙盒中安装`Google Play服务<https://grapheneos.org/usage"
#~ "#sandboxed-play-"
#~ "services>`__，如下。在未来，将提供一个安装程序来简化安装过程。**可选择**。为了防止一些应用程序访问Google "
#~ "Play服务，请在一个单独的配置文件中安装Google Play服务。要做到这一点，事先从F-"
#~ "Droid商店安装Shelter。然后，在工作配置文件中执行以下安装步骤。"

#~ msgid ""
#~ "Install `com.google.android.gsf "
#~ "<https://apps.grapheneos.org/packages/com.google.android.gsf/>`__."
#~ msgstr ""
#~ "安装 `com.google.android.gsf "
#~ "<https://apps.grapheneos.org/packages/com.google.android.gsf/>`__。"

#~ msgid ""
#~ "Install `com.google.android.gms "
#~ "<https://apps.grapheneos.org/packages/com.google.android.gms/>`__."
#~ msgstr ""
#~ "安装 `com.google.android.gms "
#~ "<https://apps.grapheneos.org/packages/com.google.android.gms/>`__。"

#~ msgid ""
#~ "Download all 5 files from "
#~ "`com.android.vending "
#~ "<https://apps.grapheneos.org/packages/com.android.vending/>`__."
#~ msgstr ""
#~ "从`com.android.vending "
#~ "<https://apps.grapheneos.org/packages/com.android.vending/>`__下载所有5个文件。"

#~ msgid "Open Aurora Store and install Split APKs Installer (SAI)."
#~ msgstr "打开Aurora商店并安装Split APKs Installer（SAI）。"

#~ msgid ""
#~ "Open Split APKs Installer and install"
#~ " all five files you downloaded in "
#~ "step 3. Note: The correct base "
#~ "file has probably been renamed to "
#~ "*base (2).apk*."
#~ msgstr "打开Split APKs安装程序，安装你在步骤3中下载的所有五个文件。注意：正确的基础文件可能已经被重命名为*base (2).apk*。"

#~ msgid ""
#~ "`Here <https://github.com/Peter-Easton/GrapheneOS-"
#~ "Knowledge/tree/master/App%20Compatibilty%20List>`__ you "
#~ "can check the compatibility of some "
#~ "popular apps."
#~ msgstr ""
#~ "`这里 <https://github.com/Peter-Easton/GrapheneOS-"
#~ "Knowledge/tree/master/App%20Compatibilty%20List>%20List>`__你可以检查一些流行的应用程序的兼容性。"

#~ msgid "Scramble PIN Layout"
#~ msgstr "争夺密码的布局"

#~ msgid "*Settings -> Security -> PIN scrambling -> Scramble PIN*"
#~ msgstr "*设置->；安全->；PIN码加解->；加解PIN码*。"

#~ msgid "Kill Switch"
#~ msgstr "杀死开关"

#~ msgid ""
#~ "*Settings -> Security -> Auto reboot "
#~ "-> select the idle time duration "
#~ "after which the phone should reboot*"
#~ msgstr "*设置->安全->自动重启->选择闲置时间长度，之后手机应重新启动*。"

#~ msgid ""
#~ "You can learn about the installed "
#~ "version of GnuPG via ``gpg2  "
#~ "--version``. At least version 2.1.16 is"
#~ " required. The newest GnuPG version "
#~ "for Windows can be found `here "
#~ "<https://www.gpg4win.org/>`__ and the newest "
#~ "version for MacOS can be found "
#~ "`here <https://gpgtools.org/>`__. A suitable "
#~ "version of GnuPG is included in "
#~ "the GNU/Linux distributions Ubuntu (since "
#~ "18.04), Debian (from Stretch onwards), "
#~ "Arch Linux, Fedora (from Release 26 "
#~ "onwards) and openSUSE Tumbleweed. At the"
#~ " end of this articles are "
#~ "instructions how to manually update "
#~ "GnuPG on older Ubuntu versions."
#~ msgstr ""
#~ "你可以通过``gpg2  "
#~ "--version``了解GnuPG的安装版本。至少需要2.1.16版本。最新的Windows版GnuPG可以在`这里<https://www.gpg4win.org/>`__，最新的MacOS版可以在`这里<https://gpgtools.org/>`__找到。GNU/Linux发行版Ubuntu（从18.04开始）、Debian（从Stretch开始）、Arch"
#~ " Linux、Fedora（从26版开始）和openSUSE "
#~ "Tumbleweed中都包含了合适的GnuPG版本。在这篇文章的末尾，有如何在旧版Ubuntu上手动更新GnuPG的说明。"

#~ msgid ""
#~ "Here are `excellent instructions "
#~ "<http://blog.kumina.nl/2010/07/two-factor-luks-"
#~ "using-ubuntu/>`__ how to use Nitrokey "
#~ "to encrypt your hard disk under "
#~ "Linux with LUKS/dm-crypt. `Other "
#~ "instructions "
#~ "<https://wiki.ubuntu.com/SmartCardLUKSDiskEncryption>`__."
#~ msgstr ""
#~ "这里有`出色的说明<http://blog.kumina.nl/2010/07/two-factor-"
#~ "luks-using-ubuntu/>`__如何在Linux下用Nitrokey用LUKS/dm-"
#~ "crypt加密你的硬盘。`其他说明 "
#~ "<https://wiki.ubuntu.com/SmartCardLUKSDiskEncryption>`__。"

#~ msgid ""
#~ "Download and start the `Nitrokey App "
#~ "<https://www.nitrokey.com/download>`__. Follow the "
#~ "`instructions <change-pins.html>`__ to change"
#~ " the default User PIN (default: "
#~ "123456) and Admin PIN (default: "
#~ "12345678) to your own choices."
#~ msgstr ""
#~ "下载并启动`Nitrokey App "
#~ "<https://www.nitrokey.com/download>`__。按照`的指示<change-"
#~ "pins.html>`__，将默认的用户密码（默认：123456）和管理员密码（默认：12345678）改为你自己的选择。"

#~ msgid ""
#~ "Open the About window from Nitrokey "
#~ "App’s menu and check if you have"
#~ " the `latest firmware "
#~ "<https://github.com/Nitrokey/nitrokey-storage-"
#~ "firmware/releases>`__ installed. If it’s not"
#~ " the latest, please `update <firmware-"
#~ "update.html>`__."
#~ msgstr ""
#~ "从Nitrokey应用程序的菜单中打开关于窗口，检查你是否安装了`最新的固件<https://github.com/Nitrokey"
#~ "/nitrokey-storage-firmware/releases>`__。如果它不是最新的，请`更新"
#~ "<firmware-update.html>`__。"

#~ msgid ""
#~ "Download the `Nitrokey App "
#~ "<https://www.nitrokey.com/download>`__ and the "
#~ "`Nitrokey Update Tool <https://github.com/Nitrokey"
#~ "/nitrokey-update-tool/releases/latest>`__. The "
#~ "Nitrokey Update Tool is currently "
#~ "available for macOS and Windows only."
#~ msgstr ""
#~ "下载`Nitrokey应用程序<https://www.nitrokey.com/download>`__和`Nitrokey更新工具<https://github.com/Nitrokey"
#~ "/nitrokey-update-"
#~ "tool/releases/latest>`__。Nitrokey更新工具目前仅适用于macOS和Windows。"

#~ msgid ""
#~ "Windows Vista, 7, 8 and 10 may "
#~ "fail to install an additional device "
#~ "driver for the smart card. Its "
#~ "safe to ignore this warning."
#~ msgstr "Windows Vista、7、8和10可能无法为智能卡安装一个额外的设备驱动程序。忽略这个警告是安全的。"

#~ msgid ""
#~ "2. Install the 3 core Google Play"
#~ " Apps (\"Google Services Framework\", "
#~ "\"Google Play store\", \"Google Play "
#~ "Services\"). 4. Disable batterie optimization"
#~ " for Google Play Services (for Push"
#~ " to work properly)."
#~ msgstr ""

#~ msgid ""
#~ "For Windows the firmware update is "
#~ "still **experimental**, because it takes "
#~ "a very long time > 12mins. We "
#~ "recommend to wait for the next "
#~ "release(s) until this issue is fixed."
#~ msgstr "对于Windows来说，固件更新仍然是**实验性的，因为它需要很长的时间> 12分钟。我们建议等待下一个版本，直到这个问题得到解决。"

#~ msgid ""
#~ "Run ``nitropy nk3 update`` (for Windows"
#~ " use of the ``--experimental`` switch "
#~ "is required)"
#~ msgstr "运行``nitropy nk3 update``（对于Windows，需要使用``--experimental``开关）。"

#~ msgid "NetHSM"
#~ msgstr "NetHSM"

#~ msgid "NextHSM"
#~ msgstr "下一个HSM"

#~ msgid "Choose your prefered acces method:"
#~ msgstr "选择你喜欢的访问方式。"

#~ msgid "Nitrokey - Secure your digital life"
#~ msgstr "Nitrokey - 保护你的数字生活"

#~ msgid "How to use this documentation"
#~ msgstr "如何使用本文件"

#~ msgid ""
#~ "**Browse** through the products and its"
#~ " subcategories and articles, start below"
#~ msgstr "**浏览**的产品及其子类别和文章，从下面开始"

#~ msgid ""
#~ "**Search** for a buzzword, error, "
#~ "message or tool using the top left"
#~ " search field"
#~ msgstr "**使用左上角的搜索栏搜索**的流行语、错误、信息或工具"

#~ msgid "Choose your product"
#~ msgstr "选择你的产品"

#~ msgid "Working with tags"
#~ msgstr "使用标签工作"

#~ msgid ""
#~ "As of this writing the Nitrokey 3"
#~ " is roughly identical with the "
#~ "Nitrokey FIDO2, from functionality point "
#~ "of view. The Nitrokey 3A and 3C"
#~ " additionally support NFC, while the "
#~ "Nitrokey 3 Mini does not support "
#~ "NFC."
#~ msgstr ""
#~ "从功能上看，Nitrokey 3与Nitrokey FIDO2大致相同。Nitrokey "
#~ "3A和3C额外支持NFC，而Nitrokey 3 Mini不支持NFC。"

#~ msgid ""
#~ "This likely means your user has "
#~ "not the needed permissions to read-"
#~ "write the device. Please make sure "
#~ "you have set up the correct "
#~ "`udev-rules`_. Download this `udev-rules`_"
#~ " set and place it in your udev"
#~ " rules directory (e.g., ``/etc/udev/rules.d``)."
#~ " Then remove your Nitrokey 3 from "
#~ "the USB slot and run: ``udevadm "
#~ "control --reload-rules && udevadm "
#~ "trigger`` or reboot your machine. "
#~ "Afterwards the update should work "
#~ "without the permission issue."
#~ msgstr ""
#~ "这可能意味着你的用户没有必要的权限来读写设备。请确认你已经设置了正确的`udev-rules`_。下载这个`udev-"
#~ "rules`_集，并把它放在你的udev规则目录中（例如，``/etc/udev/rules.d``）。然后从USB插槽中取出你的Nitrokey"
#~ " 3并运行。``udevadm control --reload-rules &&"
#~ " udevadm trigger``或者重新启动你的机器。之后，更新应该可以工作，没有权限问题。"

#~ msgid "Older Versions of Windows 10"
#~ msgstr "旧版本的Windows 10"

#~ msgid ""
#~ "In Windows 10 version 1909 or "
#~ "older the Nitrokey has to be "
#~ "reinserted right before the reset "
#~ "operation is executed. The reset "
#~ "operation has to be confirmed by "
#~ "touching the touch button twice."
#~ msgstr "在Windows 10 1909或更早的版本中，必须在执行重置操作之前重新插入硝基钥匙。重置操作必须通过两次触摸按钮来确认。"

#~ msgid "Detailed scenario:"
#~ msgstr "详细方案。"

#~ msgid "Reinsert the Nitrokey right before executing reset operation."
#~ msgstr "在执行复位操作之前，请重新插入硝基钥匙。"

#~ msgid "Start the reset operation in the user interface."
#~ msgstr "在用户界面上开始复位操作。"

#~ msgid ""
#~ "When the LED blinks white, touch "
#~ "the touch button for 1 second "
#~ "until it turns green."
#~ msgstr "当LED灯闪烁白色时，触摸触摸按钮1秒，直到它变成绿色。"

#~ msgid "Release the touch."
#~ msgstr "释放触摸。"

#~ msgid ""
#~ "When the LED blinks red, touch the"
#~ " touch button for 5 seconds until "
#~ "it turns blue."
#~ msgstr "当LED灯闪烁红色时，触摸触摸按钮5秒钟，直到它变成蓝色。"

#~ msgid ""
#~ "Before we start, we store the host"
#~ " name of the NetHSM instance in "
#~ "the ``NETHSM_HOST`` environment variable.  You"
#~ " can use the public NetHSM demo "
#~ "instance ``nethsmdemo.nitrokey.com`` or run a"
#~ " local demo instance using the NetHSM"
#~ " docker image, see the `Development "
#~ "and Testing </index.html#development-and-"
#~ "testing>`_ section of the NetHSM "
#~ "documentation."
#~ msgstr ""
#~ "在开始之前，我们在``NETHSM_HOST``环境变量中存储NetHSM实例的主机名称。  "
#~ "你可以使用公共的NetHSM演示实例``nethsmdemo.nitrokey.com``或者使用NetHSM "
#~ "docker镜像运行一个本地演示实例，见NetHSM文档的`开发和测试</index.html#development-"
#~ "and-testing>`_部分。"

#~ msgid ""
#~ "The NetHSM demo instance at "
#~ "``nethsmdemo.nitrokey.com`` is already provisioned."
#~ msgstr "位于``nethsmdemo.nitrokey.com``的NetHSM演示实例已经被配置。"

#~ msgid ""
#~ "Note: In a future release another "
#~ "Role will be implemented which is "
#~ "allowed to /keys/ POST, /keys/generate "
#~ "POST, /keys/{KeyID} PUT & DELETE, "
#~ "/keys/{KeyID}/cert PUT & DELETE in "
#~ "addition to what R-Operator is allowed"
#~ " to do."
#~ msgstr ""
#~ "注意：在未来的版本中，将实现另一个角色，允许/keys/ POST, /keys/generate "
#~ "POST, /keys/{KeyID} PUT & DELETE, "
#~ "/keys/{KeyID}/cert PUT & DELETE。PUT & "
#~ "DELETE, /keys/{KeyID}/cert PUT & DELETE "
#~ "除了R-Operator允许做的以外。"

#~ msgid ""
#~ "In this guide, we want to use "
#~ "an RSA key to decrypt data using"
#~ " PKCS #1 and to sign data with"
#~ " PSS using SHA256.  So let’s generate"
#~ " a new key on the NetHSM. Make"
#~ " sure to use the ``RSA`` algorithm"
#~ " and to select the "
#~ "``RSA_Signature_PSS_SHA256`` and ``RSA_Decryption_PKCS1``"
#~ " key mechanisms.  If you don’t "
#~ "specify a key ID, the NetHSM will"
#~ " generate a random ID for the "
#~ "new key."
#~ msgstr ""
#~ "在本指南中，我们想用RSA密钥用PKCS #1解密数据，用PSS用SHA256签署数据。  "
#~ "因此，让我们在NetHSM上生成一个新的密钥。确保使用``RSA``算法，并选择``RSA_Signature_PSS_SHA256`和``RSA_Decryption_PKCS1`</x>`密钥机制。"
#~ "  如果你没有指定一个密钥ID，NetHSM将为新的密钥生成一个随机的ID。"

#~ msgid ""
#~ "We can inspect the key with "
#~ "``openssl`` and use it for encryption"
#~ " or signature verification (as described"
#~ " in the next section):"
#~ msgstr "我们可以用``openssl``检查密钥，并将其用于加密或签名验证（如下节所述）。"

#~ msgid ""
#~ "We can encrypt data for the key"
#~ " stored on the NetHSM using "
#~ "``openssl``. (``public.pem`` is the public "
#~ "key file that we created in the"
#~ " `Show Key Details`_ section.)"
#~ msgstr "我们可以使用``openssl``对存储在NetHSM上的密钥进行数据加密。(``public.pem``是我们在`显示密钥细节`_部分创建的公钥文件。)"

#~ msgid "And then use ``openssl`` to verify the signature:"
#~ msgstr "然后用``openssl``来验证签名。"

#~ msgid "Accessing a NetHSM using the nitropy command line tool"
#~ msgstr "使用nitropy命令行工具访问NetHSM"

#~ msgid ""
#~ "In this section, we want to use"
#~ " an RSA key to decrypt data "
#~ "using PKCS#11 and to sign data "
#~ "with PSS using SHA256.  So let’s "
#~ "generate a new key on the NetHSM."
#~ " Make sure to use the RSA "
#~ "algorithm and to select the "
#~ "RSA_Signature_PSS_SHA256 and RSA_Decryption_PKCS1 "
#~ "key mechanisms.  If you don’t specify"
#~ " a key ID, the NetHSM will "
#~ "generate a random ID for the new"
#~ " key."
#~ msgstr ""
#~ "在这一节中，我们想用RSA密钥来解密使用PKCS#11的数据，并使用SHA256来签署PSS的数据。  "
#~ "因此，让我们在NetHSM上生成一个新的密钥。确保使用RSA算法并选择RSA_Signature_PSS_SHA256和RSA_Decryption_PKCS1密钥机制。"
#~ "  如果你没有指定一个密钥ID，NetHSM将为新的密钥生成一个随机的ID。"

#~ msgid ""
#~ "We can inspect the key with "
#~ "openssl and use it for encryption "
#~ "or signature verification (as described "
#~ "in the next section):"
#~ msgstr "我们可以用openssl检查该密钥，并将其用于加密或签名验证（如下一节所述）。"

#~ msgid "And then use openssl to verify the signature:"
#~ msgstr "然后用openssl来验证签名。"

#~ msgid ""
#~ "It is possible to crate a backup"
#~ " of the NetHSM that captures both "
#~ "the configuration and the stored keys."
#~ "  In order to create a backup, "
#~ "you first have to set a backup "
#~ "passphrase that is used to encrypt "
#~ "the backup file:"
#~ msgstr "有可能建立一个NetHSM的备份，同时捕获配置和存储的密钥。  为了创建一个备份，你首先要设置一个备份口令，用来加密备份文件。"

#~ msgid ""
#~ "We can encrypt data for the key"
#~ " stored on the NetHSM using openssl."
#~ " (public.pem is the public key file"
#~ " that we created in the Show "
#~ "Key Details section.)"
#~ msgstr "我们可以用openssl对存储在NetHSM上的密钥进行数据加密。(public.pem是我们在显示密钥细节部分创建的公钥文件。)"

#~ msgid ""
#~ "It is possible to create a backup"
#~ " of the NetHSM that captures both "
#~ "the configuration and the stored keys."
#~ "  In order to create a backup, "
#~ "you first have to set a backup "
#~ "passphrase that is used to encrypt "
#~ "the backup file:"
#~ msgstr "可以创建一个NetHSM的备份，同时捕捉到配置和存储的密钥。  为了创建一个备份，你首先要设置一个备份口令，用来加密备份文件。"

#~ msgid ""
#~ "This tutorial demonstrates how to access"
#~ " the NetHMS via REST API. The "
#~ "interface is `documented here "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/index.html#docs/summary/summary>`_"
#~ " and it's specification is available "
#~ "as `RAML <https://nethsmdemo.nitrokey.com/api_docs"
#~ "/nethsm-api.raml>`_ and as `OpenAPI "
#~ "(Swagger) "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/gen_nethsm_api_oas20.json>`_."
#~ msgstr ""
#~ "本教程演示了如何通过REST "
#~ "API访问NetHMS。该接口`记录在此<https://nethsmdemo.nitrokey.com/api_docs/index.html#docs/summary/summary>`_，并且它'的规范可作为`RAML"
#~ " <https://nethsmdemo.nitrokey.com/api_docs/nethsm-"
#~ "api.raml>`_和`OpenAPI（Swagger） "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/gen_nethsm_api_oas20.json>`_。"

#~ msgid ""
#~ "If you use a NetHSM demo instance"
#~ " with a self-signed certificate, for"
#~ " example using the Docker image, you"
#~ " will have to use the "
#~ "``--insecure``/``-k`` option for ``curl`` to"
#~ " skip the certificate check."
#~ msgstr "如果你使用带有自签名证书的NetHSM演示实例，例如使用Docker镜像。你必须使用``--insecure`/``-k``的选项来跳过证书检查。"

#~ msgid "Set $NETHSM_HOST to your NetHSM IP first."
#~ msgstr "首先将$NETHSM_HOST设置为你的NetHSM IP。"

#~ msgid ""
#~ "The ``-i``/``--include`` option causes "
#~ "``curl`` to print the HTTP status "
#~ "code and the response headers.  The "
#~ "``-w '\\n'``/``--write-out '\\n'`` option "
#~ "adds a newline after the response "
#~ "body."
#~ msgstr ""
#~ "``-i``/``--include``选项导致``curl``打印 HTTP 状态代码和响应头文件。  "
#~ "``-w '\\n'``/``--write-out '\\n'``选项在响应体后增加一个换行。"

#~ msgid ""
#~ "#.. include:: _tutorial.rst #   :start-"
#~ "after: .. start:: roles #   :end-"
#~ "before: .. end"
#~ msgstr ""
#~ "#...include::_tutorial.rst # :start-after: ..."
#~ " start:: roles # :end-before: ... "
#~ "end"

#~ msgid ""
#~ "#.. include:: _tutorial.rst #   :start-"
#~ "after: .. start:: add-user #   "
#~ ":end-before: .. end"
#~ msgstr ""
#~ "#...include::_tutorial.rst # :start-after: "
#~ "...开始:: add-user # :end-before: "
#~ "...结束"

#~ msgid ""
#~ "Further information regarding the API "
#~ "operations can be found on the "
#~ "`REST API Index "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/index.html#docs/summary/summary>`_"
#~ msgstr ""
#~ "关于API操作的进一步信息可以在`REST "
#~ "API索引<https://nethsmdemo.nitrokey.com/api_docs/index.html#docs/summary/summary>`_中找到。"

#~ msgid "Accessing a NetHSM with the nitropy command line tool"
#~ msgstr "用nitropy命令行工具访问NetHSM"

#~ msgid "Request Device Information"
#~ msgstr "要求提供设备信息"

#~ msgid "Provision"
#~ msgstr "规定"

#~ msgid "Create Keys"
#~ msgstr "创建密钥"

#~ msgid "Prepare Backup"
#~ msgstr "准备好备份"

#~ msgid "Update NetHSM"
#~ msgstr "更新NetHSM"

#~ msgid "nitropy cmd"
#~ msgstr "硝烟弥漫 cmd"

#~ msgid "PKCS#11"
#~ msgstr "PKCS#11"

#~ msgid "Choose an Access Method"
#~ msgstr "选择一个访问方法"

#~ msgid ""
#~ "This driver is still an early "
#~ "Proof of Concept implementation that "
#~ "only implements the functions that are"
#~ " necessary for operating TLS servers "
#~ "like for example an HTTPS server."
#~ msgstr "这个驱动仍然是一个早期的概念验证实现，只实现了操作TLS服务器（例如HTTPS服务器）所需的功能。"

#~ msgid ""
#~ "Download the `PKCS#11 driver "
#~ "<https://github.com/Nitrokey/nethsm-pkcs11>`_ for "
#~ "NetHSM."
#~ msgstr "下载`PKCS#11驱动<https://github.com/Nitrokey/nethsm-pkcs11>`_用于NetHSM。"

#~ msgid ""
#~ "Modify the configuration file "
#~ "``p11nethsm.conf`` according to your setup "
#~ "(e.g. address, operator name) and store"
#~ " it in ``$HOME/.nitrokey``, ``/etc/nitrokey/``,"
#~ " or in the folder where your "
#~ "application is executed."
#~ msgstr "根据你的设置（例如，地址）修改配置文件``p11nethsm.conf``，并将其存储在``$HOME/.nitrokey`中。地址、操作员名称），并将其存储在``$HOME/.nitrokey`，``/etc/nitrokey/``，或在执行你的应用程序的文件夹中。"

#~ msgid ""
#~ "After creating a key (here: ID 23)"
#~ " with the according mechanism, you "
#~ "can use it for decryption:"
#~ msgstr "在用相应的机制创建一个密钥（这里：ID 23）后，你可以用它来解密。"

#~ msgid ""
#~ "Connect the NetHSM's ETH port with "
#~ "the network. Don't use the BMC ETH"
#~ " port because it allows wider system"
#~ " access. Then set the password for"
#~ " the BMC."
#~ msgstr "将NetHSM的ETH端口与网络相连。不要使用BMC的ETH端口，因为它允许更广泛的系统访问。然后为BMC设置密码。"

#~ msgid ""
#~ "`Odoo <https://www.odoo.com/>`_ is a powerful"
#~ " ERP (Enterprise Resource Planning) "
#~ "software for companies of all sizes. "
#~ "Odoo is available as open source "
#~ "and contains modules for CRM, "
#~ "website/e-commerce, accounting, financial "
#~ "accounting, production, warehouse management, "
#~ "project management, document management, among"
#~ " others."
#~ msgstr ""
#~ "`Odoo "
#~ "<https://www.odoo.com/>`_是一个功能强大的ERP（企业资源计划）软件，适用于各种规模的公司。Odoo是开源的，包含CRM、网站/电子商务、会计、财务会计、生产、仓库管理、项目管理、文档管理等模块。"

#~ msgid "`Contact <https://www.nitrokey.com/contact>`_"
#~ msgstr "`联系 <https://www.nitrokey.com/contact>`_"

#~ msgid ""
#~ "76 KB EEPROM total, max. 150 x "
#~ "ECC-521 keys, max. 300 x ECC/AES-256 "
#~ "keys, max. 19 x RSA-4096 keys, "
#~ "max. 38 x RSA-2048 keys"
#~ msgstr ""
#~ "总共76 KB EEPROM，最大。150个ECC-521密钥，最大。300 x "
#~ "ECC/AES-256 密钥，最大19 x RSA-4096 "
#~ "密钥，最大。38个RSA-2048密钥"

#~ msgid "Two-factor Authentication for ERP Software Odoo"
#~ msgstr "ERP软件Odoo的双因素认证"

#~ msgid ""
#~ "The secure access to such a "
#~ "central software is especially important "
#~ "and can be realized with the "
#~ "Nitrokey. In this case the Nitrokey "
#~ "will be checked during user login "
#~ "in addition to the user password. "
#~ "Phishing attacks are thus foiled and "
#~ "your critical company data is protected."
#~ msgstr "对这样一个中央软件的安全访问特别重要，可以用Nitrokey来实现。在这种情况下，除了用户密码外，在用户登录时还会检查Nitrokey。这样，钓鱼式攻击就被挫败了，你的重要公司数据也得到保护。"

#~ msgid ""
#~ "Video: Zwei-Faktor-Authentifizierung mit "
#~ "dem Nitrokey Pro und Nitrokey Storage"
#~ " in Odoo"
#~ msgstr ""
#~ "视频。在Odoo中用Nitrokey Pro和Nitrokey Storage进行Zwei-"
#~ "Faktor-Authentifizierung操作"

#~ msgid ""
#~ "Encryption of 50kiB of data: * 256"
#~ " bit AES, 2048 bytes per command "
#~ "-> 880 bytes per second * 128 "
#~ "bit AES, 2048 bytes per command ->"
#~ " 893 bytes per second * 256 bit"
#~ " AES, 240 bytes per command -> "
#~ "910 bytes per second * 128 bit "
#~ "AES, 240 bytes per command -> 930"
#~ " bytes per second"
#~ msgstr ""
#~ "对50kiB的数据进行加密。* 256位AES，每个命令2048字节 -> 880字节/秒 "
#~ "* 128位AES，每个命令2048字节 -> 893字节/秒 * "
#~ "256位AES，每个命令240字节 -> 910字节/秒 * "
#~ "128位AES，每个命令240字节 -> 930字节/秒"

#~ msgid "Decrypting"
#~ msgstr "解密"

#~ msgid ""
#~ "Before we start, we store the host"
#~ " name of the NetHSM instance in "
#~ "the NETHSM_HOST environment variable.  You "
#~ "can use the public NsetupetHSM demo "
#~ "instance nethsmdemo.nitrokey.com or run a "
#~ "local demo instance using the NetHSM "
#~ "docker image, see `Docker Hub "
#~ "<https://hub.docker.com/r/nitrokey/nethsm>`_ section of"
#~ " the NetHSM documentation."
#~ msgstr ""
#~ "在开始之前，我们在NETHSM_HOST环境变量中存储NetHSM实例的主机名。  "
#~ "你可以使用公共的NsetupetHSM演示实例nethsmdemo.nitrokey.com，或者使用NetHSM "
#~ "docker镜像运行本地演示实例，见NetHSM文档的`Docker Hub "
#~ "<https://hub.docker.com/r/nitrokey/nethsm>`_章节。"

#~ msgid "CLI method"
#~ msgstr "CLI方法"

#~ msgid "6. Backup"
#~ msgstr "6.备份"

#~ msgid ""
#~ "You need to purchase a S/MIME "
#~ "certificate or may already got one "
#~ "by your company. Furthermore, you need"
#~ " to install `OpenSC "
#~ "<https://github.com/OpenSC/OpenSC/wiki>`_ on your "
#~ "System. While GNU/Linux users usually "
#~ "can install OpenSC over the package "
#~ "manager (e.g. ``sudo apt install "
#~ "opensc`` on Ubuntu), macOS and Windows"
#~ " users can download the installation "
#~ "files from the `OpenSC "
#~ "<https://github.com/OpenSC/OpenSC/wiki>`_ page."
#~ msgstr ""
#~ "你需要购买一个S/MIME证书，或者你的公司可能已经有了一个。此外，你需要在你的系统上安装`OpenSC "
#~ "<https://github.com/OpenSC/OpenSC/wiki>`_。虽然GNU/Linux用户通常可以通过软件包管理器来安装OpenSC（例如：``sudo"
#~ " apt install "
#~ "opensc``在Ubuntu上），但MacOS和Windows用户可以从`OpenSC<https://github.com/OpenSC/OpenSC/wiki>`_页面下载安装文件。"

#~ msgid "Nitrokey FIDO U2F with Linux"
#~ msgstr "使用Linux的Nitrokey FIDO U2F"

#~ msgid "Nitrokey FIDO U2F with macOS"
#~ msgstr "Nitrokey FIDO U2F与MacOS的关系"

#~ msgid "Nitrokey FIDO U2F with Windows"
#~ msgstr "使用Windows的Nitrokey FIDO U2F"

#~ msgid ""
#~ "Connect the NetHSM's BMC ETH port "
#~ "with the network or your local "
#~ "computer. Set the BMC password."
#~ msgstr "将NetHSM'的BMC ETH端口与网络或本地计算机相连。设置BMC密码。"

#~ msgid "# pro"
#~ msgstr "# ＃亲"

#~ msgid "PKCS#11 Driver"
#~ msgstr "PKCS#11驱动程序"

#~ msgid ""
#~ "If you want to use S/MIME email"
#~ " encryption with Thunderbird, to use "
#~ "TrueCrypt/VeraCrypt, certificate-based SSL "
#~ "authentication with Firefox, PuTTY/KiTTY, "
#~ "OpenSSH, OpenSSL, or any other PKCS#11"
#~ " compatible software, you should install"
#~ " OpenSC."
#~ msgstr "如果你想用Thunderbird使用S/MIME电子邮件加密，使用TrueCrypt/VeraCrypt，用Firefox、PuTTY/KiTTY、OpenSSH、OpenSSL或任何其他PKCS#11兼容软件进行基于证书的SSL认证，你应该安装OpenSC。"

#~ msgid ""
#~ "Note that a Nitrokey initialized with"
#~ " OpenSC doesn't work with GnuPG/OpenPGP."
#~ " But the other way around works "
#~ "fine. If you want to use Nitrokey"
#~ " with both GnuPG and PKCS#11, "
#~ "generate the keys with GnuPG."
#~ msgstr "请注意，用OpenSC初始化的Nitrokey在GnuPG/OpenPGP中无法使用。但另一种方式可以正常工作。如果你想在GnuPG和PKCS#11中使用Nitrokey，请用GnuPG生成密钥。"

#~ msgid ""
#~ "Don't use PKCS#11 in parallel with "
#~ "GnuPG because both may interfere and "
#~ "unexpected issues may result. (There is"
#~ " another promising project scd-pkcs11 "
#~ "in development which may overcome this"
#~ " limitation eventually. Currently it's "
#~ "limit to the authentication certificate "
#~ "and not widely tested yet.)"
#~ msgstr ""
#~ "不要将PKCS#11与GnuPG并行使用，因为两者可能会相互干扰，并可能产生意想不到的问题。(有一个很有前途的项目scd-"
#~ "pkcs11正在开发中，最终可能会克服这个限制。目前它只限于认证证书，还没有经过广泛测试）。"

#~ msgid ""
#~ "Instructions, how to create a valid "
#~ "X.509 certificate with Nitrokey (1, 2,"
#~ " 3). These are general instructions "
#~ "how to use X.509 certificates. "
#~ "Alternative PKCS#11 Driver:"
#~ msgstr "说明，如何用Nitrokey创建一个有效的X.509证书（1，2，3）。这些是如何使用X.509证书的一般说明。替代的PKCS#11驱动程序。"

#~ msgid "The recommended PKCS#11 driver is OpenSC."
#~ msgstr "推荐的PKCS#11驱动是OpenSC。"

#~ msgid "Windows Mini Driver"
#~ msgstr "Windows 迷你版驱动程序"

#~ msgid ""
#~ "This Mini Driver allows to integrate "
#~ "Nitrokey with Window's certificate store. "
#~ "Subsequently all applications which use "
#~ "this certificate storage can be used "
#~ "with Nitrokey (e.g. Internet Explorer, "
#~ "Google Chrome web browser, Windows "
#~ "Login). To install the driver, you "
#~ "may need to allow the installation "
#~ "of unsigned drivers first. Aloaha"
#~ msgstr ""
#~ "这个迷你驱动允许将Nitrokey与Window的证书存储集成。随后，所有使用该证书存储的应用程序都可以与Nitrokey一起使用（如Internet"
#~ " Explorer、Google "
#~ "Chrome网络浏览器、Windows登录）。要安装该驱动程序，你可能需要先允许安装未签署的驱动程序。阿罗哈"

#~ msgid ""
#~ "All applications of Aloaha are working"
#~ " with the Nitrokey. This includes a"
#~ " middleware to integrate Nitrokey with "
#~ "other PKCS#11 based applications and "
#~ "with Windows as well as applications "
#~ "to encrypt and sign PDFs and the"
#~ " hard disk."
#~ msgstr "Aloaha的所有应用程序都与Nitrokey一起工作。这包括将Nitrokey与其他基于PKCS#11的应用程序和Windows以及用于加密和签署PDF和硬盘的应用程序集成的中间件。"

#~ msgid "Alternative PKCS#11 Driver:"
#~ msgstr "替代的PKCS#11驱动程序。"

#~ msgid ""
#~ "The recommended PKCS#11 driver is "
#~ "OpenSC. Alternatively, you could use "
#~ "Peter Koch's PKCS#11 driver which has"
#~ " the following limitations:"
#~ msgstr "推荐的PKCS#11驱动程序是OpenSC。另外，你也可以使用Peter Koch'的PKCS#11驱动程序，它有以下限制。"

#~ msgid ""
#~ "No import of existing X.509 "
#~ "certificates. (Instead, keys have to be"
#~ " generated on the Nitrokey) The Linux"
#~ " version does not allow to generate"
#~ " keys. Modification of the password/PIN "
#~ "under Linux is not possible."
#~ msgstr "不能导入现有的X.509证书。(相反，必须在Nitrokey上生成密钥）Linux版本不允许生成密钥。在Linux下修改密码/PIN是不可能的。"

#~ msgid "p11-glue"
#~ msgstr "p11-胶水"

#~ msgid ""
#~ "P11-glue uses PKCS#11 as glue between"
#~ " crypto libraries and security applications"
#~ " on the open source desktop. Articles"
#~ " in German"
#~ msgstr "P11-glue使用PKCS#11作为开源桌面上加密库和安全应用程序之间的胶水。德文版文章"

#~ msgid ""
#~ "Eine allgemeine und gut verständliche "
#~ "Einführung bietet der Artikel Magisches "
#~ "Leuchten im Linux Magazin 2010/12. Eine"
#~ " umfangreiche Anleitung gibt es auf "
#~ "Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht"
#~ " unter CentOS."
#~ msgstr ""
#~ "在Linux杂志2010/12期中，《Magisches Leuchten》一书提供了一个全面和完整的介绍。在Pro-"
#~ "Linux上可以找到一份详尽的指南。关于CentOS的经验之谈。"

#~ msgid "**Q:** How can I login into Windows?"
#~ msgstr "**问：**我怎样才能登录到Windows？"

#~ msgid ""
#~ "To access Nitrokey devices read-only,"
#~ " download and install this Mini "
#~ "Driver (CSP). If you are using "
#~ "Windows Server you may need to "
#~ "disable the driver signature verification "
#~ "before being able to install the "
#~ "driver. Note that the Mini Driver "
#~ "for Nitrokey Pro may not work yet"
#~ " for write mode."
#~ msgstr ""
#~ "要访问Nitrokey设备的只读性，请下载并安装这个迷你驱动程序（CSP）。如果你使用的是Windows "
#~ "Server，你可能需要在安装驱动前禁用驱动签名验证。请注意，Nitrokey Pro的迷你驱动程序可能还不能用于写模式。"

#~ msgid "There exist different ways to use a Nitrokey to logon on Windows:"
#~ msgstr "在Windows上使用Nitrokey登录存在不同的方式。"

#~ msgid ""
#~ "Login on stand alone Windows computers"
#~ " based on EIDAuthenticate. Alternatively "
#~ "install OpenSC and use Aloaha Smart "
#~ "Login's PKCS#11 Credentials. Login on "
#~ "Windows domain computers using MS Active"
#~ " Directory based OpenPGP-CSP minidriver "
#~ "for Nitrokey Storage 2 Nitrokey Pro "
#~ "2 Login on Windows domain computers "
#~ "using MS Active Directory based on "
#~ "Smart Policy for other Nitrokey devices."
#~ msgstr ""
#~ "基于EIDAuthenticate在独立的Windows电脑上登录。或者安装OpenSC并使用Aloaha Smart "
#~ "Login'的PKCS#11凭证。在Windows域计算机上使用基于MS Active "
#~ "Directory的OpenPGP-CSP迷你驱动程序登录Nitrokey Storage 2 "
#~ "Nitrokey Pro 2 在Windows域计算机上使用基于智能策略的MS Active"
#~ " Directory登录其他Nitrokey设备。"

#~ msgid "**Q:** How can I login into Linux? Linux Login with PAM"
#~ msgstr "**问：**我怎样才能登录到Linux？用PAM登录Linux"

#~ msgid "You have two options: pam_p11 or Poldi."
#~ msgstr "你有两个选择：pam_p11或Poldi。"

#~ msgid ""
#~ "The solution with pam_p11 is more "
#~ "difficult to achieve and is based "
#~ "on S/MIME certificates. Please have a"
#~ " look at the documentation for more"
#~ " information."
#~ msgstr "使用pam_p11的解决方案更难实现，它是基于S/MIME证书的。请看一下文件以了解更多信息。"

#~ msgid ""
#~ "Poldi 0.4.1 works flawlessly with "
#~ "Nitrokey for PAM authentication with RSA"
#~ " keys (see Troubleshooting for information"
#~ " on ECC keys). Besides the "
#~ "installation of poldi (e.g. 'sudo "
#~ "apt-get install libpam-poldi' on "
#~ "Ubuntu) the following steps are needed"
#~ " to get it working."
#~ msgstr ""
#~ "Poldi "
#~ "0.4.1与Nitrokey配合使用RSA密钥进行PAM认证，效果完美无缺（关于ECC密钥的信息，请参见故障排除）。除了安装Poldi（例如在Ubuntu上的'sudo"
#~ " apt-get install libpam-"
#~ "poldi'），还需要以下步骤来使其工作。"

#~ msgid ""
#~ "At first you need to find out "
#~ "the \"Application ID\" of your Nitrokey."
#~ " You can use \"gpg --card-status "
#~ "| grep Application\" to find out "
#~ "what's yours. It looks like "
#~ "'D00600012401020000000000xxxxxxxx' or similiar. Now"
#~ " you have to add a line to "
#~ "/etc/poldi/localdb/users which contains the "
#~ "following information"
#~ msgstr ""
#~ "首先，你需要找出你的Nitrokey的\"应用ID\"。你可以使用\"gpg --card-status "
#~ "| grep "
#~ "Application\"来找出你的ID。它看起来像'D00600012401020000000000xxxxxxxx'或类似的。现在你必须在/etc/poldi/localdb/users中添加一行，其中包含以下信息"

#~ msgid ""
#~ "sudo sh -c 'gpg-connect-agent "
#~ "\"/datafile /etc/poldi/localdb/keys/<YourApplicationID>\" "
#~ "\"SCD READKEY --advanced OPENPGP.3\" /bye'"
#~ msgstr ""
#~ "sudo sh -c 'gpg-connect-agent "
#~ "\"/datafile /etc/poldi/localdb/keys/<YourApplicationID>\" "
#~ "\"SCD READKEY --advanced OPENPGP.3\" /bye'。"

#~ msgid ""
#~ "/etc/pam.d/common-auth for graphical user "
#~ "login /etc/pam.d/login for console login "
#~ "/etc/pam.d/sudo for sudo authentication "
#~ "/etc/pam.d/gnome-screensaver for login back"
#~ " from a locked screen etc."
#~ msgstr ""
#~ "/etc/pam.d/common-"
#~ "auth用于图形用户登录/etc/pam.d/login用于控制台登录/etc/pam.d/sudo用于sudo认证/etc/pam.d"
#~ "/gnome-screensaver用于从锁定的屏幕返回登录等等。"

#~ msgid ""
#~ "Note: Pam is dangerous to play "
#~ "around with, so make sure you have"
#~ " a way of accessing the machine "
#~ "if you break authentication completely. "
#~ "Remember that booting into rescue mode"
#~ " from Grub requires a root password,"
#~ " so keep that or a live CD "
#~ "which can read your filesystems to "
#~ "hand."
#~ msgstr ""
#~ "注意：玩Pam是很危险的，所以要确保你有办法在完全破坏认证的情况下访问机器。请记住，从Grub启动到救援模式需要一个root密码，所以请保留这个密码或一张可以读取文件系统的Live"
#~ " CD。"

#~ msgid ""
#~ "Here you find further instructions (in"
#~ " German, partially outdated). Troubleshooting"
#~ msgstr "在这里你可以找到进一步的说明（德语，部分已过时）。疑难解答"

#~ msgid ""
#~ "poldi-ctrl -k > <YourApplicationID>; "
#~ "sudo mv <YourApplicationID> /etc/poldi/localdb/keys"
#~ msgstr ""
#~ "poldi-ctrl -k > <YourApplicationID>; "
#~ "sudo mv <YourApplicationID> /etc/poldi/localdb/keys"

#~ msgid ""
#~ "Please be aware that you have to"
#~ " insert your Application ID in the"
#~ " line above with the one of "
#~ "your stick! ECC Keys Unfortunately, "
#~ "poldi has no support for ECC keys"
#~ " yet. But there is a patch for"
#~ " ECC keys used with Nitrokey Start."
#~ " This is already included in the "
#~ "master branch of the poldi development"
#~ " repository and thus will be released"
#~ " in a newer version eventually. In"
#~ " the meantime the only option is "
#~ "to build poldi from source."
#~ msgstr ""
#~ "请注意，你必须在上面的一行中插入你的应用ID和你的棍子的ID!不幸的是，poldi还不支持ECC钥匙。但有一个用于Nitrokey "
#~ "Start的ECC钥匙的补丁。这已经包含在poldi开发库的主分支中，因此最终会在一个较新的版本中发布。在这期间，唯一的选择是从源码构建poldi。"

#~ msgid "**Q:** How can I login with One Time Passwords?"
#~ msgstr "**问：**我如何用一次性密码登录？"

#~ msgid ""
#~ "One-Time-Passwords (OTP) are used "
#~ "for secure login to websites and "
#~ "local applications."
#~ msgstr "一次性密码（OTP）用于安全登录网站和本地应用程序。"

#~ msgid "Two OTP modes exist:"
#~ msgstr "存在两种OTP模式。"

#~ msgid ""
#~ "Time-based One-time Passwords (TOTP) "
#~ "is widely used for websites. If "
#~ "unsure, assume you are using this "
#~ "mode. HMAC-based One-time Passwords "
#~ "(HOTP) is used for local applications"
#~ " and computer logins."
#~ msgstr "基于时间的一次性密码（TOTP）被广泛用于网站。如果不确定，请假设您正在使用这种模式。基于HMAC的一次性密码（HOTP）用于本地应用程序和计算机登录。"

#~ msgid ""
#~ "To use One-Time-Passwords with "
#~ "your Nitrokey Pro or Nitrokey Storage,"
#~ " you need to download and install "
#~ "the latest Nitrokey App. Time-based "
#~ "One-time Passwords - TOTP"
#~ msgstr ""
#~ "要在你的Nitrokey Pro或Nitrokey "
#~ "Storage中使用一次性密码，你需要下载并安装最新的Nitrokey应用程序。基于时间的一次性密码 - TOTP"

#~ msgid ""
#~ "For login to a Google account. For"
#~ " login to a Microsoft account. For"
#~ " login to a Nextcloud account. "
#~ "Generic instructions for all other "
#~ "services."
#~ msgstr "用于登录到谷歌账户。用于登录微软账户。登录Nextcloud账户。所有其他服务的通用说明。"

#~ msgid "**Q:** How can I use the Nitrokey Pro with Android?"
#~ msgstr "**问：**我如何在安卓系统中使用Nitrokey Pro？"

#~ msgid ""
#~ "It is possible to use the Nitrokey"
#~ " on an Android devices in combination"
#~ " with OpenKeychain. This enables one "
#~ "to encrypt/decrypt E-Mails or files via"
#~ " OpenPGP."
#~ msgstr "可以在安卓设备上使用Nitrokey与OpenKeychain相结合。这使得人们能够通过OpenPGP对电子邮件或文件进行加密/解密。"

#~ msgid ""
#~ "Cotech provides Android software with "
#~ "commercial support. Please have a look"
#~ " there, if you like. The following"
#~ " instructions are based on OpenKeychain."
#~ msgstr "Cotech提供具有商业支持的Android软件。如果你喜欢，请去那里看看。下面的说明是基于OpenKeychain的。"

#~ msgid ""
#~ "Tested with Nitrokey Start, Pro and "
#~ "Storage in combination with Android 7.1,"
#~ " OpenKeychain 4.5 and K9Mail 5.207. "
#~ "Prerequisites"
#~ msgstr ""
#~ "使用Nitrokey Start、Pro和Storage与Android 7.1、OpenKeychain "
#~ "4.5和K9Mail 5.207相结合进行了测试。前提条件"

#~ msgid ""
#~ "Android phone which is capable of "
#~ "USB OTG USB OTG cable to connect"
#~ " the Nitrokey with your phone "
#~ "OpenKeychain installed on Device Public "
#~ "key saved on the device or "
#~ "uploaded on a keyserver"
#~ msgstr ""
#~ "能够使用USB OTG的安卓手机 用USB OTG线将Nitrokey与你的手机连接起来 "
#~ "设备上安装的OpenKeychain 公钥保存在设备上或上传到钥匙服务器。"

#~ msgid "First steps"
#~ msgstr "第一个步骤"

#~ msgid ""
#~ "To import the keys of the Nitrokey"
#~ " you should at first start the "
#~ "OpenKeychain app. Then insert the "
#~ "Nitrokey with the USB OTG cable. "
#~ "OpenKeychain starts a dialog to use "
#~ "the Nitrokey (you may have to "
#~ "accept the usage of the key with"
#~ " OpenKeychain first). Now you can "
#~ "choose between looking for public key"
#~ " on a keyserver or choosing the "
#~ "public key from storage. After the "
#~ "public key got imported you have "
#~ "to tap on 'connect key' to import"
#~ " a reference to the private key "
#~ "of the Nitrokey. That’s basically it."
#~ msgstr ""
#~ "要导入Nitrokey的钥匙，你首先要启动OpenKeychain应用程序。然后用USB "
#~ "OTG线插入Nitrokey。OpenKeychain会启动一个使用Nitrokey的对话框（你可能需要先接受OpenKeychain对钥匙的使用）。现在你可以选择在钥匙服务器上寻找公钥或从存储器中选择公钥。导入公钥后，你必须点击'连接密钥'来导入Nitrokey的私钥参考。这基本上就是了。"

#~ msgid ""
#~ "In the case that no there are "
#~ "no keys on the Nitrokey yet, "
#~ "OpenKeychain will help with the creation"
#~ " of a new key pair instead. "
#~ "Usage"
#~ msgstr "如果Nitrokey上还没有钥匙，OpenKeychain将帮助创建一个新的钥匙对。使用方法"

#~ msgid ""
#~ "You can use all functions of "
#~ "OpenKeychain and Apps which make use "
#~ "of OpenKeychain. Therefore you can just"
#~ " encrypt/decrypt messages or files by "
#~ "hand using the app directly or for"
#~ " example you combine K9Mail with "
#~ "OpenKeychain to decrypt your mails "
#~ "automatically. It is important to choose"
#~ " the right key in the K9Mail "
#~ "account settings first."
#~ msgstr "你可以使用OpenKeychain的所有功能和使用OpenKeychain的应用程序。因此，你可以直接使用应用程序手动加密/解密邮件或文件，或者例如你将K9Mail与OpenKeychain结合起来，自动解密你的邮件。首先在K9Mail账户设置中选择正确的密钥是很重要的。"

#~ msgid ""
#~ "Note that you may have to enable"
#~ " the on-screen keyboard in the "
#~ "android settings to type the PIN "
#~ "as the system recognizes the Nitrokey"
#~ " as a physical keyboard and therefore"
#~ " tries to hide the on-screen "
#~ "keyboard. Go to 'Language and Input' "
#~ "> 'Current Keyboard' > 'Hardware show"
#~ " input method'."
#~ msgstr "请注意，你可能必须在安卓设置中启用屏幕键盘来输入密码，因为系统将Nitrokey识别为物理键盘，因此会试图隐藏屏幕键盘。进入'语言和输入'>'当前键盘'>'硬件显示输入法'。"

#~ msgid "**Q:** How can I use the Nitrokey Pro with Iphone?"
#~ msgstr "**问：**我如何用Iphone使用Nitrokey Pro？"

#~ msgid "Currently it is not possible"
#~ msgstr "目前，它不可能"

#~ msgid "**Q:** How can I use the Nitrokey Pro with Ubuntu Phone?"
#~ msgstr "**问：**我如何在Ubuntu手机上使用Nitrokey Pro？"

#~ msgid ""
#~ "There are instructions on gnupg.org "
#~ "about how to use a OpenPGP Card"
#~ " on a UbuntuPhone which should work"
#~ " for the Nitrokey Start, Pro and "
#~ "Storage."
#~ msgstr ""
#~ "gnupg.org上有关于如何在UbuntuPhone上使用OpenPGP卡的说明，它应该适用于Nitrokey "
#~ "Start、Pro和Storage。"

#~ msgid ""
#~ "**Q:** How can I do Email "
#~ "encryption? There are two widely used"
#~ " standards for email encryption. While "
#~ "OpenPGP/GnuPG is popular among individuals,"
#~ " S/MIME/X.509 is mostly used by "
#~ "enterprises. If you are in doubt "
#~ "which one to choose, you should "
#~ "use OpenPGP."
#~ msgstr "**问：**我如何进行电子邮件加密？目前有两种广泛使用的电子邮件加密标准。OpenPGP/GnuPG在个人中很受欢迎，而S/MIME/X.509则大多被企业使用。如果你对选择哪一个有疑问，你应该使用OpenPGP。"

#~ msgid ""
#~ "instructions for using the OpenPGP "
#~ "standard with the Nitrokey instructions "
#~ "for using S/MIME with the Nitrokey. "
#~ "Note: SMIME certificates can be "
#~ "purchased cheaply from CERTUM and "
#~ "SSLTrust."
#~ msgstr ""
#~ "使用Nitrokey的OpenPGP标准的说明 "
#~ "使用Nitrokey的S/MIME的说明。注意：SMIME证书可以从CERTUM和SSLTrust那里廉价购买。"

#~ msgid ""
#~ "Please note, that it is currently "
#~ "advised to use either OpenPGP or "
#~ "S/MIME encryption, but not both with "
#~ "the Nitrokey."
#~ msgstr "请注意，目前建议使用OpenPGP或S/MIME加密，但不能同时使用Nitrokey。"

#~ msgid ""
#~ "To use a Nitrokey Storage with "
#~ "Thunderbird 78+, you can try this "
#~ "tutorial."
#~ msgstr "要在Thunderbird 78+中使用Nitrokey存储，你可以试试这个教程。"

#~ msgid "**Q:** How can I do Hard Disk Encryption?"
#~ msgstr "**问：**我如何进行硬盘加密？"

#~ msgid ""
#~ "For: Nitrokey Pro, Nitrokey Storage, "
#~ "Nitrokey Start VeraCrypt (formerly TrueCrypt)"
#~ msgstr ""
#~ "用于。Nitrokey Pro, Nitrokey Storage, Nitrokey"
#~ " Start VeraCrypt (formerly TrueCrypt)"

#~ msgid ""
#~ "VeraCrypt is a free and Open "
#~ "Source disk encryption software for "
#~ "Windows, macOS, and GNU/Linux. It is "
#~ "the successor of TrueCrypt and thus "
#~ "recommended, although the following "
#~ "instructions should apply to TrueCrypt "
#~ "as well. Follow these steps to use"
#~ " the program with Nitrokey Storage or"
#~ " Pro:"
#~ msgstr ""
#~ "VeraCrypt是一款免费的开源磁盘加密软件，适用于Windows、macOS和GNU/Linux。它是TrueCrypt的后继者，因此被推荐使用，尽管以下说明也应适用于TrueCrypt。按照这些步骤，将该程序与Nitrokey"
#~ " Storage或Pro一起使用。"

#~ msgid ""
#~ "Install OpenSC Choose the library in "
#~ "VeraCrypt under Settings>Preferences>Security Token"
#~ " (location depends on system, e.g. "
#~ "/usr/lib/opensc). Generate a 64 Byte key"
#~ " file via Tools>Keyfile Generator. Now "
#~ "you should be able to import the"
#~ " generated key file via Tools>Manage "
#~ "Security Token Keyfiles. You should "
#~ "choose the first Slot ([0] User "
#~ "PIN). The keyfile is then stored "
#~ "on the Nitrokey as 'Private Data "
#~ "Object 1' (PrivDO1). After this you "
#~ "should wipe the original keyfile on "
#~ "your Computer securely! Now you can "
#~ "use VeraCrypt with the Nitrokey: Create"
#~ " a container, choose the keyfile on"
#~ " the device as an alternative to "
#~ "a password."
#~ msgstr ""
#~ "安装OpenSC 在VeraCrypt的Settings>Preferences>Security "
#~ "Token下选择该库（位置取决于系统，例如/usr/lib/opensc）。通过Tools>Keyfile "
#~ "Generator生成一个64字节的密钥文件。现在你应该能够通过Tools>Manage Security "
#~ "Token Keyfiles导入生成的密钥文件。你应该选择第一个插槽（[0] "
#~ "用户密码）。然后，该密钥文件将作为'私人数据对象1'（PrivDO1）储存在Nitrokey上。在这之后，你应该安全地擦除你电脑上的原始密钥文件!现在你可以用Nitrokey使用VeraCrypt：创建一个容器，选择设备上的密钥文件作为密码的替代品。"

#~ msgid ""
#~ "Security Consideration: Please note that "
#~ "VeraCrypt doesn't make use of the "
#~ "full security which Nitrokey (and smart"
#~ " cards in general) offer. Instead it"
#~ " stores a keyfile on the Nitrokey "
#~ "which theoretically could be stolen by"
#~ " a computer virus after the user "
#~ "enters the PIN."
#~ msgstr "安全方面的考虑。请注意，VeraCrypt并没有利用Nitrokey（以及一般的智能卡）提供的全部安全性。相反，它在Nitrokey上存储了一个密钥文件，理论上，在用户输入PIN后，该文件可能被计算机病毒窃取。"

#~ msgid ""
#~ "Note: Aloaha Crypt is based on "
#~ "TrueCrypt/VeraCrypt but without the described"
#~ " security limitation."
#~ msgstr "注意：Aloaha Crypt是基于TrueCrypt/VeraCrypt的，但没有所述的安全限制。"

#~ msgid ""
#~ "Hard Disk Encryption on Linux, Based "
#~ "on LUKS/dm-crypt Here are excellent "
#~ "instructions how to use Nitrokey to "
#~ "encrypt your hard disk under Linux "
#~ "with LUKS/dm-crypt. Other instruction."
#~ msgstr ""
#~ "Linux上的硬盘加密，基于LUKS/dm-crypt 这里是如何使用Nitrokey在Linux下用LUKS"
#~ "/dm-crypt加密硬盘的出色说明。其他指示。"

#~ msgid ""
#~ "Purism has created a simple script "
#~ "to add the Nitrokey/LibremKey as a "
#~ "way to unlock LUKS partitions (not "
#~ "tested by Nitrokey yet)."
#~ msgstr "Purism创建了一个简单的脚本，将Nitrokey/LibremKey作为解锁LUKS分区的一种方式（尚未经过Nitrokey的测试）。"

#~ msgid ""
#~ "This project aims to ease the use"
#~ " of LUKS with the Nitrokey Pro "
#~ "or Storage based on the Password "
#~ "Safe (not tested by Nitrokey yet). "
#~ "A description on how to use it "
#~ "on Gentoo can be found here."
#~ msgstr ""
#~ "这个项目旨在简化LUKS与Nitrokey Pro或基于Password "
#~ "Safe（尚未被Nitrokey测试）的存储的使用。关于如何在Gentoo上使用它的描述可以在这里找到。"

#~ msgid ""
#~ "For Arch Linux, see initramfs-scencrypt."
#~ " Storage Encryption on Linux, Based "
#~ "on EncFS"
#~ msgstr "对于Arch Linux，见initramfs-scencrypt。Linux上的存储加密，基于EncFS"

#~ msgid ""
#~ "Prerequisite: Please ensure that you "
#~ "installed the device driver, changed the"
#~ " default PINs and generated or "
#~ "imported keys with GnuPG."
#~ msgstr "前提是。请确保你安装了设备驱动程序，改变了默认的PIN码，并使用GnuPG生成或导入了密钥。"

#~ msgid ""
#~ "An easy to use encrypted file "
#~ "system is EncFS, which is based on"
#~ " FUSE. You may follow these steps "
#~ "to use it with very long passwords"
#~ " and Nitrokey:"
#~ msgstr "一个易于使用的加密文件系统是EncFS，它是基于FUSE的。你可以按照这些步骤来使用它的很长的密码和Nitrokey。"

#~ msgid ""
#~ "# Create a key file with random"
#~ " data: $ dd bs=64 count=1 "
#~ "if=/dev/urandom of=keyfile"
#~ msgstr "# 用随机数据创建一个密钥文件： $ dd bs=64 count=1 if=/dev/urandom of=keyfile"

#~ msgid ""
#~ "# Encrypt the key file and use "
#~ "the User-ID of your Nitrokey $ "
#~ "gpg --encrypt keyfile"
#~ msgstr "# 对钥匙文件进行加密，并使用你的Nitrokey的用户ID $ gpg --encrypt keyfile"

#~ msgid ""
#~ "# Remove the key file in clear "
#~ "text: $ rm keyfile # you may "
#~ "want to use 'wipe' or 'shred' to"
#~ " securely delete the keyfile"
#~ msgstr "# 以明文方式删除钥匙文件：$ rm keyfile # 你可能想用'wipe'或'shred'来安全地删除钥匙文件。"

#~ msgid "# Create mount point: $ mkdir ~/.cryptdir ~/cryptdir"
#~ msgstr "# 创建装载点： $ mkdir ~/.cryptdir ~/cryptdir"

#~ msgid ""
#~ "# Create the actual encryption folder"
#~ " $ gpg -d keyfile.gpg | encfs "
#~ "-S ~/.cryptdir ~/cryptdir"
#~ msgstr "# 创建实际的加密文件夹 $ gpg -d keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"

#~ msgid ""
#~ "# There may appears an error "
#~ "message about missing permission of "
#~ "fusermount # This message can be "
#~ "ignored"
#~ msgstr "# 可能会出现一条错误信息，说缺少fusermount的权限 # 这个信息可以忽略不计"

#~ msgid "# Unmount the new file system: $ fusermount -u ~/cryptdir"
#~ msgstr "# 卸载新的文件系统： $ fusermount -u ~/cryptdir"

#~ msgid ""
#~ "# Mount encrypted file system and "
#~ "enter PIN of Nitrokey: $ gpg -d"
#~ " keyfile.gpg | encfs -S ~/.cryptdir "
#~ "~/cryptdir"
#~ msgstr ""
#~ "# 挂载加密的文件系统并输入Nitrokey的PIN码： $ gpg -d "
#~ "keyfile.gpg | encfs -S ~/.cryptdir "
#~ "~/cryptdir"

#~ msgid "# After usage, unmount the file system: $ fusermount -u ~/cryptdir"
#~ msgstr "# 使用后，卸载文件系统： $ fusermount -u ~/cryptdir"

#~ msgid "Storage Encryption on Linux, Based on ECryptFS"
#~ msgstr "基于ECryptFS的Linux上的存储加密"

#~ msgid ""
#~ "eCryptfs is a file based transparent "
#~ "encryption file system for Linux which"
#~ " can be used with Nitrokey through"
#~ " a PKCS#11 driver. See these "
#~ "instructions. Alternatively, try ESOSI or "
#~ "follow these steps using OpenSC and "
#~ "OpenVPN:"
#~ msgstr "eCryptfs是一个基于文件的Linux透明加密文件系统，可以通过PKCS#11驱动与Nitrokey一起使用。请看这些说明。另外，也可以尝试ESOSI或按照这些步骤使用OpenSC和OpenVPN。"

#~ msgid "Warning: This will delete existing keys on your Nitrokey!"
#~ msgstr "警告。这将会删除你的Nitrokey上的现有钥匙!"

#~ msgid ""
#~ "# Import the certificate and key "
#~ "to the Nitrokey $ pkcs15-init "
#~ "--delete-objects privkey,pubkey --id 3 "
#~ "--store-private-key user@example.com.p12 --format"
#~ " pkcs12 --auth-id 3 --verify-pin"
#~ msgstr ""
#~ "# 向Nitrokey导入证书和密钥 $ pkcs15-init --delete-"
#~ "objects privkey,pubkey --id 3 --store-"
#~ "private key user@example.com.p12 --format "
#~ "pkcs12 --auth-id 3 --verify-pin"

#~ msgid "# Create the file ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"
#~ msgstr "# 创建文件 ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"

#~ msgid ""
#~ "# Enter this content: $ pkcs11-log-"
#~ "level=5 pkcs11-provider1,name=name,library=/usr/lib/opensc-"
#~ "pkcs11.so,cert-private=true $ openvpn "
#~ "--show-pkcs11-ids path to opensc-pkcs11 "
#~ "module Certificate"
#~ msgstr ""
#~ "# 输入这些内容： $ pkcs11-log-level=5 "
#~ "pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so"
#~ ",cert-private=true $ openvpn --show-"
#~ "pkcs11-ids opensc-pkcs11模块的路径 证书"

#~ msgid ""
#~ "DN: "
#~ "/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
#~ " Serial: 066E04 Serialized id: "
#~ "ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"
#~ msgstr ""
#~ "DN: "
#~ "/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
#~ " Serial:066E04 "
#~ "序列化的ID。ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"

#~ msgid "# Copy the serialized id for later usage: $ ecryptfs-manager"
#~ msgstr "# 复制序列化的ID供以后使用。$ ecryptfs-manager"

#~ msgid ""
#~ "# This will show list option. "
#~ "Choose option \"Add public key to "
#~ "keyring\" # Choose pkcs11-helper # Enter"
#~ " the serialized ID of step 3 to"
#~ " PKCS#11 ID."
#~ msgstr "# 这将显示列表选项。选择选项\"添加公钥到钥匙圈\" # 选择pkcs11-helper # 输入步骤3的序列化ID到PKCS#11 ID。"

#~ msgid "**Q:** How can I sign and encrypt Files and PDFs? GnuPG"
#~ msgstr "**问：**我如何签署和加密文件和PDF？GnuPG"

#~ msgid ""
#~ "Use the gpgsm tool to sign, "
#~ "verify, encrypt and decrypt files. Use"
#~ " a signature key on a Nitrokey "
#~ "to sign documents using Acrobat Reader,"
#~ " Open Office / Libre Office or "
#~ "any other PDF reader supporting "
#~ "electronic signatures."
#~ msgstr ""
#~ "使用gpgsm工具来签署、验证、加密和解密文件。使用Nitrokey上的签名密钥，使用Acrobat Reader、Open"
#~ " Office / Libre Office或任何其他支持电子签名的PDF阅读器签署文件。"

#~ msgid "GPA - GNU Privacy Assistant"
#~ msgstr "GPA - GNU隐私助理"

#~ msgid ""
#~ "The Gnu Privacy Assistant (GPA) "
#~ "recognizes Nitrokey out-of-the-box, "
#~ "has various features to manage keys "
#~ "and cards. It also allows file "
#~ "operations such as file encryption, "
#~ "decryption, signing."
#~ msgstr "Gnu隐私助理（GPA）能够识别Nitrokey，具有管理密钥和卡片的各种功能。它还允许文件操作，如文件加密、解密、签名。"

#~ msgid "SOPS - Secrect OPerationS"
#~ msgstr "SOPS - 正确的操作"

#~ msgid ""
#~ "SOPS is an editor of encrypted "
#~ "files that supports YAML, JSON and "
#~ "BINARY formats and encrypts with AWS "
#~ "KMS and PGP. You can find it "
#~ "on github."
#~ msgstr "SOPS是一个加密文件的编辑器，支持YAML、JSON和BINARY格式，用AWS KMS和PGP加密。你可以在github上找到它。"

#~ msgid "Aloaha"
#~ msgstr "Aloaha"

#~ msgid ""
#~ "Aloaha provides several applications to "
#~ "encrypt and sign PDFs. All of "
#~ "them, which allow smart card "
#~ "integration, work with Nitrokey. You can"
#~ " for example import key and "
#~ "certificate by using OpenSC or any "
#~ "other appropriate variant. After this "
#~ "Windows recognize your certificate and "
#~ "you can sign the document as it"
#~ " is shown in the screencast below."
#~ msgstr "Aloaha提供了几个应用程序来加密和签署PDF文件。所有这些允许智能卡集成的应用程序都与Nitrokey一起工作。例如，你可以通过使用OpenSC或任何其他适当的变体来导入密钥和证书。在这之后，Windows会识别你的证书，你就可以像下面的截屏一样签署文件。"

#~ msgid "GpgEx for Windows Explorer"
#~ msgstr "用于Windows Explorer的GpgEx"

#~ msgid ""
#~ "GpgEx integrates smoothly into Windows "
#~ "Explorer to allow encryption and "
#~ "decryption of files. Install it as "
#~ "part of the GPG4Win package."
#~ msgstr "GpgEx顺利地集成到Windows Explorer中，允许对文件进行加密和解密。把它作为GPG4Win软件包的一部分来安装。"

#~ msgid ""
#~ "Before you start to use any of "
#~ "these applications with your Nitrokey, "
#~ "please ensure that you installed the "
#~ "device driver and initialized the device"
#~ " (e.g. generated keys)."
#~ msgstr "在你开始用你的Nitrokey使用这些应用程序之前，请确保你已经安装了设备驱动程序并初始化了设备（如生成了钥匙）。"

#~ msgid ""
#~ "Certificate-based login with TLS and "
#~ "web browser is a very secure "
#~ "authentication method but it is only "
#~ "used rarely. If you are unsure "
#~ "what this means, this approach is "
#~ "most likely not relevant for you."
#~ msgstr "使用TLS和网络浏览器的基于证书的登录是一种非常安全的认证方法，但它只是很少使用。如果你不确定这意味着什么，这种方法很可能与你无关。"

#~ msgid ""
#~ "This page refers to websites and "
#~ "applications which support certificate "
#~ "authentication, so that users don't need"
#~ " to enter username and password when"
#~ " login. For instance WebID is a "
#~ "great protocol which makes use of "
#~ "it. Certificate authentication can be "
#~ "used easily with the Nitrokey and "
#~ "also with any other certificate "
#~ "storages. Mozilla Firefox"
#~ msgstr "本页指的是支持证书认证的网站和应用程序，这样用户在登录时就不需要输入用户名和密码。例如，WebID是一个伟大的协议，它利用了这一点。证书认证可以很容易地用于Nitrokey，也可以用于任何其他的证书储存器。火狐浏览器"

#~ msgid "You need to install the PKCS#11 driver:"
#~ msgstr "你需要安装PKCS#11驱动。"

#~ msgid ""
#~ "Download the PKCS11 driver and store "
#~ "it on your local hard disk or "
#~ "install OpenSC. Open the Preferences in"
#~ " Firefox and go to  Privacy & "
#~ "Security -> Security (just a headline)"
#~ " -> Button 'Security Devices...' Press "
#~ "the button Load. Enter \"Nitrokey\" as"
#~ " the Module Name and press the "
#~ "Browse button to select the previously"
#~ " downloaded PKCS11 driver file. Confirm "
#~ "and close all dialogs."
#~ msgstr ""
#~ "下载PKCS11驱动程序并将其存储在你的本地硬盘上，或者安装OpenSC。打开火狐浏览器的首选项，进入隐私& 安全 "
#~ "-> 安全（只是一个标题） -> 按钮 '安全设备...' "
#~ "按下加载按钮。输入\"Nitrokey\"作为模块名称，并按浏览按钮，选择先前下载的PKCS11驱动文件。确认并关闭所有对话框。"

#~ msgid ""
#~ "Now you are ready to access "
#~ "websites which provide certificate "
#~ "authentication. Internet Explorer"
#~ msgstr "现在你已经准备好访问提供证书认证的网站了。互联网浏览器"

#~ msgid ""
#~ "Install this Mini Driver for Windows."
#~ " Now you are ready to access "
#~ "websites which provide certificate "
#~ "authentication. Google Chrome"
#~ msgstr "安装这个Mini Driver for Windows。现在你已经准备好访问提供证书认证的网站了。谷歌浏览器"

#~ msgid ""
#~ "Under Windows, install this Mini Driver."
#~ " Under Linux, follow these instructions."
#~ " Now you are ready to access "
#~ "websites which provide certificate "
#~ "authentication. WebID"
#~ msgstr "在Windows下，安装这个迷你驱动程序。在Linux下，请遵循这些指示。现在你已经准备好访问提供证书认证的网站了。网络身份认证"

#~ msgid ""
#~ "WebID is a technology to enable "
#~ "secure and federated social websites. "
#~ "Here is a video (WebM, Ogg video,"
#~ " H.264) which demonstrates how to use"
#~ " Nitrokey to create a WebID profile"
#~ " and subsequently to use it in "
#~ "an Internet cafe in Singapore. Nitrokey"
#~ " protects against computer viruses which"
#~ " might otherwise steel the username "
#~ "and password. Websites Web Site        "
#~ "Category CAcert  community-based Certificate"
#~ " Authority PrivaSphere     Secure messaging "
#~ "HM Revenue & Customs    UK's tax "
#~ "administration Software Application     Category "
#~ "Roundcube (plugin)      Webmail Drupal (WebID,"
#~ " Certificate login)       Content management "
#~ "system Media Wiki (plugin)     Wiki "
#~ "Joomla!         Content management system "
#~ "Apache + mod_ssl        Web server "
#~ "OpenSSH         SSH (remote secure shell) "
#~ "client and server Wordpress (plugin)      "
#~ "Blog and CMS Tivoli  System management"
#~ " framework Globalscape EFT         managed "
#~ "file transfer (MFT) Oracle Identity "
#~ "Manager         I&AM Fuse Source     "
#~ "Middleware Liferay         Blog FusionForge     "
#~ "web-based project-management and "
#~ "collaboration software"
#~ msgstr ""
#~ "WebID是一项实现安全和联合社会网站的技术。这里有一段视频（WebM，Ogg视频，H.264），演示了如何使用Nitrokey创建一个WebID配置文件，并随后在新加坡的一家网吧使用。Nitrokey可以防止计算机病毒的入侵，否则这些病毒可能会将用户名和密码钢化。网站"
#~ " 网站类别 CAcert 基于社区的证书颁发机构 PrivaSphere 安全消息"
#~ " HM Revenue & Customs UK's tax "
#~ "administration 软件应用类别 Roundcube（插件） Webmail "
#~ "Drupal（WebID，证书登录） 内容管理系统 Media Wiki（插件） Wiki"
#~ " Joomla!         内容管理系统 Apache + mod_ssl"
#~ " 网络服务器 OpenSSH SSH（远程安全外壳）客户端和服务器 Wordpress（插件）"
#~ " 博客和CMS Tivoli 系统管理框架 Globalscape EFT "
#~ "管理文件传输（MFT） Oracle Identity Manager I&AM "
#~ "Fuse 源码中间件 Liferay 博客 FusionForge "
#~ "基于网络的项目管理和协作软件"

#~ msgid ""
#~ "This website is a good read about"
#~ " strong authentication mechanisms, why "
#~ "client certificate authentication isn't "
#~ "popular and better alternatives at the"
#~ " horizon."
#~ msgstr "这个网站是一个关于强认证机制的好读物，为什么客户证书认证不流行，以及更好的替代方案在地平线上。"

#~ msgid "**Q:** How can I use Enterprise Authentication?"
#~ msgstr "**问：**我怎样才能使用企业认证？"

#~ msgid ""
#~ "LinOTP privacyIDEA RCDevs OpenOTP Usage "
#~ "of Nitrokey HSM as a secure key"
#~ " store for the Forgerock OpenDJ "
#~ "server and Forgerock Identity Gateway"
#~ msgstr ""
#~ "LinOTP privacyIDEA RCDevs OpenOTP 使用Nitrokey"
#~ " HSM作为Forgerock OpenDJ服务器和Forgerock身份网关的安全密钥存储。"

#~ msgid ""
#~ "**Q:** How can I do SSH for "
#~ "Server Administration on Windows? The "
#~ "Nitrokey should already have PGP keys"
#~ " installed and the local GnuPG "
#~ "keyring should be aware of the "
#~ "keys, that is to say GPG4Win "
#~ "should be installed on the system "
#~ "(only the core application GnuPG is "
#~ "needed). Furthermore you should install "
#~ "PuTTY. Preparation on client"
#~ msgstr "**问：**如何在Windows上进行服务器管理的SSH？Nitrokey应该已经安装了PGP密钥，本地的GnuPG钥匙圈应该知道这些密钥，也就是说GPG4Win应该安装在系统上（只需要核心程序GnuPG）。此外，你应该安装PuTTY。在客户端的准备工作"

#~ msgid ""
#~ "There are two steps needed to make"
#~ " PuTTY work. At first we need "
#~ "to enable PuTTY support of GnuPG. "
#~ "To achieve this we use the "
#~ "following command:"
#~ msgstr "要使PuTTY工作，需要两个步骤。首先，我们需要启用PuTTY对GnuPG的支持。为了实现这一点，我们使用以下命令。"

#~ msgid "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"
#~ msgstr "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"

#~ msgid ""
#~ "Now we want to make sure, that "
#~ "the gpg-agent is starting automatically"
#~ " in the background (you can start "
#~ "it manually with the command below, "
#~ "if you prefer). We create a "
#~ "shortcut to gpg-connect-agent.exe. Press"
#~ " and hold the Windows-key and "
#~ "press 'R'. Type in \"shell:startup\" in"
#~ " the opening textfield (see picture "
#~ "below). The Windows-Explorer opens and"
#~ " you right-click on an empty "
#~ "space and choose \"New\" -> "
#~ "\"Shortcut\". Now you should insert the"
#~ " actual command and proceed:"
#~ msgstr ""
#~ "现在我们要确保 gpg-agent "
#~ "在后台自动启动（如果你愿意，你可以用下面的命令手动启动它）。我们创建一个 gpg-connect-"
#~ "agent.exe 的快捷方式。按住 Windows-键，然后按 "
#~ "'R'。在打开的文本字段中输入\"shell:startup\"（见下图）。Windows-"
#~ "Explorer打开了，你在一个空位上点击右键，选择\"新建\"->\"快捷方式\"。现在你应该插入实际的命令并继续。"

#~ msgid "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"
#~ msgstr "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"

#~ msgid ""
#~ "Reboot your system to make sure "
#~ "the shortcut works. If everything is "
#~ "alright you now can use PuTTY as"
#~ " usual and PuTTY will make use "
#~ "of the Nitrokey automatically. Preparation "
#~ "for the server"
#~ msgstr "重新启动你的系统，以确保该快捷方式有效。如果一切正常，你现在可以像往常一样使用PuTTY，PuTTY会自动使用Nitrokey。为服务器做准备"

#~ msgid "You can generate an authorized_keys file by running"
#~ msgstr "你可以通过运行以下程序生成一个authorized_keys文件"

#~ msgid ""
#~ "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" "
#~ "--export-ssh-key keyID >> authorized_keys"
#~ msgstr ""
#~ "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" "
#~ "--export-ssh-key keyID >> authorized_keys"

#~ msgid ""
#~ "where 'keyID' is either the fingerprint"
#~ " of your key or just the E-Mail"
#~ " address bind to your key. The "
#~ "Nitrokey must already be known to "
#~ "the local GnuPG keyring. You can "
#~ "now append that file to a remote"
#~ " server's authorized_keys and when you "
#~ "ssh to the server you'll be asked"
#~ " for a pin rather than a "
#~ "passphrase."
#~ msgstr "其中'keyID'是你的钥匙的指纹或只是与你的钥匙绑定的电子邮件地址。Nitrokey必须已经为本地GnuPG钥匙圈所知。你现在可以将该文件添加到远程服务器的authorized_keys中，当你ssh到服务器时，就会要求你输入密码而不是口令。"

#~ msgid "**Q:** How can I do SSH for Server Administration on Linux?"
#~ msgstr "**问：**我如何在Linux上进行服务器管理的SSH？"

#~ msgid ""
#~ "The Nitrokey should already have PGP "
#~ "keys installed and the local GnuPG "
#~ "keyring should know the keys. "
#~ "Preparation on client"
#~ msgstr "Nitrokey应该已经安装了PGP密钥，本地的GnuPG钥匙圈应该知道这些密钥。在客户端的准备工作"

#~ msgid ""
#~ "Make sure ~/.gnupg/gpg.conf contains 'use-"
#~ "agent' Add ssh support to gnupg-"
#~ "agent by adding 'enable-ssh-support' "
#~ "to ~/.gnupg/gpg-agent.conf If the file"
#~ " does not exist yet, you can "
#~ "just create it. Add the following "
#~ "code somewhere into your ~/.bashrc (for"
#~ " fish shell, look here)"
#~ msgstr ""
#~ "确保 ~/.gnupg/gpg.conf 包含 'use-agent' 在"
#~ " ~/.gnupg/gpg-agent.conf 中添加 'enable-"
#~ "ssh-support'，为 gnupg-agent 添加 ssh 支持"
#~ " 如果该文件尚不存在，你可以直接创建它。在你的 ~/.bashrc 中添加以下代码（对于 fish"
#~ " shell，请看这里）。"

#~ msgid ""
#~ "unset SSH_AGENT_PID if [ "
#~ "\"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; "
#~ "then export SSH_AUTH_SOCK=\"$(gpgconf --list-"
#~ "dirs agent-ssh-socket)\" fi"
#~ msgstr ""
#~ "unset SSH_AGENT_PID if [ "
#~ "\"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; "
#~ "then export SSH_AUTH_SOCK=\"$（gpgconf -list-"
#~ "dirs agent-ssh-socket）\" fi"

#~ msgid ""
#~ "Simply restart your system or try "
#~ "pkill gpg-agent and open a new "
#~ "commandline to make sure everything is"
#~ " set In case of problems, please "
#~ "try gpg2 --card-status on first "
#~ "usage to make sure the gpg-agent"
#~ " gets started"
#~ msgstr "如果出现问题，请在第一次使用时尝试 gpg2 --card-status，以确保 gpg-agent 被启动。"

#~ msgid "Preparation for the server"
#~ msgstr "为服务器做准备"

#~ msgid "You can generate an authorized_keys file by running either"
#~ msgstr "你可以通过运行以下命令之一来生成一个authorized_keys文件"

#~ msgid ""
#~ "gpgkey2ssh keyID >> ~/authorized_keys #(for"
#~ " GnuPG version <= 2.1.11) or gpg2 "
#~ "--export-ssh-key keyID >> "
#~ "~/authorized_keys #(for newer GnuPG versions)"
#~ msgstr ""
#~ "gpgkey2ssh keyID >> ~/authorized_keys #(for"
#~ " GnuPG version <= 2.1.11) or gpg2 "
#~ "--export-ssh-key keyID >> "
#~ "~/authorized_keys #(for newer GnuPG version)"

#~ msgid "where"
#~ msgstr "其中"

#~ msgid "keyID"
#~ msgstr "keyID"

#~ msgid ""
#~ "is the subkey id being used for"
#~ " authentication on your Nitrokey. The "
#~ "Nitrokey must already be known to "
#~ "the local GnuPG keyring. You can "
#~ "now append that file to a remote"
#~ " server's authorized_keys and when you "
#~ "ssh to the server you'll be asked"
#~ " for a pin rather than a "
#~ "passphrase."
#~ msgstr "是在你的Nitrokey上用于认证的子键ID。Nitrokey必须已经被本地的GnuPG钥匙圈所知。你现在可以将该文件添加到远程服务器的authorized_keys中，当你ssh到该服务器时，就会要求你输入密码而不是口令。"

#~ msgid "If you are still asked for a password please make sure that"
#~ msgstr "如果你仍然被要求提供密码，请确保"

#~ msgid "echo $SSH_AUTH_SOCK"
#~ msgstr "echo $SSH_AUTH_SOCK"

#~ msgid ""
#~ "returns something reasonable like "
#~ "'/run/user/1000/gnupg/S.gpg-agent.ssh' or "
#~ "'/home/username/.gnupg/.S.gpg-agent.ssh'. Unfortunately"
#~ " there were some changes in GnuPG "
#~ "in the past so that the actual "
#~ "content can differ from system and "
#~ "GnuPG version. On some systems there "
#~ "may are even multiple folders in "
#~ "this variable saved. You have to "
#~ "adapt the above given code in "
#~ ".bashrc so that the variable "
#~ "SSH_AUTH_SOCK is correct. In doubt look"
#~ " for 'SSH_AUTH_SOCK' in"
#~ msgstr ""
#~ "返回一些合理的信息，如'/run/user/1000/gnupg/S.gpg-"
#~ "agent.ssh'或'/home/username/.gnupg/.S.gpg-"
#~ "agent.ssh'。不幸的是，GnuPG在过去有一些变化，所以实际内容可能因系统和GnuPG版本而异。在一些系统中，这个变量中甚至可能保存有多个文件夹。你必须调整上述.bashrc中的代码，使SSH_AUTH_SOCK这个变量正确。如有疑问，请在.bashrc中查找'SSH_AUTH_SOCK'。"

#~ msgid "man gpg-agent"
#~ msgstr "man gpg-agent"

#~ msgid "to find the actual code for your version/system."
#~ msgstr "来找到你的版本/系统的实际代码。"

#~ msgid ""
#~ "You may check if you have a "
#~ "'pinentry' program installed via your "
#~ "package manager. You may need to "
#~ "set it in the gpg-agent.conf as"
#~ " well. You may need to point "
#~ "gpg-agent to the correct TTY."
#~ msgstr ""
#~ "你可以通过你的软件包管理器检查你是否安装了'pinentry'程序。你可能也需要在 gpg-agent.conf"
#~ " 中设置。你可能需要将 gpg-agent 指向正确的 TTY。"

#~ msgid "**Q:** How can I use the Nitrokey for VPN access?"
#~ msgstr "**问：**我如何使用Nitrokey进行VPN访问？"

#~ msgid ""
#~ "For: Nitrokey Pro, Nitrokey Storage, "
#~ "Nitrokey Start, Nitrokey HSM OpenVPN"
#~ msgstr "对于。Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"

#~ msgid "Generate a key on Nitrokey via pkcs11-tool."
#~ msgstr "通过pkcs11-tool在Nitrokey上生成一个密钥。"

#~ msgid "Generate a certificate signing request via openssl + pkcs11 module:"
#~ msgstr "通过openssl + pkcs11模块生成一个证书签名请求。"

#~ msgid ""
#~ "$ openssl req -engine pkcs11 -sha256 "
#~ "-new -key id_3 -keyform engine -out "
#~ "<CSR FILE.CSR> -config <OPENSSL.CNF> "
#~ "-extensions usr_client"
#~ msgstr ""
#~ "$ openssl req -engine pkcs11 -sha256 "
#~ "-new -key id_3 -keyform engine -out "
#~ "<CSR FILE.CSR> -config <OPENSSL.CNF> "
#~ "-extensions usr_client"

#~ msgid "Sign the certificate with our certificate authority"
#~ msgstr "用我们的证书颁发机构签署证书"

#~ msgid ""
#~ "$ openssl ca -cert <CA.CRT> -keyfile "
#~ "<CA.KEY> -in <FILE.CSR> -out <FILE.CRT> "
#~ "-config <OPENSSL.CNF> -extensions usr_client"
#~ msgstr ""
#~ "$ openssl ca -cert <CA.CRT> -keyfile "
#~ "<CA.KEY> -in <FILE.CSR> -out <FILE.CRT> "
#~ "-config <OPENSSL.CNF> -extensions usr_client"

#~ msgid "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"
#~ msgstr "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"

#~ msgid "Read the certificate's ID required for openvpn configuration:"
#~ msgstr "读取openvpn配置所需的证书'的ID。"

#~ msgid "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"
#~ msgstr "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"

#~ msgid ""
#~ "Modify your openvpn configuration. Add "
#~ "the certificate ID which you gathered"
#~ " in the previous step: E.g."
#~ msgstr "修改你的openvpn配置。添加你在上一步骤中收集的证书ID。例如"

#~ msgid ""
#~ "$ pkcs11-id "
#~ "'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"
#~ msgstr ""
#~ "$ pkcs11-id "
#~ "'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"

#~ msgid "Add the PKCS#11 driver to the configuration too, e.g.:"
#~ msgstr "把PKCS#11驱动也添加到配置中，例如。"

#~ msgid "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"
#~ msgstr "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'。"

#~ msgid "See this link for further information."
#~ msgstr "更多信息见此链接。"

#~ msgid ""
#~ "Now all configurations are done. When"
#~ " executing OpenVPN client, Nitrokey's PIN"
#~ " needs to be entered. Unfortunately "
#~ "OpenVPN doesn't prompt to enter the "
#~ "PIN and it has to be entered "
#~ "in the following way:"
#~ msgstr "现在所有的配置都完成了。在执行OpenVPN客户端时，需要输入Nitrokey'的PIN。不幸的是，OpenVPN没有提示输入PIN码，必须按以下方式输入。"

#~ msgid "$ telnet 8888 password 'User PIN (OpenPGP card) token' <PIN>"
#~ msgstr "$ telnet 8888 password 'User PIN (OpenPGP card) token' < PIN>"

#~ msgid ""
#~ "Alternatively you could recompile OpenVPN "
#~ "client with systemd support disabled and"
#~ " it will prompt you for the PIN"
#~ " as expected. Alternatively to the "
#~ "OpenVPN client you could use the "
#~ "Viscosity client which provides a better"
#~ " user experience especially for entering"
#~ " the PIN."
#~ msgstr "另外，你可以在禁用systemd支持的情况下重新编译OpenVPN客户端，它就会如期提示你输入PIN。除了OpenVPN客户端，你还可以使用Viscosity客户端，它提供了更好的用户体验，特别是在输入PIN时。"

#~ msgid ""
#~ "Strong Swan works using the PKCS#11 "
#~ "driver. Basically follow these steps:"
#~ msgstr "Strong Swan使用PKCS#11驱动工作。基本上遵循这些步骤。"

#~ msgid ""
#~ "$ pkcs11-tool --module /usr/lib/x86_64-linux-"
#~ "gnu/pkcs11/opensc-pkcs11.so -l -k --key-"
#~ "type rsa:4096 --id 10 --label 'Staging"
#~ " Access'"
#~ msgstr ""
#~ "$ pkcs11-tool --module /usr/lib/x86_64-linux-"
#~ "gnu/pkcs11/opensc-pkcs11.so -l -k -key-"
#~ "type rsa:4096 --id 10 --label 'Staging"
#~ " Access'。"

#~ msgid ""
#~ "$ openssl OpenSSL> engine dynamic -pre"
#~ " SO_PATH:/usr/lib/x86_64-linux-gnu/engines-1.1/pkcs11.so "
#~ "-pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD"
#~ " -pre MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11"
#~ "/opensc-pkcs11.so OpenSSL> req -engine "
#~ "pkcs11 -sha256 -new -key id_10 -keyform"
#~ " engine -out user@email.com-staging-"
#~ "cert.csr -subj "
#~ "'/C=GB/L=Cambridge/O=Organization/OU=Staging "
#~ "Access/CN=user@email.com/emailAddress=user@email.com'"
#~ msgstr ""
#~ "$ openssl OpenSSL> engine dynamic -pre"
#~ " SO_PATH:/usr/lib/x86_64-linux-gnu/engines-1.1/pkcs11.so "
#~ "-pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD"
#~ " -pre MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11"
#~ "/opensc-pkcs11。so OpenSSL> req -engine "
#~ "pkcs11 -sha256 -new -key id_10 -keyform"
#~ " engine -out user@email.com-staging-"
#~ "cert.csr -subj "
#~ "'/C=GB/L=Cambridge/O=Organization/OU=Staging "
#~ "Access/CN=user@email.com/emailAddress=user@email.com'"

#~ msgid ""
#~ "$ openssl x509 -in user@email.com-"
#~ "staging-cert.csr -out user@email.com-staging-"
#~ "cert.der -outform DER"
#~ msgstr ""
#~ "$ openssl x509 -in user@email.com-"
#~ "staging-cert.csr -out user@email.com-staging-"
#~ "cert.der -out form DER"

#~ msgid ""
#~ "$ pkcs11-tool --module /usr/lib/x86_64-linux-"
#~ "gnu/pkcs11/opensc-pkcs11.so -l -y cert "
#~ "-w user@email.com-staging-cert.der --id "
#~ "10 --label 'Staging Access'"
#~ msgstr ""
#~ "$ pkcs11-tool --module /usr/lib/x86_64-linux-"
#~ "gnu/pkcs11/opensc-pkcs11.so -l -y cert "
#~ "-w user@email.com-staging-cert.der --id "
#~ "10 --label 'Staging Access'。"

#~ msgid "8. VPN is now connected Stunnel"
#~ msgstr "8.VPN现在已经连接上了Stunnel"

#~ msgid ""
#~ "Stunnel works as an SSL encryption "
#~ "wrapper between remote client and local"
#~ " (inetd-startable) or remote server. "
#~ "It can be used to add SSL "
#~ "functionality to commonly used inetd "
#~ "daemons like POP2, POP3, and IMAP "
#~ "servers without any changes in the "
#~ "programs' code."
#~ msgstr "Stunnel在远程客户端和本地（可启动的inetd）或远程服务器之间作为一个SSL加密包装器工作。它可以用来将SSL功能添加到常用的inetd守护程序中，如POP2、POP3和IMAP服务器，而无需对程序的代码进行任何修改。"

#~ msgid ""
#~ "engine=dynamic "
#~ "engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
#~ "engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD"
#~ " engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so "
#~ "engineCtrl=INIT"
#~ msgstr ""
#~ "engine=dynamic "
#~ "engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
#~ "engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD"
#~ " engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so "
#~ "engineCtrl=INIT"

#~ msgid "[service] engineNum=1 key=id_45"
#~ msgstr "[服务] engineNum=1 key=id_45"

#~ msgid "**Q:** How can I do PKI / Certificate Authority (CA)?"
#~ msgstr "**问：**如何进行PKI/证书授权（CA）？"

#~ msgid "CA keys are very sensitive and must not be compromised or lost. GnuPG"
#~ msgstr "CA密钥是非常敏感的，决不能被破坏或丢失。GnuPG"

#~ msgid "Instructions OpenSSL"
#~ msgstr "说明OpenSSL"

#~ msgid ""
#~ "Install OpenSC'S engine_pkcs11 Run the "
#~ "command \"pkcs11-tool --list-slots\" to "
#~ "list the available slots. Run the "
#~ "command \"openssl> req -engine pkcs11 "
#~ "-new -key slot_X-id_XXXX -keyform engine"
#~ " -x509 -out cert.pem -text\" where X"
#~ " is the appropriate slot number and"
#~ " XXXX is the slot ID, e.g. "
#~ "\"... -key "
#~ "slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" "
#~ "Test"
#~ msgstr ""
#~ "安装OpenSC'S引擎_pkcs11 运行命令\"pkcs11-tool --list-slots\""
#~ " 列出可用的插槽。运行命令 \"openssl> req -engine pkcs11"
#~ " -new -key slot_X-id_XXXX -keyform "
#~ "engine -x509 -out cert.pem -text\" 其中"
#~ " X 是适当的插槽编号，XXXX 是插槽 ID，例如：\"...-key "
#~ "slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" "
#~ "测试"

#~ msgid "Other"
#~ msgstr "其他"

#~ msgid ""
#~ "Please see this PDF (p. 30) from"
#~ " heinlein-support.de for summarized "
#~ "instructions in German."
#~ msgstr "请参阅heinlein-support.de的PDF文件（第30页），了解德文的简要说明。"

#~ msgid ""
#~ "µ-CA-tool is a script based on "
#~ "GnuPG, OpenSC and OpenSSL which helps"
#~ " to perform basic tasks of a "
#~ "CA. It works with Nitrokey Pro and"
#~ " Nitrokey Storage."
#~ msgstr ""
#~ "µ-CA-tool是一个基于GnuPG、OpenSC和OpenSSL的脚本，有助于执行CA的基本任务。它与Nitrokey"
#~ " Pro和Nitrokey Storage一起工作。"

#~ msgid "**Q:** How can I use the password manager?"
#~ msgstr "**问：**我怎样才能使用密码管理器？"

#~ msgid "You have the following options:"
#~ msgstr "你有以下选择。"

#~ msgid ""
#~ "Use Nitrokey's built-in Password Safe"
#~ " to store passwords securely. For "
#~ "this you need the Nitrokey App. "
#~ "Maximum are 16 passwords. Use Pass "
#~ "(simple commandline password manager for "
#~ "Unix systems, mainly for experts). Use"
#~ " KeePass as described below."
#~ msgstr "使用Nitrokey'内置的密码保险箱来安全存储密码。为此，你需要使用Nitrokey应用程序。最多有16个密码。使用Pass（Unix系统的简单命令行密码管理器，主要针对专家）。使用KeePass，如下所述。"

#~ msgid "Protecting KeePass with Nitrokey's One-Time Passwords"
#~ msgstr "用Nitrokey'的一次性密码保护KeePass"

#~ msgid ""
#~ "You can also follow this video (It"
#~ " contains a mistake around time 4:22"
#~ " which is described later below). "
#~ "Keepass Installation"
#~ msgstr "你也可以关注这个视频（它在4:22左右包含了一个错误，下面会介绍）。Keepass的安装"

#~ msgid ""
#~ "Install Keepass 2.3.5. For Ubuntu: "
#~ "Because the main repository contains the"
#~ " older 2.3.4, you have to use "
#~ "some other source like this private "
#~ "PPA (please run these commands in "
#~ "terminal):"
#~ msgstr ""
#~ "安装Keepass "
#~ "2.3.5。对于Ubuntu。因为主仓库包含较旧的2.3.4，你必须使用一些其他来源，如这个私人PPA（请在终端运行这些命令）。"

#~ msgid ""
#~ "sudo add-apt-repository ppa:jtaylor/keepass"
#~ " sudo apt-get update sudo apt-"
#~ "get install keepass2"
#~ msgstr ""
#~ "sudo add-apt-repository ppa:jtaylor/keepass"
#~ " sudo apt-get update sudo apt-"
#~ "get install keepass2"

#~ msgid ""
#~ "Install the OtpKeyProv plugin by "
#~ "downloading the archive, unzipping and "
#~ "copying the content to Keypass' Plugin"
#~ " directory. On Linux: sudo cp "
#~ "OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ For "
#~ "Linux, optional: Install mono-complete "
#~ "package if plugin is not detected "
#~ "when running Keepass2 (you can check "
#~ "that in Tools/Plugins):"
#~ msgstr ""
#~ "安装OtpKeyProv插件，方法是下载档案，解压并复制内容到Keypass'插件目录。在Linux上：sudo cp "
#~ "OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ "
#~ "对于Linux，可选：如果运行Keepass2时未检测到插件，则安装mono-"
#~ "complete软件包（你可以在Tools/Plugins中检查）。"

#~ msgid "sudo apt-get install mono-complete"
#~ msgstr "sudo apt-get安装mono-complete"

#~ msgid "Keepass OTP Configuration Existing Database"
#~ msgstr "Keepass OTP配置现有数据库"

#~ msgid ""
#~ "Do a backup of your database and"
#~ " keep it until you are really "
#~ "sure everything works fine! Make sure"
#~ " you really did a backup. If "
#~ "you mess up, your passwords are "
#~ "lost! Open database as usual Select "
#~ "File/Change Master Key..."
#~ msgstr ""
#~ "对你的数据库做一个备份，并保留它，直到你真正确定一切工作正常为止!请确保你真的做了备份。如果你搞砸了，你的密码就会丢失!像往常一样打开数据库"
#~ " 选择文件/更改主密钥..."

#~ msgid "New Database"
#~ msgstr "新数据库"

#~ msgid "Create new database as usual"
#~ msgstr "像往常一样创建新的数据库"

#~ msgid "Common"
#~ msgstr "普通"

#~ msgid ""
#~ "Insert Master Password (optional) Set "
#~ "Key file / provider: to One-Time"
#~ " Passwords (OATH HOTP) Click OK With"
#~ " Nitrokey App: select HOTP slot and"
#~ " generate HOTP secret (it will be "
#~ "copied to clipboard automatically). Note: "
#~ "You may want write down this "
#~ "secret and store it anywhere secure. "
#~ "Otherwise if you lose your Nitrokey "
#~ "or it gets broken your password "
#~ "database is lost as well!!! Paste "
#~ "the secret to Keepass OTP Plugin "
#~ "window Make sure the Counter field "
#~ "and digits count are set the same"
#~ " in both windows. Click OK in "
#~ "Nitrokey App to save the slot. "
#~ "Select secret type: Base32 Set the "
#~ "other settings as you like. Please "
#~ "consult plugin's manual (should be in"
#~ " same downloaded archive). I would "
#~ "recommend to set look-ahead value "
#~ "to non-zero to prevent locking up"
#~ " the database after accidental code "
#~ "request from used HOTP slot. In "
#~ "that case counters on the device "
#~ "and in Keepass would be out of "
#~ "sync and OTP codes will not be "
#~ "the same with expected."
#~ msgstr ""
#~ "插入主密码（可选） 设置密钥文件/供应商：为一次性密码（OATH HOTP） 点击确定 "
#~ "使用Nitrokey应用程序：选择HOTP插槽并生成HOTP密码（会自动复制到剪贴板）。注意：您可能需要写下这个秘密，并将其保存在安全的地方。否则，如果您的Nitrokey丢失或被破坏，您的密码数据库也会丢失！！。将秘密粘贴到Keepass"
#~ " OTP插件窗口，确保两个窗口中的计数器字段和数字计数设置相同。在Nitrokey应用程序中点击 \"确定 "
#~ "\"来保存这个槽。选择秘密类型。Base32 "
#~ "按照你的意愿设置其他设置。请参考插件手册（应该在同一个下载文件中）。我建议将前瞻值设置为非零，以防止在使用HOTP插槽意外请求代码后锁定数据库。在这种情况下，设备上的计数器和Keepass中的计数器将不同步，OTP代码将与预期的不一致。"

#~ msgid "Unlocking Database"
#~ msgstr "解锁数据库"

#~ msgid ""
#~ "Open database Insert Master Password (if"
#~ " set) Key file / provider: to "
#~ "One-Time Passwords (OATH HOTP) Press "
#~ "OK Insert HOTP codes by repeatedly "
#~ "choosing proper HOTP slot from the "
#~ "Nitrokey App and pasting the clipboard"
#~ " content to proper field (the order"
#~ " of the codes is important). Press"
#~ " OK"
#~ msgstr ""
#~ "打开数据库 插入主密码（如果设置了） 密钥文件/供应商：到一次性密码（OATH HOTP） "
#~ "按确定 "
#~ "从Nitrokey应用程序中反复选择适当的HOTP插槽，将剪贴板内容粘贴到适当的区域，插入HOTP代码（代码的顺序很重要）。按OK键"

#~ msgid "Issues"
#~ msgstr "问题"

#~ msgid ""
#~ "Due to nature of HOTP solution it"
#~ " is possible to get counters "
#~ "desynchronized (by selecting wrong OTP "
#~ "slot during day-to-day use). Using"
#~ " look-ahead plugin's setting should "
#~ "prevent that (value 10 or so "
#~ "should suffice - depends on desired "
#~ "security requirements - this would allow"
#~ " to 10 accidental requests). TOTP is"
#~ " not having that problem. Setting the"
#~ " OTP protection could be error-prone."
#~ " There is no secret validation on "
#~ "OtpKeyProv side. In the test movie "
#~ "at 4:22 I have managed to set "
#~ "the Base32 coded secret as Hex "
#~ "(which was not a proper hex value)"
#~ " and it has not complained about "
#~ "it. There is no information what "
#~ "happened to database and how it is"
#~ " now configured. I have not noticed"
#~ " until I have watched the movie."
#~ msgstr ""
#~ "由于HOTP解决方案的性质，有可能出现计数器不同步的情况（在日常使用中选择错误的OTP插槽）。使用前瞻插件的设置应该可以防止这种情况（数值10左右就足够了"
#~ "--取决于所需的安全要求--"
#~ "这将允许10个意外的请求）。TOTP没有这个问题。设置OTP保护可能容易出错。在OtpKeyProv方面没有秘密验证。在4:22的测试影片中，我设法将Base32编码的秘密设置为Hex（这不是一个适当的Hex值），它没有抱怨。没有任何信息表明数据库发生了什么以及它现在是如何配置的。我是在看了电影后才注意到的。"

#~ msgid ""
#~ "Tested under Ubuntu 16.10, Nitrokey App"
#~ " v0.6.3 and Nitrokey Storage v0.45."
#~ msgstr "在Ubuntu 16.10下测试，Nitrokey App v0.6.3和Nitrokey Storage v0.45。"

#~ msgid "**Q:** How can I use the True Random Number Generator?"
#~ msgstr "**问：**我如何使用真实随机数发生器？"

#~ msgid ""
#~ "Both devices are compatible to the "
#~ "OpenPGP Card, so that scdrand should "
#~ "work. This script may be useful. "
#~ "The TRNG provides about 40 kbit/s."
#~ msgstr "这两种设备都与OpenPGP卡兼容，所以scdrand应该可以工作。这个脚本可能是有用的。TRNG提供大约40 kbit/s。"

#~ msgid ""
#~ "The user comio created a systemd "
#~ "file to use scdrand and thus the"
#~ " TRNG more generally. He created a"
#~ " ebuild for Gentoo, too."
#~ msgstr ""
#~ "用户 comio 创建了一个 systemd 文件来使用 "
#~ "scdrand，从而更广泛地使用 TRNG。他还为 Gentoo 创建了一个 ebuild。"

#~ msgid ""
#~ "Use Nitrokey library to manage the "
#~ "one-time passwords and password safe "
#~ "functionality. The project nitrokey-get-"
#~ "totp and nitrokey-get-password are "
#~ "nice examples for using the python "
#~ "bindings of Nitrokey library to get "
#~ "a custom interface. In order to "
#~ "access the integrated smart card, you"
#~ " can use OpenSC's command line tools."
#~ " If your application has a PKCS#11"
#~ " interface, use OpenSC's PKCS#11 driver."
#~ " To work with the smart card "
#~ "low level, see the OpenPGP Card "
#~ "specification. The source code of the"
#~ " firmware and the hardware layout are"
#~ " available too. To develop special "
#~ "applications or for command line access"
#~ " one can use the nitrocli created "
#~ "by d-e-s-o. Gkey is a go-based "
#~ "command line tool to access the "
#~ "Password Safe and OTP entries. A "
#~ "libnitrokey wrapper for Rust providing "
#~ "access to Nitrokey devices."
#~ msgstr ""
#~ "使用Nitrokey库来管理一次性密码和密码安全功能。项目nitrokey-get-"
#~ "totp和nitrokey-get-"
#~ "password是使用Nitrokey库的python绑定来获得自定义界面的好例子。为了访问集成智能卡，你可以使用OpenSC'的命令行工具。如果你的应用程序有一个PKCS#11接口，请使用OpenSC'的PKCS#11驱动程序。要与智能卡低级别的工作，请参阅OpenPGP卡规范。固件的源代码和硬件布局也是可用的。要开发特殊的应用程序或用于命令行访问，可以使用由d-e-s-o创建的nitrocli。Gkey是一个基于go的命令行工具，用于访问密码保险箱和OTP条目。一个用于Rust的libnitrokey包装器，提供对Nitrokey设备的访问。"

#~ msgid "# HSM 2"
#~ msgstr "# HSM 2"

#~ msgid ""
#~ "**Nitrokey HSM:** 124 dataobjects (DF, "
#~ "EF) can be created. Each EF can"
#~ " have a size of up to 256 "
#~ "byte. The total storage capacity of "
#~ "ca. 32 KByte is shared dynamically "
#~ "among keys and data objects."
#~ msgstr ""
#~ "**硝基钥匙HSM：**可以创建124个数据对象（DF，EF）。每个EF的大小可以达到256字节。总存储容量约为32 "
#~ "KByte，在钥匙和数据对象之间动态共享。"

#~ msgid "**Q:** How to use the HSM for Login For: Nitrokey HSM"
#~ msgstr "**问：**如何使用HSM进行登录 对于。Nitrokey HSM"

#~ msgid "Select your use case:"
#~ msgstr "选择你的用例。"

#~ msgid ""
#~ "Login With Nitrokey HSM on Stand "
#~ "Alone Windows Computers Login With "
#~ "Nitrokey HSM on Windows Domain Computers"
#~ " Using MS Active Directory For Unix"
#~ " environments an integration with PAM "
#~ "and OpenSSH is available."
#~ msgstr ""
#~ "在独立的Windows计算机上用Nitrokey HSM登录 使用MS Active "
#~ "Directory在Windows域计算机上用Nitrokey HSM登录 "
#~ "对于Unix环境，可以与PAM和OpenSSH集成。"

#~ msgid "**Q:**  How to use the HSM for Email Encryption"
#~ msgstr "**问：**如何使用HSM进行电子邮件加密？"

#~ msgid ""
#~ "Encrypt your email using the S/MIME "
#~ "industry standard available in all major"
#~ " e-mail clients."
#~ msgstr "使用所有主要电子邮件客户端中的S/MIME行业标准对您的电子邮件进行加密。"

#~ msgid ""
#~ "The Nitrokey HSM has been tested "
#~ "to work with Mozilla Thunderbird and "
#~ "Microsoft Outlook. Other email clients "
#~ "with support for PKCS#11 or Microsoft"
#~ " CSP should work as well."
#~ msgstr ""
#~ "经测试，Nitrokey HSM可以在Mozilla Thunderbird和Microsoft "
#~ "Outlook中使用。其他支持PKCS#11或微软CSP的电子邮件客户端应该也可以使用。"

#~ msgid "Note: A certificate can be purchased cheaply from CERTUM."
#~ msgstr "注：可以从CERTUM便宜地购买证书。"

#~ msgid ""
#~ "**Q:**   How to use the Nitrokey "
#~ "for Hard Disk Encryption with VeraCrpt?"
#~ msgstr "**问：**如何用VeraCrpt进行硬盘加密的Nitrokey？"

#~ msgid ""
#~ "VeraCrypt is a free and Open "
#~ "Source disk encryption software for "
#~ "Windows, macOS, and GNU/Linux. It is "
#~ "the successor of TrueCrypt and thus "
#~ "recommended, although the following "
#~ "instructions should apply to TrueCrypt "
#~ "as well. Follow these steps to use"
#~ " the program with Nitrokey:"
#~ msgstr "VeraCrypt是一款免费的开源磁盘加密软件，适用于Windows、macOS和GNU/Linux。它是TrueCrypt的后继者，因此被推荐使用，尽管以下说明也应适用于TrueCrypt。按照这些步骤来使用该程序和Nitrokey。"

#~ msgid ""
#~ "Security Consideration: Please note that "
#~ "VeraCrypt doesn't make use of the "
#~ "full security which Nitrokey (and smart"
#~ " cards in general) offer. Instead it"
#~ " stores a keyfile on the Nitrokey "
#~ "which theoretically could be stolen by"
#~ " a computer virus after the user "
#~ "enters the password."
#~ msgstr "安全方面的考虑。请注意，VeraCrypt并没有利用Nitrokey（以及一般的智能卡）提供的全部安全性。相反，它在Nitrokey上存储了一个密钥文件，理论上在用户输入密码后，该文件可能被计算机病毒窃取。"

#~ msgid ""
#~ "Note: Aloaha Crypt is based on "
#~ "TrueCrypt/VeraCrypt but without the described"
#~ " security limitation. (Not tested with "
#~ "Nitrokey HSM!)"
#~ msgstr "注意：Aloaha Crypt是基于TrueCrypt/VeraCrypt的，但没有所述的安全限制。(未用Nitrokey HSM测试！)"

#~ msgid "**Q:** How to sign and encrypt files and pdfs?"
#~ msgstr "**问：**如何对文件和pdf进行签名和加密？"

#~ msgid "GnuPG"
#~ msgstr "GnuPG"

#~ msgid ""
#~ "Starting with version 2.1, GnuPG has "
#~ "build-in but limited support for "
#~ "the Nitrokey HSM. Use the gpgsm "
#~ "tool to sign, verify, encrypt and "
#~ "decrypt files or S/MIME messaging using"
#~ " your Nitrokey HSM. Use a signature"
#~ " key on a Nitrokey HSM to sign"
#~ " documents using Acrobat Reader, Open "
#~ "Office / Libre Office or any other"
#~ " PDF reader supporting electronic "
#~ "signatures. ECC HSM Encryptor"
#~ msgstr ""
#~ "从2.1版开始，GnuPG已经内置了对Nitrokey "
#~ "HSM的有限支持。使用gpgsm工具来签署、验证、加密和解密文件或使用Nitrokey "
#~ "HSM的S/MIME消息。使用Nitrokey HSM上的签名密钥，使用Acrobat Reader、Open"
#~ " Office / Libre Office或任何其他支持电子签名的PDF阅读器来签署文件。ECC"
#~ " HSM加密器"

#~ msgid ""
#~ "ECC HSM Encryptor is a small "
#~ "application to encrypt and decrypt files"
#~ " with a Nitrokey HSM."
#~ msgstr "ECC HSM Encryptor是一个用Nitrokey HSM加密和解密文件的小程序。"

#~ msgid ""
#~ "**Q:** How to do certificat-based "
#~ "Web login Protect access to sensitive"
#~ " information on your website with 2nd"
#~ " factor authentication."
#~ msgstr "**问：**如何进行基于证书的网络登录 用第二因素认证来保护对你网站上敏感信息的访问。"

#~ msgid ""
#~ "Use a Nitrokey HSM as authentication "
#~ "token via the build-in device "
#~ "authentication PKI or use keys and "
#~ "certificates on a Nitrokey HSM for "
#~ "TLS/SSL client authentication."
#~ msgstr "通过内置的设备认证PKI使用Nitrokey HSM作为认证令牌，或者使用Nitrokey HSM上的密钥和证书进行TLS/SSL客户端认证。"

#~ msgid ""
#~ "**Q:** SSH for Server Administration "
#~ "with windows For: Nitrokey Pro, Nitrokey"
#~ " Storage, Nitrokey Start, Nitrokey HSM"
#~ msgstr ""
#~ "**问：**用windows进行服务器管理的SSH 对于。Nitrokey Pro, Nitrokey"
#~ " Storage, Nitrokey Start, Nitrokey HSM"

#~ msgid ""
#~ "The Nitrokey should already have PGP "
#~ "keys installed and the local GnuPG "
#~ "keyring should be aware of the "
#~ "keys, that is to say GPG4Win "
#~ "should be installed on the system "
#~ "(only the core application GnuPG is "
#~ "needed). Furthermore you should install "
#~ "PuTTY. Preparation on client"
#~ msgstr "Nitrokey应该已经安装了PGP密钥，本地的GnuPG钥匙圈应该知道这些密钥，也就是说GPG4Win应该安装在系统上（只需要核心程序GnuPG）。此外，你应该安装PuTTY。在客户端的准备工作"

#~ msgid "**Q:** SSH Server administration on linux"
#~ msgstr "**问：**Linux上的SSH服务器管理"

#~ msgid "**Q:** DNSSEC"
#~ msgstr "**Q:** DNSSEC"

#~ msgid "For: Nitrokey HSM"
#~ msgstr "对于。Nitrokey HSM"

#~ msgid ""
#~ "Protect your domain name resolution "
#~ "using DNSSEC and a Nitrokey HSM as"
#~ " secure key store. It's based on "
#~ "Smartcard-HSM which is why the "
#~ "following resource apply:"
#~ msgstr "使用DNSSEC和Nitrokey HSM作为安全密钥存储，保护你的域名解析。它是基于智能卡-HSM的，这就是为什么以下资源适用。"

#~ msgid ""
#~ "Signing NSD DNSSEC Zones with Nitrokey"
#~ " HSM by Vadim Penzin. Integration "
#~ "with OpenDNSSEC has been successfully "
#~ "tested in a demo by Richard Lamb."
#~ " Luis D Espinoza Sanchez & Eberhard"
#~ " W Lisse held a session on "
#~ "using the SmartCard-HSM for DNSSEC "
#~ "at the 2015 ICAAN Meeting in "
#~ "Singapore. Jan-Piet Mens wrote a "
#~ "nice article about integrating the "
#~ "SmartCard-HSM with PowerDNS."
#~ msgstr ""
#~ "Vadim Penzin用Nitrokey HSM签署NSD DNSSEC区域。Richard "
#~ "Lamb在一个演示中成功地测试了与OpenDNSSEC的整合。Luis D Espinoza "
#~ "Sanchez & Eberhard W "
#~ "Lisse在新加坡举行的2015年ICAAN会议上举行了关于使用SmartCard-HSM进行DNSSEC的会议。Jan-"
#~ "Piet Mens写了一篇关于SmartCard-HSM与PowerDNS整合的好文章。"

#~ msgid ""
#~ "**Q:** Physical Access Control With it's"
#~ " unique build-in device authentication "
#~ "PKI, a Nitrokey HSM has a "
#~ "cryptographically protected unique identity "
#~ "that can be verified in a fast "
#~ "authentication protocol. An access control "
#~ "terminal can verify authenticity and "
#~ "identity of the device, create a "
#~ "secure communication channel and perform "
#~ "offline PIN verification. The coolPACS "
#~ "project has all the details."
#~ msgstr ""
#~ "**问：**物理访问控制 凭借其独特的内置设备认证PKI，Nitrokey "
#~ "HSM有一个加密保护的唯一身份，可以在快速认证协议中进行验证。一个访问控制终端可以验证设备的真实性和身份，创建一个安全的通信通道，并执行离线PIN验证。coolPACS项目有所有的细节。"

#~ msgid "**Q:**"
#~ msgstr "**Q:**"

#~ msgid "PKI / Certificate Authority (CA)"
#~ msgstr "公钥基础设施/证书机构（CA）"

#~ msgid "**Q:** Secret Management and Cloud Infrastructure"
#~ msgstr "**问：**秘密管理和云基础设施"

#~ msgid ""
#~ "An approach to secure keys for "
#~ "Hashicorp Vault/Bank-Vault on a Nitrokey"
#~ " HSM can be found at banzaicloud.com."
#~ msgstr "在Nitrokey HSM上为Hashicorp Vault/Bank-Vault提供安全钥匙的方法可以在banzaicloud.com找到。"

#~ msgid "**Q:** How to do N-of-m Schemes"
#~ msgstr "**问：**如何进行N-of-m计划"

#~ msgid ""
#~ "The Nitrokey HSM 2 supports two "
#~ "different n-of-m schemes - one for "
#~ "secure sharing of key material/passwords "
#~ "and one for public key authentication"
#~ " to control the access to the "
#~ "device. Please see this blog post "
#~ "for more detailed information. N-of-m "
#~ "for DKEK Shares"
#~ msgstr ""
#~ "Nitrokey HSM 2支持两种不同的n-of-m方案--"
#~ "一种用于安全共享密钥材料/密码，另一种用于公共密钥认证，以控制对设备的访问。更详细的信息请参见这篇博文。DKEK共享的N-"
#~ "of-m"

#~ msgid ""
#~ "This feature can be used with "
#~ "OpenSC as described here. The general"
#~ " approach is seen in the videos "
#~ "below (external links)."
#~ msgstr "这个功能可以与OpenSC一起使用，如这里所述。在下面的视频中可以看到一般的方法（外部链接）。"

#~ msgid "Nitrokey HSM's Secure Key Backup and Restore:"
#~ msgstr "Nitrokey HSM'的安全密钥备份和恢复。"

#~ msgid "Screencast"
#~ msgstr "录像带"

#~ msgid "Nitrokey HSM's M-of-N Threshold Scheme:"
#~ msgstr "Nitrokey HSM'的M-of-N阈值方案。"

#~ msgid "screencast N-of-m for public key authentication"
#~ msgstr "公钥认证的截屏N-of-m"

#~ msgid ""
#~ "So far n-of-m authentication is only "
#~ "supported in OpenSCDP. The blog post "
#~ "gives an overview and a how-to "
#~ "here (CDN access required) is shown "
#~ "the process step by step in the"
#~ " Smart Card Shell. For OpenSC there"
#~ " is a ticket to get that "
#~ "integrated."
#~ msgstr ""
#~ "到目前为止，只有OpenSCDP支持n-"
#~ "of-m认证。这篇博文给出了一个概述，这里的方法（需要CDN访问）显示了在智能卡外壳中一步一步的过程。对于OpenSC来说，有一个票据可以将其整合。"

#~ msgid ""
#~ "n-of-m authentication is also supported "
#~ "in the PKI-as-a-Service Portal for "
#~ "locally and remote connected HSMs. The"
#~ " PKI-as-a-Service Portal is based on"
#~ " OpenSCDP."
#~ msgstr ""
#~ "PKI-as-a-Service门户网站也支持本地和远程连接HSM的n-of-m认证。PKI-"
#~ "as-a-Service门户网站是基于OpenSCDP的。"

#~ msgid "**Q:** How to safe Cryptocurrences in the Nitrokey HSM"
#~ msgstr "**问：**如何在Nitrokey HSM中确保加密货币的安全。"

#~ msgid ""
#~ "J.v.d.Bosch wrote a simple, free python"
#~ " program to secure the private key"
#~ " of a Bitcoin wallet in a HSM."
#~ " See here for further information. "
#~ "Using the HSM in an Ethereum PoA"
#~ " Chain. Tezos has been reported to"
#~ " work with Nitrokey HSM."
#~ msgstr ""
#~ "J.v.d.Bosch写了一个简单的、免费的python程序来保护HSM中比特币钱包的私钥。更多信息请看这里。在Ethereum "
#~ "PoA链中使用HSM。据报道，Tezos已经与Nitrokey HSM一起工作。"

#~ msgid ""
#~ "**Q:** How to use the True Random"
#~ " Number Generator? Nitrokey HSM can "
#~ "be used with Botan and TokenTools "
#~ "by using OpenSC as a PKCS#11 "
#~ "driver."
#~ msgstr ""
#~ "**问：**如何使用真实随机数发生器？Nitrokey "
#~ "HSM可以通过使用OpenSC作为PKCS#11驱动，与Botan和TokenTools一起使用。"

#~ msgid ""
#~ "OpenSSL can't use Nitrokey HSM's RNG "
#~ "directly because engine-pkcs11 doesn't "
#~ "contain a mapping for OpenSSL to "
#~ "C_GenerateRandom."
#~ msgstr ""
#~ "OpenSSL不能直接使用Nitrokey HSM的RNG，因为engine-"
#~ "pkcs11不包含OpenSSL对C_GenerateRandom的映射。"

#~ msgid "**Q:** What can I use for development and integration?"
#~ msgstr "**问：**我可以用什么来开发和整合？"

#~ msgid ""
#~ "se OpenSC's commandline tools If your"
#~ " application has a PKCS#11 interface, "
#~ "use OpenSC's PKCS#11 driver. Depending "
#~ "on your Linux distribution, the PKCS "
#~ "driver may may be located at "
#~ "/usr/lib/x86_64-linux-gnu/opensc-pkcs11.so for "
#~ "example."
#~ msgstr ""
#~ "使用OpenSC'的命令行工具 "
#~ "如果你的应用程序有一个PKCS#11接口，请使用OpenSC'的PKCS#11驱动程序。根据你的Linux发行版，PKCS驱动程序可能位于/usr/lib/x86_64"
#~ "-linux-gnu/opensc-pkcs11.so，例如。"

#~ msgid ""
#~ "Alternatively to OpenSC, you might use"
#~ " sc-hsm-embedded PKCS#11 and CSP-"
#~ "Minidriver Module."
#~ msgstr "除了OpenSC，你还可以使用sc-hsm-embedded PKCS#11和CSP-Minidriver模块。"

#~ msgid ""
#~ "In case you use Java, you find "
#~ "a JCE Provider as part of Smart"
#~ " Card Shell. You can find information"
#~ " about the m-of-n scheme here. Secure"
#~ " Messaging can be used with the "
#~ "JCE provider. Please register at the "
#~ "CardContact Developer Network to get "
#~ "access to the user manual and "
#~ "further tools. You can also request "
#~ "the manual from us. Smart card "
#~ "forwarding with Fedora A user generated"
#~ " tool on GitHub to provide an "
#~ "easy frontend to OpenSCs toolset - "
#~ "nitrotool A forum post describes the "
#~ "procedure to sign executables with a "
#~ "key stored on HSM on Windows."
#~ msgstr ""
#~ "如果你使用Java，你会发现JCE提供者是智能卡外壳的一部分。你可以在这里找到关于m-"
#~ "of-n方案的信息。安全信息传递可以与JCE提供者一起使用。请在CardContact开发者网络中注册，以获得用户手册和其他工具。您也可以向我们索取该手册。使用Fedora的智能卡转发"
#~ " GitHub上的一个用户生成的工具，为OpenSCs工具集提供了一个简单的前端 - nitrotool"
#~ " 一个论坛帖子描述了在Windows上用存储在HSM上的密钥签署可执行文件的程序。"

#~ msgid "Key Use Counter"
#~ msgstr "关键使用计数器"

#~ msgid ""
#~ "The Key Use Counter is displayed "
#~ "in the Key Manager of the Smart"
#~ " Card Shell. At the moment you "
#~ "can only set it with a script "
#~ "(SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter in "
#~ "the class scsh/sc-hsm/SmartCardHSM.js)."
#~ msgstr ""
#~ "密钥使用计数器显示在智能卡外壳的密钥管理器中。目前你只能用脚本来设置它（SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter在scsh"
#~ "/sc-sm/SmartCardHSM.js类中）。"

#~ msgid ""
#~ "In our PKCS#11 module there is a"
#~ " proprietary attribute CKA_SC_HSM_KEY_USE_COUNTER "
#~ "with the key use of the "
#~ "C_GenerateKeyPair counter can be set. "
#~ "The attribute can then also be set"
#~ " for a key can be queried."
#~ msgstr "在我们的PKCS#11模块中，有一个专有属性CKA_SC_HSM_KEY_USE_COUNTER，可以设置钥匙使用的C_GenerateKeyPair计数器。然后，该属性也可以被设置为一个密钥可以被查询到。"

#~ msgid ""
#~ "In OCF and the JCE Provider, the"
#~ " Key Use Counter can be queried "
#~ "with SmartCardHSMKey.getUseCounter() and confirm "
#~ "with SmartCardHSMKeySpec.setKeyUseCounter() can be"
#~ " set."
#~ msgstr ""
#~ "在OCF和JCE "
#~ "Provider中，可以用SmartCardHSMKey.getUseCounter()来查询密钥使用计数器，用SmartCardHSMKeySpec.setKeyUseCounter()来确认可以设置。"

#~ msgid ""
#~ "``$ pkcs11-tool --module /usr/lib/x86_64-linux-"
#~ "gnu/pkcs11/opensc-pkcs11.so -l -k --key-"
#~ "type rsa:4096 --id 10 --label 'Staging"
#~ " Access'``"
#~ msgstr ""
#~ "``$ pkcs11-tool --module /usr/lib/x86_64-linux-"
#~ "gnu/pkcs11/opensc-pkcs11.so -l -k --key-"
#~ "type rsa:4096 --id 10 --label 'Staging"
#~ " Access'``"

#~ msgid ""
#~ "``$ openssl OpenSSL> engine dynamic -pre"
#~ " SO_PATH:/usr/lib/x86_64-linux-gnu/engines-1.1/pkcs11.so "
#~ "-pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD"
#~ " -pre MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11"
#~ "/opensc-pkcs11.so OpenSSL> req -engine "
#~ "pkcs11 -sha256 -new -key id_10 -keyform"
#~ " engine -out user@email.com-staging-"
#~ "cert.csr -subj "
#~ "'/C=GB/L=Cambridge/O=Organization/OU=Staging "
#~ "Access/CN=user@email.com/emailAddress=user@email.com'``"
#~ msgstr ""
#~ "``$ openssl OpenSSL> engine dynamic -pre"
#~ " SO_PATH:/usr/lib/x86_64-linux-gnu/engines-1.1/pkcs11.so "
#~ "-pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD"
#~ " -pre MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11"
#~ "/opensc-pkcs11.so OpenSSL> req -engine "
#~ "pkcs11 -sha256 -new -key id_10 -keyform"
#~ " engine -out user@email.com-staging-"
#~ "cert.csr -subj "
#~ "'/C=GB/L=Cambridge/O=Organization/OU=Staging "
#~ "Access/CN=user@email.com/emailAddress=user@email.com'``"

#~ msgid ""
#~ "``$ openssl x509 -in user@email.com-"
#~ "staging-cert.csr -out user@email.com-staging-"
#~ "cert.der -outform DER``"
#~ msgstr ""
#~ "``$ openssl x509 -in user@email.com-"
#~ "staging-cert.csr -out user@email.com-staging-"
#~ "cert.der -outform DER``"

#~ msgid ""
#~ "``$ pkcs11-tool --module /usr/lib/x86_64-linux-"
#~ "gnu/pkcs11/opensc-pkcs11.so -l -y cert "
#~ "-w user@email.com-staging-cert.der --id "
#~ "10 --label 'Staging Access'``"
#~ msgstr ""
#~ "``$ pkcs11-tool --module /usr/lib/x86_64-linux-"
#~ "gnu/pkcs11/opensc-pkcs11.so -l -y cert "
#~ "-w user@email.com-staging-cert.der --id "
#~ "10 --label 'Staging Access'``"

#~ msgid "modules {"
#~ msgstr "模块 {"

#~ msgid "Nitrokey {"
#~ msgstr "Nitrokey {"

#~ msgid "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"
#~ msgstr "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"

#~ msgid "}"
#~ msgstr "}"

#~ msgid "engine=dynamic"
#~ msgstr "发动机=动态"

#~ msgid "engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so"
#~ msgstr "engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so"

#~ msgid "engineCtrl=ID:pkcs11"
#~ msgstr "engineCtrl=ID:pkcs11"

#~ msgid "engineCtrl=LIST_ADD:1"
#~ msgstr "engineCtrl=LIST_ADD:1"

#~ msgid "engineCtrl=LOAD"
#~ msgstr "engineCtrl=LOAD"

#~ msgid "engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so"
#~ msgstr "engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so"

#~ msgid "engineCtrl=INIT"
#~ msgstr "engineCtrl=INIT"

#~ msgid "[service]"
#~ msgstr "[服务]"

#~ msgid "engineNum=1"
#~ msgstr "engineNum=1"

#~ msgid "key=id_45"
#~ msgstr "key=id_45"

#~ msgid "**Q:** Do you have resources for development and integration?"
#~ msgstr "**问：**你们有开发和整合的资源吗？"

#~ msgid ""
#~ "Use Nitrokey library to manage the "
#~ "encrypted mass store, one-time passwords"
#~ " and password safe functionality."
#~ msgstr "使用Nitrokey库来管理加密的大量存储、一次性密码和密码安全功能。"

#~ msgid ""
#~ "The project nitrokey-get-totp and "
#~ "nitrokey-get-password are nice examples "
#~ "for using the python bindings of "
#~ "Nitrokey library to get a custom "
#~ "interface."
#~ msgstr ""
#~ "nitrokey-get-totp和nitrokey-get-"
#~ "password项目是使用Nitrokey库的python绑定来获得自定义界面的好例子。"

#~ msgid ""
#~ "In order to access the integrated "
#~ "smart card, you can use OpenSC's "
#~ "command line tools."
#~ msgstr "为了访问集成智能卡，你可以使用OpenSC'的命令行工具。"

#~ msgid ""
#~ "If your application has a PKCS#11 "
#~ "interface, use OpenSC's PKCS#11 driver."
#~ msgstr "如果你的应用程序有一个PKCS#11接口，请使用OpenSC'的PKCS#11驱动程序。"

#~ msgid ""
#~ "To work with the smart card low"
#~ " level, see the OpenPGP Card "
#~ "specification."
#~ msgstr "要与智能卡低级别的工作，请参阅OpenPGP卡规范。"

#~ msgid ""
#~ "The source code of the firmware "
#~ "and the hardware layout are available"
#~ " too."
#~ msgstr "固件的源代码和硬件布局也是可用的。"

#~ msgid ""
#~ "To develop special applications or for"
#~ " command line access one can use "
#~ "the nitrocli created by d-e-s-o."
#~ msgstr "要开发特殊的应用程序或用于命令行访问，可以使用d-e-s-o创建的nitrocli。"

#~ msgid "A libnitrokey wrapper for Rust providing access to Nitrokey devices."
#~ msgstr "一个用于Rust的libnitrokey包装器，提供对Nitrokey设备的访问。"

#~ msgid "**Q:** How good is the True Random Number Generator (TRNG)?"
#~ msgstr "**问：**真随机数发生器（TRNG）有多好？"

#~ msgid "error output"
#~ msgstr "错误输出"

#~ msgid ""
#~ "``$ sudo openvpn --client --config "
#~ "client.conf`` ``Fri Sep 11 17:42:01 2020"
#~ " OpenVPN 2.4.9 x86_64-redhat-linux-gnu "
#~ "[SSL (OpenSSL)] [LZO] [LZ4] [EPOLL] "
#~ "[PKCS11] [MH/PKTINFO] [AEAD] built on "
#~ "Apr 24 2020`` ``Fri Sep 11 "
#~ "17:42:01 2020 library versions: OpenSSL "
#~ "1.1.1g FIPS  21 Apr 2020, LZO "
#~ "2.08`` ``Fri Sep 11 17:42:01 2020 "
#~ "PKCS#11: Adding PKCS#11 provider "
#~ "'/usr/lib64/pkcs11/opensc-pkcs11.so'`` ``Enter User"
#~ " PIN (OpenPGP card) token Password: "
#~ "******`` ``Fri Sep 11 17:42:12 2020 "
#~ "TCP/UDP: Preserving recently used remote "
#~ "address: [AF_INET]18.157.180.240:1194`` ``Fri Sep"
#~ " 11 17:42:12 2020 Socket Buffers: "
#~ "R=[212992->212992] S=[212992->212992]`` ``Fri Sep"
#~ " 11 17:42:12 2020 UDP link local: "
#~ "(not bound)`` ``Fri Sep 11 17:42:12 "
#~ "2020 UDP link remote: "
#~ "[AF_INET]18.157.180.240:1194`` ``Fri Sep 11 "
#~ "17:42:12 2020 NOTE: UID/GID downgrade "
#~ "will be delayed because of --client, "
#~ "--pull, or --up-delay`` ``Fri Sep "
#~ "11 17:42:12 2020 TLS: Initial packet "
#~ "from [AF_INET]18.157.180.240:1194, sid=d79690cf "
#~ "9e38ce89`` ``Fri Sep 11 17:42:12 2020"
#~ " VERIFY OK: depth=1, CN=server_CA`` ``Fri"
#~ " Sep 11 17:42:12 2020 VERIFY KU "
#~ "OK`` ``Fri Sep 11 17:42:12 2020 "
#~ "Validating certificate extended key usage``"
#~ " ``Fri Sep 11 17:42:12 2020 ++ "
#~ "Certificate has EKU (str) TLS Web "
#~ "Server Authentication, expects TLS Web "
#~ "Server Authentication`` ``Fri Sep 11 "
#~ "17:42:12 2020 VERIFY EKU OK`` ``Fri "
#~ "Sep 11 17:42:12 2020 VERIFY OK: "
#~ "depth=0, CN=server`` ``Fri Sep 11 "
#~ "17:42:12 2020 OpenSSL: error:141F0006:SSL "
#~ "routines:tls_construct_cert_verify:EVP lib`` ``Fri "
#~ "Sep 11 17:42:12 2020 TLS_ERROR: BIO "
#~ "read tls_read_plaintext error`` ``Fri Sep "
#~ "11 17:42:12 2020 TLS Error: TLS "
#~ "object -> incoming plaintext read "
#~ "error`` ``Fri Sep 11 17:42:12 2020 "
#~ "TLS Error: TLS handshake failed`` ``Fri"
#~ " Sep 11 17:42:12 2020 SIGUSR1[soft,tls-"
#~ "error] received, process restarting`` ``Fri"
#~ " Sep 11 17:42:12 2020 Restart pause,"
#~ " 5 second(s)``"
#~ msgstr ""
#~ "``$ sudo openvpn --client --config "
#~ "client.conf`````Fri Sep 11 17:42:01 2020 "
#~ "OpenVPN 2.4.9 x86_64-redhat-linux-gnu "
#~ "[SSL (OpenSSL)] [LZO] [LZ4] [EPOLL] "
#~ "[PKCS11] [MH/PKTINFO] [AEAD] built on "
#~ "Apr 24 2020 ````Fri Sep 11 "
#~ "17:42:01 2020 library versions: OpenSSL "
#~ "1.1.1g FIPS  21 Apr 2020, LZO "
#~ "2.08`` <xid=\"292\"></x>`Fri Sep 11 17:42:01"
#~ " 2020 PKCS#11: Adding PKCS#11 provider "
#~ "'/usr/lib64/pkcs11/opensc-pkcs11.so'````Enter User "
#~ "PIN (OpenPGP card) token Password: "
#~ "******````Fri Sep 11 17:42:12 2020 "
#~ "TCP/UDP: Preserving recently used remote "
#~ "address: [AF_INET]18.157.180.240:1194 `` <x``Fri "
#~ "Sep 11 17:42:12 2020 Socket Buffers: "
#~ "R=[212992->212992] S=[212992->212992]`` ``Fri Sep"
#~ " 11 17:42:12 2020 UDP link local: "
#~ "(not bound)` `` ``Fri Sep 11 "
#~ "17:42:12 2020 UDP link remote: "
#~ "[AF_INET]18.157.180.240:1194` ````Fri Sep 11 "
#~ "17:42:12 2020 NOTE: UID/GID downgrade "
#~ "will be delayed because of --client, "
#~ "--pull, or --up-delay`` ``Fri Sep "
#~ "11 17:42:12 2020 TLS: Initial packet "
#~ "from [AF_INET]18.157.180.240:1194, sid=d79690cf "
#~ "9e38ce89`` ``Fri Sep 11 17:42:12 2020"
#~ " VERIFY OK: depth=1, CN=server_CA````Fri "
#~ "Sep 11 17:42:12 2020 VERIFY KU "
#~ "OK`` ``Fri Sep 11 17:42:12 2020 "
#~ "Validating certificate extended key usage "
#~ "`` ``Fri Sep 11 17:42:12 2020 ++"
#~ " Certificate has EKU (str) TLS Web"
#~ " Server Authentication, expects TLS Web "
#~ "Server Authentication<xid=\"1288\"></x>` ``Fri Sep"
#~ " 11 17:42:12 2020 VERIFY EKU OK "
#~ "`` ``Fri Sep 11 17:42:12 2020 "
#~ "VERIFY OK: depth=0, CN=server "
#~ "````<xid=\"1395\"></x>`` `` Fri Sep 11 "
#~ "17:42:12 2020 TLS_ERROR: BIO read "
#~ "tls_read_plaintext error`` `` Fri Sep 11"
#~ " 17:42:12 2020 TLS Error: TLS object"
#~ " -> incoming plaintext read error` "
#~ "<xid=\"1651\"></x>`Fri Sep 11 17:42:12 2020"
#~ " TLS Error: TLS handshake failed`` "
#~ "``Fri Sep 11 17:42:12 2020 SIGUSR1[soft"
#~ ",tls-error] received, process restarting`` "
#~ "``Fri Sep 11 17:42:12 2020 Restart "
#~ "pause, 5 second(s)` `"

#~ msgid "✄----------✄----------✄----------✄----------✄"
#~ msgstr "✄----------✄----------✄----------✄----------✄"

#~ msgid "Connect Devices"
#~ msgstr "连接设备"

#~ msgid ""
#~ "Checkout the `various use cases and "
#~ "supported applications "
#~ "<https://www.nitrokey.com/documentation/applications#p:nitrokey-"
#~ "fido-u2f>`_."
#~ msgstr ""
#~ "查看`各种使用案例和支持的应用程序<https://www.nitrokey.com/documentation/applications#p"
#~ ":nitrokey-fido-u2f>`_。"

#~ msgid ""
#~ "Currently there are no updates "
#~ "available. The first firmware updates "
#~ "will address bug fixes."
#~ msgstr "目前还没有更新。第一批固件更新将解决错误修复问题。"

#~ msgid ""
#~ "Your Nitrokey is now ready to use."
#~ " `Checkout "
#~ "<https://www.nitrokey.com/documentation/applications>`_ the "
#~ "various use cases and supported "
#~ "applications."
#~ msgstr "你的Nitrokey现在已经可以使用了。`查看<https://www.nitrokey.com/documentation/applications>`_的各种使用情况和支持的应用程序。"

#~ msgid ""
#~ "Your Nitrokey is now ready to use."
#~ " `Checkout <https://www.nitrokey.com/en/applications>`_ "
#~ "the various use cases and supported "
#~ "applications."
#~ msgstr "你的Nitrokey现在已经可以使用了。`查看<https://www.nitrokey.com/en/applications>`_的各种使用情况和支持的应用程序。"

#~ msgid ""
#~ "`Checkout <https://www.nitrokey.com/documentation/applications#p"
#~ ":nitrokey-fido-u2f&os:all>`_ the various "
#~ "use cases and supported applications."
#~ msgstr ""
#~ "`结账 <https://www.nitrokey.com/documentation/applications#p"
#~ ":nitrokey-fido-u2f&os:all>`_各种用例和支持的应用。"

#~ msgid "Double-click the installer and click through (*Next* and *Finish*)"
#~ msgstr "双击安装程序并点击通过（*下一步*和*完成*）。"

#~ msgid "Enter ``nitropy``"
#~ msgstr "输入``nitropy``。"

#~ msgid "Two-factor Authentication and Passwordless Login for Nextcloud accounts"
#~ msgstr "Nextcloud账户的双因素认证和无密码登录"

#~ msgid ""
#~ "Nitrokey Pro and Nitrokey Storage use"
#~ " a True Random Number Generator "
#~ "(TRNG) for generating keys on the "
#~ "device. The entropy generated by the "
#~ "TRNG is used for the entire key"
#~ " length. Therefore the TRNG is "
#~ "compliant to BSI TR-03116."
#~ msgstr ""
#~ "Nitrokey Pro和Nitrokey "
#~ "Storage使用真随机数发生器（TRNG）来生成设备上的密钥。TRNG产生的熵被用于整个密钥长度。因此，TRNG符合BSI "
#~ "TR-03116的规定。"

#~ msgid "Nitrokey FIDO U2F With macOS"
#~ msgstr "Nitrokey FIDO U2F与macOS的关系"

#~ msgid "Accessing a NetHSM using the REST API"
#~ msgstr "使用REST API访问NetHSM"

#~ msgid ""
#~ "This tutorial demonstrates how to access"
#~ " the NetHMS via REST API. The "
#~ "interface is documented `here "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/index.html#docs/summary/summary>`_,"
#~ " and its specification is available "
#~ "as `RAML <https://nethsmdemo.nitrokey.com/api_docs"
#~ "/nethsm-api.raml>`_ and as `OpenAPI "
#~ "(Swagger) "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/gen_nethsm_api_oas20.json>`_."
#~ msgstr ""
#~ "本教程演示了如何通过REST "
#~ "API访问NetHMS。该接口的文档`在<https://nethsmdemo.nitrokey.com/api_docs/index.html#docs/summary/summary>`_。其规范可作为`RAML"
#~ " <https://nethsmdemo.nitrokey.com/api_docs/nethsm-"
#~ "api.raml>`_和`OpenAPI（Swagger） "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/gen_nethsm_api_oas20.json>`_。"

#~ msgid ""
#~ "If you use a NetHSM demo instance"
#~ " with a self-signed certificate, for"
#~ " example using the Docker image, you"
#~ " will have to use the --insecure/-k"
#~ " option for curl to skip the "
#~ "certificate check."
#~ msgstr ""
#~ "如果你使用带有自签名证书的NetHSM演示实例，例如使用Docker镜像，你将不得不使用curl的--"
#~ "insecure/-k选项来跳过证书检查。"

#~ msgid ""
#~ "First set the value of $NETHSM_HOST "
#~ "to the IP address or URL of "
#~ "your NetHSM. Our demo server can "
#~ "be reached at https://nethsmdemo.nitrokey.com/"
#~ msgstr "首先将$NETHSM_HOST的值设置为你的NetHSM的IP地址或URL。我们的演示服务器可以在https://nethsmdemo.nitrokey.com/"

#~ msgid "First, let’s see what we have here:"
#~ msgstr "首先，让我们看看我们这里有什么。"

#~ msgid ""
#~ "The -i/--include option causes curl to"
#~ " print the HTTP status code and "
#~ "the response headers.  The -w '\\n"
#~ "'/--write-out '\\n' option adds a "
#~ "newline after the response body."
#~ msgstr ""
#~ "-i/--include选项使curl打印HTTP状态代码和响应头。  -w 'n'/--write-"
#~ "out 'n'选项在响应体后添加一个换行。"

#~ msgid "See what the device’s status is:"
#~ msgstr "看看设备的状态是什么。"

#~ msgid ""
#~ "A new NetHSM needs to be "
#~ "provisioned first with passphrases and "
#~ "the current time. The *Admin Passphrase*"
#~ " is the *Administrator*’s passphrase, which"
#~ " is the superuser of the NetHSM. "
#~ "The *Unlock Passphrase* is used to "
#~ "encrypt NetHSM’s confidential data store."
#~ msgstr "一个新的NetHSM需要首先配置密码和当前时间。管理员密码*是*管理员*的密码，是NetHSM的超级用户。解锁口令*用于加密NetHSM的机密数据存储。"

#~ msgid ""
#~ "The NetHSM demo instance at "
#~ "nethsmdemo.nitrokey.com is already provisioned."
#~ msgstr "位于nethsmdemo.nitrokey.com的NetHSM演示实例已经被配置。"

#~ msgid "Retrieve the current mode:"
#~ msgstr "检索当前模式。"

#~ msgid "Or switch back to *Attended Boot* mode:"
#~ msgstr "或者切换回*Attended Boot*模式。"

#~ msgid "Create a User"
#~ msgstr "创建一个用户"

#~ msgid ""
#~ "Now create a new user with the "
#~ "operator role that can be used to"
#~ " sign and decrypt data.  Note that"
#~ " the NetHSM assigns a random user "
#~ "ID if we don’t specify it."
#~ msgstr "现在创建一个具有操作员角色的新用户，可以用来签署和解密数据。  注意，如果我们不指定，NetHSM会随机分配一个用户ID。"

#~ msgid ""
#~ "The NetHSM supports RSA, ED25519 and "
#~ "ECDSA keys.  When creating a key, "
#~ "you have to select both the key"
#~ " algorithm and the key mechanisms to"
#~ " use.  RSA keys can be used for"
#~ " decryption (with the modes raw, "
#~ "PKCS#1 and OAEP with MD5, SHA1, "
#~ "SHA224, SHA256, SHA384 or SHA512) and"
#~ " for signatures (with the modes "
#~ "PKCS#1 and PSS with MD5, SHA1, "
#~ "SHA224, SHA256, SHA384 or SHA512).  The"
#~ " other algorithms only support the "
#~ "signature mechanism."
#~ msgstr ""
#~ "NetHSM支持RSA、ED25519和ECDSA密钥。  当创建一个密钥时，你必须选择密钥算法和使用的密钥机制。  "
#~ "RSA密钥可用于解密（模式为原始、PKCS#1和OAEP，采用MD5、SHA1、SHA224、SHA256、SHA384或SHA512）和签名（模式为PKCS#1和PSS，采用MD5、SHA1、SHA224、SHA256、SHA384或SHA512）。"
#~ "  其他算法只支持签名机制。"

#~ msgid ""
#~ "For a complete list of available "
#~ "key algorithms and key mechanisms, see"
#~ " the API documentation for the "
#~ "KeyAlgorithm_ and KeyMechanism_ types."
#~ msgstr "关于可用的密钥算法和密钥机制的完整列表，请参见KeyAlgorithm_和KeyMechanism_类型的API文档。"

#~ msgid ""
#~ "In this section, we want to use"
#~ " an RSA key to decrypt data "
#~ "using PKCS#1 and to sign data with"
#~ " PSS using SHA256.  So let’s generate"
#~ " a new key on the NetHSM. Make"
#~ " sure to use the RSA algorithm "
#~ "and to select the RSA_Signature_PSS_SHA256 "
#~ "and RSA_Decryption_PKCS1 key mechanisms.  If"
#~ " you don’t specify a key ID, "
#~ "the NetHSM will generate a random "
#~ "ID for the new key."
#~ msgstr ""
#~ "在这一节中，我们想用RSA密钥来解密使用PKCS#1的数据，并使用SHA256来签署PSS的数据。  "
#~ "因此，让我们在NetHSM上生成一个新的密钥。确保使用RSA算法并选择RSA_Signature_PSS_SHA256和RSA_Decryption_PKCS1密钥机制。"
#~ "  如果你没有指定一个密钥ID，NetHSM将为新的密钥生成一个随机的ID。"

#~ msgid ""
#~ "Instead of generating a key on the"
#~ " NetHSM, you can also import existing"
#~ " private keys into the NetHSM:"
#~ msgstr "你也可以将现有的私钥导入NetHSM，而不是在NetHSM上生成一个密钥。"

#~ msgid ""
#~ "To make sure that the key has "
#~ "been created and has the correct "
#~ "algorithm and mechanism settings, we can"
#~ " query all keys on the NetHSM:"
#~ msgstr "为了确保钥匙已经被创建，并且具有正确的算法和机制设置，我们可以查询NetHSM上的所有钥匙。"

#~ msgid ""
#~ "To be able to use the key "
#~ "with OpenSSL, we export it as a"
#~ " PEM file and store it as "
#~ "public.pem:"
#~ msgstr "为了能够在OpenSSL中使用该密钥，我们将其导出为PEM文件，并将其存储为public.pem。"

#~ msgid ""
#~ "We can inspect the key with "
#~ "OpenSSL and use it for encryption "
#~ "or signature verification (as described "
#~ "in the next section):"
#~ msgstr "我们可以用OpenSSL检查该密钥，并将其用于加密或签名验证（如下一节所述）。"

#~ msgid ""
#~ "We can encrypt data for the key"
#~ " stored on the NetHSM using OpenSSL."
#~ " (public.pem is the public key file"
#~ " that we created in the `Show "
#~ "Key Details`_ section.)"
#~ msgstr "我们可以使用OpenSSL对存储在NetHSM上的密钥进行数据加密。(public.pem是我们在`显示密钥细节`_部分创建的公钥文件。)"

#~ msgid ""
#~ "Similarly, we can sign data using "
#~ "the key on the NetHSM.  For RSA"
#~ " and ECDSA, we have to calculate "
#~ "a digest first:"
#~ msgstr "同样地，我们可以使用NetHSM上的密钥来签署数据。  对于RSA和ECDSA，我们必须先计算出一个摘要。"

#~ msgid "Then we can create a signature from this digest using the NetHSM:"
#~ msgstr "然后我们可以使用NetHSM从这个摘要中创建一个签名。"

#~ msgid "And then use OpenSSL to verify the signature:"
#~ msgstr "然后用OpenSSL来验证签名。"

#~ msgid "Backups"
#~ msgstr "备份"

#~ msgid ""
#~ "It is possible to create a backup"
#~ " of the NetHSM that contains both "
#~ "the configuration and the stored keys."
#~ " In order to create a backup, "
#~ "you first have to set a backup "
#~ "passphrase that is used to encrypt "
#~ "the backup file:"
#~ msgstr "可以创建一个NetHSM的备份，其中包含配置和存储的密钥。为了创建一个备份，你首先要设置一个备份口令，用来加密备份文件。"

#~ msgid "Now you have to create a user with the *R-Backup* role:"
#~ msgstr "现在你必须创建一个具有*R-Backup*角色的用户。"

#~ msgid "Get the backup and store it in a file:"
#~ msgstr "获取备份并将其存储在一个文件中。"

#~ msgid ""
#~ "If you want to continue with the"
#~ " installation, you can now commit the"
#~ " update:"
#~ msgstr "如果你想继续安装，你现在可以提交更新。"

#~ msgid "Alternatively, you can cancel the update:"
#~ msgstr "或者，你也可以取消更新。"

#~ msgid "Nitropy Command Line Tool"
#~ msgstr "Nitropy命令行工具"

#~ msgid ""
#~ "This tutorial demonstrates how to access"
#~ " the NetHMS via `nitropy "
#~ "<https://github.com/Nitrokey/pynitrokey>`_ command line"
#~ " tool, which you need to download "
#~ "and install."
#~ msgstr ""
#~ "本教程演示了如何通过`nitropy "
#~ "<https://github.com/Nitrokey/pynitrokey>`_命令行工具访问NetHMS，你需要下载和安装该工具。"

#~ msgid ""
#~ "If you use a NetHSM demo instance"
#~ " with a self-signed certificate, for"
#~ " example using the Docker image, you"
#~ " will have to use the ``--no-"
#~ "verify-tls`` option for ``nitropy`` to "
#~ "skip the certificate check."
#~ msgstr ""
#~ "如果你使用带有自签名证书的NetHSM演示实例，例如使用Docker镜像，你将不得不使用``--no-verify-"
#~ "tls``选项来跳过证书检查。"

#~ msgid "Device Information & Status"
#~ msgstr "设备信息& 状态"

#~ msgid ""
#~ "A new NetHSM needs to be "
#~ "provisioned first with passphrases and "
#~ "the current time. The Admin Passphrase"
#~ " is the Administrator’s passphrase, which"
#~ " is the superuser of the NetHSM. "
#~ "The Unlock Passphrase is used to "
#~ "encrypt NetHSM’s confidential data store."
#~ msgstr "一个新的NetHSM需要首先配置密码和当前时间。管理密码是管理员的密码，它是NetHSM的超级用户。解锁密码用于加密NetHSM的机密数据存储。"

#~ msgid "Turn `Unattended Boot` mode on:"
#~ msgstr "开启 \"无人值守启动 \"模式。"

#~ msgid ""
#~ "Separation of duties can be implemented"
#~ " by using different Roles. Each user"
#~ " account configured on the NetHSM has"
#~ " one of the following Roles assigned"
#~ " to it. Following is a high-"
#~ "level description of the operations "
#~ "allowed by each Role. For endpoint-"
#~ "specific details please refer to the "
#~ "REST API documentation."
#~ msgstr ""
#~ "职责分离可以通过使用不同的角色来实现。在NetHSM上配置的每个用户账户都有一个分配给它的下列角色。以下是对每个角色所允许的操作的高层次描述。关于终端的具体细节，请参考REST"
#~ " API文档。"

#~ msgid "**Creating & Deleting Users**"
#~ msgstr "**创建& 删除用户**。"

#~ msgid ""
#~ "Now create a new user with the "
#~ "Operator role that can be used to"
#~ " sign and decrypt data. Note that "
#~ "the NetHSM assigns a random user "
#~ "ID if we don’t specify it."
#~ msgstr "现在创建一个具有操作员角色的新用户，可以用来签署和解密数据。注意，如果我们不指定，NetHSM会随机分配一个用户ID。"

#~ msgid ""
#~ "We can encrypt data for the key"
#~ " stored on the NetHSM using OpenSSL."
#~ " (public.pem is the public key file"
#~ " that we created in the Show "
#~ "Key Details section.)"
#~ msgstr "我们可以使用OpenSSL对存储在NetHSM上的密钥进行数据加密。(public.pem是我们在显示密钥细节部分创建的公钥文件。)"

#~ msgid ""
#~ "Similarly, we can sign data using "
#~ "the key on the NetHSM. For RSA "
#~ "and ECDSA, we have to calculate a"
#~ " digest first:"
#~ msgstr "同样地，我们可以使用NetHSM上的密钥来签署数据。对于RSA和ECDSA，我们必须先计算出一个摘要。"

#~ msgid "Creating Backups"
#~ msgstr "创建备份"

#~ msgid ""
#~ "It is possible to create a backup"
#~ " of the NetHSM that captures both "
#~ "the configuration and the stored keys."
#~ " In order to create a backup, "
#~ "you first have to set a backup "
#~ "passphrase that is used to encrypt "
#~ "the backup file:"
#~ msgstr "可以创建一个NetHSM的备份，同时捕捉到配置和存储的密钥。为了创建一个备份，你首先要设置一个备份口令，用来加密备份文件。"

#~ msgid "Now you have to create a user with the R-Backup role:"
#~ msgstr "现在你必须创建一个具有R-Backup角色的用户。"

#~ msgid "Then can you generate the backup and write it to a file:"
#~ msgstr "然后你是否可以生成备份并将其写入文件。"

#~ msgid "Restoring Backups"
#~ msgstr "恢复备份"

#~ msgid "This backup file can be restored on an unprovisioned NetHSM instance:"
#~ msgstr "这个备份文件可以在一个未配置的NetHSM实例上恢复。"

#~ msgid "Updating NetHSM"
#~ msgstr "更新NetHSM"

#~ msgid ""
#~ "Connect the NetHSM's ETH port with "
#~ "the network. Don't use the BMC ETH"
#~ " port because it allows wider system"
#~ " access."
#~ msgstr "将NetHSM的ETH端口与网络相连。不要使用BMC的ETH端口，因为它允许更广泛的系统访问。"

#~ msgid "IO Shield"
#~ msgstr "IO盾牌"

#~ msgid ""
#~ "The NetHSM appliance is available at "
#~ "address 192.168.1.1. Access and initialize "
#~ "the NetHSM using `nitropy command line"
#~ " tool <cli.html>`_. Alternatively, the "
#~ "`REST API <api.html>`_ and `PKCS#11 "
#~ "driver <pkcs11.html>`_ can be used."
#~ msgstr ""
#~ "NetHSM设备的地址是192.168.1.1。使用`nitropy命令行工具<cli.html>`_访问并初始化NetHSM。另外，也可以使用`REST"
#~ " API <api.html>`_和`PKCS#11驱动 <pkcs11.html>`_。"

#~ msgid "REST API Index"
#~ msgstr "REST API索引"

#~ msgid ""
#~ "Your NetHSM has been delivered in "
#~ "a sealed packaging. `Verify the sealing"
#~ " <sealed-hardware.html>`_ before unpacking "
#~ "to ensure the device has not been"
#~ " tampered with."
#~ msgstr "您的NetHSM是以密封包装交付的。`在拆开包装之前，请核实密封情况<sealed-hardware.html>`_以确保设备没有被篡改。"

#~ msgid ""
#~ "Connect the NetHSM's ETH port with "
#~ "the network. Don't use the BMC ETH"
#~ " port because it allows wider system"
#~ " access. The NetHSM is available at"
#~ " address 192.168.1.1."
#~ msgstr "将NetHSM的ETH端口与网络相连。不要使用BMC的ETH端口，因为它允许更广泛的系统访问。NetHSM的地址是192.168.1.1。"

#~ msgid "Change the password of the BMC ETH Port."
#~ msgstr "更改BMC ETH端口的密码。"

#~ msgid ""
#~ "Initialize the NetHSM using `nitropy "
#~ "command line tool <cli.html>`_. Alternatively,"
#~ " the `REST API <api.html>`_ can be"
#~ " used."
#~ msgstr "使用`nitropy命令行工具<cli.html>`_初始化NetHSM。另外，也可以使用`REST API <api.html>`_。"

#~ msgid ""
#~ "Further information can be obtained in"
#~ " other parts of the documentation."
#~ msgstr "进一步的信息可以在文件的其他部分获得。"

#~ msgid "To list all the available languages, you enter"
#~ msgstr "要列出所有可用的语言，你可以输入"

#~ msgid "Accessing a NetHSM using the PKCS#11 driver"
#~ msgstr "使用PKCS#11驱动访问NetHSM"

#~ msgid "Resources"
#~ msgstr "资源"

#~ msgid "`Docker Image <https://hub.docker.com/r/nitrokey/nethsm>`_"
#~ msgstr "`Docker Image <https://hub.docker.com/r/nitrokey/nethsm>`_"

#~ msgid ""
#~ "`Demo Server <https://nethsmdemo.nitrokey.com>`_, "
#~ "will be reset every eight hours "
#~ "(CET 6:00, 14:00, 22:00). User "
#~ "\"admin\", password \"adminadmin\", unlock "
#~ "password \"unlockunlock\"."
#~ msgstr ""
#~ "`演示服务器 "
#~ "<https://nethsmdemo.nitrokey.com>`_，将每8小时重置一次（欧洲中部时间6:00，14:00，22:00）。用户\"admin\"，密码\"adminadmin\"，解锁密码\"unlockunlock\"。"

#~ msgid ""
#~ "Your NetHSM has been delivered in "
#~ "a sealed packaging. To verify that "
#~ "your NetSHM has arrived safely, you "
#~ "should check the packaging for any "
#~ "tears, cuts, holes or broken sealing."
#~ " Further on, there is a unique "
#~ "handmade glitter seal on top of "
#~ "the packaging. Last but not least, "
#~ "we will send you a picture of "
#~ "it after packing. Please compare the "
#~ "picture to your packaged NetHSM. If "
#~ "you notice any changes, please contact"
#~ " us to arrange further action."
#~ msgstr "您的NetHSM是以密封包装交付的。为了验证您的NetSHM已经安全到达，您应该检查包装上是否有任何撕裂、割伤、孔洞或破损的密封。再往后，在包装的顶部有一个独特的手工闪光封条。最后但并非最不重要的是，我们将向您发送一张包装后的图片。请将图片与你包装好的网易云音乐进行对比。如果你发现有任何变化，请联系我们以安排进一步的行动。"

#~ msgid "Here are some pictures of how we wrap up a NetHSM:"
#~ msgstr "这里有一些我们是如何包装一个网路健康管理的图片。"

#~ msgid "seal"
#~ msgstr "封条"

#~ msgid "position"
#~ msgstr "位置"

#~ msgid "Front Side"
#~ msgstr "正面"

#~ msgid "Back Side"
#~ msgstr "背面"

#~ msgid "Buttom Side"
#~ msgstr "臀部侧面"

#~ msgid "Top Side"
#~ msgstr "顶部侧面"

#~ msgid "Left Side"
#~ msgstr "左侧"

#~ msgid "Tags & Roles"
#~ msgstr "标签& 角色"

#~ msgid ""
#~ "Tags can be used to put access "
#~ "restrictions on specific keys. For "
#~ "example:"
#~ msgstr "标签可以用来给特定的键设置访问限制。比如说。"

#~ msgid "User *JaneUser*::"
#~ msgstr "用户*JaneUser*::"

#~ msgid "Key *mykey*::"
#~ msgstr "钥匙*我的钥匙*:。"

#~ msgid "Tags are managed by Administrator users:"
#~ msgstr "标签是由管理员用户管理的。"

#~ msgid ""
#~ "Keys can be subject to a "
#~ "restriction list: a set of tags in"
#~ " which one of them need to be"
#~ " matched for the key to be "
#~ "used."
#~ msgstr "密钥可以受制于一个限制列表：一组标签，其中有一个标签需要被匹配才能使用。"

#~ msgid ""
#~ "Operator users get assigned a set "
#~ "of tags enabling them the use of"
#~ " the corresponding keys. It can be"
#~ " read but not modified by the "
#~ "user."
#~ msgstr "操作员用户被分配一套标签，使他们能够使用相应的键。用户可以阅读但不能修改。"

#~ msgid ""
#~ "Restrictions are validated when using a"
#~ " key, in which case the defined "
#~ "user tag has to match one of "
#~ "the calling user's tags."
#~ msgstr "限制条件在使用钥匙时被验证，在这种情况下，定义的用户标签必须与调用用户的一个标签相匹配。"

#~ msgid "Only administrators can set tags in user profiles."
#~ msgstr "只有管理员可以在用户档案中设置标签。"

#~ msgid ""
#~ "Tags are simple strings, and all "
#~ "administrators can set tags without "
#~ "restrictions."
#~ msgstr "标签是简单的字符串，所有管理员都可以无限制地设置标签。"

#~ msgid ""
#~ "Every operator can see all keys, "
#~ "also those with foreign tags (but "
#~ "they can't use it)."
#~ msgstr "每个操作者都可以看到所有的键，也包括那些有外来标记的键（但他们不能使用它）。"

#~ msgid "Tags are optional."
#~ msgstr "标签是可选的。"

#~ msgid ""
#~ "(In the future, restrictions could be"
#~ " extended with more condition types, "
#~ "e.g. allowed time frame.)"
#~ msgstr "(在未来，可以用更多的条件类型来扩展限制，例如允许的时间范围）。"

#~ msgid ""
#~ "Each user account configured on the "
#~ "NetHSM has one of the following "
#~ "Roles assigned to it. Following is "
#~ "a high-level description of the "
#~ "operations allowed by individual Roles, "
#~ "for endpoint-specific details please "
#~ "refer to the REST API documentation."
#~ msgstr ""
#~ "在NetHSM上配置的每个用户账户都有一个分配给它的下列角色。以下是各个角色所允许的操作的高级描述，关于终端的具体细节，请参考REST"
#~ " API文档。"

#~ msgid ""
#~ "**R-Administrator**     A user account with"
#~ " this Role has access to all "
#~ "operations provided by the REST API, "
#~ "with the exception of “key usage” "
#~ "operations, i.e. message signing and "
#~ "decryption."
#~ msgstr ""
#~ "**R-Administrator** 具有此角色的用户账户可以访问REST API提供的所有操作，但 "
#~ "\"密钥使用 \"操作除外，即消息签名和解密。"

#~ msgid ""
#~ "**R-Operator**  A user account with this"
#~ " Role has access to all “key "
#~ "usage” operations, a read-only subset"
#~ " of “key management” operations and "
#~ "“user management” operations allowing changes"
#~ " to their own account only."
#~ msgstr ""
#~ "**R-Operator** 具有此角色的用户账户可以访问所有 \"密钥使用 \"操作，\"密钥管理"
#~ " \"操作的只读子集，以及只允许对自己账户进行更改的 \"用户管理 \"操作。"

#~ msgid ""
#~ "**R-Metrics**   A user account with this"
#~ " Role has access to read-only "
#~ "metrics operations only."
#~ msgstr "**R-Metrics** 具有此角色的用户账户只能访问只读的度量衡操作。"

#~ msgid ""
#~ "**R-Backup**    A user account with this"
#~ " Role has access to the operations"
#~ " required to initiate a system backup"
#~ " only."
#~ msgstr "**R-Backup** 具有此角色的用户账户只能访问启动系统备份所需的操作。"

#~ msgid "Working with Tags"
#~ msgstr "使用标签工作"

#~ msgid ""
#~ "Keys can be subject to a "
#~ "restriction list: a set of Tags in"
#~ " which one of them need to be"
#~ " matched for the key to be "
#~ "used."
#~ msgstr "钥匙可以受制于一个限制列表：一组标签，其中有一个标签需要匹配才能使用钥匙。"

#~ msgid ""
#~ "Operator users get assigned a set "
#~ "of Tags enabling them the use of"
#~ " the corresponding keys. It can be"
#~ " read but not modified by the "
#~ "user."
#~ msgstr "操作员用户会被分配一套标签，使他们能够使用相应的键。用户可以阅读但不能修改。"

#~ msgid ""
#~ "Restrictions are validated when using a"
#~ " key, in which case the defined "
#~ "userTag has to match one of the"
#~ " calling user's tags."
#~ msgstr "当使用一个键时，限制会被验证，在这种情况下，定义的userTag必须与调用用户的一个标签相匹配。"

#~ msgid "Only Administators can set tags in user profiles."
#~ msgstr "只有管理员可以在用户档案中设置标签。"

#~ msgid ""
#~ "Tags are simply strings and all "
#~ "Administators can set tags without "
#~ "restrictions."
#~ msgstr "标签是简单的字符串，所有管理员可以无限制地设置标签。"

#~ msgid ""
#~ "Every Operator can see all keys, "
#~ "also those with foreign tags (but "
#~ "they can't use it)."
#~ msgstr "每个操作员都可以看到所有的键，也包括那些有外来标记的键（但他们不能使用）。"

#~ msgid ""
#~ "(In the future, restrictions could be"
#~ " extended with more condition types, "
#~ "e.g allowed time frame.)"
#~ msgstr "(在未来，可以用更多的条件类型来扩展限制，例如允许的时间框架）。"

#~ msgid ""
#~ "If the NetHSM is in *Locked* or"
#~ " *Operational* state after boot depends "
#~ "on the boot mode. Please refer to"
#~ " chapter `Boot Mode <administration.html#boot-"
#~ "mode>`__ to learn more."
#~ msgstr ""
#~ "启动后NetHSM是处于*Locked*还是*Operational*状态取决于启动模式。请参考`启动模式<administration.html"
#~ "#boot-mode>`__一章来了解更多。"

#~ msgid "HTTPS API Certificate"
#~ msgstr "HTTPS API证书"

#~ msgid "Generate a CSR for the NetHSM HTTPS API"
#~ msgstr "为NetHSM HTTPS API生成一个CSR"

#~ msgid ""
#~ "Make sure the time of your system"
#~ " is correctly set, or manually "
#~ "override the to set time."
#~ msgstr "确保你的系统的时间设置正确，或者手动覆盖设置的时间。"

#~ msgid "Role"
#~ msgstr "角色"

#~ msgid "*Administrator*"
#~ msgstr "*管理人*"

#~ msgid ""
#~ "An user account with this Role has"
#~ " access to all operations provided by"
#~ " the NetHSM, except for key usage "
#~ "operations, i.e. message signing and "
#~ "decryption."
#~ msgstr "拥有该角色的用户账户可以访问NetHSM提供的所有操作，但密钥使用操作除外，即消息签名和解密。"

#~ msgid "*Operator*"
#~ msgstr "*操作者*"

#~ msgid ""
#~ "An user account with this Role has"
#~ " access to all key usage operations,"
#~ " a read-only subset of key "
#~ "management operations and user management "
#~ "operations allowing changes to their own"
#~ " account only."
#~ msgstr "拥有此角色的用户账户可以访问所有的钥匙使用操作，只读的钥匙管理操作子集和用户管理操作，只允许对他们自己的账户进行更改。"

#~ msgid "*Metrics*"
#~ msgstr "*指标*"

#~ msgid ""
#~ "An user account with this Role has"
#~ " access to read-only metrics "
#~ "operations only."
#~ msgstr "拥有此角色的用户账户只能访问只读的度量衡操作。"

#~ msgid "*Backup*"
#~ msgstr "*备份*"

#~ msgid ""
#~ "An user account with this Role has"
#~ " access to the operations required to"
#~ " initiate a system backup only."
#~ msgstr "拥有该角色的用户账户只能访问启动系统备份所需的操作。"

#~ msgid ""
#~ "The NetHSM software features a REST "
#~ "API to perform installation, administration"
#~ " and operational tasks. The recommended "
#~ "way to use the REST API is "
#~ "through the `nitropy "
#~ "<https://github.com/Nitrokey/pynitrokey>`_ tool. "
#~ "Alternatively `curl <https://curl.se>`_ can be"
#~ " used to send HTTP requests to "
#~ "the REST API. This documentation "
#~ "contains for each nitropy command the"
#~ " respective curl command."
#~ msgstr ""
#~ "NetHSM软件有一个REST API来执行安装、管理和操作任务。推荐使用REST "
#~ "API的方法是通过`nitropy "
#~ "<https://github.com/Nitrokey/pynitrokey>`_工具。另外`curl "
#~ "<https://curl.se>`_也可以用来向REST "
#~ "API发送HTTP请求。本文档包含每个nitropy命令的相应curl命令。"

#~ msgid ""
#~ "To learn how to install nitropy, "
#~ "please refer to the `documentation "
#~ "<../software/nitropy/index.html>`__."
#~ msgstr "要了解如何安装nitropy，请参考`文档 <../software/nitropy/index.html>`__。"

#~ msgid ""
#~ "For the installation of curl, please "
#~ "refer to the project `website "
#~ "<https://curl.se/download.html>`_."
#~ msgstr "关于curl的安装，请参考项目`website <https://curl.se/download.html>`_。"

#~ msgid ""
#~ "You need to install OpenSC in "
#~ "version 0.18 or higher. You can "
#~ "find the files on the `OpenSC "
#~ "website <https://github.com/OpenSC/OpenSC/releases>`_ for"
#~ " Windows and macOS user or `here "
#~ "<https://github.com/Nitrokey/opensc-build>`_ for "
#~ "Debian/Ubuntu users."
#~ msgstr ""
#~ "你需要安装0.18或更高版本的OpenSC。你可以在`OpenSC网站<https://github.com/OpenSC/OpenSC/releases>`_为Windows和macOS用户找到这些文件，或者`这里<https://github.com/Nitrokey"
#~ "/opensc-build>`_为 Debian/Ubuntu用户找到。"

#~ msgid ""
#~ "You can change the user PIN with"
#~ " the Nitrokey App if using a "
#~ "Nitrokey Pro or Nitrokey Storage. In "
#~ "the `Nitrokey <https://www.nitrokey.com/download>`_ "
#~ "App open ‘Menu -> Configure -> "
#~ "Change User PIN’ to open the "
#~ "dialog to change the PIN."
#~ msgstr ""
#~ "如果使用Nitrokey Pro或Nitrokey "
#~ "Storage，你可以通过Nitrokey应用程序改变用户的PIN码。在`Nitrokey "
#~ "<https://www.nitrokey.com/download>`_应用程序中，打开'菜单-> 配置-> "
#~ "更改用户密码'以打开更改密码的对话框。"

#~ msgid ""
#~ "You can change the admin PIN with"
#~ " the Nitrokey App if using a "
#~ "Nitrokey Pro or Nitrokey Storage. In "
#~ "the `Nitrokey App "
#~ "<https://www.nitrokey.com/download>`_ open ‘Menu ->"
#~ " Configure -> Change Admin PIN’ to"
#~ " open the dialog to change the "
#~ "PIN."
#~ msgstr ""
#~ "如果使用Nitrokey Pro或Nitrokey Storage，你可以通过Nitrokey "
#~ "App更改管理密码。在`硝基钥匙应用程序<https://www.nitrokey.com/download>`_打开'菜单-> "
#~ "配置-> 更改管理密码'，以打开更改密码的对话框。"

#~ msgid ""
#~ "Change the passphrase for disk "
#~ "encryption as `described here <change-"
#~ "disk-encryption-passphrase.html>`_. This "
#~ "passphrase is different from your user"
#~ " acount's passphrase."
#~ msgstr ""
#~ "修改磁盘加密的口令，如`所描述的<change-disk-encryption-"
#~ "passphrase.html>`_。这个口令与你的用户账户的口令不同。"

#~ msgid ""
#~ "`instructions <openpgp.html>`_ for using the"
#~ " OpenPGP standard with the Nitrokey"
#~ msgstr "`说明 <openpgp.html>`_使用Nitrokey的OpenPGP标准。"

#~ msgid "`instructions <smime.html>`_ for using S/MIME with the Nitrokey"
#~ msgstr "`说明 <smime.html>`_在Nitrokey上使用S/MIME。"

#~ msgid ""
#~ "Nitrokey Storage 2: You need to "
#~ "install OpenSC in version 0.18 or "
#~ "higher. You can find the files on"
#~ " the `OpenSC website "
#~ "<https://github.com/OpenSC/OpenSC/releases>`_ for Windows"
#~ " and macOS user or `here "
#~ "<https://github.com/Nitrokey/opensc-build>`_ for "
#~ "Debian/Ubuntu users."
#~ msgstr ""
#~ "Nitrokey Storage 2: "
#~ "你需要安装0.18或更高版本的OpenSC。你可以在`OpenSC网站<https://github.com/OpenSC/OpenSC/releases>`_为Windows和macOS用户找到这些文件，或者`这里<https://github.com/Nitrokey"
#~ "/opensc-build>`_为Debian/Ubuntu用户。"

#~ msgid ""
#~ "Optionally Reset code can be set "
#~ "up (`guide <http://www.fsij.org/doc-gnuk/gnuk-"
#~ "passphrase-setting.html>`_). The minimum length"
#~ " accepted is 8 characters, however it"
#~ " should be as long as User PIN."
#~ msgstr ""
#~ "可选择设置重置代码（`指南 <http://www.fsij.org/doc-gnuk/gnuk-"
#~ "passphrase-setting.html>`_）。接受的最小长度是8个字符，但它应该和用户PIN码一样长。"

#~ msgid ""
#~ "**Firmware version 1.2.5 or below: In"
#~ " case you forget a PIN or enter"
#~ " it wrongly three times you need "
#~ "the reset code to unblock the PIN."
#~ " Otherwise the device wouldn’t be "
#~ "usable anymore! Therefore please** `set "
#~ "the reset code <http://www.fsij.org/doc-gnuk"
#~ "/gnuk-passphrase-setting.html>`_ **as well "
#~ "when initialising the key!**"
#~ msgstr ""
#~ "**固件版本1.2.5或以下。如果你忘记了PIN码或输入错误的PIN码三次，你需要重置码来解除PIN码的限制。否则设备将无法使用因此，请**"
#~ " `设置重置代码 <http://www.fsij.org/doc-gnuk/gnuk-"
#~ "passphrase-setting.html>`_ **在初始化密钥时也要设置重置代码！**"

#~ msgid ""
#~ "`Instructions <openpgp.html>`_ for using the"
#~ " OpenPGP standard with the Nitrokey"
#~ msgstr "`说明 <openpgp.html>`_使用Nitrokey的OpenPGP标准。"

#~ msgid "`Instructions <smime.html>`_ for using S/MIME with the Nitrokey"
#~ msgstr "`说明 <smime.html>`_用Nitrokey使用S/MIME。"

#~ msgid ":doc:`../../../nethsm/cli`"
#~ msgstr ":doc:`./././nethsm/cli`."

#~ msgid "pipx upgrade pynitrokey"
#~ msgstr "pipx 升级 pynitrokey"

#~ msgid ""
#~ "This is very hard to predict at"
#~ " this point. We are aiming for "
#~ "mid of 2022, but this is a "
#~ "very rough estimation with lots of "
#~ "uncertainties."
#~ msgstr "在这一点上，这是很难预测的。我们的目标是2022年中期，但这是一个非常粗略的估计，有很多不确定因素。"

#~ msgid "Update With nitropy"
#~ msgstr "硝烟弥漫下的更新"

#~ msgid ""
#~ "If the webupdate does not work for"
#~ " you, you can also use the "
#~ "nitropy CLI (installation guide: "
#~ ":doc:`../../software/nitropy/all-platforms/installation`).  "
#~ "Make sure that no other Nitrokey "
#~ "or FIDO2 devices are connected to "
#~ "your system and then run::"
#~ msgstr ""
#~ "如果webupdate对你不起作用，你也可以使用nitropy "
#~ "CLI（安装指南：:doc:`././software/nitropy/all-"
#~ "platforms/installation`）。  确保没有其他Nitrokey或FIDO2设备连接到你的系统，然后运行：:"

#~ msgid ""
#~ "**Currently updating the firmware will "
#~ "delete all user data!** Make sure "
#~ "you have proper backup login methods "
#~ "enabled and/or ensure that the Nitrokey"
#~ " FIDO2 is not the only way to"
#~ " authenticate/2FA for your applications/services."
#~ msgstr ""
#~ "**目前更新固件将删除所有用户数据！**确保你启用了适当的备份登录方法和/或确保Nitrokey "
#~ "3不是你的应用程序/服务的唯一认证/2FA方式。"

#~ msgid "Touch device to activate bootloader (once instructed by ``nitropy``)."
#~ msgstr "触摸设备以激活引导程序（一旦得到``nitropy``的指示）。"

#~ msgid ""
#~ "*macOS only:* Run update command again"
#~ " (once instructed by ``nitropy``)."
#~ msgstr "*仅适用于macOS：*再次运行更新命令（一旦被``nitropy``指示）。"

#~ msgid "Wait 3-10mins on macOS/Linux, 12-25mins on Windows."
#~ msgstr "在MacOS/Linux上等待3-10分钟，在Windows上等待12-25分钟。"

#~ msgid "The update is finished."
#~ msgstr "更新已经完成"

#~ msgid "PKCS#11 driver"
#~ msgstr "PKCS#11驱动"

#~ msgid ""
#~ "Modify the configuration file `p11nethsm.conf`"
#~ " according to your setup (e.g. "
#~ "address, operator name) and store it "
#~ "in `$HOME/.nitrokey`, `/etc/nitrokey/`, or in"
#~ " the folder where your application is"
#~ " executed."
#~ msgstr "根据你的设置修改配置文件`p11nethsm.conf`（如地址、操作员名称），并将其存放在`$HOME/.nitrokey`，`/etc/nitrokey/`，或你的应用程序执行的文件夹中。"

#~ msgid "Encrypting & Decrypting"
#~ msgstr "加密和解密"

#~ msgid ""
#~ "After creating a key (here: ID 42)"
#~ " with the according mechanism, you "
#~ "can use it for encryption and "
#~ "decryption, but first you should create"
#~ " the key:"
#~ msgstr "在用相应的机制创建一个密钥（这里：ID42）后，你可以用它来加密和解密，但首先你应该创建密钥。"

#~ msgid "Now you can encrypt:"
#~ msgstr "现在你可以加密了。"

#~ msgid "And decrypt:"
#~ msgstr "并解密。"

#~ msgid "Signing"
#~ msgstr "签署"

#~ msgid "First create the key again:"
#~ msgstr "首先再次创建密钥。"

#~ msgid ""
#~ "After creating a key (here: ID 23)"
#~ " with the according mechanism, you "
#~ "can use it for signing:"
#~ msgstr "在用相应的机制创建一个密钥（这里：ID 23）后，你可以用它来签名。"

#~ msgid ""
#~ "**Currently updating the firmware will "
#~ "delete all user data!** Make sure "
#~ "you have proper backup login methods "
#~ "enabled and/or ensure that the Nitrokey"
#~ " 3 is not the only way to "
#~ "authenticate/2FA for your applications/services."
#~ msgstr ""
#~ "**目前更新固件将删除所有用户数据！**确保你启用了适当的备份登录方法和/或确保Nitrokey "
#~ "3不是你的应用程序/服务的唯一认证/2FA方式。"

#~ msgid ""
#~ "On Windows: Did you install **both**,"
#~ " the 32-bit and the 64-bit version"
#~ " of OpenSC?"
#~ msgstr "在Windows上。你是否同时安装了***，32位和64位版本的OpenSC？"

#~ msgid ""
#~ "You need to install OpenSC in "
#~ "version 0.18 or higher. You can "
#~ "find the files on the `OpenSC "
#~ "website <https://github.com/OpenSC/OpenSC/releases>`__ for"
#~ " Windows and macOS user or `here "
#~ "<https://github.com/Nitrokey/opensc-build>`__ for "
#~ "Debian/Ubuntu users."
#~ msgstr ""
#~ "你需要安装0.18或更高版本的OpenSC。你可以在`OpenSC网站<https://github.com/OpenSC/OpenSC/releases>`__为Windows和macOS用户找到这些文件，或者在`这里<https://github.com/Nitrokey"
#~ "/opensc-build>`__为 Debian/Ubuntu用户找到。"

#~ msgid "Python Version Too Old"
#~ msgstr "Python版本太旧"

#~ msgid "This site is for testing certain things."
#~ msgstr "这个网站是用来测试某些东西的。"

#~ msgid ""
#~ "This is for testing certain words "
#~ "like Brainpool 192, Nitropy and "
#~ "curve25519"
#~ msgstr "这是为了测试某些词语，如Brainpool 192、Nitropy和curve25519。"

#~ msgid ""
#~ "These are the words in question: "
#~ "Nitropy, curve25519, Brainpool 192, Brainpool"
#~ " 256-320, Brainpool 384-521, Brainpool"
#~ msgstr ""
#~ "这些是有问题的词。Nitropy, curve25519, Brainpool 192, "
#~ "Brainpool 256-320, Brainpool 384-521, "
#~ "Brainpool"

#~ msgid ""
#~ "And here they are in a text: "
#~ "Nitropy, curve25519, Brainpool 192, Brainpool"
#~ " 256-320, Brainpool 384-521, Brainpool"
#~ msgstr ""
#~ "而在这里，他们在一个文本中。Nitropy, curve25519, Brainpool 192,"
#~ " Brainpool 256-320, Brainpool 384-521, "
#~ "Brainpool"

#~ msgid "<YourApplicationID> <YourUsername>"
#~ msgstr "<YourApplicationID> <YourUsername>"

#~ msgid ""
#~ "``sudo sh -c 'gpg-connect-agent "
#~ "\"/datafile /etc/poldi/localdb/keys/<YourApplicationID>\" "
#~ "\"SCD READKEY --advanced OPENPGP.3\" /bye'``"
#~ msgstr ""
#~ "``sudo sh -c 'gpg-connect-agent "
#~ "\"/datafile /etc/poldi/localdb/keys/<YourApplicationID>\" "
#~ "\"SCD READKEY --advanced OPENPGP.3\" /bye'``"

#~ msgid "etc."
#~ msgstr "等。"

#~ msgid ""
#~ "``poldi-ctrl -k > <YourApplicationID>; "
#~ "sudo mv <YourApplicationID> "
#~ "/etc/poldi/localdb/keys``"
#~ msgstr ""
#~ "``poldi-ctrl -k > <YourApplicationID>; "
#~ "sudo mv <YourApplicationID> "
#~ "/etc/poldi/localdb/keys``"

#~ msgid "Shop and Delivery FAQ"
#~ msgstr "购物和送货常见问题"

#~ msgid "**Q:** How long does the shipping take?"
#~ msgstr "**问：**运输需要多长时间？"

#~ msgid "**Letter and Registered Mail**:"
#~ msgstr "** 信件和挂号信**。"

#~ msgid "Germany: 2-5 business days"
#~ msgstr "德国：2-5个工作日"

#~ msgid "EU: 5-10 business days"
#~ msgstr "欧盟：5-10个工作日"

#~ msgid "World wide: 2-3 weeks"
#~ msgstr "世界范围内：2-3周"

#~ msgid "**Parcel**:"
#~ msgstr "**包裹**。"

#~ msgid "Germany: 1-3 business days"
#~ msgstr "德国：1-3个工作日"

#~ msgid "EU: 2-5 business days"
#~ msgstr "欧盟：2-5个工作日"

#~ msgid "World wide: 5-10 business days"
#~ msgstr "世界范围内。5-10个工作日"

#~ msgid "**Q:** Pricing and VAT"
#~ msgstr "**问：**定价和增值税"

#~ msgid ""
#~ "The Nitrokey GmbH has a heterogeneous"
#~ " customer base, private and enterprise "
#~ "customers, from Germany as well as "
#~ "inside and outside of the EU. With"
#~ " the pricing we want to ensure "
#~ "that all customers pay a uniform "
#~ "rate. For example, a large international"
#~ " corporation should pay just as much"
#~ " as a German private customer. "
#~ "Accordingly, the gross price (incl. VAT)"
#~ " for German private customers equals "
#~ "the net price (excluding VAT) for "
#~ "EU enterprise customers and all "
#~ "customers outside of the EU. This "
#~ "approach has been audited and is "
#~ "legally correct."
#~ msgstr ""
#~ "Nitrokey "
#~ "GmbH拥有一个异质性的客户群，包括私人和企业客户，来自德国以及欧盟内部和外部。在定价方面，我们希望确保所有客户支付统一的费用。例如，一个大型的国际公司应该和一个德国私人客户支付同样的费用。因此，德国私人客户的总价格（包括增值税）等于欧盟企业客户和欧盟以外所有客户的净价格（不包括增值税）。这种方法已经过审计，在法律上是正确的。"

#~ msgid "**Q:** How is the Bitcoin exchange rate calculated?"
#~ msgstr "**问：**比特币的汇率是如何计算的？"

#~ msgid ""
#~ "At the time of ordering, our "
#~ "system takes the exchange rate from "
#~ "blockchain.info and adds 10% on top "
#~ "of it. The 10% are for our "
#~ "handling fees (exchanging Bitcoins back "
#~ "to Euro) and for the risk "
#~ "implicated by floating exchange rate."
#~ msgstr ""
#~ "在订购时，我们的系统从blockchain.info获取汇率，并在此基础上增加10% o。这10% "
#~ "a是我们的手续费（将比特币兑换成欧元）和浮动汇率所带来的风险。"

#~ msgid "**Q:** How to return goods?"
#~ msgstr "**问：**如何退货？"

#~ msgid "To return a goods (e.g. Nitrokey):"
#~ msgstr "退回货物（如Nitrokey）。"

#~ msgid ""
#~ "In case of a hardware defect, you"
#~ " can contact us and we will "
#~ "send you a shipping label. Pack "
#~ "the device in an air cushion "
#~ "envelope (not in an ordinary envelope!)."
#~ " Include the delivery slip or "
#~ "printout of the invoice with the "
#~ "shipment. Add a note of the reason"
#~ " for the return, e.g. \"Withdrawal of"
#~ " the purchase\" or \"Exchange due to"
#~ " defect\". It is sufficient to note"
#~ " the reason in handwriting on the "
#~ "enclosed invoice or delivery note. "
#~ "Address the mailing to our address."
#~ msgstr "如果是硬件缺陷，你可以联系我们，我们会给你发一个运输标签。用气垫信封包装设备（不要用普通信封！）。随货附上送货单或发票的打印件。添加退货原因的说明，例如：\"撤回购买\"或\"因缺陷而换货\"。只要在所附的发票或送货单上手写说明原因即可。请将邮件寄到我们的地址。"

#~ msgid "**Q:** Is there a Right of Withdrawal?"
#~ msgstr "**问：**是否有撤诉权？"

#~ msgid ""
#~ "There is a Right for most "
#~ "customers. Further details can be found"
#~ " here (https://www.nitrokey.com/right-withdrawal-"
#~ "consumers)"
#~ msgstr ""
#~ "对大多数客户来说，都有一个权利。进一步的细节可以在这里找到（https://www.nitrokey.com/right-"
#~ "withdrawal-consumers）。"

#~ msgid "**Q:** Is there a warranty?"
#~ msgstr "**问：**是否有保证？"

#~ msgid "Overview"
#~ msgstr "概述"

#~ msgid ""
#~ "Alternatively, you can run the NetHSM"
#~ " as a `Docker container "
#~ "<https://hub.docker.com/r/nitrokey/nethsm>`_ locally. The"
#~ " NetHSM container requires nested "
#~ "virtualization for strong separation with "
#~ "other containers. Thus, to start a "
#~ "NetHSM container you need a Linux "
#~ "host with `/dev/kvm` available. Execute "
#~ "this command:"
#~ msgstr "另外，你可以将NetHSM作为`Docker容器<https://hub.docker.com/r/nitrokey/nethsm>`_本地运行。NetHSM容器需要嵌套的虚拟化，以便与其他容器进行强分离。因此，要启动一个NetHSM容器，你需要一个有`/dev/kvm`的Linux主机。执行这个命令。"

#~ msgid ""
#~ "As of this writing the Nitrokey 3"
#~ " is roughly identical with the "
#~ "Nitrokey FIDO2, from a functionality "
#~ "point of view. The Nitrokey 3A and"
#~ " 3C additionally support NFC, while "
#~ "the Nitrokey 3 Mini does not "
#~ "support NFC."
#~ msgstr ""
#~ "从功能上看，Nitrokey 3与Nitrokey FIDO2大致相同。Nitrokey "
#~ "3A和3C额外支持NFC，而Nitrokey 3 Mini不支持NFC。"

#~ msgid ""
#~ "Future firmware updates will enable "
#~ "additional functionality and will be "
#~ "documented here accordingly."
#~ msgstr "未来的固件更新将实现更多的功能，并将在这里进行相应的记录。"

#~ msgid "**Q:** When will the OpenPGP card firmware be available?"
#~ msgstr "**问：**何时能提供OpenPGP卡固件？"

#~ msgid ""
#~ "OpenPGP card functionnality is currently "
#~ "available as a beta firmware. `The "
#~ "announcement <https://www.nitrokey.com/blog/2022/openpgp-"
#~ "card-alpha-nitrokey-3>`_ contains more "
#~ "information concerning the current status "
#~ "and installation instructions."
#~ msgstr ""
#~ "OpenPGP卡的功能目前是作为一个测试版固件提供的。`公告<https://www.nitrokey.com/blog/2022"
#~ "/openpgp-card-alpha-nitrokey-3>`_包含有关当前状态和安装说明的更多信息。"

#~ msgid ""
#~ "Currently the Nitrokey 3 does only "
#~ "show up and can be managed in "
#~ "``nitropy``. Nitrokey App and GnuPG will"
#~ " likely be only available once the"
#~ " firware update is available for the"
#~ " OpenPGP card."
#~ msgstr ""
#~ "目前，Nitrokey 3确实只显示在``nitropy``中，并且可以管理。一旦OpenPGP卡的固件更新，Nitrokey"
#~ " App和GnuPG可能才会出现。"

#~ msgid ""
#~ "The following table illustrates which "
#~ "algorithm can be used on which "
#~ "device, in case you want to use"
#~ " different key attributes."
#~ msgstr "下表说明了在你想使用不同的密钥属性的情况下，哪种算法可用于哪种设备。"

#~ msgid "Generic Nitrokeys FAQ"
#~ msgstr "通用硝化甘油的常见问题"

#~ msgid "**Q:** What are the default passwords?"
#~ msgstr "**问：**默认密码是什么？"

#~ msgid "**Firmware Password** (Nitrokey Storage only): \"12345678\""
#~ msgstr "**固件密码**（仅限Nitrokey存储）：\"12345678\"。"

#~ msgid "**SO-PIN** (Nitrokey HSM only): \"3537363231383830\""
#~ msgstr "**SO-PIN**（仅限Nitrokey HSM）：\"3537363231383830\"。"

#~ msgid ""
#~ "It depends. No one can copy the"
#~ " keys which are stored on the "
#~ "Nitrokey. But depending on the key "
#~ "creation process you can still store "
#~ "a backup of the keys elsewhere."
#~ msgstr "这取决于。没有人可以复制存储在Nitrokey上的钥匙。但根据钥匙的创建过程，你仍然可以在其他地方存储钥匙的备份。"

#~ msgid ""
#~ "If you want to have a backup "
#~ "of your keys, you need to think"
#~ " about it when creating the keys. "
#~ "More information and options for the "
#~ "key creation can be found in our"
#~ " :doc:`documentation <../pro/linux/openpgp>`."
#~ msgstr ""
#~ "如果你想对你的钥匙进行备份，你需要在创建钥匙时考虑到这一点。更多关于密钥创建的信息和选项可以在我们的 "
#~ ":doc:`documentation <../pro/linux/openpgp>`中找到。"

#~ msgid ""
#~ "Nitrokey Pro, Nitrokey Start, Nitrokey "
#~ "HSM and Nitrokey U2F don't contain "
#~ "storage capability for ordinary data (it"
#~ " can only store cryptographic keys "
#~ "and certificates)."
#~ msgstr ""
#~ "Nitrokey Pro、Nitrokey Start、Nitrokey HSM和Nitrokey"
#~ " U2F不包含普通数据的存储能力（它只能存储加密密钥和证书）。"

#~ msgid ""
#~ "Nitrokey Pro's and Storage's PINs can"
#~ " be up to 20 digits long and"
#~ " can consist of numbers, characters "
#~ "and special characters. Note: When using"
#~ " GnuPG or OpenSC, 32 character long"
#~ " PINs can be used but aren't "
#~ "supported by Nitrokey App."
#~ msgstr ""
#~ "Nitrokey "
#~ "Pro和Storage的PIN码可长达20位，可由数字、字符和特殊字符组成。注意：当使用GnuPG或OpenSC时，可以使用32个字符的PIN码，但不被Nitrokey"
#~ " App支持。"

#~ msgid "**Q:** What is user/admin/firmware PIN/password for?"
#~ msgstr "**问：**用户/管理员/固件PIN/密码是什么？"

#~ msgid ""
#~ "**User PIN:** The user PIN is at"
#~ " least 6-digits long and is used "
#~ "to get access to the contect of"
#~ " the Nitrokey. This is the PIN "
#~ "you will use a lot in every "
#~ "day use e.g. for decrypting messages,"
#~ " for unlocking your encrypted storage "
#~ "(NK Storage only) etc."
#~ msgstr "**用户PIN码：**用户PIN码至少有6位数字，用于进入Nitrokey的保护范围。这是你在日常使用中经常用到的密码，例如解密信息，解锁你的加密存储空间（仅限NK存储）等。"

#~ msgid ""
#~ "**Admin PIN:** The admin PIN is at"
#~ " least 8-digits long and is used "
#~ "to change contents/settings of the "
#~ "Nitrokey. That is to say after "
#~ "initializing the Nitrokey you probably "
#~ "won't need this PIN too often "
#~ "(e.g. if you want to add another"
#~ " password to the password safe of "
#~ "the Nitrokey Pro or Nitrokey Storage)."
#~ msgstr ""
#~ "**管理密码：**管理密码至少有8位数，用于改变硝基钥匙的内容/设置。也就是说，在初始化Nitrokey后，你可能不会经常需要这个PIN码（例如，如果你想在Nitrokey"
#~ " Pro或Nitrokey Storage的密码箱中添加另一个密码）。"

#~ msgid ""
#~ "**Firmware password:** The firmware password"
#~ " should meet general password "
#~ "recommandations (e.g. use alphabetic "
#~ "characters, digits and special characters "
#~ "or use a usfficiently long password)."
#~ " The firmware password is needed to"
#~ " update the firmware of the Nitrokey"
#~ " Storage. See further instructions for "
#~ "update process here."
#~ msgstr "**固件密码：**固件密码应符合一般的密码建议（例如，使用字母、数字和特殊字符或使用足够长的密码）。更新Nitrokey存储器的固件时需要固件密码。请参阅更新过程的进一步说明。"

#~ msgid ""
#~ "**SO PIN:** The SO PIN is used "
#~ "in the Nitrokey HSM only and is"
#~ " something like a \"master\" PIN with"
#~ " special properties. Please read this "
#~ "instructions carefully to understand the "
#~ "SO PIN of the Nitrokey HSM."
#~ msgstr ""
#~ "**SO PIN:** SO PIN仅用于Nitrokey "
#~ "HSM，它类似于具有特殊属性的\"主\" PIN。请仔细阅读本说明以了解Nitrokey HSM的SO "
#~ "PIN。"

#~ msgid ""
#~ "The Nitrokey Pro, Nitrokey Start and "
#~ "Nitrokey Storage can store three RSA "
#~ "key pairs. All keys use the same"
#~ " identity but are used for different"
#~ " purposes: authentication, encryption and "
#~ "signing."
#~ msgstr ""
#~ "Nitrokey Pro、Nitrokey Start和Nitrokey "
#~ "Storage可以存储三对RSA密钥。所有的钥匙都使用相同的身份，但用于不同的目的：认证、加密和签名。"

#~ msgid ""
#~ "Nitrokey U2F stores a single ECC "
#~ "key pair but can be used with "
#~ "an unlimited amount of user accounts."
#~ msgstr "Nitrokey U2F存储一个ECC密钥对，但可用于无限量的用户账户。"

#~ msgid "HSM2"
#~ msgstr "HSM2"

#~ msgid "See the relevant product faq for details: (@todo add links)"
#~ msgstr "详见相关产品的FAQ。(@todo添加链接)"

#~ msgid ""
#~ "**Q:** Do Nitrokeys contain a secure "
#~ "chip or just a normal microcontroller?"
#~ msgstr "**问：**硝基钥匙是否包含安全芯片或只是一个普通的微控制器？"

#~ msgid ""
#~ "Nitrokey Pro, Nitrokey HSM and Nitrokey"
#~ " Storage contain a tamper resistant "
#~ "smart card. To some extent this "
#~ "also applies to Nitrokey U2F but "
#~ "it's of lower quality. Nitrokey Start"
#~ " is implemented in the microprocessor."
#~ msgstr ""
#~ "Nitrokey Pro、Nitrokey HSM和Nitrokey "
#~ "Storage包含一个防篡改智能卡。在某种程度上，这也适用于Nitrokey U2F，但它的质量较低。Nitrokey "
#~ "Start是在微处理器中实现的。"

#~ msgid "**Q:** How good is the Random Number Generator (RNG)?"
#~ msgstr "**问：**随机数字发生器（RNG）的性能如何？"

#~ msgid "**Q:** Is Nitrokey Common Criteria or FIPS certified?"
#~ msgstr "**问：**Nitrokey是否经过通用标准或FIPS认证？"

#~ msgid ""
#~ "**Nitrokey Storage 1+2:** `Cure53`_ has "
#~ "performed an `independent security audit`_ "
#~ "of the hardware, firmware, and Nitrokey"
#~ " App."
#~ msgstr "**Nitrokey存储1+2：** `Cure53`_已经对硬件、固件和Nitrokey应用程序进行了`独立的安全审计`_。"

#~ msgid ""
#~ "**Nitrokey Pro 1+2:** The security "
#~ "controler's hardware is Common Criteria "
#~ "certified (`Report`_; See `here`_, click "
#~ "\"ICs, Smart Cards and Smart Card-"
#~ "Related Devices and Systems\" and search"
#~ " for \"NXP Smart Card Controller "
#~ "P5CD081V1A and its major configurations "
#~ "P5CC081V1A, P5CN081V1A, P5CD041V1A, P5CD021V1A "
#~ "and P5CD016V1A each with IC dedicated"
#~ " Software\")."
#~ msgstr ""
#~ "**Nitrokey Pro 1+2。**安全控制器'的硬件通过了Common "
#~ "Criteria认证（`报告`_；见`这里`_，点击\"IC，智能卡和智能卡相关的设备和系统\"。并搜索\"恩智浦智能卡控制器P5CD081V1A及其主要配置P5CC081V1A、P5CN081V1A、P5CD041V1A、P5CD021V1A和P5CD016V1A各自的IC专用软件\"）。"

#~ msgid ""
#~ "**Nitrokey HSM:** The security controler's "
#~ "hardware and operating system are Common"
#~ " Criteria certified (`HSM Report`_; See "
#~ "`here`_, click \"ICs, Smart Cards and"
#~ " Smart Card-Related Devices and "
#~ "Systems\" and search for \"NXP J3A080"
#~ " v2.4.1 Secure Smart Card Controller "
#~ "(JCOP v2.4.1)\")."
#~ msgstr ""
#~ "**Nitrokey "
#~ "HSM：**安全控制器'的硬件和操作系统通过了通用标准认证（`HSM报告`_；见`这里`_，点击\"IC，智能卡和智能卡相关设备和系统\"并搜索\"恩智浦J3A080"
#~ " v2.4.1安全智能卡控制器（JCOP v2.4.1）\"）。"

#~ msgid ""
#~ "**Nitrokey HSM2:** The security controler's"
#~ " hardware and operating system are "
#~ "Common Criteria certified (`Security Target`_;"
#~ " `HSM2 Report`_; See `here`_, click "
#~ "\"ICs, Smart Cards and Smart Card-"
#~ "Related Devices and Systems\" and search"
#~ " for \"NXP JCOP 3 P60\")."
#~ msgstr ""
#~ "**Nitrokey HSM2。**安全控制器'的硬件和操作系统通过了Common "
#~ "Criteria认证（`安全目标`_；`HSM2报告`_；见`这里`_，点击\"IC，智能卡和智能卡相关设备和系统\"；并搜索\"；NXP"
#~ " JCOP 3 P60\"；）。"

#~ msgid "All Nitrokeys"
#~ msgstr "所有的硝化甘油（Nitrokeys"

#~ msgid ""
#~ "The NetHSM can be reset to factory"
#~ " defaults. During this process all "
#~ "user data gets deleted."
#~ msgstr "NetHSM可以被重置为出厂默认值。在这个过程中，所有的用户数据都会被删除。"

#~ msgid ""
#~ "If the time is passed manually, "
#~ "make sure to pass the time in "
#~ "UTC timezone."
#~ msgstr "如果是手动传递时间，请确保以UTC时区传递时间。"

#~ msgid "*Attended Boot*"
#~ msgstr "*有机会获得启动*。"

#~ msgid ""
#~ "The *Unlock Passphrase* needs to be "
#~ "entered during each start, which is "
#~ "used to decrypt the *User Data*. "
#~ "For security reasons, this mode is "
#~ "recommended."
#~ msgstr "每次启动时都需要输入*解锁密码*，用于解密*用户数据*。出于安全考虑，建议使用这种模式。"

#~ msgid "*Unattended Boot*"
#~ msgstr "*无人值守的启动*"

#~ msgid ""
#~ "The system starts unattended without the"
#~ " need to enter the *Unlock* "
#~ "*Passphrase*. Use this mode if your "
#~ "availability requirements can not be "
#~ "fulfilled with *Attended Boot* mode."
#~ msgstr "系统在无人值守的情况下启动，不需要输入*解锁* *密码* 。如果你的可用性要求不能通过*有偿启动* 模式来满足，请使用这种模式。"

#~ msgid "A NetHSM in *Locked* state can be unlocked as follows."
#~ msgstr "处于*Locked*状态的NetHSM可以按以下方式解锁。"

#~ msgid "The NetHSM must be in an *Unprovisioned State*."
#~ msgstr "网管系统必须处于*未配置的状态*。"

#~ msgid "Update"
#~ msgstr "更新"

#~ msgid ""
#~ "Updates for the NetHSM can be "
#~ "installed in a two-step process. "
#~ "First the update image needs to be"
#~ " uploaded to the NetHSM. The image"
#~ " is checked and validated automatically."
#~ msgstr "NetHSM的更新可以通过两步来安装。首先，需要将更新图像上传到NetHSM。该图像会被自动检查和验证。"

#~ msgid "Data loss may occur due to the installation of a beta update!"
#~ msgstr "由于安装了测试版更新，可能会出现数据丢失的情况!"

#~ msgid "The update can be applied (committed) as follows."
#~ msgstr "更新可以按以下方式应用（承诺）。"

#~ msgid ""
#~ "On Linux and macOS you can "
#~ "configure and do basic settings for "
#~ "your Nitrokey 3 using Chrome(ium) just"
#~ " visit: `chrome://settings/securityKeys`_ (clicking "
#~ "the link will not work for "
#~ "security reasons, please copy&paste it)"
#~ msgstr ""
#~ "在Linux和macOS上，你可以使用Chrome(ium)浏览器为你的Nitrokey "
#~ "3进行配置和基本设置，只需访问：`chrome://settings/securityKeys`_（由于安全原因，点击链接将无法工作，请复制&粘贴它）。"

#~ msgid ""
#~ "On Windows type \"Security Keys\" into"
#~ " the search bar on the bottom "
#~ "left and click the first result. "
#~ "Then click \"Security Keys\" and "
#~ "\"Manage\". Now follow the onscreen "
#~ "instructions."
#~ msgstr "在Windows系统中，在左下方的搜索栏中输入\"安全密钥\"，并点击第一个结果。然后点击\"安全密钥\"和\"管理\"。现在按照屏幕上的指示操作。"

#~ msgid "Nitrokey App 2 is the graphical application for Nitrokey 3 devices."
#~ msgstr "Nitrokey App 2是Nitrokey 3设备的图形化应用。"

#~ msgid "Nitrokey App 2 For Linux"
#~ msgstr "硝基钥匙应用程序2适用于Linux"

#~ msgid "One-Time Passwords (OTP)"
#~ msgstr "一次性密码（OTP）"

#~ msgid "Nitrokey App 2 For Windows"
#~ msgstr "Nitrokey App 2 for Windows"

#~ msgid "Guides"
#~ msgstr "指南"

#~ msgid ""
#~ "This guide describes the use of "
#~ "the PKCS#11 driver for the NetHSM. "
#~ "The guide uses tools from `OpenSC "
#~ "<https://github.com/OpenSC/OpenSC>`__. Please refer "
#~ "to their documentation to learn how "
#~ "to use them on your operating "
#~ "system."
#~ msgstr "本指南描述了NetHSM的PKCS#11驱动的使用。本指南使用的工具来自`OpenSC<https://github.com/OpenSC/OpenSC>`__。请参考它们的文档，了解如何在你的操作系统上使用它们。"

#~ msgid ""
#~ "Download an archive with the latest "
#~ "release from the `releases page "
#~ "<https://github.com/Nitrokey/nethsm-pkcs11/releases>`__ of"
#~ " the repository. Use the release "
#~ "archive which contains the name of "
#~ "your operating system in the title."
#~ msgstr ""
#~ "从版本库的`版本页面<https://github.com/Nitrokey/nethsm-"
#~ "pkcs11/releases>`__ 下载包含最新版本的存档。使用标题中包含你的操作系统名称的发布档案。"

#~ msgid ""
#~ "Extract the files from the downloaded"
#~ " archive with an archiving programm "
#~ "of your choice."
#~ msgstr "用你选择的归档程序从下载的档案中提取文件。"

#~ msgid ""
#~ "Copy the extracted library to the "
#~ "respective path in your operating "
#~ "system. The path depends on your "
#~ "installation and configuration of OpenSC."
#~ msgstr "将提取的库复制到你操作系统中的相应路径。该路径取决于你对OpenSC的安装和配置。"

#~ msgid ""
#~ "This driver can only be compiled "
#~ "with the official Go compiler. Do "
#~ "not use the GNU Go compiler "
#~ "(GCC-Go). Please refer to their "
#~ "`website <https://go.dev/doc/install>`__ to learn"
#~ " how to install it."
#~ msgstr ""
#~ "这个驱动只能用官方的Go编译器来编译。请不要使用GNU Go编译器（GCC-"
#~ "Go）。请参考他们的`网站<https://go.dev/doc/install>`__，了解如何安装。"

#~ msgid ""
#~ "In the directory with the extracted "
#~ "source code execute the following "
#~ "command to compile the library."
#~ msgstr "在装有提取的源代码的目录中执行以下命令来编译库。"

#~ msgid "MacOS"
#~ msgstr "MacOS"

#~ msgid ""
#~ "The configuration file `p11nethsm.conf` is "
#~ "required and used to configure the "
#~ "connection between the PKCS#11 driver "
#~ "and the NetHSM."
#~ msgstr "配置文件`p11nethsm.conf`是必需的，用于配置PKCS#11驱动和NetHSM之间的连接。"

#~ msgid "An example configuration file looks like follows."
#~ msgstr "一个配置文件的例子看起来如下。"

#~ msgid "Linux and MacOS"
#~ msgstr "Linux和MacOS"

#~ msgid ""
#~ "Modify the configuration file `p11nethsm.conf`"
#~ " according to your environment."
#~ msgstr "根据你的环境，修改配置文件`p11nethsm.conf`。"

#~ msgid ""
#~ "The configuration file can include "
#~ "multiple slots, inside the `slots` "
#~ "array. The slots represent multiple "
#~ "NetHSM deployments. The `label` field of"
#~ " a slot needs to contain a "
#~ "unique name. The `url`, `user`, and "
#~ "`password` keys are mandatory. For "
#~ "security reasons it is recommended to"
#~ " pass the password in an environment"
#~ " variable. For this the `env:NETHSM_PASS`"
#~ " is passed in the `password` key, "
#~ "where `NETHSM_PASS` is the name of "
#~ "the environment variable containing the "
#~ "password. The `certSHA256` key needs to"
#~ " be set if the TLS certificate "
#~ "is not signed by a Certificate "
#~ "Authority (CA) contained in the "
#~ "certificate store of the operating "
#~ "system."
#~ msgstr ""
#~ "配置文件可以包括多个槽，在 \"槽 "
#~ "\"阵列内。这些槽代表多个NetHSM的部署。槽的`label'字段需要包含一个唯一的名字。url\"、\"user \"和"
#~ " \"password "
#~ "\"键是必须的。为了安全起见，建议在环境变量中传递密码。为此，`env:NETHSM_PASS`在`password`键中被传递，其中`NETHSM_PASS`是包含密码的环境变量的名称。如果TLS证书不是由操作系统的证书库中的证书颁发机构（CA）签署的，则需要设置`certSHA256`密钥。"

#~ msgid ""
#~ "The configuration file needs to be "
#~ "saved either in the following paths "
#~ "or in the directory the application "
#~ "is executed."
#~ msgstr "配置文件需要保存在以下路径或应用程序执行的目录中。"

#~ msgid "`$HOME/.nitrokey`"
#~ msgstr "`$HOME/.nitrokey`。"

#~ msgid "Info"
#~ msgstr "信息"

#~ msgid "Show information about the cryptoki version, and the PKCS#11 driver."
#~ msgstr "显示关于cryptoki版本的信息，以及PKCS#11驱动。"

#~ msgid ""
#~ "The PKCS#11 driver currently does not"
#~ " support this feature. A key-pair "
#~ "can be generated with *nitropy* or "
#~ "a REST API request. To learn more"
#~ " about how to generate a key, "
#~ "please refer to chapter `Generate Key"
#~ " <../operation.html#generate-key>`_."
#~ msgstr ""
#~ "PKCS#11驱动目前不支持这个功能。一个密钥对可以通过*nitropy* 或REST "
#~ "API请求生成。要了解更多关于如何生成密钥的信息，请参考`生成密钥<../operation.html#generate-"
#~ "key>`_ 章。"

#~ msgid ""
#~ "Show information about the keys and "
#~ "certificates in the *Key Store* on "
#~ "a NetHSM."
#~ msgstr "显示NetHSM上*Key Store* 中的密钥和证书的信息。"

#~ msgid "The public key of a key-pair can be read as follows."
#~ msgstr "一个密钥对的公钥可以读作如下。"

#~ msgid "The certificate of a key-pair can be read as follows."
#~ msgstr "一个密钥对的证书可以读作以下内容。"

#~ msgid ""
#~ "The returned certificates or public keys"
#~ " are ASN.1 encoded. The data can "
#~ "be decoded with the *dumpasn1* tool, "
#~ "as it contains data in DER format."
#~ " The DER format can be converted "
#~ "to PEM format with OpenSSL."
#~ msgstr ""
#~ "返回的证书或公钥是ASN.1编码的。这些数据可以用*dumpasn1* "
#~ "工具进行解码，因为它包含DER格式的数据。DER格式可以用OpenSSL转换为PEM格式。"

#~ msgid "Write keys and certificates to the *Key Store* on a NetHSM."
#~ msgstr "将密钥和证书写入NetHSM上的*Key Store* 。"

#~ msgid "The private key of a key-pair can be wrote as follows."
#~ msgstr "钥匙对的私钥可以写成如下形式。"

#~ msgid "The public key of a key-pair can be wrote as follows."
#~ msgstr "一个密钥对的公钥可以写成如下。"

#~ msgid "The certificate of a key-pair can be wrote as follows."
#~ msgstr "一个密钥对的证书可以写成以下样子。"

#~ msgid ""
#~ "The NetHSM can not encrypt data "
#~ "with asymmetric keys, but it provides"
#~ " the public key which can be "
#~ "used for encryption. Please refer to "
#~ "chapter `Show Key Details <operation.html"
#~ "#show-key-details>`__, or retrieve the "
#~ "key as described in chapter `Read "
#~ "Keys <pkcs11_with_pkcs11.html#read-keys>`, to "
#~ "learn more about how to retrieve "
#~ "the public key. The example assumes "
#~ "the public key in the `public.pem` "
#~ "file."
#~ msgstr ""
#~ "NetHSM不能用非对称密钥对数据进行加密，但它提供了可用于加密的公开密钥。请参考`显示密钥细节<operation.html"
#~ "#show-key-details>`__一章，或者按照`读取密钥<pkcs11_with_pkcs11.html"
#~ "#read-keys>`一章的描述检索密钥，以了解如何检索公钥。本例假设公钥在`public.pem`文件中。"

#~ msgid "Data can be encrypted with OpenSSL as follows."
#~ msgstr "可以用OpenSSL对数据进行如下加密。"

#~ msgid ""
#~ "The NetHSM can decrypt data for a"
#~ " private key stored in the *Key "
#~ "Store* on the NetHSM. This example "
#~ "uses the encrypted message from the "
#~ "previous chapter `Encrypt "
#~ "<pkcs11_with_pkcs11-tool.html#encrypt>`__."
#~ msgstr ""
#~ "NetHSM可以为存储在NetHSM上的*Key Store* "
#~ "的私人密钥解密数据。本例使用前一章中的加密信息`加密<pkcs11_with_pkcs11-tool.html#encrypt>`__。"

#~ msgid ""
#~ "EJBCA is a PKI Certificate Authority "
#~ "software, you can find more information"
#~ " about EJBCA at `EJBCA "
#~ "<https://www.ejbca.org/>`__."
#~ msgstr ""
#~ "EJBCA 是一款 PKI 证书颁发机构软件，有关 EJBCA "
#~ "的更多信息，请访问`EJBCA<https://www.ejbca.org/>`__。"

#~ msgid ""
#~ "An example is available in the "
#~ "`nethsm-pkcs11 repository <https://github.com/Nitrokey"
#~ "/nethsm-pkcs11/tree/main/container/nginx>`__ under "
#~ "container/nginx."
#~ msgstr ""
#~ "`nethsm-pkcs11 存储库<https://github.com/Nitrokey/nethsm-"
#~ "pkcs11/tree/main/container/nginx>`__container/nginx下提供了一个示例。"

#~ msgid ""
#~ "If you want to experiment with the"
#~ " given example you can clone with "
#~ "git the `nethsm-pkcs11 repository "
#~ "<https://github.com/Nitrokey/nethsm-pkcs11>`__ and "
#~ "run the following commands:"
#~ msgstr ""
#~ "如果您想用给出的示例进行实验，可以用 git 克隆`nethsm-pkcs11 "
#~ "软件仓库<https://github.com/Nitrokey/nethsm-pkcs11>`__ "
#~ "并运行以下命令："

#~ msgid ""
#~ "Configure a NetHSM, either a real "
#~ "one or a container. See the "
#~ "getting-started guide for more information."
#~ msgstr "配置 NetHSM，可以是真实的，也可以是容器。更多信息，请参阅入门指南。"

#~ msgid ""
#~ "You need to configure the engine "
#~ "section to include the pkcs11 engine "
#~ "in the ``dynamic_path`` property and the"
#~ " ``libnethsm_pkcs11.so`` module in the "
#~ "``MODULE_PATH`` property."
#~ msgstr ""
#~ "您需要配置引擎部分，在``dynamic_path`` 属性中包含 pkcs11 "
#~ "引擎，在``MODULE_PATH`` 属性中包含``libnethsm_pkcs11.so`` 模块。"

#~ msgid ""
#~ "The engine can be installed on "
#~ "Debian-based systems by executing the "
#~ "following command."
#~ msgstr "在基于 Debian 的系统上，执行以下命令即可安装该引擎。"

#~ msgid "NitroPhone Apps"
#~ msgstr "NitroPhone应用程序"

#~ msgid "Compatible Apps"
#~ msgstr "兼容的应用程序"

#~ msgid ""
#~ "Earlier there was a list, but as"
#~ " the Play Service implementation "
#~ "progresses, most of the apps should "
#~ "work, although there are still some "
#~ "not working, a list will be "
#~ "available `here <https://github.com/Peter-Easton"
#~ "/GrapheneOS-Knowledge/tree/master/App%20Incompatibility%20List>`__."
#~ msgstr ""
#~ "早些时候有一个列表，但随着Play服务实施的进展，大多数应用程序应该可以工作，尽管仍有一些不工作，列表将在`这里<https://github.com"
#~ "/Peter-Easton/GrapheneOS-"
#~ "Knowledge/tree/master/App%20Incompatibility%20List>%20List>`__。"

#~ msgid ""
#~ "There is a `list "
#~ "<https://akc3n.org/projects/banking/#list-of-banking-"
#~ "apps>`__ for compatible banking apps, "
#~ "too. Click onto the \"Report\" link "
#~ "behind the regarding banking app to "
#~ "see in which environment it is "
#~ "supported."
#~ msgstr ""
#~ "有一个`列表<https://akc3n.org/projects/banking/#list-of-"
#~ "banking-apps>`__，也是为了兼容的银行应用程序。点击有关银行应用程序后面的\"报告\"链接，看看它在哪个环境下被支持。"

#~ msgid "Pixel 4a refers to the NitroPhone 1"
#~ msgstr "Pixel 4a指的是NitroPhone 1"

#~ msgid "Pixel 6 refers to the NitroPhone 2"
#~ msgstr "Pixel 6指的是NitroPhone 2"

#~ msgid "Pixel 6 Pro refers to the NitroPhone 2 Pro"
#~ msgstr "Pixel 6 Pro指的是NitroPhone 2 Pro"

#~ msgid "``pivy-tool generate 9A -a rsa2048``"
#~ msgstr "``pivy-tool generate 9A -a rsa2048``"

#~ msgid ""
#~ "After restarting EJBCA you can add "
#~ "a new Crypto Token in the EJBCA"
#~ " Admin GUI "
#~ "``https://mycahostname/ejbca/adminweb/cryptotoken/cryptotokens.xhtml``."
#~ " The Crypto Token type is ``PKCS#11"
#~ " Crypto Token`` and the Crypto Token"
#~ " name is ``Nitrokey NetHSM``."
#~ msgstr ""
#~ "重新启动 EJBCA 后，你可以在 EJBCA 管理 "
#~ "GUI``https://mycahostname/ejbca/adminweb/cryptotoken/cryptotokens.xhtml``"
#~ " 添加一个新的加密令牌。加密令牌类型是``PKCS#11 Crypto "
#~ "Token``，加密令牌名称是``Nitrokey NetHSM``。"

#~ msgid "NitroPhone"
#~ msgstr "NitroPhone"

#~ msgid ""
#~ "NetHSM can be used as a backend"
#~ " for OpenSSL using the ``engine`` "
#~ "interface."
#~ msgstr "通过``engine`` 接口，NetHSM 可用作 OpenSSL 的后端。"

#~ msgid "Setup"
#~ msgstr "设置"

#~ msgid ""
#~ "Currently the NetHSM PKCS#11 module only"
#~ " works when ``master_process`` and "
#~ "``daemon`` are set to ``off``. These "
#~ "options are not recommended for "
#~ "production use."
#~ msgstr ""
#~ "目前，只有当``master_process`` 和``daemon`` 设置为``off`` "
#~ "时，NetHSM PKCS#11 模块才能工作。不建议在生产中使用这些选项。"

#~ msgid "System Update"
#~ msgstr "系统更新"

#~ msgid ""
#~ "When using an engine (libp11) version"
#~ " of 0.4.12 or older, having an "
#~ "EdDSA key on the NetHSM will cause"
#~ " OpenSSL to not find any key."
#~ msgstr "当使用 0.4.12 或更高版本的引擎（libp11）时，NetHSM 上的 EdDSA 密钥会导致 OpenSSL 找不到任何密钥。"

#~ msgid ""
#~ "Information about the `/keys` endpoint "
#~ "can be found in the `API "
#~ "documentation "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_keys>`__."
#~ msgstr ""
#~ "关于`/keys`端点的信息可以在`API文档 "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_keys>`__中找到。"

#~ msgid ""
#~ "Information about the `/keys/{KeyID}` endpoint"
#~ " can be found in the `API "
#~ "documentation "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
#~ "/DELETE_keys-KeyID>`__."
#~ msgstr ""
#~ "关于`/keys/{KeyID}`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
#~ "/DELETE_keys-KeyID>`__找到。"

#~ msgid ""
#~ "Information about the "
#~ "`/keys/{KeyID}/restrictions/tags/{Tag}` endpoint can "
#~ "be found in the `API documentation "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
#~ "/DELETE_keys-KeyID-restrictions-tags-Tag>`__."
#~ msgstr ""
#~ "关于`/keys/{KeyID}/restrictions/tags/{Tag}`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
#~ "/DELETE_keys-KeyID-restrictions-tags-Tag>`__找到。"

#~ msgid ""
#~ "Information about the `/keys/{KeyID}/cert` "
#~ "endpoint can be found in the `API"
#~ " documentation "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
#~ "/GET_keys-KeyID-cert>`__."
#~ msgstr ""
#~ "关于`/keys/{KeyID}/cert`端点的信息可以在`API文档 "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
#~ "/PUT_keys-KeyID-cert>`__中找到。"

#~ msgid ""
#~ "Information about the `/keys/{KeyID}/decrypt` "
#~ "endpoint can be found in the `API"
#~ " documentation "
#~ "<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
#~ "/POST_keys-KeyID-decrypt>`__."
#~ msgstr ""
#~ "关于`/keys/{KeyID}/decrypt`端点的信息可以在`API文档<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
#~ "/POST_keys-KeyID-decrypt>`__找到。"

#~ msgid ""
#~ "To integrate the NetHSM into own "
#~ "custom applications, client libraries are "
#~ "available for almost all programming "
#~ "languages. Therefore, we recommend using "
#~ "`OpenAPI Generator <https://github.com/OpenAPITools"
#~ "/openapi-generator>`_."
#~ msgstr ""
#~ "为了将NetHSM集成到自己的自定义应用程序中，几乎所有的编程语言都可以使用客户端库。因此，我们建议使用`OpenAPI "
#~ "Generator <https://github.com/OpenAPITools/openapi-"
#~ "generator>`_。"

#~ msgid "For hash sum verification, store ``sha256sum`` file at the USB drive."
#~ msgstr "对于哈希和验证，在USB驱动器上存储``sha256sum``文件。"

#~ msgid "Firmware file verification"
#~ msgstr "固件文件验证"

#~ msgid ""
#~ "It is mandatory to run a firmware"
#~ " file consistency check before writing "
#~ "it to the device. After copying "
#~ "the firmware file to the USB drive"
#~ " make sure the latter is properly "
#~ "unmounted/ejected to avoid write issues. "
#~ "The consistency check should be run "
#~ "on NitroPad, so the data verified "
#~ "will be exact same as the later"
#~ " read by the update application. This"
#~ " action will not be required in "
#~ "the further firmware updates."
#~ msgstr "在将固件文件写入设备之前，必须运行固件文件一致性检查。在将固件文件复制到U盘后，请确保U盘被正确卸载/弹出，以避免写入问题。一致性检查应该在NitroPad上进行，这样所验证的数据将与后来更新程序所读取的数据完全一致。在以后的固件更新中，将不需要这一操作。"

#~ msgid ""
#~ "Start Nitropad and open recovery console"
#~ " from ``Options -> Exit to recovery"
#~ " shell``"
#~ msgstr "启动Nitropad并从``打开恢复控制台Options -> Exit to recovery shell``。"

#~ msgid "Execute the following to verify the firmware:"
#~ msgstr "执行以下操作以验证固件。"

#~ msgid "For ``v1.1-rc3`` version this should result in:"
#~ msgstr "对于``v1.1-rc3``版本，这应该导致。"

#~ msgid ""
#~ "This confirms the content of the "
#~ "file is as expected. Please reboot "
#~ "the Nitropad to continue (either by "
#~ "switching off and powering on again, "
#~ "or hitting CTRL+ALT+DELETE)."
#~ msgstr "这证实了文件的内容与预期一致。请重新启动Nitropad继续使用（可以通过关闭电源再开机，或按CTRL+ALT+DELETE）。"

#~ msgid ""
#~ "The `PKCS#11 guide <pkcs11-setup.html>`_ "
#~ "describes how to use them in "
#~ "detail."
#~ msgstr "`PKCS#11 指南<pkcs11-setup.html>`_ 详细介绍了如何使用它们。"

#~ msgid ""
#~ "This driver is still an early "
#~ "Proof of Concept implementation that "
#~ "only implements the functions that are"
#~ " necessary for operating TLS servers."
#~ msgstr "这个驱动仍然是一个早期的概念验证实现，只实现了操作TLS服务器所需的功能。"

#~ msgid "In loose order:"
#~ msgstr "按顺序排列"

#~ msgid ""
#~ "The security controler's hardware is "
#~ "Common Criteria certified (`Report`_; See "
#~ "`here`_, click \"ICs, Smart Cards and"
#~ " Smart Card-Related Devices and "
#~ "Systems\" and search for \"NXP Smart "
#~ "Card Controller P5CD081V1A and its major"
#~ " configurations P5CC081V1A, P5CN081V1A, "
#~ "P5CD041V1A, P5CD021V1A and P5CD016V1A each "
#~ "with IC dedicated Software\")."
#~ msgstr ""
#~ "该安全控制器'的硬件通过了Common "
#~ "Criteria认证（`报告`_；见`这里`_，点击\"IC，智能卡和智能卡相关的设备和系统\"。并搜索\"恩智浦智能卡控制器P5CD081V1A及其主要配置P5CC081V1A、P5CN081V1A、P5CD041V1A、P5CD021V1A和P5CD016V1A各自的IC专用软件\"）。"

#~ msgid "Install Group folders app"
#~ msgstr "安装群组文件夹应用程序"

#~ msgid ""
#~ "The *PIN* is used for key "
#~ "operations, such as signing and "
#~ "authentication."
#~ msgstr "*PIN* ，用于密钥操作，如签名和认证。"

#~ msgid ""
#~ "The *PUK* is used for management "
#~ "operations, such as unblocking the PIN."
#~ msgstr "*PUK* ，用于管理操作，如解除PIN码的封锁。"

#~ msgid "Overall system design - COMING SOON"
#~ msgstr "整体系统设计 - 即将推出"

#~ msgid "Full source code - COMING SOON"
#~ msgstr "完整源代码 - 即将发布"

#~ msgid "Non-exportable setting, affecting backups"
#~ msgstr "不可导出设置，影响备份"

#~ msgid "NitroWall"
#~ msgstr "硝化墙"

#~ msgid ""
#~ "If your NetHSM is not running on"
#~ " localhost, you will need to change"
#~ " the URL of the curl requests "
#~ "in ``container/apache/generate.sh`` to point "
#~ "to your NetHSM."
#~ msgstr ""
#~ "如果 NetHSM 不在 localhost "
#~ "上运行，则需要更改``container/apache/generate.sh`` 中 curl 请求的"
#~ " URL，使其指向 NetHSM。"

#~ msgid ""
#~ "Change the libnethsm_pkcs11 configuration to"
#~ " match your NetHSM in "
#~ "``container/apache/p11nethsm.conf``."
#~ msgstr ""
#~ "在``container/apache/p11nethsm.conf`` 中更改 libnethsm_pkcs11"
#~ " 配置，使其与 NetHSM 匹配。"

#~ msgid ""
#~ "If your NetHSM is not running on"
#~ " localhost, you will need to change"
#~ " the URL of the curl requests "
#~ "in ``container/nginx/generate.sh`` to point to"
#~ " your NetHSM."
#~ msgstr ""
#~ "如果 NetHSM 不在 localhost "
#~ "上运行，则需要更改``container/nginx/generate.sh`` 中 curl 请求的"
#~ " URL，使其指向 NetHSM。"

#~ msgid ""
#~ "Change the libnethsm_pkcs11 configuration to"
#~ " match your NetHSM in "
#~ "``container/nginx/p11nethsm.conf``."
#~ msgstr ""
#~ "在``container/ejbca/p11nethsm.conf`` 中更改 libnethsm_pkcs11"
#~ " 配置，使其与 NetHSM 匹配。"

#~ msgid "The default Nitropad disk encryption password: \"PleaseChangeMe\""
#~ msgstr "默认的Nitropad磁盘加密密码：\"PleaseChangeMe\"。"

#~ msgid "The default NitroPC disk encryption password: \"PleaseChangeMe\""
#~ msgstr "默认的NitroPC磁盘加密密码：\"PleaseChangeMe\"。"

#~ msgid ""
#~ "Download one of the operating system "
#~ "images: `Ubuntu Linux "
#~ "<https://www.nitrokey.com/files/ci/nitropad/ubuntu-oem/>`__, "
#~ "`Qubes OS <https://www.nitrokey.com/files/ci/nitropad"
#~ "/qubes-oem/>`__, `Debian "
#~ "<https://www.nitrokey.com/files/ci/nitropad/debian-oem/>`__, "
#~ "`Linux Mint <https://linuxmint.com/download.php>`__"
#~ msgstr ""
#~ "下载其中一个操作系统图像。`Ubuntu Linux "
#~ "<https://www.nitrokey.com/files/ci/nitropad/ubuntu-oem/>`__, "
#~ "`Qubes OS <https://www.nitrokey.com/files/ci/nitropad"
#~ "/qubes-oem/>`__。`Debian "
#~ "<https://www.nitrokey.com/files/ci/nitropad/debian-oem/>`__, "
#~ "`Linux Mint <https://linuxmint.com/download.php>`__"

#~ msgid ""
#~ "Download one of the operating system "
#~ "images: `Ubuntu Linux "
#~ "<https://www.nitrokey.com/files/ci/nitropc/ubuntu-oem/>`__, "
#~ "`Qubes OS <https://www.nitrokey.com/files/ci/nitropc"
#~ "/qubes-oem/>`__, `Debian "
#~ "<https://www.nitrokey.com/files/ci/nitropc/debian-oem/>`__, "
#~ "`Linux Mint <https://linuxmint.com/download.php>`__"
#~ msgstr ""
#~ "下载其中一个操作系统图像。`Ubuntu Linux "
#~ "<https://www.nitrokey.com/files/ci/nitropc/ubuntu-oem/>`__, "
#~ "`Qubes OS <https://www.nitrokey.com/files/ci/nitropc"
#~ "/qubes-oem/>`__,`Debian "
#~ "<https://www.nitrokey.com/files/ci/nitropc/debian-oem/>`__, "
#~ "`Linux Mint <https://linuxmint.com/download.php>`__"

#~ msgid "Password storage"
#~ msgstr "密码存储"

#~ msgid "For now only One-Time Passwords (TOTP and HOTP) are supported."
#~ msgstr "目前只支持一次性密码（TOTP 和 HOTP）。"

#~ msgid ""
#~ "In case the Network Manager icon "
#~ "is not shown and when starting a"
#~ " VM an error like “Domain sys-"
#~ "net has failed to start: PCI "
#~ "device dom0:03_00.0 does not exist” is"
#~ " shown, proceed as follows:"
#~ msgstr ""
#~ "如果没有显示网络管理器图标，并且在启动虚拟机时出现类似 \"Domain sys-net "
#~ "has failed to "
#~ "start:显示PCI设备dom0:03_00.0不存在\"，请按以下步骤操作。"

#~ msgid "Open menu -> Service: sys-net -> sys-net: Qube Settings"
#~ msgstr "打开菜单 -> 服务：sys-net -> sys-net。Qube设置"

#~ msgid "Go to Devices tab"
#~ msgstr "转到设备选项卡"

#~ msgid "Remove “Unknown device” from the right side"
#~ msgstr "从右侧删除 \"未知设备\"。"

#~ msgid "Add “Network controler” device"
#~ msgstr "添加 \"网络控制仪 \"设备"

#~ msgid "Click “OK” and restart the system."
#~ msgstr "点击 \"确定 \"并重新启动系统。"

#~ msgid "Click on \"Guided Dynamic DNS\""
#~ msgstr "点击\"引导的动态DNS\"。"

#~ msgid ""
#~ "If you still cannot access your "
#~ "device, try again after rebooting your"
#~ " system."
#~ msgstr "如果你仍然无法访问你的设备，在重新启动系统后再试一次。"

#~ msgid ""
#~ "describe debugging, see "
#~ "https://github.com/Nitrokey/pynitrokey/issues/167#issuecomment-1024921046"
#~ msgstr "描述调试情况，见https://github.com/Nitrokey/pynitrokey/issues/167#issuecomment-1024921046"

#~ msgid "Currently the Nitrokey App can not be used for the Nitrokey 3."
#~ msgstr "目前，Nitrokey应用程序不能用于Nitrokey 3。"

#~ msgid "(Nitrokey FIDO2 - Linux)"
#~ msgstr "(Nitrokey FIDO2 - Linux)"

#~ msgid "(Nitrokey FIDO2 - macOS)"
#~ msgstr "(Nitrokey FIDO2 - macOS)"

#~ msgid "(Nitrokey FIDO2 - Windows)"
#~ msgstr "(Nitrokey FIDO2 - Windows)"

#~ msgid "(Nitrokey HSM 2 - Linux)"
#~ msgstr "(Nitrokey HSM 2 - Linux)"

#~ msgid "(Nitrokey HSM 2 - macOS)"
#~ msgstr "(Nitrokey HSM 2 - macOS)"

#~ msgid "(Nitrokey HSM 2 - Windows)"
#~ msgstr "(Nitrokey HSM 2 - Windows)"

#~ msgid "... warning::"
#~ msgstr "... 警告"

#~ msgid "(Nitrokey 3 - Linux)"
#~ msgstr "(Nitrokey 3 - Linux)"

#~ msgid "(Nitrokey 3 - macOS)"
#~ msgstr "(Nitrokey 3 - macOS)"

#~ msgid "(Nitrokey 3 - Windows)"
#~ msgstr "(Nitrokey 3 - Windows)"

#~ msgid "(NitroPad - Qubes OS)"
#~ msgstr "(NitroPad - Qubes OS)"

#~ msgid "(NitroPad - Ubuntu Linux)"
#~ msgstr "(NitroPad - Ubuntu Linux)"

#~ msgid "(Nitrokey Pro 2 - Linux)"
#~ msgstr "(Nitrokey Pro 2 - Linux)"

#~ msgid "(Nitrokey Pro 2 - macOS)"
#~ msgstr "(Nitrokey Pro 2 - macOS)"

#~ msgid "(Nitrokey Pro 2 - Windows)"
#~ msgstr "(Nitrokey Pro 2 - Windows)"

#~ msgid "Todo"
#~ msgstr "嘟嘟"

#~ msgid "describe requirements: systemd, load order"
#~ msgstr "描述要求：systemd，加载顺序"

#~ msgid ":ref:`One-Time Passwords (OTP)<passwords>`"
#~ msgstr ":ref:` 一次性密码 (OTP)<passwords>`"

#~ msgid ":ref:`Password Storage <passwords>`"
#~ msgstr ":ref:`Password Storage <passwords>`"

#~ msgid "(Nitrokey Start - Linux)"
#~ msgstr "(Nitrokey Start - Linux)"

#~ msgid "(Nitrokey Start - macOS)"
#~ msgstr "(Nitrokey Start - macOS)"

#~ msgid "(Nitrokey Start - Windows)"
#~ msgstr "(Nitrokey Start - Windows)"

#~ msgid "(Nitrokey Storage 2 - Linux)"
#~ msgstr "(Nitrokey Storage 2 - Linux)"

#~ msgid "(Nitrokey Storage 2 - macOS)"
#~ msgstr "(Nitrokey Storage 2 - macOS)"

#~ msgid "(Nitrokey Storage 2 - Windows)"
#~ msgstr "(Nitrokey Storage 2 - Windows)"

#~ msgid "(Nitrokey Product - Platform)"
#~ msgstr "(Nitrokey产品-平台)"

#~ msgid "(Nitrokey FIDO U2F - Linux)"
#~ msgstr "(Nitrokey FIDO U2F - Linux)"

#~ msgid "(Nitrokey FIDO U2F - macOS)"
#~ msgstr "(Nitrokey FIDO U2F - macOS)"

#~ msgid "(Nitrokey FIDO U2F - Windows)"
#~ msgstr "(Nitrokey FIDO U2F - Windows)"

#~ msgid ""
#~ "Enter “PleaseChangeMe” as the current "
#~ "passphrase and select a secure new "
#~ "one."
#~ msgstr "输入 \"PleaseChangeMe \"作为当前密码，并选择一个安全的新密码。"

#~ msgid ""
#~ "Next, the system will prompt you "
#~ "to enter the passphrase to decrypt "
#~ "the hard disk. The passphrase is "
#~ "initially “PleaseChangeMe”."
#~ msgstr "接下来，系统会提示你输入解密硬盘的口令。该口令最初为 \"PleaseChangeMe\"。"

#~ msgid ""
#~ "During boot, the system will prompt "
#~ "you to enter the passphrase to "
#~ "decrypt the hard disk. Enter the "
#~ "default passphrase “PleaseChangeMe”. The "
#~ "system will then guide you through "
#~ "the process of creating a user "
#~ "account. After that you should have "
#~ "successfully booted the system and could"
#~ " already use it normally."
#~ msgstr ""
#~ "在启动过程中，系统会提示你输入密码来解密硬盘。输入默认的口令 "
#~ "\"PleaseChangeMe\"。然后，系统将引导你完成创建用户账户的过程。之后，你应该已经成功启动了系统，并且已经可以正常使用。"

#~ msgid ""
#~ "This will provide the REST API on"
#~ " the port `8443` via the HTTPS "
#~ "protocol."
#~ msgstr "这将通过HTTPS协议在端口`8443`上提供REST API。"

#~ msgid "Test"
#~ msgstr "测试"

#~ msgid "Use `nfc.fail`_ to find the right spot!"
#~ msgstr "使用`nfc.fail`_来找到正确的位置!"

#~ msgid ""
#~ "The security controller's hardware and "
#~ "operating system are Common Criteria "
#~ "certified (`Security Target`_; `HSM2 Report`_;"
#~ " See `here`_, click \"ICs, Smart "
#~ "Cards and Smart Card-Related Devices "
#~ "and Systems\" and search for \"NXP "
#~ "JCOP 3 P60\")."
#~ msgstr ""
#~ "该安全控制器的硬件和操作系统已通过通用标准认证（`Security Target`_；`HSM2 "
#~ "Report`_；见`here`_，点击 \"集成电路、智能卡和智能卡相关设备与系统\"，搜索 \"恩智浦 "
#~ "JCOP 3 P60\"）。"

#~ msgid ""
#~ "The secure element is Common Criteria"
#~ " EAL 6+ security certification up to"
#~ " OS level (See `here`_, click “ICs,"
#~ " Smart Cards and Smart Card-Related"
#~ " Devices and ystems” and search for:"
#~ " \"NXP JCOP 4 SE050M”)."
#~ msgstr ""
#~ "安全要素是通用标准 EAL 6+ 安全认证，最高可达到操作系统级别（见`here`_，点击 "
#~ "\"集成电路、智能卡和智能卡相关设备和系统\"，搜索：\"NXP JCOP 4 SE050M\"）。"

#~ msgid ""
#~ "The security controller's hardware is "
#~ "Common Criteria certified (`Report`_; See "
#~ "`here`_, click \"ICs, Smart Cards and"
#~ " Smart Card-Related Devices and "
#~ "Systems\" and search for \"NXP Smart "
#~ "Card Controller P5CD081V1A and its major"
#~ " configurations P5CC081V1A, P5CN081V1A, "
#~ "P5CD041V1A, P5CD021V1A and P5CD016V1A each "
#~ "with IC dedicated Software\")."
#~ msgstr ""
#~ "该安全控制器的硬件已通过通用标准认证（`Report`_；见`here`_，点击 "
#~ "\"集成电路、智能卡和智能卡相关设备与系统\"，搜索 \"恩智浦智能卡控制器 P5CD081V1A "
#~ "及其主要配置 P5CC081V1A、P5CN081V1A、P5CD041V1A\"）。并搜索 \"恩智浦智能卡控制器"
#~ " P5CD081V1A 及其主要配置 "
#~ "P5CC081V1A、P5CN081V1A、P5CD041V1A、P5CD021V1A 和 "
#~ "P5CD016V1A，每个配置都有 IC 专用软件\"）。"

#~ msgid ""
#~ "`Cure53`_ has performed an `independent "
#~ "security audit`_ of the hardware, "
#~ "firmware, and Nitrokey App. The security"
#~ " controller's hardware is Common Criteria"
#~ " certified (`Report`_; See `here`_, click"
#~ " \"ICs, Smart Cards and Smart "
#~ "Card-Related Devices and Systems\" and "
#~ "search for \"NXP Smart Card Controller"
#~ " P5CD081V1A and its major configurations"
#~ " P5CC081V1A, P5CN081V1A, P5CD041V1A, P5CD021V1A"
#~ " and P5CD016V1A each with IC "
#~ "dedicated Software\")."
#~ msgstr ""
#~ "`Cure53`_ 对硬件、固件和 Nitrokey "
#~ "应用程序进行了`独立安全审计。该安全控制器的硬件已通过通用标准认证（`Report`_；见`here`_，单击 "
#~ "\"集成电路、智能卡和智能卡相关设备与系统\"，搜索 \"恩智浦智能卡控制器 P5CD081V1A "
#~ "和主要配置 P5CD081V1A\"）。并搜索 \"恩智浦智能卡控制器 P5CD081V1A "
#~ "及其主要配置 P5CC081V1A、P5CN081V1A、P5CD041V1A、P5CD021V1A 和 "
#~ "P5CD016V1A，每个配置都有 IC 专用软件\"）。"

#~ msgid "Windows Login With PIV Smartcard Authentication"
#~ msgstr "使用PIV智能卡认证的Windows登录"

#~ msgid "A Windows server with:"
#~ msgstr "一台具有以下功能的Windows服务器："

#~ msgid ""
#~ "Active Directory (`instructions "
#~ "<https://serverspace.io/support/help/installing-active-"
#~ "directory-on-windows-server-2019/>`__)"
#~ msgstr ""
#~ "活动目录 (`说明<https://serverspace.io/support/help/installing-"
#~ "active-directory-on-windows-server-2019/>`__)"

#~ msgid ""
#~ "A certificate authority (CA), with a "
#~ "certificate template for logon authentication"
#~ " using RSA 2048 bit keys:"
#~ msgstr "一个证书颁发机构（CA），有一个使用RSA 2048比特密钥进行登录认证的证书模板："

#~ msgid ""
#~ "Certificate Authority (`instructions "
#~ "<https://learn.microsoft.com/en-us/windows-"
#~ "server/networking/core-network-guide/cncg/server-"
#~ "certs/server-certificate-deployment-overview>`__)"
#~ msgstr ""
#~ "证书机构 (`说明<https://learn.microsoft.com/en-us/windows-"
#~ "server/networking/core-network-guide/cncg/server-"
#~ "certs/server-certificate-deployment-overview>`__)"

#~ msgid ""
#~ "Authentication template (`instructions "
#~ "<https://learn.microsoft.com/en-us/windows/security/threat-"
#~ "protection/windows-firewall/configure-the-"
#~ "workstation-authentication-certificate-template>`__)"
#~ msgstr ""
#~ "认证模板(`说明<https://learn.microsoft.com/en-us/windows/security"
#~ "/threat-protection/windows-firewall/configure-the-"
#~ "workstation-authentication-certificate-template>`__)"

#~ msgid "A Windows user machine joined to the domain of the server"
#~ msgstr "一台加入到服务器域的Windows用户机器"

#~ msgid ""
#~ "A Nitrokey 3 with `PIV "
#~ "<https://github.com/Nitrokey/piv-authenticator>`__"
#~ msgstr "一个带有`PIV的Nitrokey 3<https://github.com/Nitrokey/piv-authenticator>`__"

#~ msgid ""
#~ "A Linux system with `pivy "
#~ "<https://github.com/arekinath/pivy>`__ and PCSCD "
#~ "installed (``sudo apt install pcscd``), "
#~ "to provision the Nitrokey (step 1, "
#~ "2 and 4). Instead of a separate"
#~ " Linux system you can `install WSL"
#~ " <https://learn.microsoft.com/en-us/windows/wsl/install>`__"
#~ " on Windows. Note that you need "
#~ "to `virtually attach "
#~ "<https://devblogs.microsoft.com/commandline/connecting-usb-"
#~ "devices-to-wsl/>`__ the Nitrokey to "
#~ "WSL and start PCSCD (``sudo service "
#~ "start pcscd``) before using pivy."
#~ msgstr ""
#~ "一个装有`pivy<https://github.com/arekinath/pivy>`__和PCSCD的Linux系统（``sudo"
#~ " apt install "
#~ "pcscd``），以配置Nitrokey（步骤1、2和4）。`你可以在Windows上安装WSL<https://learn.microsoft.com"
#~ "/en-"
#~ "us/windows/wsl/install>`__，而不是单独的Linux系统。请注意，在使用pivy之前，你需要`，将Nitrokey<https://devblogs.microsoft.com/commandline"
#~ "/connecting-usb-devices-to-"
#~ "wsl/>`__连接到WSL，并启动PCSCD (``sudo service start "
#~ "pcscd``) 。"

#~ msgid "1: Generate a key on the Nitrokey"
#~ msgstr "1：在Nitrokey上生成一个密钥"

#~ msgid "The key is generated in slot 9A (authentication)."
#~ msgstr "密钥在9A槽（认证）中生成。"

#~ msgid ""
#~ "If the administration key is not "
#~ "the default one, it can be "
#~ "specified with ``-A 3des -K "
#~ "010203040506070801020304050607080102030405060708`` . The"
#~ " argument to ``-A`` can also be "
#~ "``aes256``, and the argument to ``-K``"
#~ " is the key in hexadecimal."
#~ msgstr ""
#~ "如果管理密钥不是默认的，可以用``-A 3des -K "
#~ "010203040506070801020304050607080102030405060708`` 指定。``-A`` "
#~ "的参数也可以是``aes256``，而``-K`` 的参数是以十六进制表示的密钥。"

#~ msgid ""
#~ "The user PIN can also be specified"
#~ " with ``-P 123456``, or ``-P "
#~ "<value>`` if it is not the "
#~ "default. If ``-P`` is not provided, "
#~ "it will be asked for after key "
#~ "generation."
#~ msgstr ""
#~ "用户 PIN 也可以通过``-P 123456`` 或``-P "
#~ "<value>``（如果不是默认值）指定。如果未提供``-P``，则将在密钥生成后要求提供。"

#~ msgid "This applies to all ``pivy-tool`` commands."
#~ msgstr "这适用于所有``pivy-tool``命令。"

#~ msgid ""
#~ "This step can take a couple of "
#~ "minutes for RSA keys, as the pure"
#~ " software implementation is slow."
#~ msgstr "这个步骤对于RSA密钥来说可能需要几分钟，因为纯软件的实现速度很慢。"

#~ msgid "**Expected output**:"
#~ msgstr "**预期的输出** ："

#~ msgid "2: Generate a Certificate Signing Request (CSR)"
#~ msgstr "2：生成一个证书签名请求（CSR）"

#~ msgid ""
#~ "This step generates a certificate for"
#~ " the key in the authentication slot."
#~ " ``pivy-tool -n 'Nitro Test' -u "
#~ "\"nitro@test.nitrokey.com\" -T user-auth "
#~ "req-cert 9A``"
#~ msgstr ""
#~ "此步骤为验证槽中的密钥生成证书。``pivy-tool -n 'Nitro Test'"
#~ " -u \"nitro@test.nitrokey.com\" -T user-"
#~ "auth req-cert 9A``"

#~ msgid ""
#~ "The ``Nitro Test`` username and the "
#~ "``nitro@test.nitrokey.com`` email address must "
#~ "be changed to own values."
#~ msgstr "``Nitro Test``用户名和``nitro@test.nitrokey.com``电子邮件地址必须改为自己的值。"

#~ msgid "Expected output:"
#~ msgstr "预期的产出："

#~ msgid "Copy the certificate signing request to a file ``request.csr``"
#~ msgstr "将证书签署请求复制到一个文件中``request.csr``"

#~ msgid "3: Sign the CSR"
#~ msgstr "3: 签署CSR"

#~ msgid ""
#~ "Move the request.csr file from the "
#~ "previous step to the server that "
#~ "hosts the certificate authority. Verify "
#~ "in the certificate template console "
#~ "(``certtmpl.msc`` ) that the template "
#~ "for the users can accept subject "
#~ "names from the request:"
#~ msgstr ""
#~ "将上一步中的 request.csr 文件移到存放证书颁发机构的服务器上。在证书模板控制台 "
#~ "(``certtmpl.msc`` ) 验证用户的模板可以接受来自请求的主题名称："

#~ msgid ""
#~ "In the certificate template console, in"
#~ " the parameter for the authentication "
#~ "certificate template, toggle \"supply in "
#~ "request\" in the \"subject name\" tab."
#~ msgstr "在证书模板控制台，在认证证书模板的参数中，在 \"主题名称 \"标签中切换 \"在请求中提供\"。"

#~ msgid ""
#~ "Open PowerShell and sign the certificate"
#~ " signing request with ``certreq.exe -attrib"
#~ " CertificateTemplate:Nitrotest -submit request.csr``"
#~ msgstr ""
#~ "打开PowerShell，用``certreq.exe -attrib "
#~ "CertificateTemplate:Nitrotest -submit "
#~ "request.csr``签署证书签署请求。"

#~ msgid ""
#~ "This will open a GUI where you "
#~ "can select the correct Certificate "
#~ "Authority if there are multiple on "
#~ "this server. Save the certificate as "
#~ "``certificate.crt``"
#~ msgstr "这将打开一个图形用户界面，如果服务器上有多个证书颁发机构，则可在此选择正确的证书颁发机构。将证书保存为``certificate.crt``。"

#~ msgid "4: Store the certificate on the Nitrokey"
#~ msgstr "4：在Nitrokey上存储证书"

#~ msgid "``cat certificate.der | pivy-tool write-cert 9A``"
#~ msgstr "``cat certificate.der | pivy-tool write-cert 9A``"

#~ msgid "5: Import the certificate to the user account"
#~ msgstr "5: 将证书导入到用户账户"

#~ msgid ""
#~ "Move ``certificate.der`` to the user "
#~ "Windows device, and open the certificate"
#~ " manager (**For the user, not the "
#~ "machine**):"
#~ msgstr "将``certificate.der`` 移到用户的 Windows 设备上，并打开证书管理器 (**对于用户，而不是机器**) ："

#~ msgid "Open the \"manage user certificate control panel\""
#~ msgstr "打开 \"管理用户证书控制面板\""

#~ msgid "Import the certificate:"
#~ msgstr "导入证书："

#~ msgid "In actions, all tasks, you can find the import action"
#~ msgstr "在行动、所有任务中，你可以找到导入行动"

#~ msgid ""
#~ "Once this is done, log out. Log"
#~ " in with the Nitrokey by using "
#~ "the “sign-in options”"
#~ msgstr "完成这些工作后，退出。通过使用 \"登录选项 \"用硝基钥匙登录"

#~ msgid ""
#~ "**Q:** Scalability, High Availability: How "
#~ "to synchronize a cluster of multiple "
#~ "instances?"
#~ msgstr "**问：** 可扩展性、高可用性：如何同步多个实例的群集？"

#~ msgid ""
#~ "NetHSM is stateless, so that several "
#~ "NetHSM devices can be used to "
#~ "enable extremely high throughput and "
#~ "high availability. The PKCS#11 module "
#~ "supports round-robin schedule for a "
#~ "cluster of NetHSM instances. Multiple "
#~ "instances of NetHSM can be synchronized"
#~ " via encrypted backups. For this a"
#~ " separate system downloads and uploads "
#~ "backup files between the instances. This"
#~ " can be a scripted system utilizing"
#~ " pynitrokey. This separate system doesn't"
#~ " have access to the backup data "
#~ "in clear text because the backup "
#~ "files are encrypted."
#~ msgstr ""
#~ "NetHSM 是无状态的，因此可以使用多个 NetHSM "
#~ "设备来实现极高的吞吐量和高可用性。PKCS#11 模块支持 NetHSM 实例集群的轮循计划。多个"
#~ " NetHSM 实例可通过加密备份实现同步。为此，需要一个单独的系统在实例之间下载和上传备份文件。这可以是一个使用 "
#~ "pynitrokey 的脚本系统。由于备份文件已加密，因此该独立系统无法访问明文备份数据。"

#~ msgid ""
#~ "To secure the password you can "
#~ "provide it via an environment variable"
#~ " (see `Setup <setup>`__) or provide "
#~ "it in the httpd configuration:"
#~ msgstr "要确保密码的安全，可以通过环境变量（参见`Setup<setup>`__ ）或在 httpd 配置中提供："

#~ msgid ""
#~ "Attach the storage device to your "
#~ "NextBox to any of the USB ports"
#~ " and *remember to use an external "
#~ "power supply* (:ref:`more information<usb-"
#~ "power-supply>`)"
#~ msgstr "将存储设备连接到你的NextBox的任何一个USB端口，*记得使用外部电源*（:参考:`更多信息<usb-power-supply>`）。"

#~ msgid "5.1. Sign the ``server.req`` file"
#~ msgstr "5.1.签署``server.req``文件"

#~ msgid "5.2. Retrieve the ``server.crt`` file to the server machine"
#~ msgstr "5.2.检索``server.crt``文件到服务器机上"

#~ msgid "See the `frontpage`_ for an overview of supported use cases."
#~ msgstr "请参阅`frontpage`_以了解支持的用例概述。"

#~ msgid "And add the following lines:"
#~ msgstr "并添加以下几行。"

#~ msgid "Now you need to set a PIN for your Nitrokey FIDO2."
#~ msgstr "现在你需要为你的Nitrokey FIDO2设置一个密码。"

#~ msgid "Restart udev via ``sudo service udev restart``."
#~ msgstr "通过``sudo service udev restart``重新启动udev。"

#~ msgid ""
#~ "Connect the USB drive to your "
#~ "NitroPC and start it. In Heads "
#~ "menu select Boot Options -> USB "
#~ "Boot."
#~ msgstr "将USB驱动器连接到你的NitroPC，并启动它。在头部菜单中选择启动选项-> USB启动。"

#~ msgid ""
#~ "Alternatively, you can run the NetHSM"
#~ " as a `Docker container "
#~ "<https://hub.docker.com/r/nitrokey/nethsm>`_ locally."
#~ msgstr ""
#~ "另外，你也可以将NetHSM作为一个`Docker容器<https://hub.docker.com/r/nitrokey/nethsm>`_"
#~ " ，在本地运行。"

#~ msgid "The NetHSM can delete keys from the *Key Store*."
#~ msgstr "NetHSM可以从*钥匙库*中删除钥匙。"

#~ msgid "The NetHSM can list all the available keys in the *Key Store*."
#~ msgstr "NetHSM可以列出*钥匙库*中所有可用的钥匙。"

#~ msgid "The NetHSM can output more detailed information about a stored key."
#~ msgstr "NetHSM可以输出关于存储的钥匙的更多详细信息。"

